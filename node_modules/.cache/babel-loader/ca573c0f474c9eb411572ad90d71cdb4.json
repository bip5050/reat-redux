{"ast":null,"code":"import _defineProperty from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Dashboard/filter.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form } from 'reactstrap';\nimport CreateTask from '../Modals/createTaskModal';\nimport moment from 'moment-timezone';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport CustomFilter from './customFilter';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport StateFilter from '../Filter/stateFilter';\nimport AreaFilter from '../Filter/areaFilter';\nimport StoreFilter from '../Filter/storeFilter';\nimport { isEqual, isEmpty, sortBy as _sortBy, remove as _remove } from 'lodash';\n\nvar Filter = /*#__PURE__*/function (_Component) {\n  _inherits(Filter, _Component);\n\n  var _super = _createSuper(Filter);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _super.call(this, props);\n\n    _this.getShoppedLate = function () {\n      _this.setIntervalSummary();\n\n      _this.props.getShoppedLate();\n    };\n\n    _this.setIntervalSummary = function () {\n      //console.log('Set Interval Done')    \n      if (!!_this.interval) clearInterval(_this.interval);\n      _this.interval = setInterval(function () {\n        _this.props.getShoppedLate();\n      }, 1000 * 60 * 10);\n    };\n\n    _this.handleClick = function (e) {\n      e.stopPropagation();\n      if (_this.nodeSearch.contains(e.target) || _this.nodeSrchButton.contains(e.target) || _this.nodeResSrchButton.contains(e.target) || e.target.getAttribute('data') === 'autosuggest' || e.target.getAttribute('data') === 'ignore-outer-click' || !!e.target.getAttribute('aria-hidden') || !!_this.state.editShow //|| !!!this.state.showSearch\n      ) return;\n\n      if (!!_this.state.showSearch) {\n        _this.setState({\n          showSearch: false\n        });\n      }\n    };\n\n    _this.handleStateChange = function (e, selectedState) {\n      //console.log('handle state change');\n      e.stopPropagation();\n      var filterKeys = _this.state.filterKeys || {};\n      var selIndex = filterKeys.State.findIndex(function (item) {\n        return item.value === selectedState.value;\n      });\n\n      if (selIndex === -1) {\n        filterKeys.State.push({\n          label: selectedState.label,\n          value: selectedState.value\n        });\n      }\n\n      filterKeys.State = _sortBy(filterKeys.State, 'value');\n\n      if (filterKeys.State.length === 0) {\n        filterKeys.Store = [];\n        filterKeys.Area = [];\n      }\n\n      _this.setState({\n        //selectedState,\n        filterKeys: filterKeys\n      }, function () {\n        _this.handleUpdateFilter();\n      });\n    };\n\n    _this.handleAreaChange = function (e, selectedArea) {\n      e.stopPropagation();\n      var filterKeys = _this.state.filterKeys || {};\n      var selIndex = filterKeys.Area.findIndex(function (item) {\n        return item.value === selectedArea.delivery_zone_name;\n      });\n\n      if (selIndex === -1) {\n        filterKeys.Area.push({\n          label: \"\".concat(selectedArea.delivery_zone_name, \" (\").concat(selectedArea.state, \")\"),\n          value: selectedArea.delivery_zone_name,\n          state: selectedArea.state,\n          id: selectedArea.id\n        });\n      }\n\n      filterKeys.Area = _sortBy(filterKeys.Area, 'value');\n\n      if (filterKeys.Area.length === 0) {\n        filterKeys.Store = [];\n      }\n\n      _this.setState({\n        //selectedArea,\n        filterKeys: filterKeys\n      }, function () {\n        _this.handleUpdateFilter();\n      });\n    };\n\n    _this.handleStoreChange = function (e, selectedStore) {\n      e.stopPropagation();\n      var filterKeys = _this.state.filterKeys || {};\n      var selIndex = filterKeys.Store.findIndex(function (item) {\n        return item.value === selectedStore.label;\n      });\n\n      if (selIndex === -1) {\n        filterKeys.Store.push({\n          id: selectedStore.data.id,\n          store_id: selectedStore.data.store_id,\n          label: selectedStore.label,\n          value: selectedStore.label\n        });\n      }\n\n      filterKeys.Store = _sortBy(filterKeys.Store, 'value');\n\n      _this.setState({\n        //selectedStore,\n        filterKeys: filterKeys\n      }, function () {\n        _this.handleUpdateFilter();\n      });\n    };\n\n    _this.handleRemoveFilter = function (e, type, index) {\n      //console.log('handle remove');\n      e.stopPropagation();\n      var filters = _this.state.filterKeys || [];\n\n      if (type === 'State') {\n        var stateCode = filters[type][index].value;\n\n        _remove(filters.Area, function (area) {\n          return area.state === stateCode;\n        });\n      }\n      /* if(type === 'Area') {\n         let stateCode     =  filters[type][index].value;\n         _remove(filters.Area, function (area) {\n            return area.state === stateCode;\n         });\n      } */\n\n\n      filters[type].splice(index, 1);\n      var selectedState = type !== 'State' ? _this.state.selectedState : null;\n      var selectedArea = type !== 'Area' ? _this.state.selectedArea : null;\n      var selectedStore = type !== 'Store' ? _this.state.selectedStore : null;\n\n      if (filters.State.length === 0) {\n        filters.Store = [];\n        filters.Area = [];\n      }\n\n      if (filters.Area.length === 0) {\n        filters.Store = [];\n      }\n\n      _this.setState({\n        filterKeys: filters,\n        selectedState: selectedState,\n        selectedArea: selectedArea,\n        selectedStore: selectedStore\n      }, function () {\n        _this.handleUpdateFilter();\n      });\n    };\n\n    _this.handleUpdateFilter = function () {\n      /* console.log('Update Filter : ', {\n         user_type:this.props.userType,\n         type: this.state.type,\n         filterKeys: this.state.filterKeys || {}\n      }) */\n      _this.props.updateFilter({\n        user_type: _this.props.userType,\n        type: _this.state.type,\n        filterKeys: _this.state.filterKeys || {}\n      });\n    };\n\n    _this.state = {\n      editShow: false,\n      detailsShow: false,\n      mapShow: false,\n      trackShow: false,\n      visible: false,\n      show: false,\n      selectedState: null,\n      selectedArea: null,\n      selectedStore: null,\n      filterKeys: {\n        State: [],\n        Area: [],\n        Store: []\n      },\n      showSearch: false,\n      showFilter: false,\n      filteredList: {}\n    };\n    _this.interval = null;\n    _this.timings = [];\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_this));\n    _this.handleSearchClose = _this.handleSearchClose.bind(_assertThisInitialized(_this));\n    _this.handleRemoveFilter = _this.handleRemoveFilter.bind(_assertThisInitialized(_this));\n    _this.onChangeHandle = _this.onChangeHandle.bind(_assertThisInitialized(_this));\n    _this.toggleCustomSearch = _this.toggleCustomSearch.bind(_assertThisInitialized(_this));\n    _this.toggleResFilter = _this.toggleResFilter.bind(_assertThisInitialized(_this));\n    _this.openEditWindow = _this.openEditWindow.bind(_assertThisInitialized(_this));\n    _this.openDetailsWindow = _this.openDetailsWindow.bind(_assertThisInitialized(_this));\n    _this.openMapWindow = _this.openMapWindow.bind(_assertThisInitialized(_this));\n    _this.openTrackWindow = _this.openTrackWindow.bind(_assertThisInitialized(_this));\n    _this.deleteTask = _this.deleteTask.bind(_assertThisInitialized(_this));\n    _this.updateTask = _this.updateTask.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"openEditWindow\",\n    value: function openEditWindow(uuid, mrchnt_address, recpnt_address) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        editShow: true,\n        mrchnt_address: mrchnt_address,\n        recpnt_address: recpnt_address\n      });\n    }\n  }, {\n    key: \"openDetailsWindow\",\n    value: function openDetailsWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        detailsShow: true\n      });\n    }\n  }, {\n    key: \"openMapWindow\",\n    value: function openMapWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        mapShow: true\n      });\n    }\n  }, {\n    key: \"openTrackWindow\",\n    value: function openTrackWindow(e, data) {\n      e.stopPropagation();\n      this.setState({\n        trackShow: true,\n        currentUrl: data.current_url,\n        trackDriver: data.track_driver\n      });\n    }\n  }, {\n    key: \"updateTask\",\n    value: function updateTask(uuid, status) {\n      if (window.confirm('Do you really want to update status of this task?')) {\n        this.props.updateTaskStatus({\n          uuid: uuid,\n          status: status\n        });\n      }\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(uuid) {\n      if (window.confirm('Do you really want to delete this task?')) {\n        this.props.deleteTask({\n          uuid: uuid\n        });\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      //console.log('Handle Close');\n      this.setState({\n        visible: false,\n        show: false,\n        editShow: false,\n        mapShow: false,\n        detailsShow: false,\n        trackShow: false\n      });\n    }\n  }, {\n    key: \"toggleCustomSearch\",\n    value: function toggleCustomSearch() {\n      this.setState({\n        showFilter: false,\n        showSearch: !this.state.showSearch,\n        sOpen: false,\n        aOpen: false,\n        stOpen: false\n      });\n    }\n  }, {\n    key: \"toggleResFilter\",\n    value: function toggleResFilter() {\n      this.setState({\n        showSearch: false,\n        showFilter: !this.state.showFilter\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"handleSearchClose\",\n    value: function handleSearchClose() {\n      this.setState({\n        show: false\n      }, function () {});\n    }\n  }, {\n    key: \"timing\",\n    value: function timing(start, end) {\n      //console.log('Start End : ', start, end);\n      var today = moment().format('MM/DD/YYYY');\n      var now = moment().unix();\n      var gap = 30 * 60;\n      var key = \"\";\n      var stimestamp = moment(today + ' ' + start, 'MM/DD/YYYY H:mm').unix();\n      var etimestamp = moment(today + ' ' + end, 'MM/DD/YYYY H:mm').unix();\n      var from = [];\n      var to = [];\n\n      for (var i = stimestamp; i < etimestamp; i = i + gap) {\n        from.push({\n          label: moment(i * 1000).format('hh:mm A'),\n          value: moment(i * 1000).format('HH:mm:ss')\n        });\n        to.push({\n          label: moment((i + gap) * 1000).format('hh:mm A'),\n          value: moment((i + gap) * 1000).format('HH:mm:ss')\n        });\n\n        if (now >= i && now <= i + gap) {\n          key = moment(i * 1000).format('hh:mm A') + '-' + moment((i + gap) * 1000).format('hh:mm A');\n        }\n      }\n\n      return {\n        from: from,\n        to: to,\n        key: key\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var filter = this.props.filterData; //console.log('Dashboard Filter Parent Props : ', this.props.userType, filter.user_type);\n\n      if (!isEmpty(filter) && filter.user_type === this.props.userType) {\n        //type        =  filter.type;\n        this.setState({\n          filterKeys: filter.filterKeys,\n          type: filter.type\n        }, function () {\n          //console.log('Did Mount : ', filter.filterKeys, this.state);\n          _this2.getShoppedLate();\n        });\n      } else {\n        var type = this.props.userType === 'admin' ? 'general' : this.props.userType;\n        this.setState({\n          type: type\n        }, function () {\n          _this2.handleUpdateFilter();\n\n          _this2.getShoppedLate();\n        });\n      }\n\n      var self = this;\n      this.timings = this.timing(this.props.settingsData.start_time, this.props.settingsData.end_time);\n      document.addEventListener('click', this.handleClick, false);\n      /* document.addEventListener(\"click\", function(event){\n         event.stopPropagation();\n         self.setState({ sOpen: false, aOpen:false, stOpen:false});\n      }); */\n    }\n  }, {\n    key: \"handleTypeChange\",\n    value: function handleTypeChange(type) {\n      var _this3 = this;\n\n      this.setState({\n        type: type\n      }, function () {\n        _this3.handleUpdateFilter();\n      });\n    }\n  }, {\n    key: \"onChangeHandle\",\n    value: function onChangeHandle(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value), function () {});\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this4 = this;\n\n      if (!isEqual(this.props.filterData, props.filterData)) {\n        var filter = props.filterData;\n\n        if (!isEmpty(filter) && filter.user_type === props.userType) {\n          //type        =  filter.type;\n          this.setState({\n            filterKeys: filter.filterKeys,\n            type: filter.type,\n            filteredList: props.filteredList\n          }, function () {//console.log('Did Mount : ', filter.filterKeys, this.state);\n            //this.handleUpdateFilter();\n          });\n        } else {\n          var type = props.userType === 'admin' ? 'general' : props.userType;\n          this.setState({\n            type: type,\n            filteredList: props.filteredList\n          }, function () {\n            _this4.handleUpdateFilter();\n          });\n        }\n      } else {\n        this.setState({\n          //filterKeys: props.filterKeys,\n          filteredList: props.filteredList\n        });\n      } //}\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.handleClick);\n      clearInterval(this.interval);\n      /* document.removeEventListener(\"click\", function(){\n      }); */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this,\n          _React$createElement;\n\n      //console.log('Render Filter : ', this.state.filterKeys, this.state);\n      //let timings                =  (!!this.timings && !!this.timings.data) ? this.timings.data : [];\n      var stores = this.props.stores || [];\n      var locations = this.props.locations || [];\n      var zones = this.props.zones || {};\n      var statesLocalStorage = JSON.parse(localStorage.getItem('states') || '[]');\n      var states = statesLocalStorage.map(function (item) {\n        return {\n          label: item.value,\n          value: item.id\n        };\n      });\n      var stateFilter = [];\n      var stateCodeFilter = [];\n      this.state.filterKeys.State.forEach(function (state) {\n        stateFilter.push(state.label);\n        stateCodeFilter.push(state.value);\n      });\n      var areaFilter = this.state.filterKeys.Area.map(function (area) {\n        return area.value;\n      });\n      var storeFilter = this.state.filterKeys.Store.map(function (store) {\n        return store.label;\n      });\n      var zoneList = stateCodeFilter.map(function (state) {\n        return {\n          state: state,\n          zones: zones[state]\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"con_top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab_pan-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab_pan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this5.handleTypeChange('general');\n        },\n        className: this.state.type === 'general' ? ' active' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, \"Grocery\"), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this5.handleTypeChange('pharmacy');\n        },\n        className: this.state.type === 'pharmacy' ? ' active' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }\n      }, \"Rx\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"res_btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resfilter_btn \".concat(this.state.showFilter ? \"showfilter\" : \"\", \" \"),\n        onClick: this.toggleResFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/search-ico.svg\",\n        alt: \"Search_ico\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 130\n        }\n      }), \" Filter\"), /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(nodeResSrchButton) {\n          return _this5.nodeResSrchButton = nodeResSrchButton;\n        },\n        className: \"searchmod_btn \".concat(this.state.showSearch ? \"showpoint\" : \"\", \" \"),\n        onClick: this.toggleCustomSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/search-ico.svg\",\n        alt: \"Search_ico\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 202\n        }\n      }), \" Search\")), /*#__PURE__*/React.createElement(Form, {\n        method: \"get\",\n        action: \"\",\n        autoComplete: \"off\",\n        className: \"resfilter_box \".concat(this.state.showFilter ? \"showfilterbox\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 22\n        }\n      }, \"Filter by: \"), /*#__PURE__*/React.createElement(StateFilter, {\n        stateFilter: stateFilter,\n        states: this.state.filterKeys.State,\n        handleStateChange: this.handleStateChange,\n        handleRemoveFilter: this.handleRemoveFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(AreaFilter, {\n        area: this.state.filterKeys.Area,\n        states: this.state.filterKeys.State,\n        zones: this.props.zones,\n        stateCodeFilter: stateCodeFilter,\n        handleAreaChange: this.handleAreaChange,\n        handleRemoveFilter: this.handleRemoveFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(StoreFilter, {\n        store: this.state.filterKeys.Store,\n        area: this.state.filterKeys.Area,\n        stores: this.props.stores,\n        handleStoreChange: this.handleStoreChange,\n        handleRemoveFilter: this.handleRemoveFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 22\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search_sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(nodeSrchButton) {\n          return _this5.nodeSrchButton = nodeSrchButton;\n        },\n        className: \"searchmod_btn \".concat(this.state.showSearch ? \"showpoint\" : \"\", \" \"),\n        onClick: this.toggleCustomSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/search-ico.svg\",\n        alt: \"Search_ico\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 190\n        }\n      }), \" Search\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleShow,\n        className: \"btn btn_blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 19\n        }\n      }, \"Create Task \", /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/plus.svg\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 104\n        }\n      })))), this.props.liveOrderCount !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"liveOrders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 53\n        }\n      }, this.props.liveOrderCount, \" \", this.props.liveOrderCount <= 1 ? 'Live Order' : 'Live Orders') : null, this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0 ? /*#__PURE__*/React.createElement(\"section\", {\n        className: \"filter-tag_section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }\n      }, this.state.filterKeys.State.length > 0 ? this.state.filterKeys.State.map(function (filter, index) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          className: \"f-tag\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 28\n          }\n        }, filter.label, /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(e) {\n            return _this5.handleRemoveFilter(e, 'State', index);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/cancel-ico.svg\",\n          alt: \"close\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 34\n          }\n        })));\n      }) : null, this.state.filterKeys.Area.length > 0 ? this.state.filterKeys.Area.map(function (filter, index) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          className: \"f-tag\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 28\n          }\n        }, filter.label, /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(e) {\n            return _this5.handleRemoveFilter(e, 'Area', index);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/cancel-ico.svg\",\n          alt: \"close\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 34\n          }\n        })));\n      }) : null, this.state.filterKeys.Store.length > 0 ? this.state.filterKeys.Store.map(function (filter, index) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: index,\n          className: \"f-tag\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 28\n          }\n        }, filter.label, /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(e) {\n            return _this5.handleRemoveFilter(e, 'Store', index);\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/cancel-ico.svg\",\n          alt: \"close\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 34\n          }\n        })));\n      }) : null) : null, /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(nodeSearch) {\n          return _this5.nodeSearch = nodeSearch;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomFilter, (_React$createElement = {\n        filteredList: this.state.filteredList,\n        settingsData: this.props.settingsData,\n        timings: this.timings,\n        searchFilter: this.props.searchFilter,\n        resetSearch: this.props.resetSearch,\n        showSearch: this.state.showSearch,\n        getTaskDetails: this.props.getTaskDetails,\n        taskDetails: this.props.taskDetails,\n        deleteTask: this.props.deleteTask,\n        updateTaskStatus: this.props.updateTaskStatus,\n        editTask: this.props.editTask,\n        getTrackDetails: this.props.getTrackDetails,\n        openEditWindow: this.openEditWindow,\n        openDetailsWindow: this.openDetailsWindow,\n        openMapWindow: this.openMapWindow\n      }, _defineProperty(_React$createElement, \"deleteTask\", this.deleteTask), _defineProperty(_React$createElement, \"updateTask\", this.updateTask), _defineProperty(_React$createElement, \"openTrackWindow\", this.openTrackWindow), _defineProperty(_React$createElement, \"section\", \"Dashboard\"), _defineProperty(_React$createElement, \"userType\", this.state.type), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 16\n      }), _React$createElement))), /*#__PURE__*/React.createElement(CreateTask, {\n        type: this.state.type,\n        show: this.state.show,\n        handleClose: this.handleClose,\n        getLocations: this.props.getLocations,\n        taskType: this.props.taskType,\n        stores: this.props.stores,\n        locations: this.props.locations,\n        pharmacy: this.props.pharmacy,\n        timings: this.props.timings,\n        userData: this.props.userData,\n        settingsData: this.props.settingsData,\n        createTask: this.props.createTask,\n        isTaskProcessing: this.props.isTaskProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }\n      }), !!this.state.editShow ? /*#__PURE__*/React.createElement(EditTask, {\n        taskDetails: this.props.taskDetails,\n        show: this.state.editShow,\n        timings: this.props.timings,\n        settingsData: this.props.settingsData,\n        editTask: this.props.editTask,\n        mrchnt_address: this.state.mrchnt_address,\n        recpnt_address: this.state.recpnt_address,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 16\n        }\n      }) : null,\n      /*#__PURE__*/\n      //(!!this.state.trackShow) ?\n      React.createElement(TrackDetails, {\n        show: this.state.trackShow,\n        currentUrl: this.state.currentUrl,\n        trackDriver: this.state.trackDriver,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 16\n        }\n      }) //: null\n      , !!this.state.detailsShow ? /*#__PURE__*/React.createElement(TaskDetails, {\n        show: this.state.detailsShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 16\n        }\n      }) : null, !!this.state.mapShow ? /*#__PURE__*/React.createElement(MapDetails, {\n        show: this.state.mapShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 16\n        }\n      }) : null);\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nexport default withRouter(Filter);","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Dashboard/filter.js"],"names":["React","Component","withRouter","Form","CreateTask","moment","CustomFilter","EditTask","TaskDetails","MapDetails","TrackDetails","StateFilter","AreaFilter","StoreFilter","isEqual","isEmpty","sortBy","_sortBy","remove","_remove","Filter","props","getShoppedLate","setIntervalSummary","interval","clearInterval","setInterval","handleClick","e","stopPropagation","nodeSearch","contains","target","nodeSrchButton","nodeResSrchButton","getAttribute","state","editShow","showSearch","setState","handleStateChange","selectedState","filterKeys","selIndex","State","findIndex","item","value","push","label","length","Store","Area","handleUpdateFilter","handleAreaChange","selectedArea","delivery_zone_name","id","handleStoreChange","selectedStore","data","store_id","handleRemoveFilter","type","index","filters","stateCode","area","splice","updateFilter","user_type","userType","detailsShow","mapShow","trackShow","visible","show","showFilter","filteredList","timings","handleShow","bind","handleSearchClose","onChangeHandle","toggleCustomSearch","toggleResFilter","openEditWindow","openDetailsWindow","openMapWindow","openTrackWindow","deleteTask","updateTask","handleClose","uuid","mrchnt_address","recpnt_address","getTaskDetails","currentUrl","current_url","trackDriver","track_driver","status","window","confirm","updateTaskStatus","sOpen","aOpen","stOpen","start","end","today","format","now","unix","gap","key","stimestamp","etimestamp","from","to","i","filter","filterData","self","timing","settingsData","start_time","end_time","document","addEventListener","name","removeEventListener","stores","locations","zones","statesLocalStorage","JSON","parse","localStorage","getItem","states","map","stateFilter","stateCodeFilter","forEach","areaFilter","storeFilter","store","zoneList","handleTypeChange","liveOrderCount","searchFilter","resetSearch","taskDetails","editTask","getTrackDetails","getLocations","taskType","pharmacy","userData","createTask","isTaskProcessing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Form } from 'reactstrap';\nimport CreateTask from '../Modals/createTaskModal';\nimport moment from 'moment-timezone';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport CustomFilter from './customFilter';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport StateFilter from '../Filter/stateFilter';\nimport AreaFilter from '../Filter/areaFilter';\nimport StoreFilter from '../Filter/storeFilter';\nimport {isEqual, isEmpty, sortBy as _sortBy, remove as _remove} from 'lodash';\n\nclass Filter extends Component {\n   constructor(props) {\n      super(props);\n      this.state              =  {           \n         editShow        :   false,\n         detailsShow     :   false,\n         mapShow         :   false,\n         trackShow       :   false,\n         visible         :   false,\n         show                 :  false,\n         selectedState        :  null,\n         selectedArea         :  null,\n         selectedStore        :  null,\n         filterKeys           :  {State:[], Area: [], Store: []},\n         showSearch: false,\n         showFilter: false,\n         filteredList: {}\n      }\n      this.interval                 =  null;\n      this.timings                  =  [];\n      this.handleShow               =  this.handleShow.bind(this);\n      this.handleSearchClose              =  this.handleSearchClose.bind(this);\n      this.handleRemoveFilter       =  this.handleRemoveFilter.bind(this);\n      this.onChangeHandle           =  this.onChangeHandle.bind(this);\n      this.toggleCustomSearch       =  this.toggleCustomSearch.bind(this);\n      this.toggleResFilter          =  this.toggleResFilter.bind(this);\n      this.openEditWindow             =   this.openEditWindow.bind(this);\n      this.openDetailsWindow          =   this.openDetailsWindow.bind(this);\n      this.openMapWindow              =   this.openMapWindow.bind(this);\n      this.openTrackWindow            =   this.openTrackWindow.bind(this);\n      this.deleteTask                 =   this.deleteTask.bind(this);\n      this.updateTask                 =   this.updateTask.bind(this);\n      this.handleClose                =   this.handleClose.bind(this);\n   }\n\n   openEditWindow(uuid, mrchnt_address, recpnt_address){\n       this.props.getTaskDetails({uuid: uuid})\n       this.setState({\n           editShow        :   true,\n           mrchnt_address  :   mrchnt_address,\n           recpnt_address  :   recpnt_address\n       })\n   }\n\n   openDetailsWindow(uuid){\n       this.props.getTaskDetails({uuid: uuid})\n       this.setState({\n           detailsShow: true\n       })\n   }    \n\n   openMapWindow(uuid){\n       this.props.getTaskDetails({uuid: uuid});\n       this.setState({\n           mapShow: true\n       })\n   }\n\n   openTrackWindow(e, data){\n      e.stopPropagation();\n       this.setState({\n           trackShow: true,\n           currentUrl: data.current_url,\n           trackDriver: data.track_driver\n       })\n   }\n\n   updateTask(uuid, status){\n       if(window.confirm('Do you really want to update status of this task?')) {\n           this.props.updateTaskStatus({uuid: uuid, status: status});\n       }\n   }\n\n   deleteTask(uuid){\n       if(window.confirm('Do you really want to delete this task?')) {\n           this.props.deleteTask({uuid: uuid});\n       }\n   }\n   \n   handleClose(){\n       //console.log('Handle Close');\n         this.setState({\n            visible     :  false,\n            show        :  false,\n            editShow    :  false,            \n            mapShow     :  false,\n            detailsShow :  false,\n            trackShow   :  false\n         })\n   }\n\n   toggleCustomSearch() {\n      this.setState({\n         showFilter  :  false,\n         showSearch  :  !this.state.showSearch,\n         sOpen       :  false,\n         aOpen       :  false,\n         stOpen      :  false\n\n      })\n   }\n\n   toggleResFilter() {\n      this.setState({\n         showSearch:false,\n         showFilter: !this.state.showFilter\n      })\n   }\n   \n   handleShow() {\n      this.setState({\n         show: true\n      })\n   }\n\n   handleSearchClose() {\n      this.setState({\n         show: false\n      }, function (){\n\n      })\n   }\n\n   timing(start, end) {\n      //console.log('Start End : ', start, end);\n      let today = moment().format('MM/DD/YYYY');\n      let now = moment().unix();\n      let gap = 30 * 60;\n      let key = \"\";\n      let stimestamp = moment(today+' '+start, 'MM/DD/YYYY H:mm').unix();\n      let etimestamp = moment(today+' '+end, 'MM/DD/YYYY H:mm').unix();\n      let from = [];\n      let to = [];\n      for(let i=stimestamp; i<etimestamp; i=i+gap) {\n         from.push({\n            label :  moment(i*1000).format('hh:mm A'),\n            value :  moment(i*1000).format('HH:mm:ss')\n         });\n         to.push({\n            label :  moment((i+gap)*1000).format('hh:mm A'),\n            value :  moment((i+gap)*1000).format('HH:mm:ss')\n         });\n         if(now >= i && now <= i+gap ) {\n            key = moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A');\n         }\n      }\n      return {from:from, to:to, key: key};\n   }\n\n   componentDidMount() {\n      let filter     =  this.props.filterData;\n      //console.log('Dashboard Filter Parent Props : ', this.props.userType, filter.user_type);\n      if(!isEmpty(filter) && filter.user_type === this.props.userType) {\n\t\t\t//type        =  filter.type;\n\t\t\tthis.setState({\n\t\t\t\tfilterKeys  :  filter.filterKeys,\n\t\t\t\ttype        :  filter.type\n\t\t\t}, () => {\n            //console.log('Did Mount : ', filter.filterKeys, this.state);\n            this.getShoppedLate();\n\t\t\t})\n\t\t} else {\n\t\t\tlet type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\n\t\t\tthis.setState({\n\t\t\t\ttype : type\n\t\t\t}, () => {\n            this.handleUpdateFilter();\n            this.getShoppedLate();\n\t\t\t})\n\t\t}\n      let self = this;\n      this.timings = this.timing(this.props.settingsData.start_time, this.props.settingsData.end_time);\n      document.addEventListener('click', this.handleClick, false);\n      /* document.addEventListener(\"click\", function(event){\n         event.stopPropagation();\n         self.setState({ sOpen: false, aOpen:false, stOpen:false});\n      }); */\n   }\n\n   getShoppedLate = () => {\n      this.setIntervalSummary();\n      this.props.getShoppedLate();\n   }\n\n   setIntervalSummary = () => {  \n      //console.log('Set Interval Done')    \n      if(!!this.interval)\n         clearInterval(this.interval);\n      this.interval = setInterval(() => {\n         this.props.getShoppedLate();\n      }, 1000 * 60 * 10);\n   }\n   \n   handleClick = (e) => {\n      e.stopPropagation();\n      if(this.nodeSearch.contains(e.target)\n         || this.nodeSrchButton.contains(e.target)\n         || this.nodeResSrchButton.contains(e.target)\n         || e.target.getAttribute('data') === 'autosuggest'\n         || e.target.getAttribute('data') === 'ignore-outer-click'\n         || !!e.target.getAttribute('aria-hidden')\n         || !!this.state.editShow\n         //|| !!!this.state.showSearch\n         )\n         return;\n      if(!!this.state.showSearch) {\n         this.setState({\n            showSearch  :  false\n         })\n      }\n   }   \n\n   handleStateChange = (e, selectedState) => {\n      //console.log('handle state change');\n      e.stopPropagation();\n      let filterKeys          =  this.state.filterKeys || {};\n      let selIndex            =  filterKeys.State.findIndex((item) => {\n         return item.value === selectedState.value;\n      })\n      if(selIndex === -1) {\n         filterKeys.State.push({\n            label    :  selectedState.label,\n            value    :  selectedState.value\n         })\n      }\n      filterKeys.State     =  _sortBy(filterKeys.State, 'value');\n      if(filterKeys.State.length === 0){\n         filterKeys.Store     =  [];\n         filterKeys.Area      =  [];\n      }\n      this.setState({\n         //selectedState,\n         filterKeys: filterKeys\n      }, () => {\n         this.handleUpdateFilter()\n      });\n   }\n\n   handleAreaChange           =  (e, selectedArea) => {\n      e.stopPropagation();\n      let filterKeys          =  this.state.filterKeys || {};\n      let selIndex            =  filterKeys.Area.findIndex((item) => {\n         return item.value === selectedArea.delivery_zone_name;\n      })\n      if(selIndex === -1) {\n         filterKeys.Area.push({\n            label    :  `${selectedArea.delivery_zone_name} (${selectedArea.state})`,\n            value    :  selectedArea.delivery_zone_name,\n            state    :  selectedArea.state,\n            id       :  selectedArea.id\n         })\n      }\n      filterKeys.Area     =  _sortBy(filterKeys.Area, 'value');\n      if(filterKeys.Area.length === 0){\n         filterKeys.Store      =  [];\n      }\n      this.setState({\n         //selectedArea,\n         filterKeys: filterKeys\n      }, () => {\n         this.handleUpdateFilter()\n      });\n   };\n\n   handleStoreChange          =  (e, selectedStore) => {\n      e.stopPropagation();\n      let filterKeys          =  this.state.filterKeys || {}; \n      let selIndex            =  filterKeys.Store.findIndex((item) => {\n         return item.value === selectedStore.label;\n      })\n      if(selIndex === -1) {\n         filterKeys.Store.push({\n            id          :  selectedStore.data.id,\n            store_id    :  selectedStore.data.store_id,\n            label       :  selectedStore.label,\n            value       :  selectedStore.label,\n         })\n      }\n      filterKeys.Store     =  _sortBy(filterKeys.Store, 'value');\n      this.setState({\n         //selectedStore,\n         filterKeys: filterKeys\n      }, () => {\n         this.handleUpdateFilter()\n      });\n   };\n\n   handleRemoveFilter = (e, type, index) => {\n      //console.log('handle remove');\n      e.stopPropagation();\n      let filters          =  this.state.filterKeys || [];\n      if(type === 'State') {\n         let stateCode     =  filters[type][index].value;\n         _remove(filters.Area, function (area) {\n            return area.state === stateCode;\n         });\n      }\n      /* if(type === 'Area') {\n         let stateCode     =  filters[type][index].value;\n         _remove(filters.Area, function (area) {\n            return area.state === stateCode;\n         });\n      } */\n      filters[type].splice(index, 1);\n      let selectedState    =  (type !== 'State') ? this.state.selectedState : null;\n      let selectedArea     =  (type !== 'Area') ? this.state.selectedArea : null;\n      let selectedStore    =  (type !== 'Store') ? this.state.selectedStore : null;\n      if(filters.State.length === 0){\n         filters.Store     =  [];\n         filters.Area      =  [];\n      }\n      if(filters.Area.length === 0){\n         filters.Store      =  [];\n      }\n\n      this.setState({\n         filterKeys : filters,\n         selectedState: selectedState,\n         selectedArea: selectedArea,\n         selectedStore: selectedStore\n      }, () => {\n         this.handleUpdateFilter()\n      });\n   }\n\n   handleTypeChange(type) {\n      this.setState({\n\t\t\ttype: type\n\t\t}, () => {\n\t\t\tthis.handleUpdateFilter();\n\t\t})\n   }\n\n   handleUpdateFilter = () => {\n      /* console.log('Update Filter : ', {\n         user_type:this.props.userType,\n         type: this.state.type,\n         filterKeys: this.state.filterKeys || {}\n      }) */\n      this.props.updateFilter({\n         user_type:this.props.userType,\n         type: this.state.type,\n         filterKeys: this.state.filterKeys || {}\n      });\n   }\n\n   onChangeHandle(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({ [name]: value }, function () {\n      });\n   }\n\n   componentWillReceiveProps(props) {\n      if(!isEqual(this.props.filterData, props.filterData)) {\n         let filter     =  props.filterData;\n         if(!isEmpty(filter) && filter.user_type === props.userType) {\n            //type        =  filter.type;\n            this.setState({\n               filterKeys  :  filter.filterKeys,\n               type        :  filter.type,\n               filteredList: props.filteredList\n            }, () => {\n               //console.log('Did Mount : ', filter.filterKeys, this.state);\n               //this.handleUpdateFilter();\n            })\n         } else {\n            let type       =  (props.userType === 'admin') ? 'general' : props.userType;\n            this.setState({\n               type : type,\n               filteredList: props.filteredList\n            }, () => {\n               this.handleUpdateFilter();\n            })\n         }\n      } else {\n         this.setState({\n            //filterKeys: props.filterKeys,\n            filteredList: props.filteredList\n         })\n      }\n      //}\n   }\n\n   componentWillUnmount() {\n      document.removeEventListener('click', this.handleClick);\n      clearInterval(this.interval);\n      /* document.removeEventListener(\"click\", function(){\n      }); */\n   }\n\n   render() {\n      //console.log('Render Filter : ', this.state.filterKeys, this.state);\n      //let timings                =  (!!this.timings && !!this.timings.data) ? this.timings.data : [];\n      let stores                 =  this.props.stores || [];\n      let locations              =  this.props.locations || [];\n      let zones                  =  this.props.zones || {};\n      let statesLocalStorage     =  JSON.parse(localStorage.getItem('states') || '[]');      \n      let states                 =  statesLocalStorage.map((item) => {\n         return {\n            label: item.value,\n            value: item.id\n         }\n      })\n      let stateFilter = [];\n      let stateCodeFilter = [];\n      this.state.filterKeys.State.forEach((state) => {\n         stateFilter.push(state.label);\n         stateCodeFilter.push(state.value);\n      });\n      let areaFilter = this.state.filterKeys.Area.map(area => area.value);\n      let storeFilter = this.state.filterKeys.Store.map(store => store.label);\n      let zoneList = stateCodeFilter.map(state => {\n         return { state: state, zones: zones[state] }\n      });\n      return (\n         <div>\n            <section className=\"con_top\">\n                  <div className=\"tab_pan-wrap\">\n                     <div className=\"tab_pan\">\n                        <span onClick={() => this.handleTypeChange('general')} className={(this.state.type === 'general') ? ' active' : ''}>Grocery</span>\n                        <span onClick={() => this.handleTypeChange('pharmacy')} className={(this.state.type === 'pharmacy') ? ' active' : ''}>Rx</span>\n                     </div>\n                  </div>\n                  <div className=\"res_btn\">\n                     <div className={`resfilter_btn ${this.state.showFilter ? \"showfilter\":\"\"} `} onClick={this.toggleResFilter}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Filter</div>\n                     <div ref={nodeResSrchButton => this.nodeResSrchButton = nodeResSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\":\"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\n                  </div>\n                  <Form method=\"get\" action=\"\" autoComplete=\"off\" className={`resfilter_box ${this.state.showFilter ? \"showfilterbox\":\"\"}`} >\n                     <div className=\"filter_label\">Filter by: </div>\n                     <StateFilter\n                        stateFilter={stateFilter}\n                        states={this.state.filterKeys.State}\n                        handleStateChange={this.handleStateChange}\n                        handleRemoveFilter={this.handleRemoveFilter}\n                     />\n                     <AreaFilter\n                        area={this.state.filterKeys.Area}\n                        states={this.state.filterKeys.State}\n                        zones={this.props.zones}\n                        stateCodeFilter={stateCodeFilter}\n                        handleAreaChange={this.handleAreaChange}\n                        handleRemoveFilter={this.handleRemoveFilter}\n                     />\n                     <StoreFilter\n                        store={this.state.filterKeys.Store}\n                        area={this.state.filterKeys.Area}\n                        stores={this.props.stores}\n                        handleStoreChange={this.handleStoreChange}\n                        handleRemoveFilter={this.handleRemoveFilter}\n                     />\n                  </Form>\n               \n               <div className=\"search_sec\">\n                  <div ref={nodeSrchButton => this.nodeSrchButton = nodeSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\":\"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\n                  <button type=\"button\" onClick={this.handleShow} className=\"btn btn_blue\">Create Task <img src=\"/assets/plus.svg\" alt=\"\" /></button>\n               </div>\n            </section>\n            {\n               (this.props.liveOrderCount !== '') ? <div className=\"liveOrders\">{this.props.liveOrderCount} {(this.props.liveOrderCount <= 1) ? 'Live Order' : 'Live Orders'}</div> : null\n            }\n            {\n\t\t\t\t\t(this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0) ?\n            <section className=\"filter-tag_section\">\n               {\n                  (this.state.filterKeys.State.length > 0) ?\n                     this.state.filterKeys.State.map((filter, index) => {\n                        return (\n                           <span key={index} className=\"f-tag\">{filter.label}\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'State', index)}>\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\n                              </a>\n                           </span>\n                        )\n                     }) : null\n               }\n               {\n                  (this.state.filterKeys.Area.length > 0) ?\n                     this.state.filterKeys.Area.map((filter, index) => {\n                        return (\n                           <span key={index} className=\"f-tag\">{filter.label}\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Area', index)}>\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\n                              </a>\n                           </span>\n                        )\n                     }) : null\n               }\n               {\n                  (this.state.filterKeys.Store.length > 0) ?\n                     this.state.filterKeys.Store.map((filter, index) => {\n                        return (\n                           <span key={index} className=\"f-tag\">{filter.label}\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Store', index)}>\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\n                              </a>\n                           </span>\n                        )\n                     }) : null\n               }\n            </section>:null\n            }\n            <div\n               ref={nodeSearch => this.nodeSearch = nodeSearch}>\n               <CustomFilter\n                  filteredList         =  {this.state.filteredList}\n                  settingsData         =  {this.props.settingsData}\n                  timings              =  {this.timings}\n                  searchFilter         =  {this.props.searchFilter}\n                  resetSearch          =  {this.props.resetSearch}\n                  showSearch           =  {this.state.showSearch}\n                  getTaskDetails       =  {this.props.getTaskDetails}\n                  taskDetails          =  {this.props.taskDetails}\n                  deleteTask           =  {this.props.deleteTask}\n                  updateTaskStatus     =  {this.props.updateTaskStatus}\n                  editTask             =  {this.props.editTask}\n                  getTrackDetails      =  {this.props.getTrackDetails}\n                  openEditWindow       =  {this.openEditWindow}\n                  openDetailsWindow    =  {this.openDetailsWindow}\n                  openMapWindow        =  {this.openMapWindow}\n                  deleteTask           =  {this.deleteTask}\n                  updateTask           =  {this.updateTask}\n                  openTrackWindow      =  {this.openTrackWindow}\n                  section              =  'Dashboard'\n                  userType             =  {this.state.type}\n               />\n            </div>\n            <CreateTask\n               type                 =  {this.state.type}\n               show={this.state.show}\n               handleClose={this.handleClose}\n               getLocations={this.props.getLocations}\n               taskType={this.props.taskType}\n               stores={this.props.stores}\n               locations={this.props.locations}\n               pharmacy={this.props.pharmacy}\n               timings={this.props.timings}\n               userData={this.props.userData}\n               settingsData={this.props.settingsData}\n               createTask={this.props.createTask}\n               isTaskProcessing     =  {this.props.isTaskProcessing}\n            />            \n            {\n               (!!this.state.editShow) ?\n               <EditTask\n                  taskDetails         =   {this.props.taskDetails}\n                  show                =   {this.state.editShow}\n                  timings             =   {this.props.timings}\n                  settingsData        =   {this.props.settingsData}\n                  editTask            =   {this.props.editTask}\n                  mrchnt_address      =   {this.state.mrchnt_address}\n                  recpnt_address      =   {this.state.recpnt_address}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }\n            {\n               //(!!this.state.trackShow) ?\n               <TrackDetails\n                  show                =   {this.state.trackShow}\n                  currentUrl          =   {this.state.currentUrl}\n                  trackDriver         =   {this.state.trackDriver}\n                  handleClose         =   {this.handleClose}\n               /> //: null\n            }\n            {\n               (!!this.state.detailsShow) ?\n               <TaskDetails\n                  show                =   {this.state.detailsShow}\n                  taskDetails         =   {this.props.taskDetails}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }                    \n            {\n               (!!this.state.mapShow) ?\n               <MapDetails\n                  show                =   {this.state.mapShow}\n                  taskDetails         =   {this.props.taskDetails}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }\n         </div>\n      )\n   }\n}\nexport default withRouter(Filter);"]},"metadata":{},"sourceType":"module"}