{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Modals/addUserModal.js\";\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { getCookie } from '../../util/cookies';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport { Row, Col, Form, Button, FormFeedback } from 'reactstrap';\n\nvar AddUserModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddUserModal, _Component);\n\n  var _super = _createSuper(AddUserModal);\n\n  function AddUserModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddUserModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      values: {},\n      errors: {}\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleChecked = _this.handleChecked.bind(_assertThisInitialized(_this));\n    _this.handleValidation = _this.handleValidation.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddUserModal, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var isError = false;\n      var values = this.state.values;\n      var errors = this.state.errors; //First Name\n\n      if (!!!values.first_name) {\n        isError = true;\n        errors.first_name = 'First name is required.';\n      }\n\n      ; //First Name\n\n      if (!!!values.last_name) {\n        isError = true;\n        errors.last_name = 'Last name is required.';\n      }\n\n      ; //Email\n\n      if (!!!values.email) {\n        isError = true;\n        errors.email = 'Email is required.';\n      } else if (values.email) {\n        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\n        if (!reg.test(values.email)) {\n          isError = true;\n          errors.email = 'Please enter a valid email address.';\n        }\n      }\n\n      ; //User Type\n\n      if (!!!values.user_type) {\n        isError = true;\n        errors.user_type = 'User type is required.';\n      }\n\n      ;\n      this.setState({\n        errors: errors\n      });\n      return isError;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      var values = this.state.values;\n      values[name] = value;\n\n      var errors = _objectSpread({}, this.state.errors);\n\n      errors[name] = \"\";\n      this.setState({\n        values: values,\n        errors: errors\n      });\n    }\n  }, {\n    key: \"handleChecked\",\n    value: function handleChecked(e) {\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          checked = _e$target2.checked;\n      var values = this.state.values;\n      values[name] = checked;\n      this.setState({\n        values: values\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var id = this.state.values.id || null;\n      var isError = this.handleValidation();\n\n      if (isError) {\n        return false;\n        console.log(\"Form has errors.\", this.state.errors);\n      } else {\n        var postData = _objectSpread({}, this.state.values);\n\n        postData['active'] = postData.active.toString();\n        postData['show_report'] = postData.show_report.toString();\n\n        if (!id) {\n          var userData = getCookie('foodjets_merchant') || {};\n          postData['org_id'] = userData.org_id;\n          postData['org_name'] = userData.org_name;\n          postData['org_user_email'] = userData.org_email;\n          this.props.addUserData(postData);\n        } else {\n          this.props.updateUserData(postData);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        values: props.initialData,\n        errors: props.initialUserErrorData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeFormBtn = false;\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          values = _this$state.values;\n\n      if (isEmpty(errors.first_name) && isEmpty(errors.last_name) && isEmpty(errors.email) && isEmpty(errors.user_type) && !isEmpty(values.first_name) && !isEmpty(values.last_name) && !isEmpty(values.email) && !isEmpty(values.user_type)) {\n        activeFormBtn = true;\n      }\n\n      ;\n      return /*#__PURE__*/React.createElement(Modal, {\n        size: \"md\",\n        className: \"c-modal\",\n        data: \"ignore-outer-click\",\n        show: this.props.show,\n        onHide: function onHide() {\n          _this2.props.handleShowUserModel('CLOSE');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, this.props.action === 'EDIT' ? 'Edit User' : 'Add User')), /*#__PURE__*/React.createElement(Form, {\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        sm: \"12\",\n        className: \"c_info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"first_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter First Name\",\n        className: !!errors.first_name ? \"t_box error\" : \"t_box\",\n        name: \"first_name\",\n        onChange: this.handleChange,\n        value: values.first_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }), errors.first_name && /*#__PURE__*/React.createElement(FormFeedback, {\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 61\n        }\n      }, \" \", errors.first_name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"last_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Last Name\",\n        className: !!errors.last_name ? \"t_box error\" : \"t_box\",\n        name: \"last_name\",\n        onChange: this.handleChange,\n        value: values.last_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }\n      }), errors.last_name && /*#__PURE__*/React.createElement(FormFeedback, {\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 60\n        }\n      }, \" \", errors.last_name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        className: !!errors.email ? \"t_box error\" : \"t_box\",\n        name: \"email\",\n        onChange: this.handleChange,\n        value: values.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }\n      }), errors.email && /*#__PURE__*/React.createElement(FormFeedback, {\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 56\n        }\n      }, \" \", errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group dselect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"user_type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, \"User Type\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: !!errors.user_type ? \"s_box error\" : \"s_box\",\n        name: \"user_type\",\n        onChange: this.handleChange,\n        value: values.user_type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }\n      }, \"-- Select User Type --\"), /*#__PURE__*/React.createElement(\"option\", {\n        key: 1,\n        value: \"general\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 41\n        }\n      }, \"General\"), /*#__PURE__*/React.createElement(\"option\", {\n        key: 2,\n        value: \"pharmacy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 41\n        }\n      }, \"Pharmacy\"), /*#__PURE__*/React.createElement(\"option\", {\n        key: 3,\n        value: \"admin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }, \"Admin\")), errors.user_type && /*#__PURE__*/React.createElement(FormFeedback, {\n        style: {\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 60\n        }\n      }, \" \", errors.user_type)), values.user_type && values.user_type === 'admin' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"c_boxgroup sreport\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"show_report\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 45\n        }\n      }, \"Show Report\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"show_report\",\n        name: \"show_report\",\n        className: \"c_box\",\n        onChange: this.handleChecked,\n        checked: values.show_report,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 45\n        }\n      }))) : null))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: activeFormBtn ? \"active\" : \"\",\n        variant: \"primary\",\n        disabled: !!this.props.isUserUpdating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, this.props.isUserUpdating ? 'Processing..' : 'Confirm'))));\n    }\n  }]);\n\n  return AddUserModal;\n}(Component);\n\n;\nexport default AddUserModal;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Modals/addUserModal.js"],"names":["React","Component","Modal","getCookie","isEmpty","isEqual","map","_map","Row","Col","Form","Button","FormFeedback","AddUserModal","props","state","values","errors","handleSubmit","bind","handleChange","handleChecked","handleValidation","isError","first_name","last_name","email","reg","test","user_type","setState","e","target","name","value","checked","preventDefault","id","console","log","postData","active","toString","show_report","userData","org_id","org_name","org_email","addUserData","updateUserData","initialData","initialUserErrorData","activeFormBtn","show","handleShowUserModel","action","display","isUserUpdating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport {getCookie} from '../../util/cookies';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport { Row, Col, Form, Button, FormFeedback } from 'reactstrap';\n\nclass AddUserModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            values: {},\n            errors: {}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChecked = this.handleChecked.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    };\n\n    handleValidation(){\n        let isError = false;\n        let values = this.state.values;\n        let errors = this.state.errors;\n\n        //First Name\n        if (!!!values.first_name) {\n            isError = true;\n            errors.first_name = 'First name is required.';\n        }; \n\n        //First Name\n        if (!!!values.last_name) {\n            isError = true;\n            errors.last_name = 'Last name is required.';\n        }; \n\n        //Email\n        if(!!!values.email){\n            isError = true;\n            errors.email = 'Email is required.';\n        } else if(values.email) {\n            let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n            if(!reg.test(values.email)) {\n                isError = true;\n                errors.email = 'Please enter a valid email address.';\n            }\n        }; \n\n        //User Type\n        if(!!!values.user_type){\n            isError = true;\n            errors.user_type = 'User type is required.';\n        };\n\n       this.setState({ errors: errors });\n       return isError;\n    };\n\n    handleChange(e){    \n        const { name, value } = e.target\n        let values = this.state.values;\n        values[name] = value; \n\n        let errors = {...this.state.errors};\n        errors[name] = \"\";\n               \n        this.setState({values, errors: errors});\n    };\n\n    handleChecked(e) {\n        const { name, checked } = e.target;\n        let values = this.state.values;\n        values[name] = checked; \n\n        this.setState({values});\n    };\n\n    handleSubmit(e){\n        e.preventDefault();\n        let id = this.state.values.id || null;\n        let isError = this.handleValidation();\n\n        if(isError) {\n            return false;\n            console.log(\"Form has errors.\", this.state.errors);\n        } else {\n            let postData = {...this.state.values};           \n            postData['active'] = postData.active.toString();\n            postData['show_report'] = postData.show_report.toString();\n\n            if (!id) {\n                let userData = getCookie('foodjets_merchant') || {}; \n\n                postData['org_id'] = userData.org_id;\n                postData['org_name'] = userData.org_name;\n                postData['org_user_email'] = userData.org_email;\n                this.props.addUserData(postData);\n            } else {\n                this.props.updateUserData(postData);\n            }\n        }\n    };\n\n    componentWillReceiveProps(props) {        \n        this.setState({ values: props.initialData, errors: props.initialUserErrorData });\n    };\n\n    render() {\n        let activeFormBtn = false;\n        const { errors, values } = this.state;\n\n        if(isEmpty(errors.first_name) && isEmpty(errors.last_name) && isEmpty(errors.email) && isEmpty(errors.user_type) && !isEmpty(values.first_name) && !isEmpty(values.last_name) && !isEmpty(values.email) && !isEmpty(values.user_type)){\n            activeFormBtn = true;\n        };\n\n        return (\n            <Modal size=\"md\" className=\"c-modal\" data=\"ignore-outer-click\" show={this.props.show} onHide={() => { this.props.handleShowUserModel('CLOSE') }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{(this.props.action === 'EDIT')?'Edit User':'Add User'}</Modal.Title>\n                </Modal.Header>\n\n                <Form autoComplete=\"off\" onSubmit= {this.handleSubmit}>\n                    <Modal.Body>\n                        <Row noGutters>\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"first_name\">First Name</label>\n                                    <input type=\"text\" placeholder=\"Enter First Name\" className={!!errors.first_name  ? \"t_box error\" : \"t_box\" } name=\"first_name\" onChange={this.handleChange} value={values.first_name} />\n\n                                    {errors.first_name && ( <FormFeedback style={{display: 'block'}}> {errors.first_name}</FormFeedback>  )}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"last_name\">Last Name</label>\n                                    <input type=\"text\" placeholder=\"Enter Last Name\" className={!!errors.last_name  ? \"t_box error\" : \"t_box\" } name=\"last_name\" onChange={this.handleChange} value={values.last_name} />\n\n                                    {errors.last_name && ( <FormFeedback style={{display: 'block'}}> {errors.last_name}</FormFeedback>  )}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email</label>\n                                    <input type=\"email\" placeholder=\"Enter Email\" className={!!errors.email  ? \"t_box error\" : \"t_box\" } name=\"email\" onChange={this.handleChange} value={values.email} />\n\n                                    {errors.email && ( <FormFeedback style={{display: 'block'}}> {errors.email}</FormFeedback>  )}\n                                </div>\n\n                                <div className=\"form-group dselect\">\n                                    <label htmlFor=\"user_type\">User Type</label>\n                                    <select className={!!errors.user_type  ? \"s_box error\" : \"s_box\" } name=\"user_type\" onChange={this.handleChange} value={values.user_type}>\n                                        <option value=\"\">-- Select User Type --</option>\n                                        <option key={1} value=\"general\">General</option>\n                                        <option key={2} value=\"pharmacy\">Pharmacy</option>\n                                        <option key={3} value=\"admin\">Admin</option>\n                                    </select>\n\n                                    {errors.user_type && ( <FormFeedback style={{display: 'block'}}> {errors.user_type}</FormFeedback>  )}\n                                </div>\n\n                                {\n                                    (values.user_type && values.user_type === 'admin')?\n                                    <div className=\"form-group\">\n                                        <span className=\"c_boxgroup sreport\">\n                                            <label htmlFor=\"show_report\">Show Report</label>\n                                            <input type=\"checkbox\" id=\"show_report\" name=\"show_report\" className=\"c_box\" onChange={this.handleChecked} checked={values.show_report} />\n                                        </span>\n                                    </div>:null\n                                }\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button type=\"submit\" className={(activeFormBtn)? \"active\" : \"\" } variant=\"primary\" disabled={!!this.props.isUserUpdating}>{(this.props.isUserUpdating)? 'Processing..' : 'Confirm'}</Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        )\n    };\n};\n\nexport default AddUserModal;"]},"metadata":{},"sourceType":"module"}