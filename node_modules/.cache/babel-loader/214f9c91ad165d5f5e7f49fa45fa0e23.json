{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Login/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { PropTypes as PT } from 'prop-types';\nimport * as actions from './actions';\nimport LoginForm from './login';\n\nvar Login = function Login(_ref) {\n  var isProcessing = _ref.isProcessing,\n      isError = _ref.isError,\n      isSuccess = _ref.isSuccess,\n      doLogin = _ref.doLogin,\n      loginData = _ref.loginData;\n  return /*#__PURE__*/React.createElement(LoginForm, {\n    isProcessing: isProcessing,\n    isError: isError,\n    isSuccess: isSuccess,\n    doLogin: doLogin,\n    loginData: loginData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  });\n};\n\nLogin.propTypes = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  doLogin: PT.func,\n  loginData: PT.object\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var loginReducer = _ref2.loginReducer;\n  return {\n    isProcessing: loginReducer.isProcessing,\n    isError: loginReducer.isError,\n    isSuccess: loginReducer.isSuccess,\n    loginData: loginReducer.loginData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    doLogin: function doLogin(data) {\n      return dispatch(actions.doLogin(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Login/index.js"],"names":["React","connect","withRouter","PropTypes","PT","actions","LoginForm","Login","isProcessing","isError","isSuccess","doLogin","loginData","propTypes","bool","func","object","mapStateToProps","loginReducer","mapDispatchToProps","dispatch","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,SAAS,IAAIC,EAArB,QAA8B,YAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAMN;AAAA,MALcC,YAKd,QALcA,YAKd;AAAA,MAJcC,OAId,QAJcA,OAId;AAAA,MAHcC,SAGd,QAHcA,SAGd;AAAA,MAFcC,OAEd,QAFcA,OAEd;AAAA,MADcC,SACd,QADcA,SACd;AACJ,sBACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEJ,YADhB;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASF,CAhBF;;AAkBCL,KAAK,CAACM,SAAN,GAAoB;AACnBL,EAAAA,YAAY,EAAEJ,EAAE,CAACU,IADE;AAEnBL,EAAAA,OAAO,EAAEL,EAAE,CAACU,IAFO;AAGnBJ,EAAAA,SAAS,EAAEN,EAAE,CAACU,IAHK;AAInBH,EAAAA,OAAO,EAACP,EAAE,CAACW,IAJQ;AAKnBH,EAAAA,SAAS,EAACR,EAAE,CAACY;AALM,CAApB;;AAQA,IAAOC,eAAe,GAAK,SAApBA,eAAoB,QAAoB;AAAA,MAAlBC,YAAkB,SAAlBA,YAAkB;AAC7C,SAAQ;AACLV,IAAAA,YAAY,EAAEU,YAAY,CAACV,YADtB;AAELC,IAAAA,OAAO,EAAES,YAAY,CAACT,OAFjB;AAGLC,IAAAA,SAAS,EAAEQ,YAAY,CAACR,SAHnB;AAILE,IAAAA,SAAS,EAAEM,YAAY,CAACN;AAJnB,GAAR;AAMA,CAPF;;AAUD,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCT,IAAAA,OAAO,EAAE,iBAACU,IAAD;AAAA,aAAUD,QAAQ,CAACf,OAAO,CAACM,OAAR,CAAgBU,IAAhB,CAAD,CAAlB;AAAA;AAD6B,GAAL;AAAA,CAAnC;;AAGA,eAAepB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,UAAU,CAACK,KAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {PropTypes as PT} from 'prop-types';\nimport * as actions from './actions';\nimport LoginForm from './login';\n\nconst Login = ({\n                      isProcessing,\n                      isError,\n                      isSuccess,\n                      doLogin,\n                      loginData\n  }) => {\n    return (\n      <LoginForm\n        isProcessing={isProcessing}\n        isError={isError}\n        isSuccess={isSuccess}\n        doLogin={doLogin}\n        loginData={loginData}\n      />\n    )\n };\n\n Login.propTypes   = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  doLogin:PT.func,\n  loginData:PT.object\n }\n\n const  mapStateToProps   = ({loginReducer}) => {\n   return ({\n      isProcessing: loginReducer.isProcessing,\n      isError: loginReducer.isError,\n      isSuccess: loginReducer.isSuccess,\n      loginData: loginReducer.loginData\n    })\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  doLogin: (data) => dispatch(actions.doLogin(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));"]},"metadata":{},"sourceType":"module"}