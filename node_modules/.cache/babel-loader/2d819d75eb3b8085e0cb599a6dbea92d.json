{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Reports/dailyView.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport moment from 'moment-timezone';\nimport { isEqual } from 'lodash';\n\nvar DailyView = /*#__PURE__*/function (_Component) {\n  _inherits(DailyView, _Component);\n\n  var _super = _createSuper(DailyView);\n\n  function DailyView(props) {\n    var _this;\n\n    _classCallCheck(this, DailyView);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.maxOrders = 0;\n    return _this;\n  }\n\n  _createClass(DailyView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //let { ordersData  }\t=\tthis.props.reportData;\n      //console.log('Did Mount : ', this.props.reportData);\n      var _this$props = this.props,\n          reportData = _this$props.reportData,\n          showBy = _this$props.showBy;\n      var ordersData = !!reportData ? reportData.ordersData : {};\n      this.arrangeGraphData(ordersData, showBy);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      //console.log('Will Receive Props : ', props.reportData, this.props.reportData);\n      if (props.showBy !== this.props.showBy || !isEqual(props.reportData, this.props.reportData)) {\n        var reportData = props.reportData,\n            showBy = props.showBy;\n        var ordersData = !!reportData ? reportData.ordersData : {};\n        this.arrangeGraphData(ordersData, showBy);\n      }\n      /* console.log('Daily Props : ', this.props, props);\n      let { reportData, showBy  }\t=\tprops;\n      let ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\n      this.arrangeGraphData(ordersData, showBy); */\n\n      /*let { reportData }\t=\tprops;\n      console.log('Daily Graph Data'); */\n\n    }\n  }, {\n    key: \"arrangeGraphData\",\n    value: function arrangeGraphData(ordersData, showBy) {\n      //console.log('showBy : ', showBy);\n      if (!!ordersData && !!ordersData.orders) {\n        var orderList = ordersData.orders || [];\n        var maxOrders = this.maxOrders; //maxOrders\t\t\t=\tMath.ceil(Math.max(...orderList.map(item => item.order_count))/500) * 500;\n\n        maxOrders = Math.max.apply(Math, _toConsumableArray(orderList.map(function (item) {\n          return item.order_count;\n        })));\n        maxOrders = Math.ceil(maxOrders / 6) * 6; //console.log('Max', maxOrders);\n        //console.log('Show by ', showBy);\n\n        var dailyArr = [];\n\n        if (showBy === 'date') {\n          dailyArr = orderList.map(function (item) {\n            var formattedDate = !!item.D ? moment(item.D, 'YYYYMMDD').format('MMM DD') : '';\n            return _objectSpread(_objectSpread({}, item), {}, {\n              label: formattedDate,\n              percentage: item.order_count * 100 / maxOrders\n            });\n          });\n        }\n\n        if (showBy === 'store') {\n          dailyArr = orderList.map(function (item) {\n            var addrArr = (item.address || '').split(',');\n            addrArr.splice(addrArr.length - 2, 2);\n            var address = addrArr.join(', '); //console.log('Address : ', addrArr, address);\n\n            return _objectSpread(_objectSpread({}, item), {}, {\n              label: address,\n              percentage: item.order_count * 100 / maxOrders\n            });\n          });\n        }\n\n        var slab = maxOrders > 0 ? maxOrders / 6 : 0;\n        var slabArr = [];\n        var count = 0;\n\n        for (var i = 0; i <= 6; i++) {\n          slabArr.push(count);\n          count = count + parseInt(slab);\n        }\n\n        this.setState({\n          dailyArr: dailyArr,\n          slabArr: slabArr\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          dailyArr = _this$state.dailyArr,\n          slabArr = _this$state.slabArr; //console.log(dailyArr);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resscroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fcol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }\n      }, this.props.showBy === 'date' ? 'Date' : 'Stores'), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mcol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lcol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }\n      }, \"Value\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cval\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"scrollpan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }\n      }, !!dailyArr && dailyArr.length > 0 ? /*#__PURE__*/React.createElement(Scrollbars, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 8\n        }\n      }, dailyArr.map(function (item, k) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: k,\n          className: \"cValueRow\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fcol\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, item.label), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mcol\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"hBar\",\n          style: {\n            width: \"\".concat(item.percentage, \"%\")\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 35\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lcol\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, item.order_count));\n      })) : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cGrid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }\n      }, !!slabArr && slabArr.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mcol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 8\n        }\n      }, slabArr.map(function (item, i) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 11\n          }\n        }, item);\n      })) : null)));\n    }\n  }]);\n\n  return DailyView;\n}(Component);\n\n;\nexport default DailyView;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Reports/dailyView.js"],"names":["React","Component","Row","Col","Scrollbars","moment","isEqual","DailyView","props","state","maxOrders","reportData","showBy","ordersData","arrangeGraphData","orders","orderList","Math","max","map","item","order_count","ceil","dailyArr","formattedDate","D","format","label","percentage","addrArr","address","split","splice","length","join","slab","slabArr","count","i","push","parseInt","setState","k","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport moment from 'moment-timezone';\nimport {isEqual} from 'lodash';\n\nclass DailyView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.maxOrders\t\t=\t0\n\t};\n\n\tcomponentDidMount() {\n\t\t//let { ordersData  }\t=\tthis.props.reportData;\n\t\t//console.log('Did Mount : ', this.props.reportData);\n\t\tlet { reportData, showBy  }\t=\tthis.props;\n\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\n\t\tthis.arrangeGraphData(ordersData, showBy);\n\t}\n\n\tcomponentWillReceiveProps(props) {\n\t\t//console.log('Will Receive Props : ', props.reportData, this.props.reportData);\n\t\tif(props.showBy !== this.props.showBy || !isEqual(props.reportData, this.props.reportData)){\n\t\t\tlet { reportData, showBy  }\t=\tprops;\n\t\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\n\t\t\tthis.arrangeGraphData(ordersData, showBy);\n\t\t}\n\t\t/* console.log('Daily Props : ', this.props, props);\n\t\tlet { reportData, showBy  }\t=\tprops;\n\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\n\t\tthis.arrangeGraphData(ordersData, showBy); */\n\t\t/*let { reportData }\t=\tprops;\n\t\tconsole.log('Daily Graph Data'); */\n\t}\n\n\tarrangeGraphData(ordersData, showBy) {\t\t\n\t\t//console.log('showBy : ', showBy);\n\t\tif(!!ordersData && !!ordersData.orders) {\n\t\t\tlet orderList\t\t=\tordersData.orders || [];\n\t\t\tlet maxOrders\t\t=\tthis.maxOrders;\n\t\t\t//maxOrders\t\t\t=\tMath.ceil(Math.max(...orderList.map(item => item.order_count))/500) * 500;\n\t\t\tmaxOrders\t\t\t=\tMath.max(...orderList.map(item => item.order_count));\n\t\t\tmaxOrders\t\t\t=\tMath.ceil(maxOrders/6)*6;\n\t\t\t//console.log('Max', maxOrders);\n\t\t\t//console.log('Show by ', showBy);\n\t\t\tlet dailyArr\t\t=\t[];\n\t\t\tif(showBy === 'date') {\n\t\t\t\tdailyArr\t\t\t\t=\torderList.map((item) => {\n\t\t\t\t\tlet formattedDate\t=\t(!!item.D) ? moment(item.D, 'YYYYMMDD').format('MMM DD') : '';\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tlabel: formattedDate,\n\t\t\t\t\t\tpercentage: (item.order_count * 100)/maxOrders\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tif(showBy === 'store') {\n\t\t\t\tdailyArr\t\t\t\t=\torderList.map((item) => {\n\t\t\t\t\tlet addrArr\t\t\t=\t(item.address || '').split(',');\n\t\t\t\t\taddrArr.splice(addrArr.length - 2, 2);\n\t\t\t\t\tlet address\t\t\t=\taddrArr.join(', ');\n\t\t\t\t\t//console.log('Address : ', addrArr, address);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tlabel: address,\n\t\t\t\t\t\tpercentage: (item.order_count * 100)/maxOrders\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tlet slab\t\t=\t(maxOrders > 0)? maxOrders/6 : 0;\n\t\t\tlet slabArr\t\t=\t[];\n\t\t\tlet count\t\t=\t0;\n\t\t\tfor(let i=0; i<=6; i++){\n\t\t\t\tslabArr.push(count);\n\t\t\t\tcount\t\t=\tcount + parseInt(slab);\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tdailyArr : dailyArr,\n\t\t\t\tslabArr : slabArr\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { dailyArr, slabArr } = this.state;\n\t\t//console.log(dailyArr);\n\t\treturn (\n\t\t\t<div className=\"resscroll\">\n\t\t\t\t<div className=\"cLabel\">\n\t\t\t\t\t<div className=\"fcol\">{(this.props.showBy === 'date') ? 'Date' : 'Stores'}</div>\n\t\t\t\t\t<div className=\"mcol\"></div>\n\t\t\t\t\t<div className=\"lcol\">Value</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"cval\">\n\t\t\t\t\t<div className=\"scrollpan\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(!!dailyArr && dailyArr.length > 0) ?\n\t\t\t\t\t\t\t<Scrollbars>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdailyArr.map((item, k) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div key={k} className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"fcol\">{item.label}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: `${item.percentage}%`}}></span></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"lcol\">{item.order_count}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{/* <div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 19</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '100%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,503</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 18</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '80%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,403</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 17</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '85%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,331</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 16</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '60%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,031</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 15</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 14</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '99.5%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,499</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 13</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '50%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">1,314</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 12</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '85%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,331</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 11</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '60%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,031</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 10</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\n\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 9</div>\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t</Scrollbars>\n\t\t\t\t\t\t\t: null\t\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"cGrid\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(!!slabArr && slabArr.length > 0) ?\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className=\"mcol\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tslabArr.map((item, i) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{/* <span>0</span>\n\t\t\t\t\t\t\t\t<span>500</span>\n\t\t\t\t\t\t\t\t<span>1000</span>\n\t\t\t\t\t\t\t\t<span>1500</span>\n\t\t\t\t\t\t\t\t<span>2000</span>\n\t\t\t\t\t\t\t\t<span>2500</span> */}\n\t\t\t\t\t\t\t</div> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t};\n};\n\nexport default DailyView;"]},"metadata":{},"sourceType":"module"}