{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/forgotPassword.js\";\nimport React, { Component } from 'react';\nimport { PropTypes as PT } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nvar ForgotPasswordForm = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPasswordForm, _Component);\n\n  var _super = _createSuper(ForgotPasswordForm);\n\n  function ForgotPasswordForm(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var email = _this.email.value;\n      var data = {\n        email: email\n      };\n\n      var validate = _this.validate(data);\n\n      if (!validate.errors.email && e.type == \"submit\") _this.props.forgotPassword(data);\n    };\n\n    _this.validate = function (data) {\n      var formData = data || {};\n\n      var errors = _objectSpread({}, _this.state.defaultError);\n\n      var isError = false;\n\n      if (!!!formData.email) {\n        errors.email = true;\n        isError = true;\n      } else if (!_this.validateEmail(formData.email)) {\n        errors.email = true;\n        isError = true;\n      } else {\n        errors.email = false;\n        isError = false;\n      }\n\n      console.log(\"errors\", errors);\n\n      _this.setState({\n        defaultError: errors\n      });\n\n      return {\n        isError: isError,\n        errors: errors\n      };\n    };\n\n    _this.validateEmail = function (email) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email));\n    };\n\n    _this.state = {\n      msg: '',\n      defaultError: {\n        email: false\n      },\n      isSuccess: null\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ForgotPasswordForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.forgotPasswordreset();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      console.log(\"recive\", props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = _objectSpread({}, this.state.defaultError);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login_p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"log_left forgot-l\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, !!!this.props.isSuccess ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, \"Recover My Password\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, \"Enter the email address associated\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 62\n        }\n      }), \" with your account\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"t-email ltbox \".concat(!!errors.email ? ' error' : ''),\n        type: \"text\",\n        ref: function ref(input) {\n          return _this2.email = input;\n        },\n        onChange: function onChange(e) {\n          return _this2.handleSubmit(e);\n        },\n        placeholder: \"Email address\"\n        /*defaultValue=\"admin\"*/\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }\n      }), this.props.isError ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 55\n        }\n      }, this.props.forgotPasswordData.message) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sbtn_pan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"sbtn\",\n        disabled: !!this.props.isProcessing && !!errors.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 31\n        }\n      }, !!this.props.isProcessing ? 'Processing....' : 'Recover My Password')))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"aftersend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, \"Recovery Link Sent!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, \"Click on the link sent to \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 54\n        }\n      }), \" your email to recover your password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sbtn_pan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"sbtn\",\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 28\n        }\n      }, \"Back to Login\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"log_right forgot-r\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/unlock.svg\",\n        alt: \"login_img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }\n      })));\n    }\n  }]);\n\n  return ForgotPasswordForm;\n}(Component);\n\nForgotPasswordForm.propTypes = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  forgotPasswordData: PT.object,\n  forgotPassword: PT.func\n};\nForgotPasswordForm.defaultProps = {\n  isFetching: false,\n  isProcessing: false,\n  isError: false,\n  isSuccess: false,\n  states: [],\n  forgotPassword: function forgotPassword() {}\n};\nexport default withRouter(ForgotPasswordForm);","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/forgotPassword.js"],"names":["React","Component","PropTypes","PT","withRouter","Link","ForgotPasswordForm","props","handleSubmit","e","preventDefault","email","value","data","validate","errors","type","forgotPassword","formData","state","defaultError","isError","validateEmail","console","log","setState","re","test","String","msg","isSuccess","bind","forgotPasswordreset","input","forgotPasswordData","message","isProcessing","propTypes","bool","object","func","defaultProps","isFetching","states"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {PropTypes as PT} from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nclass ForgotPasswordForm extends Component{\n   static propTypes = {\n\t\tisProcessing         :  PT.bool,\n\t\tisError              :  PT.bool,\n\t\tisSuccess            :  PT.bool,\n\t\tforgotPasswordData   :  PT.object,\n\t\tforgotPassword       :  PT.func\n\t}\n\n\tstatic defaultProps = {\n\t\tisFetching           :  false,\n\t\tisProcessing         :  false,\n\t\tisError              :  false,\n\t\tisSuccess            :  false,\n\t\tstates               :  [],\n\t\tforgotPassword       :  () => {}\n\t}\n\n   constructor(props){\n      super(props);\n      this.state          =   {\n         msg             :   '',\n         defaultError:{\n            email\t:\tfalse\n         },\n         isSuccess:null,\n      }\n      this.handleSubmit          =  this.handleSubmit.bind(this);\n   }\n    \n   handleSubmit = (e) => {\n      e.preventDefault();\n      const email         =   this.email.value;\n      const data          =   {\n                                 email:email\n                              }\n\n    let validate\t=\tthis.validate(data);\n   if(!validate.errors.email && e.type==\"submit\")\n      this.props.forgotPassword(data);\n   }\n\n\n   validate = (data) => {\n\t\tlet formData\t=\tdata || {};\n\t\tlet errors\t\t=\t{...this.state.defaultError};\n\t\tlet isError\t\t=\tfalse;\n\t\t\n\t\tif(!!!formData.email) {\n\t\t\terrors.email=\ttrue;\n\t\t\tisError\t\t\t\t=\ttrue;\n      }\n      else if(!this.validateEmail(formData.email)) {\n         errors.email=\ttrue;\n\t\t\tisError\t\t\t\t=\ttrue;\n      }\n      else {\n         errors.email=\tfalse;\n\t\t\tisError\t\t\t\t=\tfalse;\n      }\n\n      console.log(\"errors\",errors);\n      this.setState({\n         defaultError: errors\n      });\n\t\treturn {isError: isError, errors: errors};\n   }\n\n   validateEmail =(email) =>{\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email));\n  }\n  componentDidMount() {\n       this.props.forgotPasswordreset(); \n  }\n\n  componentWillReceiveProps(props) {\n         console.log(\"recive\",props);\n  }\n\n   render(){\n      let errors\t\t=\t{...this.state.defaultError};\n      return (\n         <div className=\"login_p\">\n           \n            <div className=\"log_left forgot-l\">               \n               {\n                     (!!!this.props.isSuccess) ?  \n                     <div>\n                        <h4>Recover My Password</h4>\n                        <p>Enter the email address associated<br /> with your account</p>\n                        <form onSubmit={this.handleSubmit}>\n                           <div className=\"input-group\">\n                              <input className={`t-email ltbox ${(!!errors.email) ? ' error' : ''}`} type=\"text\" ref={(input) => this.email = input} onChange={(e)=>this.handleSubmit(e)}  placeholder=\"Email address\" /*defaultValue=\"admin\"*/ />\n                              {(this.props.isError) ? <div className=\"invalid-msg\">{this.props.forgotPasswordData.message}</div> :\"\" }\n                           </div>\n                           <div className=\"sbtn_pan\">\n                              <button className=\"sbtn\" disabled={!!this.props.isProcessing && (!!errors.email)}>{(!!this.props.isProcessing) ? 'Processing....' : 'Recover My Password'}</button>\n                           </div>\n                        </form>\n                     </div> : \n                     <div className=\"aftersend\">\n                        <h4>Recovery Link Sent!</h4>\n                        <p>Click on the link sent to <br /> your email to recover your password</p>\n                        <div className=\"sbtn_pan\">\n                           <Link className=\"sbtn\" to='/login'>Back to Login</Link>\n                        </div>\n                     </div>\n               }\n            </div>\n            \n            <div className=\"log_right forgot-r\">\n               <img src=\"/assets/unlock.svg\" alt=\"login_img\" />\n            </div>\n         </div>               \n      )\n   }\n}\nexport default withRouter(ForgotPasswordForm);"]},"metadata":{},"sourceType":"module"}