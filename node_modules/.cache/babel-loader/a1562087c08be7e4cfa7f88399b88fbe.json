{"ast":null,"code":"import _toConsumableArray from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/Helper/pagination.js\";\nimport React, { Component } from 'react';\nimport { PropTypes as PT } from 'prop-types';\nimport Config from '../config';\n\nvar range = function range(from, to) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var i = from;\n  var range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nvar Pagination = /*#__PURE__*/function (_Component) {\n  _inherits(Pagination, _Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _super.call(this, props);\n\n    _this.gotoPage = function (page) {\n      var _this$props$onPageCha = _this.props.onPageChanged,\n          onPageChanged = _this$props$onPageCha === void 0 ? function (f) {\n        return f;\n      } : _this$props$onPageCha;\n      var currentPage = Math.max(0, Math.min(page, _this.state.totalPages));\n      var paginationData = {\n        currentPage: currentPage,\n        totalPages: _this.state.totalPages,\n        pageLimit: _this.state.pageLimit,\n        totalRecords: _this.state.totalRecords\n      };\n\n      _this.setState({\n        currentPage: currentPage\n      }, function () {\n        return onPageChanged(paginationData);\n      });\n\n      window.scrollTo(0, 0);\n    };\n\n    _this.handleClick = function (page) {\n      return function (evt) {\n        evt.preventDefault();\n\n        _this.gotoPage(page);\n      };\n    };\n\n    _this.handleMoveLeft = function (evt) {\n      evt.preventDefault();\n      if (_this.state.currentPage > 1) _this.gotoPage(_this.state.currentPage - 1);\n    };\n\n    _this.handleMoveRight = function (evt) {\n      evt.preventDefault();\n      if (_this.state.currentPage < _this.state.totalPages) _this.gotoPage(_this.state.currentPage + 1);\n    };\n\n    _this.fetchPageNumbers = function () {\n      var totalPages = _this.state.totalPages;\n      var currentPage = _this.state.currentPage;\n      var pageNeighbours = _this.state.pageNeighbours; //const totalNumbers      =   (this.state.pageNeighbours * 2) + 3;\n      //const totalBlocks       =   totalNumbers + 2;\n\n      if (totalPages > 4) {\n        var startPage = Math.max(1, currentPage - pageNeighbours);\n        var endPage = startPage + 4;\n\n        if (endPage > totalPages) {\n          startPage = totalPages - 4;\n          endPage = totalPages;\n        }\n\n        var pages = range(startPage, endPage);\n        return _toConsumableArray(pages);\n      } else {\n        var _pages = [];\n\n        for (var i = 1; i <= totalPages; i++) {\n          _pages.push(i);\n        }\n\n        return [].concat(_pages);\n      }\n    };\n\n    var _props$totalRecords = props.totalRecords,\n        totalRecords = _props$totalRecords === void 0 ? null : _props$totalRecords,\n        _props$pageLimit = props.pageLimit,\n        pageLimit = _props$pageLimit === void 0 ? Config.Pagination.itemsPerPage : _props$pageLimit,\n        _props$pageNeighbours = props.pageNeighbours,\n        _pageNeighbours = _props$pageNeighbours === void 0 ? 0 : _props$pageNeighbours,\n        _props$searchTag = props.searchTag,\n        searchTag = _props$searchTag === void 0 ? '' : _props$searchTag;\n\n    _this.pageLimit = typeof pageLimit === 'number' ? pageLimit : Config.Pagination.itemsPerPage;\n    _this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n    _this.pageNeighbours = typeof _pageNeighbours === 'number' ? Math.max(0, Math.min(_pageNeighbours, 2)) : 0;\n    _this.totalPages = Math.ceil(_this.totalRecords / _this.pageLimit);\n    _this.state = {\n      currentPage: 1,\n      pageLimit: _this.pageLimit,\n      totalRecords: _this.totalRecords,\n      pageNeighbours: _this.pageNeighbours,\n      totalPages: _this.totalPages,\n      searchTag: searchTag\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.gotoPage(1);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var totalPages = Math.ceil(nextProps.totalRecords / nextProps.pageLimit);\n\n      if (this.props !== nextProps) {\n        this.setState({\n          pageLimit: nextProps.pageLimit,\n          totalRecords: nextProps.totalRecords,\n          pageNeighbours: nextProps.pageNeighbours,\n          totalPages: totalPages\n        });\n\n        if (nextProps.totalRecords !== this.props.totalRecords) {\n          this.gotoPage(1);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log('Total Records : ', this.state.totalRecords, ' Total Pages : ', this.state.totalPages);\n      if (!this.state.totalRecords || this.state.totalPages === 1) return null;\n      var currentPage = this.state.currentPage;\n      var pages = this.fetchPageNumbers();\n      return !this.props.isProcessing ? /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pagination pull-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, this.state.totalPages > 5 ? /*#__PURE__*/React.createElement(\"li\", {\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        onClick: this.handleMoveLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"Prev\")) : null, pages.map(function (page, index) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          className: \"page-item\".concat(currentPage === page ? ' active' : ''),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"page-link\",\n          onClick: _this2.handleClick(page),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }\n        }, page));\n      }), this.state.totalPages > 5 ? /*#__PURE__*/React.createElement(\"li\", {\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        onClick: this.handleMoveRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, \"Next\")) : null) : null;\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\nPagination.propTypes = {\n  totalRecords: PT.number.isRequired,\n  pageLimit: PT.number,\n  pageNeighbours: PT.number,\n  onPageChanged: PT.func\n};\nexport default Pagination;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/Helper/pagination.js"],"names":["React","Component","PropTypes","PT","Config","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","state","totalPages","paginationData","pageLimit","totalRecords","setState","window","scrollTo","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","fetchPageNumbers","pageNeighbours","startPage","endPage","pages","itemsPerPage","searchTag","ceil","nextProps","isProcessing","map","index","propTypes","number","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAS,IAAIC,EAArB,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,KAAK,GAAa,eAACC,IAAD,EAAOC,EAAP,EAA4B;AAAA,MAAjBC,IAAiB,uEAAV,CAAU;AAChD,MAAIC,CAAC,GAAeH,IAApB;AACA,MAAMD,KAAK,GAAS,EAApB;;AAEA,SAAOI,CAAC,IAAIF,EAAZ,EAAgB;AACZF,IAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACAA,IAAAA,CAAC,IAAID,IAAL;AACH;;AACD,SAAOH,KAAP;AACH,CATD;;IAWMM,U;;;;;AAOF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAyCnBC,QAzCmB,GAyCR,UAAAC,IAAI,EAAI;AAAA,kCAC2B,MAAKF,KADhC,CACPG,aADO;AAAA,UACPA,aADO,sCACS,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OADV;AAEf,UAAMC,WAAW,GAAyBC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASN,IAAT,EAAe,MAAKO,KAAL,CAAWC,UAA1B,CAAZ,CAA1C;AAEA,UAAMC,cAAc,GAAG;AACnBN,QAAAA,WAAW,EAAXA,WADmB;AAEnBK,QAAAA,UAAU,EAAU,MAAKD,KAAL,CAAWC,UAFZ;AAGnBE,QAAAA,SAAS,EAAW,MAAKH,KAAL,CAAWG,SAHZ;AAInBC,QAAAA,YAAY,EAAQ,MAAKJ,KAAL,CAAWI;AAJZ,OAAvB;;AAMA,YAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAXA;AAAF,OAAd,EAA+B;AAAA,eAAMF,aAAa,CAACQ,cAAD,CAAnB;AAAA,OAA/B;;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,KArDkB;;AAAA,UAuDnBC,WAvDmB,GAuDL,UAAAf,IAAI;AAAA,aAAI,UAAAgB,GAAG,EAAI;AAC3BA,QAAAA,GAAG,CAACC,cAAJ;;AACA,cAAKlB,QAAL,CAAcC,IAAd;AACD,OAHiB;AAAA,KAvDC;;AAAA,UA4DnBkB,cA5DmB,GA4DF,UAAAF,GAAG,EAAI;AACtBA,MAAAA,GAAG,CAACC,cAAJ;AACA,UAAG,MAAKV,KAAL,CAAWJ,WAAX,GAAuB,CAA1B,EACE,MAAKJ,QAAL,CAAc,MAAKQ,KAAL,CAAWJ,WAAX,GAAyB,CAAvC;AACH,KAhEkB;;AAAA,UAkEnBgB,eAlEmB,GAkED,UAAAH,GAAG,EAAI;AACvBA,MAAAA,GAAG,CAACC,cAAJ;AACA,UAAG,MAAKV,KAAL,CAAWJ,WAAX,GAAuB,MAAKI,KAAL,CAAWC,UAArC,EACE,MAAKT,QAAL,CAAc,MAAKQ,KAAL,CAAWJ,WAAX,GAAyB,CAAvC;AACH,KAtEkB;;AAAA,UAwEnBiB,gBAxEmB,GAwEA,YAAM;AACrB,UAAMZ,UAAU,GAAY,MAAKD,KAAL,CAAWC,UAAvC;AACA,UAAML,WAAW,GAAW,MAAKI,KAAL,CAAWJ,WAAvC;AACA,UAAMkB,cAAc,GAAQ,MAAKd,KAAL,CAAWc,cAAvC,CAHqB,CAIrB;AACA;;AACA,UAAGb,UAAU,GAAC,CAAd,EAAgB;AACZ,YAAIc,SAAS,GAAelB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,WAAW,GAAGkB,cAA1B,CAA5B;AACA,YAAIE,OAAO,GAAiBD,SAAS,GAAC,CAAtC;;AACA,YAAGC,OAAO,GAACf,UAAX,EAAsB;AAClBc,UAAAA,SAAS,GAAed,UAAU,GAAC,CAAnC;AACAe,UAAAA,OAAO,GAAiBf,UAAxB;AACH;;AACD,YAAIgB,KAAK,GAAmBjC,KAAK,CAAC+B,SAAD,EAAYC,OAAZ,CAAjC;AACA,kCAAWC,KAAX;AACH,OATD,MASK;AACD,YAAIA,MAAK,GAAmB,EAA5B;;AACA,aAAI,IAAI7B,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEa,UAAhB,EAA4Bb,CAAC,EAA7B,EAAgC;AAC5B6B,UAAAA,MAAK,CAAC5B,IAAN,CAAWD,CAAX;AACH;;AACD,yBAAW6B,MAAX;AACH;AACJ,KA9FkB;;AAAA,8BAEiG1B,KAFjG,CAEPa,YAFO;AAAA,QAEPA,YAFO,oCAEQ,IAFR;AAAA,2BAEiGb,KAFjG,CAEcY,SAFd;AAAA,QAEcA,SAFd,iCAE0BpB,MAAM,CAACO,UAAP,CAAkB4B,YAF5C;AAAA,gCAEiG3B,KAFjG,CAE0DuB,cAF1D;AAAA,QAE0DA,eAF1D,sCAE2E,CAF3E;AAAA,2BAEiGvB,KAFjG,CAE8E4B,SAF9E;AAAA,QAE8EA,SAF9E,iCAE0F,EAF1F;;AAIf,UAAKhB,SAAL,GAA4B,OAAOA,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CpB,MAAM,CAACO,UAAP,CAAkB4B,YAA1F;AACA,UAAKd,YAAL,GAA4B,OAAOA,YAAP,KAAwB,QAAxB,GAAmCA,YAAnC,GAAkD,CAA9E;AACA,UAAKU,cAAL,GAA4B,OAAOA,eAAP,KAA0B,QAA1B,GACEjB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASe,eAAT,EAAyB,CAAzB,CAAZ,CADF,GAEE,CAF9B;AAIA,UAAKb,UAAL,GAA4BJ,IAAI,CAACuB,IAAL,CAAU,MAAKhB,YAAL,GAAoB,MAAKD,SAAnC,CAA5B;AACA,UAAKH,KAAL,GAA4B;AACxBJ,MAAAA,WAAW,EAAS,CADI;AAExBO,MAAAA,SAAS,EAAW,MAAKA,SAFD;AAGxBC,MAAAA,YAAY,EAAQ,MAAKA,YAHD;AAIxBU,MAAAA,cAAc,EAAM,MAAKA,cAJD;AAKxBb,MAAAA,UAAU,EAAU,MAAKA,UALD;AAMxBkB,MAAAA,SAAS,EAAWA;AANI,KAA5B;AAXe;AAmBlB;;;;wCAEmB;AAChB,WAAK3B,QAAL,CAAc,CAAd;AACH;;;8CAEyB6B,S,EAAW;AACjC,UAAIpB,UAAU,GAAaJ,IAAI,CAACuB,IAAL,CAAUC,SAAS,CAACjB,YAAV,GAAyBiB,SAAS,CAAClB,SAA7C,CAA3B;;AACA,UAAG,KAAKZ,KAAL,KAAe8B,SAAlB,EAA4B;AACxB,aAAKhB,QAAL,CAAc;AACVF,UAAAA,SAAS,EAAWkB,SAAS,CAAClB,SADpB;AAEVC,UAAAA,YAAY,EAAQiB,SAAS,CAACjB,YAFpB;AAGVU,UAAAA,cAAc,EAAMO,SAAS,CAACP,cAHpB;AAIVb,UAAAA,UAAU,EAAUA;AAJV,SAAd;;AAMA,YAAGoB,SAAS,CAACjB,YAAV,KAA2B,KAAKb,KAAL,CAAWa,YAAzC,EACA;AACI,eAAKZ,QAAL,CAAc,CAAd;AACH;AACJ;AACJ;;;6BAyDO;AAAA;;AACJ;AACA,UAAI,CAAC,KAAKQ,KAAL,CAAWI,YAAZ,IAA4B,KAAKJ,KAAL,CAAWC,UAAX,KAA0B,CAA1D,EAA6D,OAAO,IAAP;AAC7D,UAAML,WAAW,GAAe,KAAKI,KAAL,CAAWJ,WAA3C;AACA,UAAMqB,KAAK,GAAqB,KAAKJ,gBAAL,EAAhC;AACA,aACK,CAAC,KAAKtB,KAAL,CAAW+B,YAAb,gBACA;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKtB,KAAL,CAAWC,UAAX,GAAwB,CAAxB,gBACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKU,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADA,GAGM,IALd,EAQQM,KAAK,CAACM,GAAN,CAAU,UAAC9B,IAAD,EAAO+B,KAAP,EAAiB;AACvB,4BACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,SAAS,qBAAe5B,WAAW,KAAKH,IAAhB,GAAuB,SAAvB,GAAmC,EAAlD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAG,MAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmEA,IAAnE,CADJ,CADJ;AAKH,OAND,CARR,EAiBQ,KAAKO,KAAL,CAAWC,UAAX,GAAwB,CAAxB,gBACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKW,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADA,GAGM,IApBd,CADA,GAwBE,IAzBN;AA2BH;;;;EAvIoBhC,S;;AAAnBU,U,CACKmC,S,GAAY;AACfrB,EAAAA,YAAY,EAAQtB,EAAE,CAAC4C,MAAH,CAAUC,UADf;AAEfxB,EAAAA,SAAS,EAAWrB,EAAE,CAAC4C,MAFR;AAGfZ,EAAAA,cAAc,EAAMhC,EAAE,CAAC4C,MAHR;AAIfhC,EAAAA,aAAa,EAAOZ,EAAE,CAAC8C;AAJR,C;AAwIvB,eAAetC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport {PropTypes as PT} from 'prop-types';\nimport Config from '../config';\n\nconst range         =   (from, to, step = 1)    =>  {\n    let i           =   from;\n    const range     =   [];\n    \n    while (i <= to) {\n        range.push(i);\n        i += step;\n    }\n    return range;\n}\n\nclass Pagination extends Component {\n    static propTypes = {\n        totalRecords    :   PT.number.isRequired,\n        pageLimit       :   PT.number,\n        pageNeighbours  :   PT.number,\n        onPageChanged   :   PT.func\n    };\n    constructor(props) {\n        super(props);\n        const { totalRecords = null, pageLimit = Config.Pagination.itemsPerPage, pageNeighbours = 0, searchTag = '' } = props;\n    \n        this.pageLimit          =   typeof pageLimit === 'number' ? pageLimit : Config.Pagination.itemsPerPage;\n        this.totalRecords       =   typeof totalRecords === 'number' ? totalRecords : 0;\n        this.pageNeighbours     =   typeof pageNeighbours === 'number'\n                                    ? Math.max(0, Math.min(pageNeighbours, 2))\n                                    : 0;    \n                                   \n        this.totalPages         =   Math.ceil(this.totalRecords / this.pageLimit); \n        this.state              =   {\n            currentPage     :   1,\n            pageLimit       :   this.pageLimit,\n            totalRecords    :   this.totalRecords,\n            pageNeighbours  :   this.pageNeighbours,\n            totalPages      :   this.totalPages,\n            searchTag       :   searchTag\n        };\n    }\n\n    componentDidMount() {\n        this.gotoPage(1);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let totalPages         =   Math.ceil(nextProps.totalRecords / nextProps.pageLimit);\n        if(this.props !== nextProps){\n            this.setState({\n                pageLimit       :   nextProps.pageLimit,\n                totalRecords    :   nextProps.totalRecords,\n                pageNeighbours  :   nextProps.pageNeighbours,\n                totalPages      :   totalPages\n            })\n            if(nextProps.totalRecords !== this.props.totalRecords)\n            {\n                this.gotoPage(1);\n            }\n        }\n    }\n  \n    gotoPage = page => {\n        const { onPageChanged = f => f }      =   this.props;\n        const currentPage                     =   Math.max(0, Math.min(page, this.state.totalPages));\n        \n        const paginationData = {\n            currentPage,\n            totalPages      :   this.state.totalPages,\n            pageLimit       :   this.state.pageLimit,\n            totalRecords    :   this.state.totalRecords\n        };\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\n        window.scrollTo(0, 0);\n    }\n  \n    handleClick = page => evt => {\n      evt.preventDefault();\n      this.gotoPage(page);\n    }\n  \n    handleMoveLeft = evt => {\n      evt.preventDefault();\n      if(this.state.currentPage>1)\n        this.gotoPage(this.state.currentPage - 1);\n    }\n  \n    handleMoveRight = evt => {\n      evt.preventDefault();\n      if(this.state.currentPage<this.state.totalPages)\n        this.gotoPage(this.state.currentPage + 1);\n    }\n\n    fetchPageNumbers = () => {\n        const totalPages        =   this.state.totalPages;\n        const currentPage       =   this.state.currentPage;\n        const pageNeighbours    =   this.state.pageNeighbours;\n        //const totalNumbers      =   (this.state.pageNeighbours * 2) + 3;\n        //const totalBlocks       =   totalNumbers + 2;\n        if(totalPages>4){\n            let startPage           =   Math.max(1, currentPage - pageNeighbours);\n            let endPage             =   startPage+4;\n            if(endPage>totalPages){\n                startPage           =   totalPages-4;\n                endPage             =   totalPages;\n            }\n            let pages               =   range(startPage, endPage);\n            return [...pages];\n        }else{\n            let pages               =   [];\n            for(let i=1; i<=totalPages; i++){\n                pages.push(i);\n            }\n            return [...pages];\n        }\n    }\n\n    render(){\n        //console.log('Total Records : ', this.state.totalRecords, ' Total Pages : ', this.state.totalPages);\n        if (!this.state.totalRecords || this.state.totalPages === 1) return null;\n        const currentPage           =   this.state.currentPage;\n        const pages                 =   this.fetchPageNumbers();\n        return (\n            (!this.props.isProcessing) ?\n            <ul className=\"pagination pull-right\">\n                {\n                    this.state.totalPages > 5?\n                    <li className=\"page-item\">\n                        <button className=\"page-link\" onClick={this.handleMoveLeft}>Prev</button>\n                    </li>:null\n                }\n                {\n                    pages.map((page, index) => {\n                        return (\n                            <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                                <button className=\"page-link\" onClick={ this.handleClick(page) }>{ page }</button>\n                            </li>\n                        )\n                    })\n                }\n                {\n                    this.state.totalPages > 5?\n                    <li className=\"page-item\">\n                        <button className=\"page-link\" onClick={this.handleMoveRight}>Next</button>\n                    </li>:null\n                }\n            </ul>\n            : null\n        )\n    }  \n}\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}