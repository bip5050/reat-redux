{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Reports/report.js\";\nimport React from 'react';\nimport lodash from 'lodash';\nimport Filter from './filter';\nimport ReportGrid from './reportGrid';\nimport moment from 'moment-timezone';\nimport { isEqual, isEmpty } from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { PropTypes as PT } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nvar ReportComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReportComponent, _React$Component);\n\n  var _super = _createSuper(ReportComponent);\n\n  function ReportComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ReportComponent);\n\n    _this = _super.call(this, props);\n\n    _this.getReport = function (data, selFilterData) {\n      var filterData = _objectSpread({}, _this.state.filterData);\n\n      var searchData = _objectSpread(_objectSpread({}, data), {}, {\n        show_by: filterData.show_by\n      }); //console.log('!!!!!!!!!!!!', searchData);\n\n\n      _this.setState({\n        filterData: searchData\n      }, function () {\n        searchData.filter = {\n          key: 'reports',\n          value: JSON.stringify(selFilterData)\n        };\n\n        _this.props.getReport(searchData);\n      });\n    };\n\n    _this.getOrder = function (showBy) {\n      var filterData = _objectSpread({}, _this.state.filterData);\n\n      filterData.show_by = showBy;\n\n      _this.setState({\n        filterData: _objectSpread({}, filterData)\n      }, function () {\n        _this.props.getOrder(filterData);\n      }); //console.log('showBy : ', showBy);\n\n    };\n\n    _this.getLateOrders = function () {\n      var filterData = _objectSpread({}, _this.state.filterData);\n\n      delete filterData.show_by;\n      filterData.filter = _this.props.filterData.reports;\n      filterData.page = 1;\n      filterData.order_by = 'complete_after';\n      filterData.format = 'desc'; //console.log(filterData);\t\t\n\n      _this.props.getLateOrders(filterData);\n    };\n\n    _this.pageChangeLateOrders = function (srchData) {\n      var filterData = _objectSpread({}, _this.state.filterData);\n\n      delete filterData.show_by;\n      filterData.filter = _this.props.filterData.reports; //filterData.page\t\t\t=\t(!!page)? page : 1;\n\n      var data = _objectSpread(_objectSpread({}, filterData), srchData); //filterData.order_by\t\t=\t'time_diff';\n      //console.log(filterData);\t\t\n\n\n      _this.props.getLateOrders(data);\n    };\n\n    _this.sortLateOrders = function (sortBy) {\n      var filterData = _objectSpread({}, _this.state.filterData);\n\n      delete filterData.show_by;\n      filterData.filter = _this.props.filterData.reports; //console.log(this.props.unsortedLateOrders, this.props.lateOrder.count);\n\n      var data = {\n        searchData: _objectSpread(_objectSpread({}, filterData), sortBy),\n        unsortedLateOrders: _this.props.unsortedLateOrders,\n        count: _this.props.lateOrder.count\n      }; //console.log(filterData);\t\t\n\n      _this.props.sortLateOrders(data);\n    };\n\n    _this.state = {\n      type: 'general',\n\n      /* filterData: {\n      \ttype: 'date'\n      }, */\n      filterData: {\n        show_by: 'date'\n      },\n      endDate: moment().format('YYYY-MM-DD'),\n      startDate: moment().subtract(1, 'months').format('YYYY-MM-DD')\n    }; //this.handleTypeChange = this.handleTypeChange.bind(this);\n\n    return _this;\n  }\n\n  _createClass(ReportComponent, [{\n    key: \"componentWillReceiveProps\",\n\n    /* handleTypeChange(type, filterData) {\n    \tthis.setState({ type: type }, () => {\n    \t\tlet data = {...this.state.filterData};\n    \t\tdata.user_type = type;\n    \t\t//console.log(filterData);\n    \t\tthis.getReport(data, filterData);\n         \t});\n    }; */\n    value: function componentWillReceiveProps(props) {\n      /* if(!!props.userType) {\n      \tlet type       \t=\t(props.userType === 'admin') ? 'general' : props.userType;\n      \tlet filter\t\t=\tprops.filterData.reports || {};\n      \tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\n      \t\tthis.setState({\n      \t\t   type        :  filter.type\n      \t\t})\n      \t} else {\n      \t\t//clearFilter('history');\n      \t\tthis.setState({\n      \t\t\ttype: type\n      \t\t})\n      \t}\n      }; */\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getLocations();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate;\n      var userType = this.props.userType || {};\n      var locationData = this.props.locations || {};\n      var zones = locationData.zones || {};\n      var stores = locationData.stores || [];\n      var taskType = locationData.taskType || '';\n      var locations = locationData.locations || [];\n      var filterData = this.props.filterData.reports || {}; //console.log('PRops : ', this.props.isFilterLoaded, this.props.showReport);\n\n      return this.props.isFilterLoaded ? !!this.props.showReport && this.props.showReport === 'true' ? /*#__PURE__*/React.createElement(\"main\", {\n        className: \"dash right_sec statsp \".concat(userType !== 'admin' ? ' noAdmin' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }\n      }, !!filterData ? /*#__PURE__*/React.createElement(Filter //type={type}\n      , {\n        zones: zones,\n        stores: stores,\n        taskType: taskType,\n        locations: locations,\n        getReport: this.getReport,\n        handleTypeChange: this.handleTypeChange,\n        userType: this.props.userType,\n        filterData: filterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }) : null, !!!this.props.isLoading ? /*#__PURE__*/React.createElement(ReportGrid, {\n        startDate: startDate,\n        endDate: endDate,\n        reportData: this.props.reportData,\n        getOrder: this.getOrder,\n        showBy: this.state.filterData.show_by,\n        isOrderLoading: this.props.isOrderLoading,\n        isLateOrderLoading: this.props.isLateOrderLoading,\n        getLateOrders: this.getLateOrders,\n        lateOrder: this.props.lateOrder,\n        getTaskDetails: this.props.getTaskDetails,\n        taskDetails: this.props.taskDetails,\n        sortLateOrders: this.sortLateOrders,\n        pageChangeLateOrders: this.pageChangeLateOrders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }\n      }, \"Loading....\")) : /*#__PURE__*/React.createElement(\"main\", {\n        className: \"dash right_sec statsp deniedp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"aDenied\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 65\n        }\n      }, \"Access Denied\")) : /*#__PURE__*/React.createElement(\"main\", {\n        className: \"dash right_sec statsp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }\n      }, \"Loading....\"));\n    }\n  }]);\n\n  return ReportComponent;\n}(React.Component);\n\nReportComponent.propTypes = {\n  isLoading: PT.bool,\n  getReport: PT.func,\n  userType: PT.string,\n  getLocations: PT.func,\n  settingsData: PT.object\n};\nReportComponent.defaultProps = {\n  isLoading: false,\n  getReport: function getReport() {},\n  getLocations: function getLocations() {},\n  settingsData: function settingsData() {}\n};\n;\nexport default withRouter(ReportComponent);","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Reports/report.js"],"names":["React","lodash","Filter","ReportGrid","moment","isEqual","isEmpty","PropTypes","PT","withRouter","ReportComponent","props","getReport","data","selFilterData","filterData","state","searchData","show_by","setState","filter","key","value","JSON","stringify","getOrder","showBy","getLateOrders","reports","page","order_by","format","pageChangeLateOrders","srchData","sortLateOrders","sortBy","unsortedLateOrders","count","lateOrder","type","endDate","startDate","subtract","getLocations","userType","locationData","locations","zones","stores","taskType","isFilterLoaded","showReport","handleTypeChange","isLoading","reportData","isOrderLoading","isLateOrderLoading","getTaskDetails","taskDetails","Component","propTypes","bool","func","string","settingsData","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport lodash from 'lodash';\nimport Filter from './filter';\nimport ReportGrid from './reportGrid';\nimport moment from 'moment-timezone';\nimport { isEqual, isEmpty } from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { PropTypes as PT } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass ReportComponent extends React.Component {\n\tstatic propTypes = {\n\t\tisLoading: PT.bool,\n\t\tgetReport: PT.func,\n\t\tuserType: PT.string,\n\t\tgetLocations: PT.func,\n\t\tsettingsData: PT.object\n\t};\n\n\tstatic defaultProps = {\n\t\tisLoading: false,\n\t\tgetReport: () => { },\n\t\tgetLocations: () => { },\n\t\tsettingsData: () => { }\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\t\n\t\t\ttype:'general',\t\t\t\n\t \t \t/* filterData: {\n\t \t \t\ttype: 'date'\n\t\t\t  }, */\n\t\t\tfilterData: {show_by: 'date'},\n         \tendDate:  moment().format('YYYY-MM-DD'),\n\t\t\tstartDate:  moment().subtract(1, 'months').format('YYYY-MM-DD')\n\t\t};\n\n\t\t//this.handleTypeChange = this.handleTypeChange.bind(this);\n\t};\n\n\t/* handleTypeChange(type, filterData) {\n\t\tthis.setState({ type: type }, () => {\n\t\t\tlet data = {...this.state.filterData};\n\t\t\tdata.user_type = type;\n\t\t\t//console.log(filterData);\n\t\t\tthis.getReport(data, filterData);\n      \t});\n\t}; */\n\n\tcomponentWillReceiveProps(props) {\n\t\t/* if(!!props.userType) {\n\t\t\tlet type       \t=\t(props.userType === 'admin') ? 'general' : props.userType;\n\t\t\tlet filter\t\t=\tprops.filterData.reports || {};\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\n\t\t\t\tthis.setState({\n\t\t\t\t   type        :  filter.type\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t//clearFilter('history');\n\t\t\t\tthis.setState({\n\t\t\t\t\ttype: type\n\t\t\t\t})\n\t\t\t}\n\t\t}; */\n\t};\n\n\tcomponentDidMount(){\n\t\tthis.props.getLocations();\n\t};\n\n\t/* componentWillMount() {\n\t\tthis.props.getSettings();\n\t}; */\n\n\tgetReport = (data, selFilterData) => {\n\t\tlet filterData = {...this.state.filterData};\n\t\tlet searchData\t=\t{\n\t\t\t...data,\n\t\t\tshow_by: filterData.show_by\n\t\t};\n\t\t//console.log('!!!!!!!!!!!!', searchData);\n\n\t\tthis.setState({\n\t\t\tfilterData: searchData\n\t\t}, () => {\n\t\t\tsearchData.filter\t\t=\t{key: 'reports', value: JSON.stringify(selFilterData)};\n\t\t\tthis.props.getReport(searchData);\n\t\t});\n   \t};\n\t\n\tgetOrder = (showBy) => {\n\t\tlet filterData = {...this.state.filterData};\n\t\tfilterData.show_by = showBy;\n\t\tthis.setState({\n\t\t\tfilterData: {...filterData}\n\t\t}, () => {\n\t\t\tthis.props.getOrder(filterData);\n\t\t});\n\t\t//console.log('showBy : ', showBy);\n\t}\n\n\tgetLateOrders = () => {\n\t\tlet filterData = {...this.state.filterData};\n\t\tdelete filterData.show_by;\t\t\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\n\t\tfilterData.page\t\t\t=\t1;\n\t\tfilterData.order_by\t\t=\t'complete_after';\n\t\tfilterData.format\t\t=\t'desc';\n\t\t//console.log(filterData);\t\t\n\t\tthis.props.getLateOrders(filterData);\n\t}\n\n\tpageChangeLateOrders = (srchData) => {\n\t\tlet filterData = {...this.state.filterData};\n\t\tdelete filterData.show_by;\t\t\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\n\t\t//filterData.page\t\t\t=\t(!!page)? page : 1;\n\t\tlet data\t\t=\t{\n\t\t\t...filterData,\n\t\t\t...srchData\n\t\t}\n\t\t//filterData.order_by\t\t=\t'time_diff';\n\t\t//console.log(filterData);\t\t\n\t\tthis.props.getLateOrders(data);\n\t}\n\n\tsortLateOrders = (sortBy) => {\n\t\tlet filterData = {...this.state.filterData};\n\t\tdelete filterData.show_by;\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\n\t\t//console.log(this.props.unsortedLateOrders, this.props.lateOrder.count);\n\t\tlet data\t\t=\t{\n\t\t\tsearchData: {\n\t\t\t\t...filterData,\n\t\t\t\t...sortBy\n\t\t\t},\n\t\t\tunsortedLateOrders : this.props.unsortedLateOrders,\n\t\t\tcount : this.props.lateOrder.count\n\t\t}\n\t\t//console.log(filterData);\t\t\n\t\tthis.props.sortLateOrders(data);\n\t}\n\n\trender() {\n\t\tconst { startDate, endDate } = this.state;\n\t\tlet userType = this.props.userType || {};\n\t\tlet locationData = this.props.locations || {};\n\n\t\tlet zones = locationData.zones || {};\n\t\tlet stores = locationData.stores || [];\n\t\tlet taskType = locationData.taskType || '';\n\t\tlet locations = locationData.locations || [];\n\t\tlet filterData\t=\tthis.props.filterData.reports || {};\n\t\t//console.log('PRops : ', this.props.isFilterLoaded, this.props.showReport);\n\t\treturn (\n\t\t\t(this.props.isFilterLoaded)? \n\t\t\t\t(!!this.props.showReport && this.props.showReport === 'true')?\n\t\t\t\t<main className={`dash right_sec statsp ${(userType !== 'admin') ? ' noAdmin' : ''}`}>\n\t\t\t\t\t{\n\t\t\t\t\t\t(!!filterData) ?\n\t\t\t\t\t\t<Filter \n\t\t\t\t\t\t\t//type={type}\n\t\t\t\t\t\t\tzones={zones}\n\t\t\t\t\t\t\tstores={stores}\n\t\t\t\t\t\t\ttaskType={taskType}\n\t\t\t\t\t\t\tlocations={locations}\n\t\t\t\t\t\t\tgetReport={this.getReport}\n\t\t\t\t\t\t\thandleTypeChange={this.handleTypeChange} \n\t\t\t\t\t\t\tuserType={this.props.userType}\n\t\t\t\t\t\t\tfilterData={filterData}\n\t\t\t\t\t\t/> : null\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t(!!!this.props.isLoading)?\n\t\t\t\t\t\t<ReportGrid\n\t\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\t\tendDate={endDate}\n\t\t\t\t\t\t\treportData={this.props.reportData}\n\t\t\t\t\t\t\tgetOrder={this.getOrder}\n\t\t\t\t\t\t\tshowBy={this.state.filterData.show_by}\n\t\t\t\t\t\t\tisOrderLoading={this.props.isOrderLoading}\n\t\t\t\t\t\t\tisLateOrderLoading={this.props.isLateOrderLoading}\n\t\t\t\t\t\t\tgetLateOrders={this.getLateOrders}\n\t\t\t\t\t\t\tlateOrder={this.props.lateOrder}\n\t\t\t\t\t\t\tgetTaskDetails={this.props.getTaskDetails}\n\t\t\t\t\t\t\ttaskDetails={this.props.taskDetails}\n\t\t\t\t\t\t\tsortLateOrders={this.sortLateOrders}\n\t\t\t\t\t\t\tpageChangeLateOrders={this.pageChangeLateOrders}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<div className=\"loader\">Loading....</div>\n\t\t\t\t\t}\n\t\t\t\t</main> : <main className={`dash right_sec statsp deniedp`}><div className=\"aDenied\">Access Denied</div></main>\n\t\t\t: <main className={`dash right_sec statsp`}>\n\t\t\t\t<div className=\"loader\">Loading....</div>\n\t\t\t</main>\n\t\t);\n\t};\n};\n\nexport default withRouter(ReportComponent);"]},"metadata":{},"sourceType":"module"}