{"ast":null,"code":"import moment from 'moment-timezone';\nexport function formatDate(date) {\n  return moment(date).format('MM/DD/YYYY hh:mm:ss');\n}\nexport function getDateTime(timestamp, tz, format) {\n  return moment.tz(timestamp, tz).format(format);\n}\nexport function getSysDateTime(timestamp, format) {\n  return moment(timestamp).format(format);\n}\nexport function formatAmount() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return '$' + amount.toFixed(2);\n}\nexport function filterArrayByKey(searchTerm, key) {\n  var list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n  var results = [];\n\n  for (var i = 0; results.length < limit && i <= list.length; i++) {\n    var item = list[i];\n\n    try {\n      if (item) {\n        if (item[key].toLowerCase().startsWith(searchTerm.toLowerCase())) {\n          results.push(item);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return results;\n}\nexport function avgCustomerFeedback(rate) {\n  var dec = 0;\n  var whole = Math.floor(rate);\n  var fraction = rate - whole;\n\n  if (fraction < .25) {\n    dec = 0;\n  } else if (fraction >= .25 && fraction < .75) {\n    dec = .50;\n  } else if (fraction >= .75) {\n    dec = 1;\n  }\n\n  var r = whole + dec; //As we sometimes round up, we split again  \n\n  var newwhole = Math.floor(r);\n  fraction = r - newwhole;\n  return {\n    fraction: fraction,\n    newwhole: newwhole\n  };\n}\nexport function setFilter(pagename, filter) {\n  localStorage.setItem(pagename + '_filter', JSON.stringify(filter));\n}\nexport function getFilter(pagename) {\n  var filter = localStorage.getItem(pagename + '_filter') || '{}';\n  return JSON.parse(filter);\n}\nexport function clearFilter(pagename) {\n  var filter = localStorage.removeItem(pagename + '_filter');\n}\nexport var convertFloatTwoDecimal = function convertFloatTwoDecimal(num) {\n  return parseFloat(num).toFixed(2);\n};\nexport var convertTwoDecimalRound = function convertTwoDecimalRound(num) {\n  return +(Math.round(num + \"e+2\") + \"e-2\");\n};","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/Helper/common.js"],"names":["moment","formatDate","date","format","getDateTime","timestamp","tz","getSysDateTime","formatAmount","amount","toFixed","filterArrayByKey","searchTerm","key","list","limit","results","i","length","item","toLowerCase","startsWith","push","e","console","log","avgCustomerFeedback","rate","dec","whole","Math","floor","fraction","r","newwhole","setFilter","pagename","filter","localStorage","setItem","JSON","stringify","getFilter","getItem","parse","clearFilter","removeItem","convertFloatTwoDecimal","num","parseFloat","convertTwoDecimalRound","round"],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\nexport function formatDate(date){\n    return moment(date).format('MM/DD/YYYY hh:mm:ss');\n}\n\nexport function getDateTime(timestamp, tz, format) {\n    return moment.tz(timestamp, tz).format(format);\n}\n\t    \nexport function getSysDateTime(timestamp, format) {\n    return moment(timestamp).format(format);\n}\n\nexport function formatAmount(amount = 0){\n    return '$'+amount.toFixed(2)\n}\n\nexport function filterArrayByKey(searchTerm, key, list = [], limit = 10){\n    let results = [];\n    for(let i = 0; results.length < limit && i<=list.length; i ++) {\n      let item = list[i];\n      try{\n        if(item){\n            if(item[key].toLowerCase().startsWith(searchTerm.toLowerCase())) {\n                results.push(item)\n            }\n        }\n       }catch(e){\n          console.log(e);\n       }\n    }\n    return results;\n}\n\nexport function avgCustomerFeedback(rate){\n  let dec = 0;\n  let whole = Math.floor(rate);\n  let fraction = (rate - whole);\n\n  if(fraction < .25) {\n    dec=0;\n  } else if (fraction >= .25 && fraction < .75) {\n    dec=.50;\n  } else if (fraction >= .75) {\n    dec=1;\n  }\n\n  let r = (whole + dec);\n\n  //As we sometimes round up, we split again  \n  let newwhole = Math.floor(r);\n  fraction = (r - newwhole);   \n\n  return {\n    fraction: fraction,\n    newwhole: newwhole\n  };\n}\n\nexport function setFilter(pagename, filter) {\n  localStorage.setItem(pagename + '_filter', JSON.stringify(filter));\n}\n\nexport function getFilter(pagename) {\n  let filter    = localStorage.getItem(pagename + '_filter') || '{}';\n  return JSON.parse(filter);\n}\n\nexport function clearFilter(pagename) {\n  let filter    = localStorage.removeItem(pagename + '_filter');\n}\n\nexport const convertFloatTwoDecimal = function(num) {\n  return parseFloat(num).toFixed(2);\n}\n\nexport const convertTwoDecimalRound = function(num) {\n  return +(Math.round(num + \"e+2\") + \"e-2\");\n}"]},"metadata":{},"sourceType":"module"}