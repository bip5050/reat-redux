{"ast":null,"code":"import _defineProperty from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Feedbacks/replyModal.js\";\nimport moment from 'moment-timezone';\nimport { getCookie } from '../../util/cookies';\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Row, Col, Form, Button } from 'reactstrap';\nimport { getDeliveryWindow } from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nvar ReplyModal = /*#__PURE__*/function (_Component) {\n  _inherits(ReplyModal, _Component);\n\n  var _super = _createSuper(ReplyModal);\n\n  function ReplyModal(props) {\n    var _this;\n\n    _classCallCheck(this, ReplyModal);\n\n    _this = _super.call(this, props);\n    var email = _this.props.taskDetails && _this.props.taskDetails.email ? _this.props.taskDetails.email : \"\";\n    _this.state = {\n      fields: {\n        to: email,\n        message: ''\n      },\n      errors: {\n        to: '',\n        message: ''\n      },\n      replyModalShow: true\n    };\n    _this.handleReply = _this.handleReply.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleValidation = _this.handleValidation.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReplyModal, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var isError = false;\n      var fields = this.state.fields;\n      var errors = this.state.errors; //To\n\n      if (!!!fields.to) {\n        isError = true;\n        errors.to = 'Email is required.';\n      } else if (fields[\"to\"]) {\n        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\n        if (!reg.test(fields.to)) {\n          isError = true;\n          errors.to = 'Please enter a valid email address.';\n        }\n      }\n\n      ; //Message\n\n      if (!!!fields.message) {\n        isError = true;\n        errors.message = 'Message is required.';\n      }\n\n      ;\n      this.setState({\n        errors: errors\n      });\n      return isError;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      var fields = this.state.fields;\n      fields[name] = value;\n\n      var errors = _objectSpread({}, this.state.errors);\n\n      errors[name] = \"\";\n      this.setState({\n        fields: fields,\n        errors: errors\n      });\n    }\n  }, {\n    key: \"handleReply\",\n    value: function handleReply(e) {\n      e.preventDefault();\n      var isError = this.handleValidation();\n\n      if (isError) {\n        return false;\n        console.log(\"Form has errors.\", this.state.errors);\n      } else {\n        var replyeData = _objectSpread({}, this.state.fields);\n\n        var taskDetails = this.props.taskDetails || {};\n        var userData = getCookie('foodjets_merchant') || {};\n        replyeData['from'] = userData.org_email;\n        replyeData['last_name'] = taskDetails.cust_last_name;\n        replyeData['task_id'] = taskDetails.order_details.id;\n        replyeData['customer_message'] = taskDetails.comment;\n        replyeData['first_name'] = taskDetails.cust_first_name;\n        replyeData['order_number'] = taskDetails.tp_order_number;\n        replyeData[\"subject\"] = \"Raleys Response to Order Number: \" + taskDetails.tp_order_number;\n        replyeData['complete_after'] = moment.tz(parseInt(taskDetails.order_details.completeAfter) * 1000, taskDetails.order_details.time_zone).format('MM/DD/YYYY hh:mm a');\n        this.props.reply(replyeData);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        replyModalShow: props.replyModalShow\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var starObj = [];\n      var activeFormBtn = false;\n      var _this$state = this.state,\n          fields = _this$state.fields,\n          errors = _this$state.errors,\n          replyModalShow = _this$state.replyModalShow;\n      var taskDetails = this.props.taskDetails || {};\n      var rate = taskDetails && taskDetails.rating ? parseInt(taskDetails.rating) : 0;\n      var customerName = taskDetails.cust_first_name + ' ' + taskDetails.cust_last_name;\n\n      if (isEmpty(errors.to) && isEmpty(errors.message) && !isEmpty(fields.to) && !isEmpty(fields.message)) {\n        activeFormBtn = true;\n      }\n\n      ;\n\n      for (var i = 0; i < rate; i++) {\n        var key = \"star-sm-\" + i;\n        starObj.push( /*#__PURE__*/React.createElement(\"img\", {\n          key: key,\n          src: \"/assets/star-sm.svg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 26\n          }\n        }));\n      }\n\n      ;\n      return /*#__PURE__*/React.createElement(Modal, {\n        size: \"xl\",\n        className: \"c-modal boxmod repMod \",\n        show: replyModalShow,\n        onHide: this.props.handleCloseModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 18\n        }\n      }, \"Reply to Customer\")), /*#__PURE__*/React.createElement(Form, {\n        autoComplete: \"off\",\n        onSubmit: this.handleReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        className: \"l_col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"merchant_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }\n      }, \"Merchant\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }\n      }, \"Order Number\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Order Number\",\n        disabled: true,\n        style: {\n          background: 'none'\n        },\n        className: \"t_box\",\n        name: \"order_number\",\n        defaultValue: taskDetails.tp_order_number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"order-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }, \"Customer Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Customer Name\",\n        disabled: true,\n        style: {\n          background: 'none'\n        },\n        className: \"t_box\",\n        name: \"customer_name\",\n        defaultValue: customerName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"store\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 41\n        }\n      }, \"Date \\xB7 Time\"), getDeliveryWindow(taskDetails.order_details.completeAfter, taskDetails.order_details.completeBefore, taskDetails.order_details.time_zone)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"order-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }, \"Customer Rating\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"starwrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }, starObj))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"merchant_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 37\n        }\n      }, \"Comments\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, taskDetails.comment))), /*#__PURE__*/React.createElement(Col, {\n        md: \"6\",\n        sm: \"12\",\n        className: \"r_col task-d\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"merchant_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }\n      }, \"Email to Customer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"order-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }, \"To\"), /*#__PURE__*/React.createElement(\"input\", (_React$createElement = {\n        type: \"text\",\n        placeholder: \"Email\",\n        className: \"t_box\",\n        name: \"to\",\n        onChange: this.handleChange,\n        value: fields.to\n      }, _defineProperty(_React$createElement, \"className\", !!errors.to ? \"t_box error\" : \"t_box\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }), _React$createElement))), /*#__PURE__*/React.createElement(\"textarea\", {\n        name: \"message\",\n        placeholder: \"Message...\",\n        rows: \"4\",\n        onChange: this.handleChange.bind(this),\n        className: !!errors.message ? \"feedMsg error\" : \"feedMsg\",\n        defaultValue: fields.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: activeFormBtn ? \"active\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \" \", this.props.isReplying ? 'Processing..' : 'Submit'))));\n    }\n  }]);\n\n  return ReplyModal;\n}(Component);\n\n;\nexport default ReplyModal;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Feedbacks/replyModal.js"],"names":["moment","getCookie","React","Component","Modal","Row","Col","Form","Button","getDeliveryWindow","isEmpty","isEqual","map","_map","ReplyModal","props","email","taskDetails","state","fields","to","message","errors","replyModalShow","handleReply","bind","handleChange","handleValidation","isError","reg","test","setState","e","target","name","value","preventDefault","console","log","replyeData","userData","org_email","cust_last_name","order_details","id","comment","cust_first_name","tp_order_number","tz","parseInt","completeAfter","time_zone","format","reply","starObj","activeFormBtn","rate","rating","customerName","i","key","push","handleCloseModal","background","completeBefore","isReplying"],"mappings":"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","sourcesContent":["import moment from 'moment-timezone';\nimport {getCookie} from '../../util/cookies';\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Row, Col, Form, Button } from 'reactstrap';\nimport {getDeliveryWindow} from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nclass ReplyModal extends Component {\n \tconstructor(props) {\n        super(props);\n\n        let email = (this.props.taskDetails && this.props.taskDetails.email)?this.props.taskDetails.email:\"\";\n\n        this.state = {     \n            fields: {\n                to: email,\n                message: ''\n            },\n            errors: {\n                to: '',\n                message: ''\n            },   \t\n\t\t\treplyModalShow: true\n        }\n\n        this.handleReply = this.handleReply.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    };\n\n    handleValidation(){\n        let isError = false;\n        let fields = this.state.fields;\n        let errors = this.state.errors;\n\n        //To\n        if(!!!fields.to){\n            isError = true;\n            errors.to = 'Email is required.';\n        } else if(fields[\"to\"]) {\n            let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n            if(!reg.test(fields.to)) {\n                isError = true;\n                errors.to = 'Please enter a valid email address.';\n            }\n        };\n\n        //Message\n        if(!!!fields.message){\n            isError = true;\n            errors.message = 'Message is required.';\n        };\n\n       this.setState({ errors: errors });\n       return isError;\n    };\n\n    handleChange(e){    \n        const { name, value } = e.target\n        let fields = this.state.fields;\n        fields[name] = value; \n\n        let errors = {...this.state.errors};\n        errors[name] = \"\";\n               \n        this.setState({fields, errors: errors});\n    };\n\n    handleReply(e){\n        e.preventDefault();\n        let isError = this.handleValidation();\n\n        if(isError) {\n            return false;\n            console.log(\"Form has errors.\", this.state.errors);\n        } else {\n            let replyeData = {...this.state.fields};\n            let taskDetails = this.props.taskDetails || {};\n            let userData = getCookie('foodjets_merchant') || {};\n\n            replyeData['from'] = userData.org_email;\n            replyeData['last_name'] = taskDetails.cust_last_name;\n            replyeData['task_id'] = taskDetails.order_details.id;\n            replyeData['customer_message'] = taskDetails.comment;\n            replyeData['first_name'] = taskDetails.cust_first_name;\n            replyeData['order_number'] = taskDetails.tp_order_number;\n            replyeData[\"subject\"] = \"Raleys Response to Order Number: \"+taskDetails.tp_order_number;\n            replyeData['complete_after'] = moment.tz(parseInt(taskDetails.order_details.completeAfter) * 1000, taskDetails.order_details.time_zone).format('MM/DD/YYYY hh:mm a');\n            \n            this.props.reply(replyeData);\n        }\n    };\n\n\tcomponentWillReceiveProps(props) {\n        this.setState({ replyModalShow: props.replyModalShow });\n    }; \n\n\trender() {\n        let starObj = [];\n        let activeFormBtn = false;\n\t\tconst { fields, errors, replyModalShow } = this.state;\n        let taskDetails = this.props.taskDetails || {};\n        let rate = (taskDetails && taskDetails.rating)?parseInt(taskDetails.rating):0;\n        let customerName = taskDetails.cust_first_name+' '+taskDetails.cust_last_name;     \n\n        if(isEmpty(errors.to) && isEmpty(errors.message) && !isEmpty(fields.to) && !isEmpty(fields.message)){\n            activeFormBtn = true;\n        };\n        \n        for (let i = 0; i < rate; i++) {\n            let key = \"star-sm-\"+i;\n            starObj.push(<img key={key} src=\"/assets/star-sm.svg\" />);\n        };\n\n\t\treturn (\n\t\t\t<Modal size=\"xl\" className=\"c-modal boxmod repMod \" show={replyModalShow} onHide={this.props.handleCloseModal}>\n\t            <Modal.Header closeButton>\n\t                <Modal.Title>Reply to Customer</Modal.Title>\n\t            </Modal.Header>\n\n                <Form autoComplete=\"off\" onSubmit= {this.handleReply}>\n    \t\t\t\t<Modal.Body>\n                        <Row noGutters >\n                            <Col md=\"6\" sm=\"12\" className=\"l_col\">\n                                <div className=\"merchant_box\">\n                                    <h4>Merchant</h4>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"name\">Order Number</label>\n                                        <input type=\"text\" placeholder=\"Order Number\" disabled={true} style={{background: 'none'}} className=\"t_box\" name=\"order_number\" defaultValue={taskDetails.tp_order_number} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"order-number\">Customer Name</label>\n                                        <input type=\"text\" placeholder=\"Customer Name\" disabled={true} style={{background: 'none'}} className=\"t_box\" name=\"customer_name\" defaultValue={customerName}/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"store\">Date · Time</label>\n                                        {getDeliveryWindow(taskDetails.order_details.completeAfter, taskDetails.order_details.completeBefore, taskDetails.order_details.time_zone)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"order-number\">Customer Rating</label>\n                                        <span className=\"starwrap\">{starObj}</span>\n                                    </div>\n                                </div>\n                                <div className=\"merchant_box\">\n                                    <h4>Comments</h4>\n                                    <p>{taskDetails.comment}</p>\n                                </div>\n                            </Col>\n                            <Col md=\"6\" sm=\"12\" className=\"r_col task-d\">\n                                <div className=\"merchant_box\">  \n                                    <h4>Email to Customer</h4>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"order-number\">To</label>\n                                        <input type=\"text\" placeholder=\"Email\" className=\"t_box\" name=\"to\" onChange={this.handleChange} value={fields.to} className={!!errors.to  ? \"t_box error\" : \"t_box\" } />\n                                    </div>\n                                    <textarea name=\"message\" placeholder=\"Message...\" rows=\"4\" onChange={this.handleChange.bind(this)} className={!!errors.message  ? \"feedMsg error\" : \"feedMsg\" } defaultValue={fields.message}></textarea>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button type=\"submit\" variant=\"primary\" className={(activeFormBtn)? \"active\" : \"\" }> {(this.props.isReplying)? 'Processing..' : 'Submit'}</Button>\n    \t\t\t\t</Modal.Footer>\t\n                </Form>\n\t        </Modal>\n\t\t)\n\t};\n};\n\nexport default ReplyModal;"]},"metadata":{},"sourceType":"module"}