{"ast":null,"code":"import _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/TaskHistory/uncategorizedList.js\";\nimport React, { Component } from 'react';\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\nimport { getDateTime, getSysDateTime } from '../../Helper/common';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nvar UncategorizedList = /*#__PURE__*/function (_Component) {\n  _inherits(UncategorizedList, _Component);\n\n  var _super = _createSuper(UncategorizedList);\n\n  function UncategorizedList(props) {\n    _classCallCheck(this, UncategorizedList);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(UncategorizedList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var taskList = this.props.taskList || {};\n      return !this.props.isProcessing ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table_sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        colSpan: \"7\",\n        className: \"t-titel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, \"All Tasks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"t-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, \"Order Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, \"Delivery Window\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, \"Merchant Address\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, \"Recipient Address\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, \"Driver\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, \"Task Status\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      })), taskList.map(function (order, oIndex) {\n        var status = getTaskStatus(order.tskStatus);\n        var clsName = getStatusClass(status);\n        var merchant_address = \"\".concat(order.merchant.address.number, \" \").concat(order.merchant.address.street, \", \").concat(order.merchant.address.city);\n        var recipient_address = \"\".concat(order.recipients.address.number, \" \").concat(order.recipients.address.street, \", \").concat(order.recipients.address.city);\n        var completeafter = '';\n        var completebefore = '';\n\n        if (order.timezone !== '') {\n          completeafter = getDateTime(parseInt(order.completeAfter) * 1000, order.timezone, 'MM/DD · hh:mma');\n          completebefore = getDateTime(parseInt(order.completeBefore) * 1000, order.timezone, 'hh:mma');\n        } else {\n          completeafter = getSysDateTime(parseInt(order.completeAfter) * 1000, 'MM/DD · hh:mma');\n          completebefore = getSysDateTime(parseInt(order.completeBefore) * 1000, 'hh:mma');\n        }\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: oIndex,\n          onContextMenu: function onContextMenu(e) {\n            return _this.props.handleContextMenu(e, {\n              order_number: order.orderNumber,\n              order_id: order.id,\n              order_uuid: order.uuid,\n              tsk_status: order.tskStatus,\n              mrchnt_address: merchant_address,\n              recpnt_address: recipient_address\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 34\n          }\n        }, order.orderNumber), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 34\n          }\n        }, completeafter, \" - \", completebefore), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"acell\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 40\n          }\n        }, merchant_address), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tTip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }\n        }, merchant_address)), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"acell\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }\n        }, recipient_address), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tTip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 40\n          }\n        }, recipient_address)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 34\n          }\n        }, order.driver_name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: clsName,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 40\n          }\n        }, status)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 34\n          }\n        }, !!order.track_driver && status !== 'Completed' ? /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(e) {\n            return _this.props.openTrackWindow(e, {\n              current_url: order.current_url,\n              track_driver: order.track_driver\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 40\n          }\n        }, order.track_driver) : null));\n      })))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 12\n        }\n      }, \"Loading....\");\n    }\n  }]);\n\n  return UncategorizedList;\n}(Component);\n\nexport { UncategorizedList as default };","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/TaskHistory/uncategorizedList.js"],"names":["React","Component","getStatusClass","getTaskStatus","getDateTime","getSysDateTime","isEmpty","isEqual","map","_map","UncategorizedList","props","taskList","isProcessing","order","oIndex","status","tskStatus","clsName","merchant_address","merchant","address","number","street","city","recipient_address","recipients","completeafter","completebefore","timezone","parseInt","completeAfter","completeBefore","e","handleContextMenu","order_number","orderNumber","order_id","id","order_uuid","uuid","tsk_status","mrchnt_address","recpnt_address","driver_name","track_driver","openTrackWindow","current_url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\nimport { getDateTime, getSysDateTime } from '../../Helper/common';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nexport default class UncategorizedList extends Component {\n   constructor(props) {\n      super(props);\n   }\n\n   render() {\n      let taskList                  =  this.props.taskList || {};\n      return (\n         (!this.props.isProcessing) ? \n         <div className=\"table_sec\">\n               <table>\n                  <thead>\n                     <tr>\n                        <th colSpan=\"7\" className=\"t-titel\">All Tasks</th>\n                     </tr>\n                  </thead>\n                  <tbody>\n                     <tr className=\"t-heading\">\n                        <th>Order Number</th>\n                        <th>Delivery Window</th>\n                        <th>Merchant Address</th>\n                        <th>Recipient Address</th>\n                        <th>Driver</th>\n                        <th>Task Status</th>\n                        <th></th>\n                     </tr>\n                     {\n                        taskList.map((order, oIndex) => {\n                           let status              =  getTaskStatus(order.tskStatus);\n                           let clsName             =  getStatusClass(status);\n                           let merchant_address    =  `${order.merchant.address.number} ${order.merchant.address.street}, ${order.merchant.address.city}`;\n                           let recipient_address   =  `${order.recipients.address.number} ${order.recipients.address.street}, ${order.recipients.address.city}`;\n                           let completeafter       =  '';\n                           let completebefore      =  '';\n                           if(order.timezone !== '') {\n                              completeafter = getDateTime(parseInt(order.completeAfter) * 1000, order.timezone, 'MM/DD · hh:mma');\n                              completebefore = getDateTime(parseInt(order.completeBefore) * 1000, order.timezone, 'hh:mma');\n                           } else {\n                              completeafter = getSysDateTime(parseInt(order.completeAfter) * 1000, 'MM/DD · hh:mma');\n                              completebefore = getSysDateTime(parseInt(order.completeBefore) * 1000, 'hh:mma');\n                           }\n                           return (\n                           <tr\n                              key={oIndex}\n                              onContextMenu={(e) => this.props.handleContextMenu(e, {\n                                    order_number: order.orderNumber,\n                                    order_id: order.id,\n                                    order_uuid: order.uuid,\n                                    tsk_status:order.tskStatus,\n                                    mrchnt_address: merchant_address,\n                                    recpnt_address: recipient_address\n                              })}>\n                                 <td>{order.orderNumber}</td>\n                                 <td>{completeafter} - {completebefore}</td>\n                                 <td className=\"acell\">\n                                       <label>{merchant_address}</label>\n                                       <span className=\"tTip\">{merchant_address}</span>\n                                 </td>\n                                 <td className=\"acell\">\n                                       <label>{recipient_address}</label>\n                                       <span className=\"tTip\">{recipient_address}</span>\n                                 </td>\n                                 <td>{order.driver_name}</td>\n                                 <td>\n                                       <span className={clsName}>{status}</span>\n                                 </td>\n                                 <td>\n                                    {\n                                       (!!order.track_driver && status !== 'Completed') ? \n                                       <a onClick={(e)  => this.props.openTrackWindow(e, {\n                                             current_url: order.current_url,\n                                             track_driver: order.track_driver\n                                       })}>{order.track_driver}</a> : null\n                                    }\n                                 </td>\n                              </tr>\n                           )\n                        })\n                     }\n                  </tbody>\n               </table>\n            </div>\n         : <div className=\"loader\">Loading....</div>\n      )\n   }\n}"]},"metadata":{},"sourceType":"module"}