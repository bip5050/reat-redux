{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { PropTypes as PT } from 'prop-types';\nimport * as actions from './actions';\nimport ForgotPasswordForm from './forgotPassword';\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var isProcessing = _ref.isProcessing,\n      isError = _ref.isError,\n      isSuccess = _ref.isSuccess,\n      forgotPassword = _ref.forgotPassword,\n      forgotPasswordData = _ref.forgotPasswordData,\n      forgotPasswordreset = _ref.forgotPasswordreset;\n  return /*#__PURE__*/React.createElement(ForgotPasswordForm, {\n    isProcessing: isProcessing,\n    isError: isError,\n    isSuccess: isSuccess,\n    forgotPassword: forgotPassword,\n    forgotPasswordData: forgotPasswordData,\n    forgotPasswordreset: forgotPasswordreset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  });\n};\n\nForgotPassword.propTypes = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  forgotPassword: PT.func,\n  forgotPasswordreset: PT.func,\n  forgotPasswordData: PT.object\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var forgotPasswordReducer = _ref2.forgotPasswordReducer;\n  return {\n    isProcessing: forgotPasswordReducer.isProcessing,\n    isError: forgotPasswordReducer.isError,\n    isSuccess: forgotPasswordReducer.isSuccess,\n    forgotPasswordData: forgotPasswordReducer.forgotPasswordData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    forgotPassword: function forgotPassword(data) {\n      return dispatch(actions.forgotPassword(data));\n    },\n    forgotPasswordreset: function forgotPasswordreset() {\n      return dispatch(actions.forgotPasswordreset());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ForgotPassword));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/index.js"],"names":["React","connect","withRouter","PropTypes","PT","actions","ForgotPasswordForm","ForgotPassword","isProcessing","isError","isSuccess","forgotPassword","forgotPasswordData","forgotPasswordreset","propTypes","bool","func","object","mapStateToProps","forgotPasswordReducer","mapDispatchToProps","dispatch","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,SAAS,IAAIC,EAArB,QAA8B,YAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOf;AAAA,MANcC,YAMd,QANcA,YAMd;AAAA,MALcC,OAKd,QALcA,OAKd;AAAA,MAJcC,SAId,QAJcA,SAId;AAAA,MAHcC,cAGd,QAHcA,cAGd;AAAA,MAFcC,kBAEd,QAFcA,kBAEd;AAAA,MADcC,mBACd,QADcA,mBACd;AACJ,sBACE,oBAAC,kBAAD;AACE,IAAA,YAAY,EAAEL,YADhB;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,cAAc,EAAEC,cAJlB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,mBAAmB,EAAGC,mBANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUF,CAlBF;;AAoBCN,cAAc,CAACO,SAAf,GAA6B;AAC5BN,EAAAA,YAAY,EAAEJ,EAAE,CAACW,IADW;AAE5BN,EAAAA,OAAO,EAAEL,EAAE,CAACW,IAFgB;AAG5BL,EAAAA,SAAS,EAAEN,EAAE,CAACW,IAHc;AAI5BJ,EAAAA,cAAc,EAACP,EAAE,CAACY,IAJU;AAK5BH,EAAAA,mBAAmB,EAACT,EAAE,CAACY,IALK;AAM5BJ,EAAAA,kBAAkB,EAACR,EAAE,CAACa;AANM,CAA7B;;AASA,IAAOC,eAAe,GAAK,SAApBA,eAAoB,QAA6B;AAAA,MAA3BC,qBAA2B,SAA3BA,qBAA2B;AACtD,SAAQ;AACLX,IAAAA,YAAY,EAAEW,qBAAqB,CAACX,YAD/B;AAELC,IAAAA,OAAO,EAAEU,qBAAqB,CAACV,OAF1B;AAGLC,IAAAA,SAAS,EAAES,qBAAqB,CAACT,SAH5B;AAILE,IAAAA,kBAAkB,EAAEO,qBAAqB,CAACP;AAJrC,GAAR;AAMA,CAPF;;AAUD,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCV,IAAAA,cAAc,EAAE,wBAACW,IAAD;AAAA,aAAUD,QAAQ,CAAChB,OAAO,CAACM,cAAR,CAAuBW,IAAvB,CAAD,CAAlB;AAAA,KADsB;AAEtCT,IAAAA,mBAAmB,EAAE;AAAA,aAAMQ,QAAQ,CAAChB,OAAO,CAACQ,mBAAR,EAAD,CAAd;AAAA;AAFiB,GAAL;AAAA,CAAnC;;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,UAAU,CAACK,cAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {PropTypes as PT} from 'prop-types';\nimport * as actions from './actions';\nimport ForgotPasswordForm from './forgotPassword';\n\nconst ForgotPassword = ({\n                      isProcessing,\n                      isError,\n                      isSuccess,\n                      forgotPassword,\n                      forgotPasswordData,\n                      forgotPasswordreset\n  }) => {\n    return (\n      <ForgotPasswordForm\n        isProcessing={isProcessing}\n        isError={isError}\n        isSuccess={isSuccess}\n        forgotPassword={forgotPassword}\n        forgotPasswordData={forgotPasswordData}\n        forgotPasswordreset ={forgotPasswordreset}\n      />\n    )\n };\n\n ForgotPassword.propTypes   = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  forgotPassword:PT.func,\n  forgotPasswordreset:PT.func,\n  forgotPasswordData:PT.object\n }\n\n const  mapStateToProps   = ({forgotPasswordReducer}) => {\n   return ({\n      isProcessing: forgotPasswordReducer.isProcessing,\n      isError: forgotPasswordReducer.isError,\n      isSuccess: forgotPasswordReducer.isSuccess,\n      forgotPasswordData: forgotPasswordReducer.forgotPasswordData\n    })\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  forgotPassword: (data) => dispatch(actions.forgotPassword(data)),\n  forgotPasswordreset: () => dispatch(actions.forgotPasswordreset())\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ForgotPassword));"]},"metadata":{},"sourceType":"module"}