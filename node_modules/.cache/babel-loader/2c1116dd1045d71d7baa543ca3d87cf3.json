{"ast":null,"code":"import _regeneratorRuntime from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getReport),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getOrder),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(getLateOrders),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(sortLateOrders),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchReportStore);\n\nimport * as reportAction from '../actions';\nimport * as headerAction from '../../Header/actions';\nimport * as reportConstant from '../constants';\nimport { callApiV2 } from '../../../Helper/api';\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\nimport { error as notifyerror, success as notifysuccess } from '../../../util/notify';\nimport { convertTwoDecimalRound, getDateTime, getSysDateTime, formatDate } from '../../../Helper/common';\nimport moment from 'moment-timezone';\nimport * as _ from 'lodash'; //Get Reports\n\nexport function getReport(action) {\n  var data, statsData, reportData, res, rerun, orders, statsTotal, rerunData, reportTotal;\n  return _regeneratorRuntime.wrap(function getReport$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          data = _objectSpread({}, action.data);\n          delete data.show_by;\n          statsData = _objectSpread({}, data);\n          delete data.filter;\n          delete action.data.filter;\n          reportData = _objectSpread({}, action.data);\n\n          if (reportData.show_by === 'month') {\n            reportData.start = moment().subtract(12, 'months').format('YYYY-MM-DD');\n            reportData.end = moment().format('YYYY-MM-DD');\n          }\n\n          _context.next = 10;\n          return put(headerAction.syncFilter({\n            key: statsData.filter.key,\n            value: JSON.parse(statsData.filter.value)\n          }));\n\n        case 10:\n          _context.next = 12;\n          return all([call(callApiV2, 'POST', 'reports/rerun', data), call(callApiV2, 'POST', 'reports/orders', reportData), call(callApiV2, 'POST', 'reports/stats-total', statsData)]);\n\n        case 12:\n          res = _context.sent;\n\n          if (!res) {\n            _context.next = 35;\n            break;\n          }\n\n          rerun = res[0];\n          orders = res[1];\n          statsTotal = res[2]; // check for error    \n\n          if (!(rerun.data.error || rerun.data.error || rerun.data.error)) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 20;\n          return put(reportAction.listenGetReportError());\n\n        case 20:\n          ;\n\n          if (!rerun.data.result) {\n            _context.next = 32;\n            break;\n          }\n\n          rerunData = rerun.data.result;\n          rerunData.chng_rerun_total_percent = convertTwoDecimalRound(rerunData.chng_rerun_total_percent);\n          reportTotal = statsTotal.data.result;\n          reportTotal.chng_shopping_late_percent = convertTwoDecimalRound(reportTotal.chng_shopping_late_percent);\n          reportTotal.chng_tot_orders_percent = convertTwoDecimalRound(reportTotal.chng_tot_orders_percent);\n          reportTotal.late_percentage = convertTwoDecimalRound(reportTotal.late_percentage);\n          reportTotal.on_time_percentage = convertTwoDecimalRound(reportTotal.on_time_percentage);\n          reportTotal.shopping_late_percent = convertTwoDecimalRound(reportTotal.shopping_late_percent); //console.log(rerunData, reportTotal);\n\n          _context.next = 32;\n          return put(reportAction.listenGetReportSuccess({\n            rerunData: rerunData,\n            ordersData: orders.data.result,\n            reportTotal: reportTotal\n          }));\n\n        case 32:\n          ;\n          _context.next = 36;\n          break;\n\n        case 35:\n          notifyerror({\n            message: \"Some error occured.\"\n          });\n\n        case 36:\n          _context.next = 42;\n          break;\n\n        case 38:\n          _context.prev = 38;\n          _context.t0 = _context[\"catch\"](0);\n          notifyerror(_context.t0);\n          console.log(_context.t0.message);\n\n        case 42:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 38]]);\n}\n; //Get Daily/Store/Monthly Orders\n\nexport function getOrder(action) {\n  var data, payload;\n  return _regeneratorRuntime.wrap(function getOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          data = _objectSpread({}, action.data);\n\n          if (data.show_by === 'month') {\n            data.start = moment().subtract(12, 'months').format('YYYY-MM-DD');\n            data.end = moment().format('YYYY-MM-DD');\n          }\n\n          _context2.prev = 2;\n          _context2.next = 5;\n          return call(callApiV2, 'POST', 'reports/orders', data);\n\n        case 5:\n          payload = _context2.sent;\n\n          if (!payload.data.error) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 9;\n          return put(reportAction.listenGetOrderError());\n\n        case 9:\n          ;\n\n          if (!payload.data.result) {\n            _context2.next = 13;\n            break;\n          }\n\n          _context2.next = 13;\n          return put(reportAction.listenGetOrderSuccess(payload.data.result));\n\n        case 13:\n          ;\n          _context2.next = 20;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](2);\n          notifyerror(_context2.t0);\n          console.log(_context2.t0.message);\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 16]]);\n}\n; //Get Late Orders\n\nexport function getLateOrders(action) {\n  var data, payload, response, sortData;\n  return _regeneratorRuntime.wrap(function getLateOrders$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          data = _objectSpread({}, action.data);\n          delete data.filter;\n          data.order_by = 'complete_after'; //console.log(data);\n          //delete data.format;\n\n          _context3.next = 6;\n          return call(callApiV2, 'POST', \"reports/late-orders\", data);\n\n        case 6:\n          payload = _context3.sent;\n\n          if (!payload.data.error) {\n            _context3.next = 10;\n            break;\n          }\n\n          _context3.next = 10;\n          return put(reportAction.listenLateOrders());\n\n        case 10:\n          ;\n\n          if (!payload.data.result) {\n            _context3.next = 16;\n            break;\n          }\n\n          //console.log(payload.data.result);\n          //console.log('Length : ', result.tasks.length);\n          response = payload.data.result || {}; //sortLateOrders(response, action, order_by, order, filterState, filterArea, filterStore, data);\n\n          sortData = {\n            unsortedLateOrders: response.data,\n            count: response.count,\n            searchData: action.data\n          };\n          _context3.next = 16;\n          return put(reportAction.sortLateOrders(sortData));\n\n        case 16:\n          ;\n          _context3.next = 23;\n          break;\n\n        case 19:\n          _context3.prev = 19;\n          _context3.t0 = _context3[\"catch\"](0);\n          notifyerror(_context3.t0);\n          console.log(_context3.t0.message);\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 19]]);\n}\n;\n\nfunction sortLateOrders(action) {\n  var data, filter, filterState, filterArea, filterStore, order_by, order, result, tasks, count, listType, temp, _temp;\n\n  return _regeneratorRuntime.wrap(function sortLateOrders$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          data = action.data.searchData; //console.log('Action Data : ', data);\n\n          filter = data.filter || {};\n          filterState = filter.filterKeys.State || [];\n          filterArea = filter.filterKeys.Area || [];\n          filterStore = filter.filterKeys.Store || [];\n          order_by = data.order_by || 'complete_after';\n          order = data.format || 'asc';\n          result = action.data.unsortedLateOrders;\n          tasks = {};\n          count = action.data.count || 0;\n          listType = '';\n\n          if (data.type === 'store') {\n            listType = 'Zonewise';\n\n            if (result.length > 0) {\n              result.map(function (val, key) {\n                //count++;\n                if (!!!tasks[val.state_code]) {\n                  tasks[val.state_code] = {};\n                  tasks[val.state_code][val.store_id] = {\n                    name: val.store,\n                    id: val.store_id,\n                    orders: [],\n                    a: 0,\n                    b: 0,\n                    c: 0,\n                    d: 0,\n                    total: 0\n                  };\n                } else {\n                  if (!!!tasks[val.state_code][val.store_id]) {\n                    tasks[val.state_code][val.store_id] = {\n                      name: val.store,\n                      id: val.store_id,\n                      orders: [],\n                      a: 0,\n                      b: 0,\n                      c: 0,\n                      d: 0,\n                      total: 0\n                    };\n                  }\n                }\n\n                tasks[val.state_code][val.store_id].total++;\n                var lateClass = '';\n\n                if (val.time_diff >= 0 && val.time_diff <= 20) {\n                  lateClass = 'ready';\n                  tasks[val.state_code][val.store_id].b++;\n                } else if (val.time_diff > 20 && val.time_diff <= 30) {\n                  lateClass = 'shopping';\n                  tasks[val.state_code][val.store_id].c++;\n                } else if (val.time_diff > 30) {\n                  lateClass = 'not_ready';\n                  tasks[val.state_code][val.store_id].d++;\n                } else {\n                  tasks[val.state_code][val.store_id].a++;\n                }\n\n                tasks[val.state_code][val.store_id].orders.push({\n                  timestamp: moment(val.created_at).format('X'),\n                  created_at: formatDate(val.created_at),\n                  cust_name: val.cust_name.toLowerCase(),\n                  customer_name: val.cust_name,\n                  order_number: val.order_number,\n                  store: val.store,\n                  store_id: val.store_id,\n                  complete_before: formatDate(val.complete_before),\n                  complete_after: formatDate(val.complete_after),\n                  delivery_time: formatDate(val.delivery_time),\n                  driver_wait: val.driver_wait,\n                  recpnt_task_start_time: formatDate(val.recpnt_task_start_time),\n                  lateClass: lateClass,\n                  time_diff: val.time_diff,\n                  uuid: val.uuid\n                });\n              });\n            }\n\n            temp = {};\n\n            _.each(tasks, function (val, key) {\n              _.each(val, function (vz, kz) {\n                tasks[key][kz].orders = _.orderBy(tasks[key][kz].orders, [function (o) {\n                  return o[order_by];\n                }], [order]);\n              });\n\n              temp[key] = _.sortBy(tasks[key], function (o) {\n                return o.store;\n              });\n            });\n\n            tasks = temp;\n          } else if (data.type === 'place') {\n            if (filterState.length > 0 && filterArea.length === 0) {\n              listType = 'Statewise';\n\n              if (result.length > 0) {\n                result.map(function (val, key) {\n                  //count++;\n                  if (!!!tasks[val.state_code]) {\n                    tasks[val.state_code] = {\n                      name: val.state_code,\n                      orders: [],\n                      a: 0,\n                      b: 0,\n                      c: 0,\n                      d: 0,\n                      total: 0\n                    };\n                  }\n\n                  tasks[val.state_code].total++;\n                  var lateClass = '';\n\n                  if (val.time_diff >= 0 && val.time_diff <= 20) {\n                    lateClass = 'ready';\n                    tasks[val.state_code].b++;\n                  } else if (val.time_diff > 20 && val.time_diff <= 30) {\n                    lateClass = 'shopping';\n                    tasks[val.state_code].c++;\n                  } else if (val.time_diff > 30) {\n                    lateClass = 'not_ready';\n                    tasks[val.state_code].d++;\n                  } else {\n                    tasks[val.state_code].a++;\n                  } //console.log(tasks[val.state_code]);\n\n\n                  tasks[val.state_code].orders.push({\n                    timestamp: moment(val.created_at).format('X'),\n                    created_at: formatDate(val.created_at),\n                    cust_name: val.cust_name.toLowerCase(),\n                    customer_name: val.cust_name,\n                    order_number: val.order_number,\n                    store: val.store,\n                    store_id: val.store_id,\n                    complete_before: formatDate(val.complete_before),\n                    complete_after: formatDate(val.complete_after),\n                    delivery_time: formatDate(val.delivery_time),\n                    driver_wait: val.driver_wait,\n                    recpnt_task_start_time: formatDate(val.recpnt_task_start_time),\n                    lateClass: lateClass,\n                    time_diff: val.time_diff,\n                    uuid: val.uuid\n                  });\n                });\n              }\n\n              _.each(tasks, function (val, key) {\n                tasks[key].orders = _.orderBy(tasks[key].orders, [function (o) {\n                  return o[order_by];\n                }], [order]);\n              });\n            } else if (filterArea.length > 0) {\n              listType = 'Zonewise';\n\n              if (result.length > 0) {\n                result.map(function (val, key) {\n                  //count++;\n                  if (!!!tasks[val.state_code]) {\n                    tasks[val.state_code] = {};\n                    tasks[val.state_code][val.zone_id] = {\n                      name: val.zone_name,\n                      id: val.zone_id,\n                      orders: [],\n                      a: 0,\n                      b: 0,\n                      c: 0,\n                      d: 0,\n                      total: 0\n                    };\n                  } else {\n                    if (!!!tasks[val.state_code][val.zone_id]) {\n                      tasks[val.state_code][val.zone_id] = {\n                        name: val.zone_name,\n                        id: val.zone_id,\n                        orders: [],\n                        a: 0,\n                        b: 0,\n                        c: 0,\n                        d: 0,\n                        total: 0\n                      };\n                    }\n                  }\n\n                  var lateClass = '';\n                  tasks[val.state_code][val.zone_id].total++;\n\n                  if (val.time_diff >= 0 && val.time_diff <= 20) {\n                    tasks[val.state_code][val.zone_id].b++;\n                    lateClass = 'ready';\n                  } else if (val.time_diff > 20 && val.time_diff <= 30) {\n                    tasks[val.state_code][val.zone_id].c++;\n                    lateClass = 'shopping';\n                  } else if (val.time_diff > 30) {\n                    tasks[val.state_code][val.zone_id].d++;\n                    lateClass = 'not_ready';\n                  } else {\n                    tasks[val.state_code][val.zone_id].a++;\n                  }\n\n                  tasks[val.state_code][val.zone_id].orders.push({\n                    timestamp: moment(val.created_at).format('X'),\n                    created_at: formatDate(val.created_at),\n                    cust_name: val.cust_name.toLowerCase(),\n                    customer_name: val.cust_name,\n                    order_number: val.order_number,\n                    store: val.store,\n                    store_id: val.store_id,\n                    complete_before: formatDate(val.complete_before),\n                    complete_after: formatDate(val.complete_after),\n                    delivery_time: formatDate(val.delivery_time),\n                    driver_wait: val.driver_wait,\n                    recpnt_task_start_time: formatDate(val.recpnt_task_start_time),\n                    lateClass: lateClass,\n                    time_diff: val.time_diff,\n                    uuid: val.uuid\n                  });\n                });\n              }\n\n              _temp = {};\n\n              _.each(tasks, function (val, key) {\n                _.each(val, function (vz, kz) {\n                  //tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\n                  tasks[key][kz].orders = _.orderBy(tasks[key][kz].orders, [function (o) {\n                    return o[order_by];\n                  }], [order]);\n                });\n\n                _temp[key] = _.sortBy(tasks[key], function (o) {\n                  return o.zone_name;\n                });\n              });\n\n              tasks = _temp;\n            }\n          } else {\n            tasks = {\n              a: 0,\n              b: 0,\n              c: 0,\n              d: 0,\n              total: 0,\n              orders: []\n            };\n            listType = 'Uncategorized';\n            result.map(function (val, key) {\n              //count++;\n              tasks.total++;\n              var lateClass = '';\n\n              if (val.time_diff >= 0 && val.time_diff <= 20) {\n                tasks.b++;\n                lateClass = 'ready';\n              } else if (val.time_diff > 20 && val.time_diff <= 30) {\n                lateClass = 'shopping';\n                tasks.c++;\n              } else if (val.time_diff > 30) {\n                lateClass = 'not_ready';\n                tasks.d++;\n              } else {\n                tasks.a++;\n              } //console.log(val.time_diff, moment(val.time_diff).format(\"mm:ss\"))   \n\n\n              tasks.orders.push({\n                timestamp: moment(val.created_at).format('X'),\n                created_at: formatDate(val.created_at),\n                cust_name: val.cust_name.toLowerCase(),\n                customer_name: val.cust_name,\n                order_number: val.order_number,\n                store: val.store,\n                store_id: val.store_id,\n                complete_before: formatDate(val.complete_before),\n                complete_after: formatDate(val.complete_after),\n                delivery_time: formatDate(val.delivery_time),\n                driver_wait: val.driver_wait,\n                recpnt_task_start_time: formatDate(val.recpnt_task_start_time),\n                lateClass: lateClass,\n                time_diff: val.time_diff,\n                uuid: val.uuid\n              });\n            }); //tasks                           =   result.tasks || [];\n\n            tasks.orders = _.orderBy(tasks.orders, [function (o) {\n              return o[order_by];\n            }], [order]);\n          } //console.log('Saga : ', {count: count, tasks: tasks, listType: listType});\n\n\n          _context4.next = 14;\n          return put(reportAction.listenLateOrdersSuccess({\n            unsortedLateOrders: result,\n            arrangedTasks: {\n              count: count,\n              tasks: tasks,\n              listType: listType,\n              pageno: data.page,\n              sortBy: order_by,\n              format: order\n            }\n          }));\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport function watchReportStore() {\n  return _regeneratorRuntime.wrap(function watchReportStore$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return takeEvery(reportConstant.GET_REPORT, getReport);\n\n        case 3:\n          _context5.next = 5;\n          return takeEvery(reportConstant.GET_ORDER, getOrder);\n\n        case 5:\n          _context5.next = 7;\n          return takeEvery(reportConstant.GET_LATE_ORDER, getLateOrders);\n\n        case 7:\n          _context5.next = 9;\n          return takeEvery(reportConstant.SORT_LATE_ORDERS, sortLateOrders);\n\n        case 9:\n          _context5.next = 14;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\n;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Reports/Saga/index.js"],"names":["getReport","getOrder","getLateOrders","sortLateOrders","watchReportStore","reportAction","headerAction","reportConstant","callApiV2","takeEvery","put","call","all","error","notifyerror","success","notifysuccess","convertTwoDecimalRound","getDateTime","getSysDateTime","formatDate","moment","_","action","data","show_by","statsData","filter","reportData","start","subtract","format","end","syncFilter","key","value","JSON","parse","res","rerun","orders","statsTotal","listenGetReportError","result","rerunData","chng_rerun_total_percent","reportTotal","chng_shopping_late_percent","chng_tot_orders_percent","late_percentage","on_time_percentage","shopping_late_percent","listenGetReportSuccess","ordersData","message","console","log","payload","listenGetOrderError","listenGetOrderSuccess","order_by","listenLateOrders","response","sortData","unsortedLateOrders","count","searchData","filterState","filterKeys","State","filterArea","Area","filterStore","Store","order","tasks","listType","type","length","map","val","state_code","store_id","name","store","id","a","b","c","d","total","lateClass","time_diff","push","timestamp","created_at","cust_name","toLowerCase","customer_name","order_number","complete_before","complete_after","delivery_time","driver_wait","recpnt_task_start_time","uuid","temp","each","vz","kz","orderBy","o","sortBy","zone_id","zone_name","listenLateOrdersSuccess","arrangedTasks","pageno","page","GET_REPORT","GET_ORDER","GET_LATE_ORDER","SORT_LATE_ORDERS"],"mappings":"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","sourcesContent":["import * as reportAction from '../actions';\nimport * as headerAction from '../../Header/actions';\nimport * as reportConstant from '../constants';\nimport {callApiV2} from '../../../Helper/api';\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\nimport {convertTwoDecimalRound, getDateTime, getSysDateTime, formatDate} from '../../../Helper/common';\nimport moment from 'moment-timezone';\nimport * as _ from 'lodash';\n\n//Get Reports\nexport function* getReport(action){\n    try {\n        let data        =   {...action.data};\n        delete data.show_by;\n        let statsData       =   {...data};\n        delete data.filter;\n        delete action.data.filter;\n        let reportData      =   {...action.data};\n        if(reportData.show_by === 'month') {\n            reportData.start       =   moment().subtract(12, 'months').format('YYYY-MM-DD');\n            reportData.end         =   moment().format('YYYY-MM-DD');\n        }\n        yield put(headerAction.syncFilter({key: statsData.filter.key, value: JSON.parse(statsData.filter.value)}));\n        const res = yield all([\n            call(callApiV2, 'POST', 'reports/rerun', data),\n            call(callApiV2, 'POST', 'reports/orders', reportData),\n            call(callApiV2, 'POST', 'reports/stats-total', statsData)\n        ]);\n\n        if(res) {\n            let rerun = res[0];\n            let orders = res[1];\n            let statsTotal = res[2];\n\n            // check for error    \n            if(rerun.data.error || rerun.data.error || rerun.data.error){\n                yield put(reportAction.listenGetReportError());\n            };\n\n            if(rerun.data.result){\n                let rerunData       =   rerun.data.result;\n                rerunData.chng_rerun_total_percent  =   convertTwoDecimalRound(rerunData.chng_rerun_total_percent);\n\n                let reportTotal     =   statsTotal.data.result;\n                reportTotal.chng_shopping_late_percent  =   convertTwoDecimalRound(reportTotal.chng_shopping_late_percent);\n                reportTotal.chng_tot_orders_percent  =   convertTwoDecimalRound(reportTotal.chng_tot_orders_percent);\n                reportTotal.late_percentage  =   convertTwoDecimalRound(reportTotal.late_percentage);\n                reportTotal.on_time_percentage  =   convertTwoDecimalRound(reportTotal.on_time_percentage);\n                reportTotal.shopping_late_percent  =   convertTwoDecimalRound(reportTotal.shopping_late_percent);\n\n                //console.log(rerunData, reportTotal);\n                yield put(reportAction.listenGetReportSuccess({\n                    rerunData: rerunData,\n                    ordersData: orders.data.result,\n                    reportTotal: reportTotal\n                }));\n            };\n        } else {\n            notifyerror({message: \"Some error occured.\"}); \n        }\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n};\n\n\n//Get Daily/Store/Monthly Orders\nexport function* getOrder(action){\n    let data                    =   {...action.data};\n    if(data.show_by === 'month') {\n        data.start       =   moment().subtract(12, 'months').format('YYYY-MM-DD');\n        data.end         =   moment().format('YYYY-MM-DD');\n    }\n    try {\n        const payload = yield call(callApiV2, 'POST', 'reports/orders', data);\n\n        // check for error    \n        if(payload.data.error){\n            yield put(reportAction.listenGetOrderError());\n        };\n\n        if(payload.data.result){\n            yield put(reportAction.listenGetOrderSuccess(payload.data.result));\n        };\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n};\n\n//Get Late Orders\nexport function* getLateOrders(action){\n    try {\n        let data        =   {...action.data};\n        delete data.filter;\n        data.order_by   =   'complete_after';\n        //console.log(data);\n        //delete data.format;\n        const payload = yield call(callApiV2, 'POST', `reports/late-orders`, data);\n\n        // check for error\n        if(payload.data.error){\n            yield put(reportAction.listenLateOrders());\n        };\n\n        if(payload.data.result){\n            //console.log(payload.data.result);\n            //console.log('Length : ', result.tasks.length);\n            let response    =   payload.data.result || {};\n            //sortLateOrders(response, action, order_by, order, filterState, filterArea, filterStore, data);\n            let sortData    =   {\n                unsortedLateOrders    :   response.data,\n                count       :   response.count,\n                searchData  :   action.data,\n            }\n            yield put(reportAction.sortLateOrders(sortData));\n        };\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n};\n\nfunction* sortLateOrders(action) {   \n    let data        =   action.data.searchData; \n    //console.log('Action Data : ', data);\n    let filter      =   data.filter || {};\n    let filterState =   filter.filterKeys.State || [];\n    let filterArea  =   filter.filterKeys.Area || [];\n    let filterStore =   filter.filterKeys.Store || [];\n    let order_by    =   data.order_by || 'complete_after';\n    let order       =   data.format || 'asc';\n    let result      =   action.data.unsortedLateOrders;\n    let tasks       =   {};\n    let count       =   action.data.count || 0;\n    let listType = '';\n    if(data.type === 'store'){\n        listType          =   'Zonewise';\n        if(result.length > 0) {\n            result.map((val, key) => {\n                //count++;\n                if(!!!tasks[val.state_code]) {\n                    tasks[val.state_code]   =   {};\n                    tasks[val.state_code][val.store_id]   =   {\n                                name        :   val.store,\n                                id          :   val.store_id,\n                                orders      :   [],\n                                a           :   0,\n                                b           :   0,\n                                c           :   0,\n                                d           :   0,\n                                total       :   0\n                    };\n                } else {\n                    if(!!!tasks[val.state_code][val.store_id]) {\n                        tasks[val.state_code][val.store_id]   =   {\n                            name        :   val.store,\n                            id          :   val.store_id,\n                            orders      :   [],\n                            a           :   0,\n                            b           :   0,\n                            c           :   0,\n                            d           :   0,\n                            total       :   0\n                        };\n                    }\n                }\n\n                tasks[val.state_code][val.store_id].total++;\n                let lateClass       =   '';\n                if(val.time_diff >= 0 && val.time_diff <= 20) {\n                    lateClass       =   'ready';\n                    tasks[val.state_code][val.store_id].b++;\n                } else if(val.time_diff > 20 && val.time_diff <= 30) {\n                    lateClass       =   'shopping';\n                    tasks[val.state_code][val.store_id].c++;\n                } else if(val.time_diff > 30) {\n                    lateClass       =   'not_ready';\n                    tasks[val.state_code][val.store_id].d++;\n                } else {\n                    tasks[val.state_code][val.store_id].a++;\n                }\n                \n                tasks[val.state_code][val.store_id].orders.push({\n                    timestamp               :   moment(val.created_at).format('X'),\n                    created_at              :   formatDate(val.created_at),\n                    cust_name               :   val.cust_name.toLowerCase(),\n                    customer_name           :   val.cust_name,\n                    order_number            :   val.order_number,\n                    store                   :   val.store,\n                    store_id                :   val.store_id,\n                    complete_before         :   formatDate(val.complete_before),\n                    complete_after          :   formatDate(val.complete_after),\n                    delivery_time           :   formatDate(val.delivery_time),\n                    driver_wait             :   val.driver_wait,\n                    recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\n                    lateClass               :   lateClass,\n                    time_diff               :   val.time_diff,\n                    uuid                    :   val.uuid\n                });\n            });\n        }\n        let temp                        =   {};\n        _.each(tasks, (val, key) => {\n            _.each(val, (vz, kz) => {\n                tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o[order_by]], [order]);\n            });\n            temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.store; })\n        });\n        tasks                           =   temp;\n    } else if(data.type === 'place'){\n        if(filterState.length > 0 && filterArea.length === 0){ \n            listType         =   'Statewise'; \n            if(result.length > 0) {\n                result.map((val, key) => {\n                    //count++;\n                    if(!!!tasks[val.state_code]) {\n                        tasks[val.state_code]   =   {\n                            name        :   val.state_code,\n                            orders      :   [],\n                            a           :   0,\n                            b           :   0,\n                            c           :   0,\n                            d           :   0,\n                            total       :   0\n                        };\n                    }\n\n                    tasks[val.state_code].total++;\n                    let lateClass       =   '';\n                    if(val.time_diff >= 0 && val.time_diff <= 20) {\n                        lateClass       =   'ready';\n                        tasks[val.state_code].b++;\n                    } else if(val.time_diff > 20 && val.time_diff <= 30) {\n                        lateClass       =   'shopping';\n                        tasks[val.state_code].c++;\n                    } else if(val.time_diff > 30) {\n                        lateClass       =   'not_ready';\n                        tasks[val.state_code].d++;\n                    } else {\n                        tasks[val.state_code].a++;\n                    }\n\n                    //console.log(tasks[val.state_code]);\n                    \n                    tasks[val.state_code].orders.push({\n                        timestamp               :   moment(val.created_at).format('X'),\n                        created_at              :   formatDate(val.created_at),\n                        cust_name               :   val.cust_name.toLowerCase(),\n                        customer_name           :   val.cust_name,\n                        order_number            :   val.order_number,\n                        store                   :   val.store,\n                        store_id                :   val.store_id,\n                        complete_before         :   formatDate(val.complete_before),\n                        complete_after          :   formatDate(val.complete_after),\n                        delivery_time           :   formatDate(val.delivery_time),\n                        driver_wait             :   val.driver_wait,\n                        recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\n                        lateClass               :   lateClass,\n                        time_diff               :   val.time_diff,\n                        uuid                    :   val.uuid\n                    });\n                });\n            }\n            _.each(tasks, (val, key) => {\n                tasks[key].orders               =  _.orderBy(tasks[key].orders, [o => o[order_by]], [order]);\n            });\n        } else if(filterArea.length > 0) {                    \n            listType          =   'Zonewise';\n            if(result.length > 0) {\n                result.map((val, key) => {\n                    //count++;\n                    if(!!!tasks[val.state_code]) {\n                        tasks[val.state_code]   =   {};\n                        tasks[val.state_code][val.zone_id]   =   {\n                                    name        :   val.zone_name,\n                                    id          :   val.zone_id,\n                                    orders      :   [],\n                                    a           :   0,\n                                    b           :   0,\n                                    c           :   0,\n                                    d           :   0,\n                                    total       :   0\n                        };\n                    } else {\n                        if(!!!tasks[val.state_code][val.zone_id]) {\n                            tasks[val.state_code][val.zone_id]   =   {\n                                name        :   val.zone_name,\n                                id          :   val.zone_id,\n                                orders      :   [],\n                                a           :   0,\n                                b           :   0,\n                                c           :   0,\n                                d           :   0,\n                                total       :   0\n                            };\n                        }\n                    }\n\n                    let lateClass       =   '';\n                    tasks[val.state_code][val.zone_id].total++;\n                    if(val.time_diff >= 0 && val.time_diff <= 20) {\n                        tasks[val.state_code][val.zone_id].b++;\n                        lateClass       =   'ready';\n                    } else if(val.time_diff > 20 && val.time_diff <= 30) {\n                        tasks[val.state_code][val.zone_id].c++;\n                        lateClass       =   'shopping';\n                    } else if(val.time_diff > 30) {\n                        tasks[val.state_code][val.zone_id].d++;\n                        lateClass       =   'not_ready';\n                    } else {\n                        tasks[val.state_code][val.zone_id].a++;\n                    }\n                    \n                    tasks[val.state_code][val.zone_id].orders.push({\n                        timestamp               :   moment(val.created_at).format('X'),\n                        created_at              :   formatDate(val.created_at),\n                        cust_name               :   val.cust_name.toLowerCase(),\n                        customer_name           :   val.cust_name,\n                        order_number            :   val.order_number,\n                        store                   :   val.store,\n                        store_id                :   val.store_id,\n                        complete_before         :   formatDate(val.complete_before),\n                        complete_after          :   formatDate(val.complete_after),\n                        delivery_time           :   formatDate(val.delivery_time),\n                        driver_wait             :   val.driver_wait,\n                        recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\n                        lateClass               :   lateClass,\n                        time_diff               :   val.time_diff,\n                        uuid                    :   val.uuid\n                    });\n                });\n            }\n            let temp                        =   {};\n            _.each(tasks, (val, key) => {\n                _.each(val, (vz, kz) => {\n                    //tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\n                    tasks[key][kz].orders       =   _.orderBy(tasks[key][kz].orders, [o => o[order_by]], [order])\n                });\n                temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.zone_name; })\n            });\n            tasks                           =   temp;\n        }\n    } else {                \n        tasks                   =   {\n            a:0,\n            b:0,\n            c:0,\n            d:0,\n            total       :   0,\n            orders: []\n        }\n        listType                =   'Uncategorized';\n        result.map((val, key) => {   \n            //count++;\n            tasks.total++;\n            let lateClass       =   '';\n            if(val.time_diff >= 0 && val.time_diff <= 20) {\n                tasks.b++;\n                lateClass       =   'ready';\n            } else if(val.time_diff > 20 && val.time_diff <= 30) {\n                lateClass       =   'shopping';\n                tasks.c++;\n            } else if(val.time_diff > 30) {\n                lateClass       =   'not_ready';\n                tasks.d++;\n            } else {\n                tasks.a++;\n            }\n            //console.log(val.time_diff, moment(val.time_diff).format(\"mm:ss\"))   \n            tasks.orders.push({\n                timestamp               :   moment(val.created_at).format('X'),\n                created_at              :   formatDate(val.created_at),\n                cust_name               :   val.cust_name.toLowerCase(),\n                customer_name           :   val.cust_name,\n                order_number            :   val.order_number,\n                store                   :   val.store,\n                store_id                :   val.store_id,\n                complete_before         :   formatDate(val.complete_before),\n                complete_after          :   formatDate(val.complete_after),\n                delivery_time           :   formatDate(val.delivery_time),\n                driver_wait             :   val.driver_wait,\n                recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\n                lateClass               :   lateClass,\n                time_diff               :   val.time_diff,\n                uuid                    :   val.uuid\n            });\n        });\n        //tasks                           =   result.tasks || [];\n        tasks.orders                      =   _.orderBy(tasks.orders, [o => o[order_by]], [order])\n    }\n    //console.log('Saga : ', {count: count, tasks: tasks, listType: listType});\n    yield put(reportAction.listenLateOrdersSuccess({unsortedLateOrders: result, arrangedTasks: { count: count, tasks: tasks, listType: listType, pageno: data.page, sortBy: order_by, format: order}}));\n}\n\nexport function* watchReportStore() {\n    try{\n        yield takeEvery( reportConstant.GET_REPORT, getReport );\n        yield takeEvery( reportConstant.GET_ORDER, getOrder );\n        yield takeEvery( reportConstant.GET_LATE_ORDER, getLateOrders );\n        yield takeEvery( reportConstant.SORT_LATE_ORDERS, sortLateOrders );\n    } catch(e){\n        console.log(e)\n    }\n};"]},"metadata":{},"sourceType":"module"}