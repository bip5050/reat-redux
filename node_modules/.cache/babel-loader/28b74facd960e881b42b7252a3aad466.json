{"ast":null,"code":"import _regeneratorRuntime from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(forgot_password),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchForgotPasswordStore);import{takeEvery,put,call}from'redux-saga/effects';import*as forgotPasswordConstant from'../constants';import{error as notifyerror,success as notifysuccess}from'../../../util/notify';import*as forgotPasswordAction from'../actions';import{callApi}from'../../../Helper/api';//Do Login\nexport function forgot_password(action){var url,payload,result;return _regeneratorRuntime.wrap(function forgot_password$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;url='';url=\"auth/forget-password\";_context.next=5;return call(callApi,'POST',url,action.data);case 5:payload=_context.sent;if(!payload.data.error){_context.next=9;break;}_context.next=9;return put(forgotPasswordAction.listenForgotPasswordError(payload.data.error));case 9:if(!payload.data.result){_context.next=13;break;}result=payload.data.result;//notifysuccess({message: 'Login Successful'});\n_context.next=13;return put(forgotPasswordAction.listenForgotPasswordSuccess(result));case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);notifyerror(_context.t0);console.log(_context.t0.message);case 19:case\"end\":return _context.stop();}}},_marked,null,[[0,15]]);}export function watchForgotPasswordStore(){return _regeneratorRuntime.wrap(function watchForgotPasswordStore$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return takeEvery(forgotPasswordConstant.FORGOT_PASSWORD,forgot_password);case 3:_context2.next=8;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 8:case\"end\":return _context2.stop();}}},_marked2,null,[[0,5]]);}","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/Saga/index.js"],"names":["forgot_password","watchForgotPasswordStore","takeEvery","put","call","forgotPasswordConstant","error","notifyerror","success","notifysuccess","forgotPasswordAction","callApi","action","url","data","payload","listenForgotPasswordError","result","listenForgotPasswordSuccess","console","log","message","FORGOT_PASSWORD"],"mappings":"6LAOiBA,e,iDAsBAC,wB,EA7BjB,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CACA,MAAO,GAAKC,CAAAA,sBAAZ,KAAwC,cAAxC,CACA,OAAQC,KAAK,GAAIC,CAAAA,WAAjB,CAA8BC,OAAO,GAAIC,CAAAA,aAAzC,KAA6D,sBAA7D,CACA,MAAO,GAAKC,CAAAA,oBAAZ,KAAsC,YAAtC,CACA,OAAQC,OAAR,KAAsB,qBAAtB,CAEA;AACA,MAAO,SAAUX,CAAAA,eAAV,CAA0BY,MAA1B,iKAEKC,GAFL,CAEwB,EAFxB,CAGCA,GAAG,uBAAH,CAHD,gBAIiB,MAAMT,CAAAA,IAAI,CAACO,OAAD,CAAU,MAAV,CAAkBE,GAAlB,CAAuBD,MAAM,CAACE,IAA9B,CAAV,CAJjB,OAIOC,OAJP,mBAMIA,OAAO,CAACD,IAAR,CAAaR,KANjB,yCAOK,MAAMH,CAAAA,GAAG,CAACO,oBAAoB,CAACM,yBAArB,CAA+CD,OAAO,CAACD,IAAR,CAAaR,KAA5D,CAAD,CAAT,CAPL,WAWIS,OAAO,CAACD,IAAR,CAAaG,MAXjB,0BAYSA,MAZT,CAYkBF,OAAO,CAACD,IAAR,CAAaG,MAZ/B,CAaK;AAbL,iBAcK,MAAMd,CAAAA,GAAG,CAACO,oBAAoB,CAACQ,2BAArB,CAAiDD,MAAjD,CAAD,CAAT,CAdL,yFAiBCV,WAAW,aAAX,CACAY,OAAO,CAACC,GAAR,CAAY,YAAEC,OAAd,EAlBD,qEAsBP,MAAO,SAAUpB,CAAAA,wBAAV,yKAEC,MAAMC,CAAAA,SAAS,CAAEG,sBAAsB,CAACiB,eAAzB,CAA0CtB,eAA1C,CAAf,CAFD,yFAICmB,OAAO,CAACC,GAAR,eAJD","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\nimport * as forgotPasswordConstant from '../constants';\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\nimport * as forgotPasswordAction from '../actions';\nimport {callApi} from '../../../Helper/api';\n\n//Do Login\nexport function* forgot_password(action){\n    try {\n        let url             =  '';\n        url                 =  `auth/forget-password`;\n        const payload = yield call(callApi, 'POST', url, action.data);\n        // check for error\n        if(payload.data.error){\n            yield put(forgotPasswordAction.listenForgotPasswordError(payload.data.error));\n        }\n\n        // handle success result\n        if(payload.data.result){\n            let result = payload.data.result;\n            //notifysuccess({message: 'Login Successful'});\n            yield put(forgotPasswordAction.listenForgotPasswordSuccess(result));\n        }\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n}\n\nexport function* watchForgotPasswordStore() {\n    try{\n        yield takeEvery( forgotPasswordConstant.FORGOT_PASSWORD, forgot_password );\n    } catch(e){\n        console.log(e)\n    }\n}"]},"metadata":{},"sourceType":"module"}