{"ast":null,"code":"import React from'react';import*as actions from'./actions';import{connect}from'react-redux';import FeedbackComponent from'./feedback';import{withRouter}from'react-router-dom';import*as headerActions from'../Header/actions';import*as dashboardActions from'../Dashboard/actions';var Feedback=function Feedback(_ref){var reply=_ref.reply,isLoading=_ref.isLoading,isReplying=_ref.isReplying,replyResult=_ref.replyResult,locations=_ref.locations,userType=_ref.userType,settingsData=_ref.settingsData,getSettings=_ref.getSettings,getSummary=_ref.getSummary,getFeedback=_ref.getFeedback,isFiltering=_ref.isFiltering,isSearching=_ref.isSearching,getLocations=_ref.getLocations,feedbackData=_ref.feedbackData,feedBackCount=_ref.feedBackCount,feedbackSearch=_ref.feedbackSearch,savedFilterData=_ref.savedFilterData,searchResultList=_ref.searchResultList,feedbackSummeryData=_ref.feedbackSummeryData,isFilterLoaded=_ref.isFilterLoaded;return/*#__PURE__*/React.createElement(FeedbackComponent,{reply:reply,isReplying:isReplying,replyResult:replyResult,getSettings:getSettings,getSummary:getSummary,getFeedback:getFeedback,feedbackSearch:feedbackSearch,userType:userType,settingsData:settingsData,savedFilterData:savedFilterData,getLocations:getLocations,feedbackData:feedbackData,feedBackCount:feedBackCount,feedbackSummeryData:feedbackSummeryData,searchResultList:searchResultList,locations:locations,isLoading:isLoading,isFiltering:isFiltering,isSearching:isSearching,isFilterLoaded:isFilterLoaded});};var mapStateToProps=function mapStateToProps(_ref2){var dashboardReducer=_ref2.dashboardReducer,feedbackReducer=_ref2.feedbackReducer,headerReducer=_ref2.headerReducer;var feedBackList=feedbackReducer.feedbackData&&feedbackReducer.feedbackData.rows?feedbackReducer.feedbackData.rows:[];var searchResultList=feedbackReducer.searchResultList&&feedbackReducer.searchResultList.rows?feedbackReducer.searchResultList.rows:[];var feedBackCount=feedbackReducer.feedbackData&&feedbackReducer.feedbackData.count?feedbackReducer.feedbackData.count:0;// console.log(headerReducer, 'feedbackReducer', feedbackReducer);\n//console.log('dashboardReducer', dashboardReducer.locations);\nreturn{feedbackData:feedBackList,feedBackCount:feedBackCount,userType:headerReducer.userType,searchResultList:searchResultList,isLoading:feedbackReducer.isLoading,locations:dashboardReducer.locations,isFiltering:feedbackReducer.isFiltering,settingsData:headerReducer.settingsData,isSearching:feedbackReducer.isSearching,isReplying:feedbackReducer.isReplying,replyResult:feedbackReducer.replyResult,feedbackSummeryData:feedbackReducer.feedbackSummeryData,savedFilterData:headerReducer.filterData&&headerReducer.filterData.feedback?headerReducer.filterData.feedback:{},isFilterLoaded:headerReducer.isFilterLoaded};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{reply:function reply(data){return dispatch(actions.reply(data));},getSummary:function getSummary(data){return dispatch(actions.getSummary(data));},getFeedback:function getFeedback(data){return dispatch(actions.getFeedback(data));},feedbackSearch:function feedbackSearch(data){return dispatch(actions.feedbackSearch(data));},getSettings:function getSettings(data){return dispatch(headerActions.getSettings(data));},getLocations:function getLocations(data){return dispatch(dashboardActions.getLocations(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(withRouter(Feedback));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Feedbacks/index.js"],"names":["React","actions","connect","FeedbackComponent","withRouter","headerActions","dashboardActions","Feedback","reply","isLoading","isReplying","replyResult","locations","userType","settingsData","getSettings","getSummary","getFeedback","isFiltering","isSearching","getLocations","feedbackData","feedBackCount","feedbackSearch","savedFilterData","searchResultList","feedbackSummeryData","isFilterLoaded","mapStateToProps","dashboardReducer","feedbackReducer","headerReducer","feedBackList","rows","count","filterData","feedback","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as actions from './actions';\nimport { connect } from 'react-redux';\nimport {PropTypes as PT} from 'prop-types';\nimport FeedbackComponent from './feedback';\nimport { withRouter } from 'react-router-dom';\nimport * as headerActions from '../Header/actions';\nimport * as dashboardActions from '../Dashboard/actions';\n\nconst Feedback   = ({\n\treply,\n\tisLoading,\n\tisReplying,\n\treplyResult,\n\tlocations,\n\tuserType,\t\n\tsettingsData,\n\tgetSettings,\n\tgetSummary,\n\tgetFeedback,\n\tisFiltering,\n\tisSearching,\n\tgetLocations,\n\tfeedbackData,\n\tfeedBackCount,\n \tfeedbackSearch,\n \tsavedFilterData,\n\tsearchResultList,\n\tfeedbackSummeryData,\n\tisFilterLoaded\n}) => {\n\treturn (\n\t\t<FeedbackComponent reply={reply} isReplying={isReplying} replyResult={replyResult} getSettings={getSettings} getSummary={getSummary} getFeedback={getFeedback} feedbackSearch={feedbackSearch} userType={userType} settingsData={settingsData} savedFilterData={savedFilterData} getLocations={getLocations} feedbackData={feedbackData} feedBackCount={feedBackCount} feedbackSummeryData={feedbackSummeryData} searchResultList={searchResultList} locations={locations} isLoading={isLoading} isFiltering={isFiltering} isSearching={isSearching} isFilterLoaded={isFilterLoaded}/>\n\t)\n};\n\nFeedback.propTypes   = {\n\treply: PT.func,\n \tuserType: PT.string,\n\tisLoading: PT.bool,\n\tgetSummary: PT.func,\n\tgetSettings:PT.func,\n\tisFiltering: PT.bool,\n\tisSearching: PT.bool,\n\tsettingsData: PT.object,\n\tgetFeedback: PT.func,\n\tgetLocations: PT.func,\n\tlocations: PT.object,\n\tfeedbackData: PT.array,\n \tfeedbackSearch: PT.func,\n\tfeedBackCount: PT.number,\n\tsearchResultList: PT.array,\n\tsavedFilterData: PT.object,\n\tfeedbackSummeryData: PT.object,\n\tisReplying: PT.bool,\n\treplyResult: PT.object,\n\tisFilterLoaded: PT.bool\n}\n\nconst  mapStateToProps   = ({dashboardReducer, feedbackReducer, headerReducer}) => {\n\tlet feedBackList = (feedbackReducer.feedbackData && feedbackReducer.feedbackData.rows)?feedbackReducer.feedbackData.rows:[];\n\tlet searchResultList = (feedbackReducer.searchResultList && feedbackReducer.searchResultList.rows)?feedbackReducer.searchResultList.rows:[];\n\tlet feedBackCount = (feedbackReducer.feedbackData && feedbackReducer.feedbackData.count)?feedbackReducer.feedbackData.count:0;\n\t// console.log(headerReducer, 'feedbackReducer', feedbackReducer);\n\t//console.log('dashboardReducer', dashboardReducer.locations);\n\n\treturn ({\n\t\tfeedbackData: feedBackList,\n\t\tfeedBackCount: feedBackCount,\n\t \tuserType: headerReducer.userType,\n\t\tsearchResultList: searchResultList,\n\t\tisLoading: feedbackReducer.isLoading,\t\n\t\tlocations: dashboardReducer.locations,\n\t\tisFiltering: feedbackReducer.isFiltering,\n\t\tsettingsData: headerReducer.settingsData,\n\t\tisSearching: feedbackReducer.isSearching,\t\n\t\tisReplying: feedbackReducer.isReplying,\n\t\treplyResult: feedbackReducer.replyResult,\n\t\tfeedbackSummeryData: feedbackReducer.feedbackSummeryData,\n\t\tsavedFilterData: (headerReducer.filterData && headerReducer.filterData.feedback)?headerReducer.filterData.feedback:{},\n\t\tisFilterLoaded: headerReducer.isFilterLoaded\n\t});\n};\n\nconst mapDispatchToProps = dispatch => ({\n\treply: (data) => dispatch(actions.reply(data)),\n\tgetSummary: (data) => dispatch(actions.getSummary(data)),\n\tgetFeedback: (data) => dispatch(actions.getFeedback(data)),\n \tfeedbackSearch: (data) => dispatch(actions.feedbackSearch(data)),\n\tgetSettings: (data) => dispatch(headerActions.getSettings(data)),\n\tgetLocations: (data) => dispatch(dashboardActions.getLocations(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Feedback));"]},"metadata":{},"sourceType":"module"}