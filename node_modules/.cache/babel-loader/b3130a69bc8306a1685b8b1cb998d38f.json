{"ast":null,"code":"import _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Reports/monthlyView.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment-timezone';\nimport { Row, Col } from 'react-bootstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { groupBy as _groupBy } from 'lodash';\nimport 'zingchart/es6';\nimport ZingChart from 'zingchart-react';\nimport 'zingchart-react/dist/modules/zingchart-depth.min.js';\n\nvar MonthlyView = /*#__PURE__*/function (_Component) {\n  _inherits(MonthlyView, _Component);\n\n  var _super = _createSuper(MonthlyView);\n\n  function MonthlyView(props) {\n    _classCallCheck(this, MonthlyView);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(MonthlyView, [{\n    key: \"render\",\n    value: function render() {\n      var reportData = this.props.reportData;\n      var ordersData = reportData.ordersData && reportData.ordersData.orders ? reportData.ordersData.orders : [];\n      var totalOrder = 0;\n      var monthNameArray = [];\n      var monthlyTotalOrderArray = [];\n\n      var orderGrpedArray = _groupBy(ordersData, function (order) {\n        return moment(order.D).format(\"MMM 'YY\");\n      });\n\n      Object.keys(orderGrpedArray).forEach(function (key) {\n        var orderObj = orderGrpedArray[key] || [];\n        monthNameArray.push(key);\n        var monthlyOrder = 0;\n        orderObj.map(function (order) {\n          totalOrder += parseFloat(order.order_count);\n          monthlyOrder += parseFloat(order.order_count);\n        });\n        monthlyTotalOrderArray.push(monthlyOrder);\n      });\n      var config = {\n        type: \"area\",\n        scaleY: {\n          \"guide\": {\n            \"line-style\": \"dashed\"\n          }\n        },\n        scaleX: {\n          \"max-labels\": 12,\n          labels: monthNameArray\n        },\n        plot: {\n          tooltip: {\n            \"font-family\": \"Source Sans Pro\",\n            \"font-size\": \"16px\",\n            \"line-height\": \"18px\",\n            \"font-weight\": \"600\",\n            \"text\": \"%v orders <br><span style='font-weight: 600; font-size: 14px; line-height: 18px; letter-spacing: 0.1em; color:#B6B6B6'>%data-days</span>\",\n            \"text-align\": \"center\",\n            \"border-radius\": 4,\n            \"padding\": \"8px 16px\",\n            \"background-color\": \"#fff\",\n            \"color\": \"#545454\",\n            \"box-shadow\": \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\n            \"border\": \"1px solid #E0E0E0\",\n            \"callout\": true\n          }\n        },\n        series: [{\n          values: monthlyTotalOrderArray,\n          \"data-days\": monthNameArray\n        }]\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ariachart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(ZingChart, {\n        data: config,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return MonthlyView;\n}(Component);\n\n;\nexport default MonthlyView;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Reports/monthlyView.js"],"names":["React","Component","moment","Row","Col","Scrollbars","groupBy","_groupBy","ZingChart","MonthlyView","props","reportData","ordersData","orders","totalOrder","monthNameArray","monthlyTotalOrderArray","orderGrpedArray","order","D","format","Object","keys","forEach","key","orderObj","push","monthlyOrder","map","parseFloat","order_count","config","type","scaleY","scaleX","labels","plot","tooltip","series","values"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAAQC,OAAO,IAAIC,QAAnB,QAAkC,QAAlC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,qDAAP;;IAEMC,W;;;;;AACL,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACZA,KADY;AAElB;;;;6BAEQ;AAAA,UACAC,UADA,GACe,KAAKD,KADpB,CACAC,UADA;AAER,UAAIC,UAAU,GAAID,UAAU,CAACC,UAAX,IAAyBD,UAAU,CAACC,UAAX,CAAsBC,MAAhD,GAAwDF,UAAU,CAACC,UAAX,CAAsBC,MAA9E,GAAqF,EAAtG;AAEA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,sBAAsB,GAAG,EAA7B;;AAEA,UAAIC,eAAe,GAAGV,QAAQ,CAACK,UAAD,EAAa,UAASM,KAAT,EAAgB;AAAE,eAAOhB,MAAM,CAACgB,KAAK,CAACC,CAAP,CAAN,CAAgBC,MAAhB,CAAuB,SAAvB,CAAP;AAAyC,OAAxE,CAA9B;;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYL,eAAZ,EAA6BM,OAA7B,CAAqC,UAASC,GAAT,EAAc;AAClD,YAAIC,QAAQ,GAAGR,eAAe,CAACO,GAAD,CAAf,IAAwB,EAAvC;AAEAT,QAAAA,cAAc,CAACW,IAAf,CAAoBF,GAApB;AAEA,YAAIG,YAAY,GAAG,CAAnB;AACAF,QAAAA,QAAQ,CAACG,GAAT,CAAa,UAAAV,KAAK,EAAI;AACrBJ,UAAAA,UAAU,IAAIe,UAAU,CAACX,KAAK,CAACY,WAAP,CAAxB;AACAH,UAAAA,YAAY,IAAIE,UAAU,CAACX,KAAK,CAACY,WAAP,CAA1B;AACA,SAHD;AAKAd,QAAAA,sBAAsB,CAACU,IAAvB,CAA4BC,YAA5B;AACA,OAZD;AAcA,UAAMI,MAAM,GAAG;AACdC,QAAAA,IAAI,EAAE,MADQ;AAEdC,QAAAA,MAAM,EAAE;AACP,mBAAS;AACR,0BAAc;AADN;AADF,SAFM;AAOdC,QAAAA,MAAM,EAAE;AACP,wBAAc,EADP;AAEPC,UAAAA,MAAM,EAAEpB;AAFD,SAPM;AAWdqB,QAAAA,IAAI,EAAE;AACLC,UAAAA,OAAO,EAAE;AACR,2BAAe,iBADP;AAER,yBAAa,MAFL;AAGR,2BAAe,MAHP;AAIR,2BAAe,KAJP;AAKR,oBAAQ,0IALA;AAMR,0BAAc,QANN;AAOR,6BAAiB,CAPT;AAQR,uBAAW,UARH;AASR,gCAAoB,MATZ;AAUR,qBAAS,SAVD;AAWR,0BAAc,gCAXN;AAYR,sBAAS,mBAZD;AAaR,uBAAW;AAbH;AADJ,SAXQ;AA4BdC,QAAAA,MAAM,EAAE,CAAC;AACRC,UAAAA,MAAM,EAAEvB,sBADA;AAER,uBAAaD;AAFL,SAAD;AA5BM,OAAf;AAkCA,0BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEgB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;;;EAnEwB9B,S;;AAoEzB;AAED,eAAeQ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment-timezone';\nimport { Row, Col } from 'react-bootstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport {groupBy as _groupBy} from 'lodash';\nimport 'zingchart/es6';\nimport ZingChart from 'zingchart-react';\nimport 'zingchart-react/dist/modules/zingchart-depth.min.js';\n\nclass MonthlyView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\t\t\n\t};\n\n\trender() {\n\t\tconst { reportData } = this.props;\n\t\tlet ordersData = (reportData.ordersData && reportData.ordersData.orders)?reportData.ordersData.orders:[];\n\n\t\tlet totalOrder = 0;\n\t\tlet monthNameArray = [];\t\n\t\tlet monthlyTotalOrderArray = [];\n\n\t\tlet orderGrpedArray = _groupBy(ordersData, function(order) { return moment(order.D).format(\"MMM 'YY\")});\n\t\tObject.keys(orderGrpedArray).forEach(function(key) {\n\t\t\tlet orderObj = orderGrpedArray[key] || [];\n\n\t\t\tmonthNameArray.push(key);\n\n\t\t\tlet monthlyOrder = 0;\n\t\t\torderObj.map(order => {\n\t\t\t\ttotalOrder += parseFloat(order.order_count);\n\t\t\t\tmonthlyOrder += parseFloat(order.order_count);\n\t\t\t});\n\n\t\t\tmonthlyTotalOrderArray.push(monthlyOrder);\n\t\t});\n\n\t\tconst config = {\n\t\t\ttype: \"area\",\n\t\t\tscaleY: {\n\t\t\t\t\"guide\": {\n\t\t\t\t\t\"line-style\": \"dashed\",\n\t\t\t\t}\n\t\t\t},\n\t\t\tscaleX: {\n\t\t\t\t\"max-labels\": 12,\n\t\t\t\tlabels: monthNameArray\n\t\t\t},\n\t\t\tplot: {\n\t\t\t\ttooltip: {\n\t\t\t\t\t\"font-family\": \"Source Sans Pro\",\n\t\t\t\t\t\"font-size\": \"16px\",\n\t\t\t\t\t\"line-height\": \"18px\",\n\t\t\t\t\t\"font-weight\": \"600\",\n\t\t\t\t\t\"text\": \"%v orders <br><span style='font-weight: 600; font-size: 14px; line-height: 18px; letter-spacing: 0.1em; color:#B6B6B6'>%data-days</span>\",\n\t\t\t\t\t\"text-align\": \"center\",\n\t\t\t\t\t\"border-radius\": 4,\n\t\t\t\t\t\"padding\": \"8px 16px\",\n\t\t\t\t\t\"background-color\": \"#fff\",\n\t\t\t\t\t\"color\": \"#545454\",\n\t\t\t\t\t\"box-shadow\": \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\n\t\t\t\t\t\"border\":\"1px solid #E0E0E0\",\n\t\t\t\t\t\"callout\": true\n\t\t\t  \t}\n\t\t\t},\n\t\t\tseries: [{\n\t\t\t\tvalues: monthlyTotalOrderArray,\n\t\t\t\t\"data-days\": monthNameArray\n\t\t\t}]\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ariachart\">\n\t\t\t\t<ZingChart data={config}/>\n\t\t\t</div>\t\n\t\t);\n\t};\n};\n\nexport default MonthlyView;"]},"metadata":{},"sourceType":"module"}