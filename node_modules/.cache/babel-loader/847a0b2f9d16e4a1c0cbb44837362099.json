{"ast":null,"code":"import _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Dashboard/stateWiseList.js\";\nimport React, { Component } from 'react';\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport { convertTwoDecimalRound } from '../../Helper/common';\n\nvar UncategorizedList = /*#__PURE__*/function (_Component) {\n  _inherits(UncategorizedList, _Component);\n\n  var _super = _createSuper(UncategorizedList);\n\n  function UncategorizedList(props) {\n    _classCallCheck(this, UncategorizedList);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(UncategorizedList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var tasks = this.props.tasks || {}; //console.log('shoppedLate', this.props.shoppedLate);\n\n      var shoppedLateData = this.props.shoppedLate || {};\n      var shoppedLateSummary = shoppedLateData.summary || {};\n      return !isEmpty(tasks) ? Object.keys(tasks || {}).map(function (item, i) {\n        var task = tasks[item] || [];\n        var orderList = task.orders || []; //let shoppedLatePerc      =  convertTwoDecimalRound((task.totShoppedLate > 0 && task.total >= 0) ? (task.totShoppedLate * 100)/task.total : 0);\n\n        var shoppedLate = 0;\n        var totalShopped = 0;\n        var shoppedLatePerc = 0;\n        var stateSummary = shoppedLateSummary[task.name]; //console.log(stateSummary, !isEmpty(stateSummary));\n\n        if (!isEmpty(stateSummary) && shoppedLateData.type === 'state') {\n          totalShopped = stateSummary.total_orders;\n          shoppedLate = stateSummary.shopped_late;\n          shoppedLatePerc = convertTwoDecimalRound(stateSummary.shopping_late_percent);\n        }\n\n        return /*#__PURE__*/React.createElement(\"section\", {\n          key: i,\n          className: \"content\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"table_sec dboardtable\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"table\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          colSpan: \"8\",\n          className: \"t-titel\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"aOrder\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 73\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"status_count\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fc_black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 43\n          }\n        }, \" Total: \", task.total), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fc_green\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 43\n          }\n        }, \"Ready: \", task.ready), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fc_yellow\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 43\n          }\n        }, \"Shopping: \", task.shopping), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fc_read\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 43\n          }\n        }, \"Not Ready: \", task.not_ready), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fc_gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 43\n          }\n        }, \" Shopped Late: \", shoppedLatePerc, \"% (\", shoppedLate, \"/\", totalShopped, \")\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"t-heading\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }\n        }, \"Order Number\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, \"Delivery Window\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        }, \"Merchant Address\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }\n        }, \"Recipient Address\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }\n        }, \"Driver\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }\n        }, \"Shopped Late\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }\n        }, \"Task Status\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }\n        })), orderList.map(function (order, oIndex) {\n          var ordClsName = '';\n\n          if (order.order_status === 'R' || order.order_status === 'F' || order.order_status === 'Y') {\n            ordClsName = 'ready';\n          } else if (order.order_status === 'W') {\n            ordClsName = 'shopping';\n          } else {\n            ordClsName = 'not_ready';\n          }\n\n          var shoppedLate = 'No';\n          var shoppedLateCls = 'fcGray';\n\n          if (order.shoppedLate > 0) {\n            shoppedLate = order.shoppedLate + ' min';\n            if (order.shoppedLate >= 30) shoppedLateCls = 'fcRed';else shoppedLateCls = 'fcBlack';\n          } //console.log('Onfleet : ', order.order_status, ordClsName);\n\n\n          var clsName = getStatusClass(order.tsk_status);\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            key: oIndex,\n            onContextMenu: function onContextMenu(e) {\n              return _this.props.handleContextMenu(e, {\n                order_number: order.order_number,\n                order_id: order.id,\n                order_uuid: order.uuid,\n                tsk_status: order.tsk_status,\n                mrchnt_address: order.mrchnt_address,\n                recpnt_address: order.recpnt_address\n              });\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 46\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"round \".concat(ordClsName),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 52\n            }\n          }), order.order_number), /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 49\n            }\n          }, order.complete_after, \" - \", order.complete_before), /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            className: \"acell\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 81\n            }\n          }, order.mrchnt_address.toString()), \" \", /*#__PURE__*/React.createElement(\"span\", {\n            className: \"tTip\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 130\n            }\n          }, order.mrchnt_address.toString())), /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            className: \"acell\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 81\n            }\n          }, order.recpnt_address.toString()), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"tTip\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 129\n            }\n          }, order.recpnt_address.toString())), /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 49\n            }\n          }, order.driver_name), /*#__PURE__*/React.createElement(\"td\", {\n            abbr: \"tr\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: shoppedLateCls,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 52\n            }\n          }, shoppedLate)), /*#__PURE__*/React.createElement(\"td\", {\n            className: \"react-contextmenu-wrapper\",\n            id: \"some_unique_identifier\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: clsName,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 52\n            }\n          }, order.tsk_status)), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 49\n            }\n          }, !!order.track_driver && order.tsk_status !== 'Completed' ? /*#__PURE__*/React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              return _this.props.openTrackWindow(e, {\n                current_url: order.current_url,\n                track_driver: order.track_driver\n              });\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 58\n            }\n          }, \"Track Driver\") : null));\n        })))));\n      }) : /*#__PURE__*/React.createElement(\"section\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-records\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }\n      }, \"No Records\"));\n    }\n  }]);\n\n  return UncategorizedList;\n}(Component);\n\nexport { UncategorizedList as default };","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Dashboard/stateWiseList.js"],"names":["React","Component","getStatusClass","getTaskStatus","isEmpty","isEqual","map","_map","convertTwoDecimalRound","UncategorizedList","props","tasks","shoppedLateData","shoppedLate","shoppedLateSummary","summary","Object","keys","item","i","task","orderList","orders","totalShopped","shoppedLatePerc","stateSummary","name","type","total_orders","shopped_late","shopping_late_percent","total","ready","shopping","not_ready","order","oIndex","ordClsName","order_status","shoppedLateCls","clsName","tsk_status","e","handleContextMenu","order_number","order_id","id","order_uuid","uuid","mrchnt_address","recpnt_address","complete_after","complete_before","toString","driver_name","track_driver","openTrackWindow","current_url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,GAAG,IAAIC,IAAlC,QAA8C,QAA9C;AACA,SAASC,sBAAT,QAAuC,qBAAvC;;IAEqBC,iB;;;;;AAClB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACVA,KADU;AAElB;;;;6BAEQ;AAAA;;AACN,UAAIC,KAAK,GAA8B,KAAKD,KAAL,CAAWC,KAAX,IAAoB,EAA3D,CADM,CAEN;;AACA,UAAIC,eAAe,GAAoB,KAAKF,KAAL,CAAWG,WAAX,IAA0B,EAAjE;AACA,UAAIC,kBAAkB,GAAiBF,eAAe,CAACG,OAAhB,IAA2B,EAAlE;AACA,aACI,CAACX,OAAO,CAACO,KAAD,CAAT,GACGK,MAAM,CAACC,IAAP,CAAYN,KAAK,IAAI,EAArB,EAAyBL,GAAzB,CAA6B,UAACY,IAAD,EAAOC,CAAP,EAAa;AACvC,YAAIC,IAAI,GAAsBT,KAAK,CAACO,IAAD,CAAL,IAAe,EAA7C;AACA,YAAIG,SAAS,GAAiBD,IAAI,CAACE,MAAL,IAAe,EAA7C,CAFuC,CAGvC;;AAEA,YAAIT,WAAW,GAAe,CAA9B;AACA,YAAIU,YAAY,GAAc,CAA9B;AACA,YAAIC,eAAe,GAAW,CAA9B;AACA,YAAIC,YAAY,GAAcX,kBAAkB,CAACM,IAAI,CAACM,IAAN,CAAhD,CARuC,CASvC;;AACA,YAAG,CAACtB,OAAO,CAACqB,YAAD,CAAR,IAA0Bb,eAAe,CAACe,IAAhB,KAAyB,OAAtD,EAA+D;AAC5DJ,UAAAA,YAAY,GAAeE,YAAY,CAACG,YAAxC;AACAf,UAAAA,WAAW,GAAgBY,YAAY,CAACI,YAAxC;AACAL,UAAAA,eAAe,GAAYhB,sBAAsB,CAACiB,YAAY,CAACK,qBAAd,CAAjD;AACF;;AACD,4BACM;AAAS,UAAA,GAAG,EAAEX,CAAd;AAAiB,UAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoC;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BC,IAAI,CAACM,IAA/B,CAApC,eACG;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoCN,IAAI,CAACW,KAAzC,CADH,eAEG;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCX,IAAI,CAACY,KAAxC,CAFH,eAGG;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuCZ,IAAI,CAACa,QAA5C,CAHH,eAIG;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsCb,IAAI,CAACc,SAA3C,CAJH,eAKG;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0CV,eAA1C,SAA8DX,WAA9D,OAA4EU,YAA5E,MALH,CADH,CADH,CADH,CADH,eAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHH,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALH,eAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANH,eAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPH,eAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARH,CADH,EAYMF,SAAS,CAACf,GAAV,CAAc,UAAC6B,KAAD,EAAQC,MAAR,EAAmB;AAC9B,cAAIC,UAAU,GAAM,EAApB;;AACA,cAAGF,KAAK,CAACG,YAAN,KAAuB,GAAvB,IAA8BH,KAAK,CAACG,YAAN,KAAuB,GAArD,IAA4DH,KAAK,CAACG,YAAN,KAAuB,GAAtF,EAA0F;AACpFD,YAAAA,UAAU,GAAM,OAAhB;AACL,WAFD,MAEO,IAAGF,KAAK,CAACG,YAAN,KAAuB,GAA1B,EAA+B;AAChCD,YAAAA,UAAU,GAAM,UAAhB;AACL,WAFM,MAGF;AACCA,YAAAA,UAAU,GAAM,WAAhB;AACL;;AACD,cAAIxB,WAAW,GAAY,IAA3B;AACA,cAAI0B,cAAc,GAAS,QAA3B;;AACA,cAAGJ,KAAK,CAACtB,WAAN,GAAoB,CAAvB,EAA0B;AACvBA,YAAAA,WAAW,GAAMsB,KAAK,CAACtB,WAAN,GAAoB,MAArC;AACA,gBAAGsB,KAAK,CAACtB,WAAN,IAAqB,EAAxB,EACG0B,cAAc,GAAO,OAArB,CADH,KAGGA,cAAc,GAAO,SAArB;AACL,WAlB6B,CAmB9B;;;AACA,cAAIC,OAAO,GAAOtC,cAAc,CAACiC,KAAK,CAACM,UAAP,CAAhC;AACA,8BACM;AACG,YAAA,GAAG,EAAEL,MADR;AAEG,YAAA,aAAa,EAAE,uBAACM,CAAD;AAAA,qBAAO,KAAI,CAAChC,KAAL,CAAWiC,iBAAX,CAA6BD,CAA7B,EAAgC;AACnDE,gBAAAA,YAAY,EAAET,KAAK,CAACS,YAD+B;AAEnDC,gBAAAA,QAAQ,EAAEV,KAAK,CAACW,EAFmC;AAGnDC,gBAAAA,UAAU,EAAEZ,KAAK,CAACa,IAHiC;AAInDP,gBAAAA,UAAU,EAAEN,KAAK,CAACM,UAJiC;AAKnDQ,gBAAAA,cAAc,EAAEd,KAAK,CAACc,cAL6B;AAMnDC,gBAAAA,cAAc,EAAEf,KAAK,CAACe;AAN6B,eAAhC,CAAP;AAAA,aAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAUG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG;AAAM,YAAA,SAAS,kBAAWb,UAAX,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEIF,KAAK,CAACS,YAFV,CAVH,eAcG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAeT,KAAK,CAACgB,cAArB,SAAwChB,KAAK,CAACiB,eAA9C,CAdH,eAeG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAc,YAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQjB,KAAK,CAACc,cAAN,CAAqBI,QAArB,EAAR,CAAhC,oBAAiF;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwBlB,KAAK,CAACc,cAAN,CAAqBI,QAArB,EAAxB,CAAjF,CAfH,eAgBG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAc,YAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQlB,KAAK,CAACe,cAAN,CAAqBG,QAArB,EAAR,CAAhC,eAAgF;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwBlB,KAAK,CAACe,cAAN,CAAqBG,QAArB,EAAxB,CAAhF,CAhBH,eAiBG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAelB,KAAK,CAACmB,WAArB,CAjBH,eAkBG;AAAI,YAAA,IAAI,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG;AAAM,YAAA,SAAS,EAAEf,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkC1B,WAAlC,CADH,CAlBH,eAqBG;AAAI,YAAA,SAAS,EAAC,2BAAd;AAA0C,YAAA,EAAE,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG;AAAM,YAAA,SAAS,EAAE2B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2BL,KAAK,CAACM,UAAjC,CADH,CArBH,eAwBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEU,CAAC,CAACN,KAAK,CAACoB,YAAR,IAAwBpB,KAAK,CAACM,UAAN,KAAqB,WAA9C,gBACA;AAAG,YAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,qBAAQ,KAAI,CAAChC,KAAL,CAAW8C,eAAX,CAA2Bd,CAA3B,EAA8B;AAC/Ce,gBAAAA,WAAW,EAAEtB,KAAK,CAACsB,WAD4B;AAE/CF,gBAAAA,YAAY,EAAEpB,KAAK,CAACoB;AAF2B,eAA9B,CAAR;AAAA,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,GAIuB,IANhC,CAxBH,CADN;AAoCF,SAzDD,CAZN,CAdH,CADH,CADH,CADN;AA6FF,OA5GD,CADH,gBA6GS;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7B,CA9GZ;AAgHF;;;;EA1H2CtD,S;;SAA1BQ,iB","sourcesContent":["import React, {Component} from 'react';\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport { convertTwoDecimalRound } from '../../Helper/common';\n\nexport default class UncategorizedList extends Component {\n   constructor(props) {\n      super(props);\n   }\n\n   render() {\n      let tasks                           =  this.props.tasks || {};\n      //console.log('shoppedLate', this.props.shoppedLate);\n      let shoppedLateData                 =  this.props.shoppedLate || {};\n      let shoppedLateSummary              =  shoppedLateData.summary || {};\n      return (\n         (!isEmpty(tasks)) ?\n            Object.keys(tasks || {}).map((item, i) => {\n               let task                   =  tasks[item] || [];\n               let orderList              =  task.orders || [];\n               //let shoppedLatePerc      =  convertTwoDecimalRound((task.totShoppedLate > 0 && task.total >= 0) ? (task.totShoppedLate * 100)/task.total : 0);\n               \n               let shoppedLate            =  0;\n               let totalShopped           =  0;\n               let shoppedLatePerc        =  0;\n               let stateSummary           =  shoppedLateSummary[task.name];\n               //console.log(stateSummary, !isEmpty(stateSummary));\n               if(!isEmpty(stateSummary) && shoppedLateData.type === 'state') {\n                  totalShopped            =  stateSummary.total_orders;\n                  shoppedLate             =  stateSummary.shopped_late;\n                  shoppedLatePerc         =  convertTwoDecimalRound(stateSummary.shopping_late_percent);\n               }\n               return (\n                     <section key={i} className=\"content\">\n                        <div className=\"table_sec dboardtable\">\n                           <table>\n                              <thead>\n                                 <tr>\n                                    <th colSpan=\"8\" className=\"t-titel\"><span className=\"aOrder\">{task.name}</span>\n                                       <div className=\"status_count\">\n                                          <span className=\"fc_black\"> Total: {task.total}</span>\n                                          <span className=\"fc_green\">Ready: {task.ready}</span>\n                                          <span className=\"fc_yellow\">Shopping: {task.shopping}</span>\n                                          <span className=\"fc_read\">Not Ready: {task.not_ready}</span>\n                                          <span className=\"fc_gray\"> Shopped Late: {shoppedLatePerc}% ({shoppedLate}/{totalShopped})</span>\n                                       </div>\n                                    </th>\n                                 </tr>\n                              </thead>\n                              <tbody>\n                                 <tr className=\"t-heading\">\n                                    <th>Order Number</th>\n                                    <th>Delivery Window</th>\n                                    <th>Merchant Address</th>\n                                    <th>Recipient Address</th>\n                                    <th>Driver</th>\n                                    <th>Shopped Late</th>\n                                    <th>Task Status</th>\n                                    <th></th>\n                                 </tr>\n                                 {\n                                    orderList.map((order, oIndex) => {\n                                       let ordClsName  =   '';\n                                       if(order.order_status === 'R' || order.order_status === 'F' || order.order_status === 'Y'){\n                                             ordClsName  =   'ready';\n                                       } else if(order.order_status === 'W') {\n                                             ordClsName  =   'shopping';\n                                       }\n                                       else {\n                                             ordClsName  =   'not_ready';\n                                       }\n                                       let shoppedLate         =  'No';\n                                       let shoppedLateCls      =  'fcGray';\n                                       if(order.shoppedLate > 0) {\n                                          shoppedLate    = order.shoppedLate + ' min';\n                                          if(order.shoppedLate >= 30)\n                                             shoppedLateCls    =  'fcRed';\n                                          else \n                                             shoppedLateCls    =  'fcBlack';\n                                       }\n                                       //console.log('Onfleet : ', order.order_status, ordClsName);\n                                       let clsName    =  getStatusClass(order.tsk_status);\n                                       return (\n                                             <tr\n                                                key={oIndex}\n                                                onContextMenu={(e) => this.props.handleContextMenu(e, {\n                                                   order_number: order.order_number,\n                                                   order_id: order.id,\n                                                   order_uuid: order.uuid,\n                                                   tsk_status: order.tsk_status,\n                                                   mrchnt_address: order.mrchnt_address,\n                                                   recpnt_address: order.recpnt_address\n                                                })}>\n                                                <td abbr=\"tr\">\n                                                   <span className={`round ${ordClsName}`}></span>\n                                                   {order.order_number}\n                                                </td>\n                                                <td abbr=\"tr\">{order.complete_after} - {order.complete_before}</td>\n                                                <td abbr=\"tr\" className=\"acell\"><label>{order.mrchnt_address.toString()}</label> <span className=\"tTip\">{order.mrchnt_address.toString()}</span></td>\n                                                <td abbr=\"tr\" className=\"acell\"><label>{order.recpnt_address.toString()}</label><span className=\"tTip\">{order.recpnt_address.toString()}</span></td>\n                                                <td abbr=\"tr\">{order.driver_name}</td>\n                                                <td abbr=\"tr\">\n                                                   <span className={shoppedLateCls}>{shoppedLate}</span>\n                                                </td>\n                                                <td className=\"react-contextmenu-wrapper\" id=\"some_unique_identifier\">\n                                                   <span className={clsName}>{order.tsk_status}</span>                           \n                                                </td>\n                                                <td>\n                                                   {\n                                                         (!!order.track_driver && order.tsk_status !== 'Completed') ? \n                                                         <a onClick={(e)  => this.props.openTrackWindow(e, {\n                                                            current_url: order.current_url,\n                                                            track_driver: order.track_driver\n                                                         })}>Track Driver</a> : null\n                                                   }\n                                                </td>\n                                             </tr>\n                                       )\n                                    })\n                                 }\n                                 </tbody>\n                           </table>\n                        </div>  \n                     </section>\n               )\n            })  : <section className=\"content\"><div className=\"no-records\">No Records</div></section>\n      )\n   }\n}"]},"metadata":{},"sourceType":"module"}