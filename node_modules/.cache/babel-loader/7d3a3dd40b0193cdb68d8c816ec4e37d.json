{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Feedbacks/feedbackAdvanceFilter.js\";\nimport React from 'react';\nimport ReplyModal from './replyModal';\nimport moment from 'moment-timezone';\nimport { Card, Col, Row, Form } from 'reactstrap';\nimport TaskDetailsModal from './taskDetailsModal';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nvar FeedBackAdvanceFilter = /*#__PURE__*/function (_React$Component) {\n  _inherits(FeedBackAdvanceFilter, _React$Component);\n\n  var _super = _createSuper(FeedBackAdvanceFilter);\n\n  function FeedBackAdvanceFilter(props) {\n    var _this;\n\n    _classCallCheck(this, FeedBackAdvanceFilter);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      typeOpen: false,\n      showSearch: false,\n      search: {\n        text: '',\n        merchant_address: '',\n        recipient_address: '',\n        start_time: '',\n        end_time: '',\n        type: 'order-number',\n        field: 'order_number',\n        label: 'Order Number'\n      },\n      repliedIds: [],\n      replyModalShow: false,\n      orderDetailsModalShow: false\n    };\n    _this.collapse = _this.collapse.bind(_assertThisInitialized(_this));\n    _this.resetSearch = _this.resetSearch.bind(_assertThisInitialized(_this));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_this));\n    _this.handleSelectbox = _this.handleSelectbox.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FeedBackAdvanceFilter, [{\n    key: \"collapse\",\n    value: function collapse(type) {\n      this.setState({\n        typeOpen: false\n      });\n    }\n  }, {\n    key: \"handleSelectbox\",\n    value: function handleSelectbox(cls) {\n      this.setState(_defineProperty({}, cls, !this.state[cls]));\n    }\n  }, {\n    key: \"resetSearch\",\n    value: function resetSearch() {\n      this.setState({\n        search: {\n          text: '',\n          merchant_address: '',\n          recipient_address: '',\n          delivery_time: '',\n          start_date: '',\n          end_date: '',\n          type: 'order-number',\n          field: 'order_number',\n          label: 'Order Number'\n        },\n        searchResultList: []\n      });\n    }\n  }, {\n    key: \"changeSearchType\",\n    value: function changeSearchType(data) {\n      this.setState({\n        search: {\n          type: data.type,\n          label: data.label,\n          field: data.field,\n          text: ''\n        }\n      });\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(e) {\n      var value = e.target.value;\n      this.setState({\n        search: _objectSpread(_objectSpread({}, this.state.search), {}, {\n          text: e.target.value\n        })\n      }, function () {\n        if (value.length > 1) {\n          var _this$props$searchFil;\n\n          this.props.searchFilter((_this$props$searchFil = {\n            type: this.state.search.type\n          }, _defineProperty(_this$props$searchFil, this.state.search.field, value), _defineProperty(_this$props$searchFil, \"user_type\", this.props.type), _this$props$searchFil));\n        } else {\n          this.setState({\n            searchResultList: []\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        replyModalShow: false,\n        orderDetailsModalShow: false\n      });\n    }\n  }, {\n    key: \"handleOpenModal\",\n    value: function handleOpenModal(e, type, ordObj) {\n      e.stopPropagation();\n\n      if (type === 'REPLY') {\n        this.setState({\n          replyModalShow: true,\n          taskDetails: ordObj\n        });\n      } else if (type === 'ORDERDETAILS') {\n        this.setState({\n          orderDetailsModalShow: true,\n          taskDetails: ordObj\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      if (props.replyResult && props.replyResult !== this.props.replyResult) {\n        var repliedIds = this.state.repliedIds || [];\n        repliedIds.push(props.replyResult.task_id);\n        this.setState({\n          replyModalShow: false,\n          orderDetailsModalShow: false,\n          repliedIds: repliedIds\n        });\n      }\n\n      this.setState({\n        isSearching: props.isSearching,\n        searchResultList: props.searchResultList,\n        showSearch: props.showSearch\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isSearching = _this$state.isSearching,\n          searchResultList = _this$state.searchResultList,\n          replyModalShow = _this$state.replyModalShow,\n          showSearch = _this$state.showSearch,\n          orderDetailsModalShow = _this$state.orderDetailsModalShow,\n          repliedIds = _this$state.repliedIds,\n          taskDetails = _this$state.taskDetails; // console.log('!!!!repliedIds!!!!!', repliedIds);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchMod_sec\".concat(!!showSearch ? '' : ' hide'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"s_bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, \"Search by:\"), /*#__PURE__*/React.createElement(Form, {\n        method: \"get\",\n        action: \"\",\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select-box \".concat(this.state.typeOpen ? \" sopen\" : \" \"),\n        onBlur: function onBlur() {\n          return _this2.collapse('typeOpen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"s-result\",\n        onClick: function onClick() {\n          return _this2.handleSelectbox('typeOpen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        value: this.state.search.label,\n        onChange: function onChange() {\n          return _this2.handleSelectbox('typeOpen');\n        },\n        name: \"searchType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.changeSearchType({\n            type: 'order-number',\n            field: 'order_number',\n            label: 'Order Number'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, \"Order Number\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.changeSearchType({\n            type: 'name',\n            field: 'name',\n            label: 'Customer Name'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, \"Customer Name\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.changeSearchType({\n            type: 'email',\n            field: 'email',\n            label: 'Customer Email'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, \"Customer Email\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resboxwrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"Search\",\n        name: \"searchTxt\",\n        value: this.state.search.text,\n        onChange: this.handleSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 24\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.resetSearch,\n        className: \"reset_btn\",\n        type: \"reset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      }, \"Reset\")))), !isEmpty(searchResultList) && searchResultList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table_sec feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 41\n        }\n      }, \"Order Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 41\n        }\n      }, \"Customer Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 41\n        }\n      }, \"Date \\xB7 Time\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 41\n        }\n      }, \"Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 41\n        }\n      }, \"Comments\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 41\n        }\n      }, \"Follow Up\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, searchResultList.length > 0 && searchResultList.map(function (el, index) {\n        var starObj = [];\n        var rate = el.rating ? parseInt(el.rating) : 0;\n\n        for (var i = 0; i < rate; i++) {\n          starObj.push( /*#__PURE__*/React.createElement(\"img\", {\n            key: \"star-sm-\".concat(i),\n            src: \"/assets/star-sm.svg\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 62\n            }\n          }));\n        } // let date = moment(el.time_stamp).format(\"YYYY-MM-DD\");\n\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: \"feedback-list-\".concat(index),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 53\n          }\n        }, el.tp_order_number, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"docmodbtn\",\n          onClick: function onClick(e) {\n            return _this2.handleOpenModal(e, 'ORDERDETAILS', el.order_details);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 78\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/doc.svg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 182\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 53\n          }\n        }, el.cust_first_name, \" \", el.cust_last_name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 53\n          }\n        }, el.time_stamp), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"starRange\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 57\n          }\n        }, starObj)), /*#__PURE__*/React.createElement(\"td\", {\n          abbr: \"tr\",\n          className: \"acell\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 57\n          }\n        }, el.comment), el.comment ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"tTip\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 61\n          }\n        }, el.comment) : null), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 53\n          }\n        }, el.reply === \"true\" || repliedIds.indexOf(el.order_details.id) > -1 ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fbReply\",\n          style: {\n            cursor: 'default'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/checkmark-black.svg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 115\n          }\n        })) : /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fbReply\",\n          onClick: function onClick(e) {\n            return _this2.handleOpenModal(e, 'REPLY', el);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 61\n          }\n        }, \"Reply\")));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resultCount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }, searchResultList.length, \" SEARCH RESULT(S)\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"t_result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"noresult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 30\n        }\n      }, \"Type to search and relevant results will appear\"), !!replyModalShow ? /*#__PURE__*/React.createElement(ReplyModal, {\n        reply: this.props.reply,\n        isReplying: this.props.isReplying,\n        replyModalShow: replyModalShow,\n        handleCloseModal: this.handleCloseModal.bind(this),\n        taskDetails: taskDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }) : null, !!orderDetailsModalShow ? /*#__PURE__*/React.createElement(TaskDetailsModal, {\n        isReplying: this.props.isReplying,\n        orderDetailsModalShow: orderDetailsModalShow,\n        handleCloseModal: this.handleCloseModal.bind(this),\n        taskDetails: taskDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }) : null);\n    }\n  }]);\n\n  return FeedBackAdvanceFilter;\n}(React.Component);\n\n;\nexport default FeedBackAdvanceFilter;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Feedbacks/feedbackAdvanceFilter.js"],"names":["React","ReplyModal","moment","Card","Col","Row","Form","TaskDetailsModal","isEmpty","isEqual","map","_map","FeedBackAdvanceFilter","props","state","typeOpen","showSearch","search","text","merchant_address","recipient_address","start_time","end_time","type","field","label","repliedIds","replyModalShow","orderDetailsModalShow","collapse","bind","resetSearch","handleSearch","handleSelectbox","setState","cls","delivery_time","start_date","end_date","searchResultList","data","e","value","target","length","searchFilter","ordObj","stopPropagation","taskDetails","replyResult","push","task_id","isSearching","changeSearchType","el","index","starObj","rate","rating","parseInt","i","tp_order_number","handleOpenModal","order_details","cust_first_name","cust_last_name","time_stamp","comment","reply","indexOf","id","cursor","isReplying","handleCloseModal","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReplyModal from './replyModal';\nimport moment from 'moment-timezone';\nimport { Card, Col, Row, Form } from 'reactstrap';\nimport TaskDetailsModal from './taskDetailsModal';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\n\nclass FeedBackAdvanceFilter extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttypeOpen: false,\n            showSearch: false,\n\t\t\tsearch: {\n                text                :   '',\n                merchant_address    :   '',\n                recipient_address   :   '',\n                start_time          :   '',\n                end_time            :   '',\n                type                :   'order-number',\n                field               :  'order_number',\n                label               :   'Order Number'\n            },\n            repliedIds: [],    \n            replyModalShow: false,\n            orderDetailsModalShow: false\n\t\t};\n\n\t\tthis.collapse = this.collapse.bind(this);\n\t\tthis.resetSearch = this.resetSearch.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n\t\tthis.handleSelectbox = this.handleSelectbox.bind(this);    \n\t};\n\n\tcollapse(type) {\n        this.setState({ typeOpen: false });\n    }; \t\n\n\thandleSelectbox(cls) {\n        this.setState({ [cls]: !this.state[cls] });\n    };\n\n    resetSearch() {\n        this.setState({\n            search: {\n                text                :  '',\n                merchant_address    :  '',\n                recipient_address   :  '',\n                delivery_time       :  '',\n                start_date          :  '',\n                end_date            :  '',\n                type                :  'order-number',\n                field               :  'order_number',\n                label               :  'Order Number'\n            },\n            searchResultList            : []\n        });\n    };\n\n    changeSearchType(data) {\n        this.setState({ search: { type: data.type, label: data.label, field: data.field, text: '' }});\n    }; \n\n    handleSearch(e) {\n        let value = e.target.value;\n        this.setState({\n            search: { ...this.state.search, text: e.target.value }\n        }, function () {\n            if (value.length > 1){             \n                this.props.searchFilter({\n                    type: this.state.search.type,\n                    [this.state.search.field]: value,\n                    user_type: this.props.type\n                });\n            } else {\n                this.setState({\n                    searchResultList: []\n                })\n            }\n        })\n    }; \n\n    handleCloseModal(){\n        this.setState({ replyModalShow: false, orderDetailsModalShow: false });\n    };\n\n    handleOpenModal(e, type, ordObj){\n        e.stopPropagation();\n        \n        if(type === 'REPLY'){\n            this.setState({ replyModalShow: true, taskDetails: ordObj });\n        } else if(type === 'ORDERDETAILS'){\n            this.setState({ orderDetailsModalShow: true, taskDetails: ordObj });\n        }\n    };\n\n    componentWillReceiveProps(props) {\n        if(props.replyResult && props.replyResult !== this.props.replyResult){\n            let repliedIds = this.state.repliedIds || [];\n            repliedIds.push(props.replyResult.task_id);\n\n            this.setState({ replyModalShow: false, orderDetailsModalShow: false, repliedIds: repliedIds });\n        }\n\n        this.setState({ isSearching: props.isSearching, searchResultList: props.searchResultList, showSearch: props.showSearch });\n    };\n\n\trender() {\n\t\tconst { isSearching, searchResultList, replyModalShow, showSearch, orderDetailsModalShow, repliedIds, taskDetails } = this.state;\t\t\n        // console.log('!!!!repliedIds!!!!!', repliedIds);\n        \n\t\treturn (\n\t\t\t<div className={`searchMod_sec${(!!showSearch) ? '' : ' hide'}`}>\n\t\t\t\t<div className=\"s_bar\">\n              \t\t<label>Search by:</label>\n              \t\t<Form method=\"get\" action=\"\" autoComplete=\"off\">\n              \t\t\t<div className={`select-box ${this.state.typeOpen ? \" sopen\" : \" \"}`} onBlur={() => this.collapse('typeOpen')}>\n\t              \t\t\t<div className=\"s-result\" onClick={() => this.handleSelectbox('typeOpen')}>\n\t                            <input type=\"text\" autoComplete=\"off\" value={this.state.search.label} onChange={() => this.handleSelectbox('typeOpen')} name=\"searchType\"/>\n\t                        </div>\n\t\t\t\t\t\t\t<ul>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\n                                    type: 'order-number',\n                                    field: 'order_number',\n                                    label: 'Order Number'\n                                })}>Order Number</li>\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\n                                    type: 'name',\n                                    field: 'name',\n                                    label: 'Customer Name'\n                                })}>Customer Name</li>\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\n                                    type: 'email',\n                                    field: 'email',\n                                    label: 'Customer Email'\n                                })}>Customer Email</li>\n\t\t\t\t\t\t\t</ul>\n                    \t</div>\n\n                    \t<div className=\"resboxwrap\">\n                    \t\t<div className=\"search_box\">\n                    \t\t\t<input type=\"text\"autoComplete=\"off\" placeholder=\"Search\" name=\"searchTxt\" value={this.state.search.text} onChange={this.handleSearch} />\n                    \t\t</div>\n\n                    \t\t<button onClick={this.resetSearch} className=\"reset_btn\" type=\"reset\">Reset</button>\n                     \t</div>\n              \t\t</Form>\n               </div>\n\n               {\n                    (!isEmpty(searchResultList) && searchResultList.length > 0) ? \n                    <div>\n                        <div className=\"table_sec feed\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Order Number</th>\n                                        <th>Customer Name</th>\n                                        <th>Date · Time</th>\n                                        <th>Rating</th>\n                                        <th>Comments</th>\n                                        <th>Follow Up</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {\n                                        (searchResultList.length > 0) && searchResultList.map((el, index) => {\n                                            let starObj = [];\n                                            let rate = (el.rating)?parseInt(el.rating):0;\n                                            \n                                            for (let i = 0; i < rate; i++) {\n                                                starObj.push(<img key={`star-sm-${i}`} src=\"/assets/star-sm.svg\" />);\n                                            }\n\n                                            // let date = moment(el.time_stamp).format(\"YYYY-MM-DD\");\n                                            return (\n                                                <tr key={`feedback-list-${index}`}>\n                                                    <td>{el.tp_order_number} <span className=\"docmodbtn\" onClick={(e)  => this.handleOpenModal(e, 'ORDERDETAILS', el.order_details)}><img src=\"/assets/doc.svg\" /></span></td>\n                                                    <td>{el.cust_first_name} {el.cust_last_name}</td>\n                                                    <td>{el.time_stamp}</td>\n                                                    <td><div className=\"starRange\">{starObj}</div></td>\n                                                    <td abbr=\"tr\" className=\"acell\">\n                                                        <label>{el.comment}</label>\n                                                        {\n                                                            (el.comment)?\n                                                            <span className=\"tTip\">{el.comment}</span>:null\n                                                        }\n\n                                                    </td>\n                                                    <td>\n                                                        {\n                                                            (el.reply === \"true\" || (repliedIds.indexOf(el.order_details.id) > -1))?\n                                                            <span className=\"fbReply\" style={{cursor: 'default'}}><img src=\"/assets/checkmark-black.svg\" /></span>\n                                                            :\n                                                            <span className=\"fbReply\" onClick={(e)  => this.handleOpenModal(e, 'REPLY', el)}>Reply</span>\n                                                        }   \n                                                    </td>\n                                                </tr>   \n                                            )\n                                        })\n                                    }                                           \n                                </tbody>\n                            </table>                        \n                        </div>\n\n                        <div className=\"resultCount\">{searchResultList.length} SEARCH RESULT(S)</div>\n                        <div className=\"t_result\"></div>\n                    </div> : <div className=\"noresult\">Type to search and relevant results will appear</div>\n                }   \n\n                {\n                    (!!replyModalShow) ?\n                    <ReplyModal reply={this.props.reply} isReplying={this.props.isReplying} replyModalShow={replyModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\n                } \n\n                {\n                    (!!orderDetailsModalShow) ?\n                    <TaskDetailsModal isReplying={this.props.isReplying} orderDetailsModalShow={orderDetailsModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\n                }\n\t\t\t</div>\t\n\t\t);\n\t};\n};\n\nexport default FeedBackAdvanceFilter;"]},"metadata":{},"sourceType":"module"}