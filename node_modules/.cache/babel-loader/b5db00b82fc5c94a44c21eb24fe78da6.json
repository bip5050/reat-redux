{"ast":null,"code":"import _regeneratorRuntime from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(get_history),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(exportTaskCsv),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchTaskHistoryStore);import{takeEvery,put,call}from'redux-saga/effects';import*as taskHistoryConstant from'../constants';import{error as notifyerror}from'../../../util/notify';import*as taskHistoryAction from'../actions';import{callApiV2}from'../../../Helper/api';import*as _ from'lodash';import{getDateTime,getSysDateTime}from'../../../Helper/common';import*as headerAction from'../../Header/actions';//Get History\nexport function get_history(action){var url,actionData,data,filtered,payload,result,tasks,storeName,temp,_temp;return _regeneratorRuntime.wrap(function get_history$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;url='';url=\"tasks/history\";actionData=action.data;//let filterData      =   getFilter('history');\n//console.log('Filter Data : ', actionData);\n_context.next=6;return put(headerAction.syncFilter({key:actionData.filter.key||'history',value:JSON.parse(actionData.filter.value||'{}')}));case 6:data={user_type:actionData.type,page:actionData.pageno,start:actionData.start,end:actionData.end,value_one:actionData.value_one,value_two:actionData.value_two,filter:actionData.filter};//console.log(actionData.storeName);\nfiltered=['state','zone','store-id'].includes(data.value_one)?false:true;_context.next=10;return call(callApiV2,'POST',url,data);case 10:payload=_context.sent;if(!payload.data.error){_context.next=14;break;}_context.next=14;return put(taskHistoryAction.listenHistoryError());case 14:if(!payload.data.result){_context.next=20;break;}result=payload.data.result;tasks={};//console.log('Length : ', result.tasks.length);\nif(actionData.value_one==='store-id'){if(result.tasks.length>0){storeName=actionData.storeName;result.tasks.map(function(val,key){//console.log('Value : ', val);\nvar recipient_sig=false;var track_driver='';var current_url='';//console.log(val, key)\nvar tskStatus='Scheduled';if(val.tskStatus==='tsk_proc_hld'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_mrchnt'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_drv'&&val.driverStatus==='drv_strt_recpnt_tsk'){tskStatus='Picked Up';}else if(val.tskStatus==='tsk_proc_drv'){tskStatus='Processing';}else if(val.tskStatus==='tsk_cmp'){tskStatus='Completed';}else if(val.tskStatus==='tsk_cncling'){tskStatus='Deleted';}else if(val.tskStatus==='tsk_cncled'){tskStatus='Deleted';}var dt=val.timeCreated.split('T');var d=dt[0].split('-');var created_at=d[1]+'/'+d[2]+'/'+d[0];var completeafter='';var completebefore='';if(val.timezone!==''){completeafter=getDateTime(parseInt(val.completeAfter)*1000,val.timezone,'MM/DD · hh:mma');completebefore=getDateTime(parseInt(val.completeBefore)*1000,val.timezone,'hh:mma');}else{completeafter=getSysDateTime(parseInt(val.completeAfter)*1000,'MM/DD · hh:mma');completebefore=getSysDateTime(parseInt(val.completeBefore)*1000,'hh:mma');}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!!val.pickup_onfleet_url){track_driver='Driver to Merchant';current_url=val.pickup_onfleet_url;}if(!!val.drop_onfleet_url){track_driver='Driver to Recipient';current_url=val.drop_onfleet_url;}if(!!!tasks[val.state_code]){tasks[val.state_code]={};tasks[val.state_code][val.store_id]={name:storeName[val.store_id],id:val.state_code+val.store_id,orders:[]};}else{if(!!!tasks[val.state_code][val.store_id]){tasks[val.state_code][val.store_id]={name:storeName[val.store_id],id:val.state_code+val.store_id,orders:[]};}}tasks[val.state_code][val.store_id].orders.push({created_at:created_at,timestamp:val.completeAfter,complete_after:completeafter,complete_before:completebefore,recpnt_address:val.recipients.address,mrchnt_address:val.merchant.address,mrchnt_notes:val.merchant.notes,recpnt_notes:val.recipients.notes,tsk_status:tskStatus,uuid:val.uuid,order_number:val.orderNumber,driver_name:val.driver_name,recipient_sig:recipient_sig,timezone:val.timezone,mrchnt_location:val.merchant.location,recpnt_location:val.recipients.location,drop_onfleet_url:val.drop_onfleet_url||'',pickup_onfleet_url:val.pickup_onfleet_url||'',track_driver:track_driver,current_url:current_url,tip:val.tip,state_code:val.state_code,store_id:val.store_id,mkt_ofc_cty_del_zne_id:val.mkt_ofc_cty_del_zne_id});});}temp={};_.each(tasks,function(val,key){_.each(val,function(vz,kz){tasks[key][kz].orders=_.orderBy(tasks[key][kz].orders,[function(o){return o.timestamp;}],['desc']);});temp[key]=_.sortBy(tasks[key],function(o){return o.name;});});tasks=temp;}else if(actionData.value_one==='state'){if(result.tasks.length>0){result.tasks.map(function(val,key){//console.log('Value : ', val);\nvar recipient_sig=false;var track_driver='';var current_url='';//console.log(val, key)\nvar tskStatus='Scheduled';if(val.tskStatus==='tsk_proc_hld'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_mrchnt'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_drv'&&val.driverStatus==='drv_strt_recpnt_tsk'){tskStatus='Picked Up';}else if(val.tskStatus==='tsk_proc_drv'){tskStatus='Processing';}else if(val.tskStatus==='tsk_cmp'){tskStatus='Completed';}else if(val.tskStatus==='tsk_cncling'){tskStatus='Deleted';}else if(val.tskStatus==='tsk_cncled'){tskStatus='Deleted';}var dt=val.timeCreated.split('T');var d=dt[0].split('-');var created_at=d[1]+'/'+d[2]+'/'+d[0];var completeafter='';var completebefore='';if(val.timezone!==''){completeafter=getDateTime(parseInt(val.completeAfter)*1000,val.timezone,'MM/DD · hh:mma');completebefore=getDateTime(parseInt(val.completeBefore)*1000,val.timezone,'hh:mma');}else{completeafter=getSysDateTime(parseInt(val.completeAfter)*1000,'MM/DD · hh:mma');completebefore=getSysDateTime(parseInt(val.completeBefore)*1000,'hh:mma');}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!!val.pickup_onfleet_url){track_driver='Driver to Merchant';current_url=val.pickup_onfleet_url;}if(!!val.drop_onfleet_url){track_driver='Driver to Recipient';current_url=val.drop_onfleet_url;}/* if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                        name        :   val.mkt_ofc_cty_del_zne_name,\n                                        id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                        orders      :   []\n                            };\n                        } else {\n                            if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                    name        :   val.mkt_ofc_cty_del_zne_name,\n                                    id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                    orders      :   []\n                                };\n                            }\n                        } */if(!!!tasks[val.state_code]){tasks[val.state_code]={name:val.state_code,orders:[]};}//console.log(tasks[val.state_code]);\ntasks[val.state_code].orders.push({created_at:created_at,timestamp:val.completeAfter,complete_after:completeafter,complete_before:completebefore,recpnt_address:val.recipients.address,mrchnt_address:val.merchant.address,mrchnt_notes:val.merchant.notes,recpnt_notes:val.recipients.notes,tsk_status:tskStatus,uuid:val.uuid,order_number:val.orderNumber,driver_name:val.driver_name,recipient_sig:recipient_sig,timezone:val.timezone,mrchnt_location:val.merchant.location,recpnt_location:val.recipients.location,drop_onfleet_url:val.drop_onfleet_url||'',pickup_onfleet_url:val.pickup_onfleet_url||'',track_driver:track_driver,current_url:current_url,tip:val.tip,state_code:val.state_code,mkt_ofc_cty_del_zne_id:val.mkt_ofc_cty_del_zne_id});});}_.each(tasks,function(val,key){tasks[key].orders=_.orderBy(tasks[key].orders,[function(o){return o.timestamp;}],['desc']);});}else if(actionData.value_one==='zone'){if(result.tasks.length>0){result.tasks.map(function(val,key){//console.log('Value : ', val);\nvar recipient_sig=false;var track_driver='';var current_url='';//console.log(val, key)\nvar tskStatus='Scheduled';if(val.tskStatus==='tsk_proc_hld'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_mrchnt'){tskStatus='Scheduled';}else if(val.tskStatus==='tsk_proc_drv'&&val.driverStatus==='drv_strt_recpnt_tsk'){tskStatus='Picked Up';}else if(val.tskStatus==='tsk_proc_drv'){tskStatus='Processing';}else if(val.tskStatus==='tsk_cmp'){tskStatus='Completed';}else if(val.tskStatus==='tsk_cncling'){tskStatus='Deleted';}else if(val.tskStatus==='tsk_cncled'){tskStatus='Deleted';}var dt=val.timeCreated.split('T');var d=dt[0].split('-');var created_at=d[1]+'/'+d[2]+'/'+d[0];var completeafter='';var completebefore='';if(val.timezone!==''){completeafter=getDateTime(parseInt(val.completeAfter)*1000,val.timezone,'MM/DD · hh:mma');completebefore=getDateTime(parseInt(val.completeBefore)*1000,val.timezone,'hh:mma');}else{completeafter=getSysDateTime(parseInt(val.completeAfter)*1000,'MM/DD · hh:mma');completebefore=getSysDateTime(parseInt(val.completeBefore)*1000,'hh:mma');}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!_.isEmpty(val.completionDetails.events)&&!!val.completionDetails.events.onflt_recpnt_sig){recipient_sig=true;}if(!!val.pickup_onfleet_url){track_driver='Driver to Merchant';current_url=val.pickup_onfleet_url;}if(!!val.drop_onfleet_url){track_driver='Driver to Recipient';current_url=val.drop_onfleet_url;}if(!!!tasks[val.state_code]){tasks[val.state_code]={};tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]={name:val.mkt_ofc_cty_del_zne_name,id:val.state_code+val.mkt_ofc_cty_del_zne_id,orders:[]};}else{if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]){tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]={name:val.mkt_ofc_cty_del_zne_name,id:val.state_code+val.mkt_ofc_cty_del_zne_id,orders:[]};}}tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({created_at:created_at,timestamp:val.completeAfter,complete_after:completeafter,complete_before:completebefore,recpnt_address:val.recipients.address,mrchnt_address:val.merchant.address,mrchnt_notes:val.merchant.notes,recpnt_notes:val.recipients.notes,tsk_status:tskStatus,uuid:val.uuid,order_number:val.orderNumber,driver_name:val.driver_name,recipient_sig:recipient_sig,timezone:val.timezone,mrchnt_location:val.merchant.location,recpnt_location:val.recipients.location,drop_onfleet_url:val.drop_onfleet_url||'',pickup_onfleet_url:val.pickup_onfleet_url||'',track_driver:track_driver,current_url:current_url,tip:val.tip,state_code:val.state_code,mkt_ofc_cty_del_zne_id:val.mkt_ofc_cty_del_zne_id});});}_temp={};_.each(tasks,function(val,key){_.each(val,function(vz,kz){tasks[key][kz].orders=_.orderBy(tasks[key][kz].orders,[function(o){return o.timestamp;}],['desc']);});_temp[key]=_.sortBy(tasks[key],function(o){return o.name;});});tasks=_temp;}else{tasks=result.tasks||[];//tasks                           =   _.orderBy(tasks, [o => o.completeAfter], ['desc'])\n}//console.log('Saga : ', tasks)\n//notifysuccess({message:result.message});\n_context.next=20;return put(taskHistoryAction.listenHistorySuccess({tasks:tasks,task_count:result.task_count,list_type:actionData.value_one}));case 20:_context.next=26;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);notifyerror(_context.t0);console.log(_context.t0.message);case 26:case\"end\":return _context.stop();}}},_marked,null,[[0,22]]);}export function exportTaskCsv(action){var actionData,data,payload;return _regeneratorRuntime.wrap(function exportTaskCsv$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;actionData=action.data;data={user_type:actionData.type,page:actionData.pageno,start:actionData.start,end:actionData.end,value_one:actionData.value_one,value_two:actionData.value_two};_context2.next=5;return call(callApiV2,'POST','tasks/download',data);case 5:payload=_context2.sent;if(!payload.data.error){_context2.next=9;break;}_context2.next=9;return put(taskHistoryAction.listenExportTaskCsvError());case 9:;if(!payload.data.result){_context2.next=13;break;}_context2.next=13;return put(taskHistoryAction.listenExportTaskCsvSuccess(payload.data.result));case 13:;_context2.next=20;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](0);notifyerror(_context2.t0);console.log(_context2.t0.message);case 20:case\"end\":return _context2.stop();}}},_marked2,null,[[0,16]]);};export function watchTaskHistoryStore(){return _regeneratorRuntime.wrap(function watchTaskHistoryStore$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return takeEvery(taskHistoryConstant.GET_HISTORY,get_history);case 3:_context3.next=5;return takeEvery(taskHistoryConstant.EXPORT_CSV_TASK_HISTORY,exportTaskCsv);case 5:_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_marked3,null,[[0,7]]);}","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/TaskHistory/Saga/index.js"],"names":["get_history","exportTaskCsv","watchTaskHistoryStore","takeEvery","put","call","taskHistoryConstant","error","notifyerror","taskHistoryAction","callApiV2","_","getDateTime","getSysDateTime","headerAction","action","url","actionData","data","syncFilter","key","filter","value","JSON","parse","user_type","type","page","pageno","start","end","value_one","value_two","filtered","includes","payload","listenHistoryError","result","tasks","length","storeName","map","val","recipient_sig","track_driver","current_url","tskStatus","driverStatus","dt","timeCreated","split","d","created_at","completeafter","completebefore","timezone","parseInt","completeAfter","completeBefore","isEmpty","completionDetails","events","onflt_recpnt_sig","pickup_onfleet_url","drop_onfleet_url","state_code","store_id","name","id","orders","push","timestamp","complete_after","complete_before","recpnt_address","recipients","address","mrchnt_address","merchant","mrchnt_notes","notes","recpnt_notes","tsk_status","uuid","order_number","orderNumber","driver_name","mrchnt_location","location","recpnt_location","tip","mkt_ofc_cty_del_zne_id","temp","each","vz","kz","orderBy","o","sortBy","mkt_ofc_cty_del_zne_name","listenHistorySuccess","task_count","list_type","console","log","message","listenExportTaskCsvError","listenExportTaskCsvSuccess","GET_HISTORY","EXPORT_CSV_TASK_HISTORY"],"mappings":"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","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\nimport * as taskHistoryConstant from '../constants';\nimport {error as notifyerror} from '../../../util/notify';\nimport * as taskHistoryAction from '../actions';\nimport {callApiV2} from '../../../Helper/api';\nimport * as _ from 'lodash';\nimport { getDateTime, getSysDateTime } from '../../../Helper/common';\nimport * as headerAction from '../../Header/actions';\n\n//Get History\nexport function* get_history(action){\n    try {        \n        let url             =   '';\n        url                 =   `tasks/history`;\n        let actionData      =   action.data;\n        //let filterData      =   getFilter('history');\n        //console.log('Filter Data : ', actionData);\n        yield put(headerAction.syncFilter({key: actionData.filter.key || 'history', value: JSON.parse(actionData.filter.value || '{}')}));\n        let data            =   {\n            user_type: actionData.type,\n            page: actionData.pageno,\n            start:  actionData.start,\n            end:actionData.end,\n            value_one:  actionData.value_one,\n            value_two:actionData.value_two,\n            filter: actionData.filter\n        }\n        //console.log(actionData.storeName);\n        let filtered        =   (['state', 'zone', 'store-id'].includes(data.value_one)) ? false : true;\n        const payload = yield call(callApiV2, 'POST', url, data);\n\n        // check for error\n        if(payload.data.error){\n            //notifyerror(payload.data.error);\n            yield put(taskHistoryAction.listenHistoryError());\n        }\n\n        // handle success result\n        if(payload.data.result){\n            let result = payload.data.result;\n            \n            let tasks = {};\n            //console.log('Length : ', result.tasks.length);\n            if(actionData.value_one === 'store-id'){\n                if(result.tasks.length > 0) {\n                    let storeName    =   actionData.storeName;\n                    result.tasks.map((val, key) => {\n                        //console.log('Value : ', val);\n                        let recipient_sig   =   false;                    \n                        let track_driver    =   '';\n                        let current_url     =   '';\n                        //console.log(val, key)\n                        let tskStatus = 'Scheduled';\n                        if(val.tskStatus === 'tsk_proc_hld') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\n                            tskStatus = 'Picked Up';\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\n                            tskStatus = 'Processing'\n                        } else if(val.tskStatus === 'tsk_cmp') {\n                            tskStatus = 'Completed'\n                        } else if(val.tskStatus === 'tsk_cncling') {\n                            tskStatus = 'Deleted'\n                        } else if(val.tskStatus === 'tsk_cncled') {\n                            tskStatus = 'Deleted'\n                        }\n                        let dt = val.timeCreated.split('T');\n                        let d = dt[0].split('-');\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \n                        \n                        let completeafter = '';\n                        let completebefore = '';\n                        \n                        if(val.timezone !== '') {\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\n                        } else {\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n\n                        if(!!val.pickup_onfleet_url) {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n                        \n                        if(!!val.drop_onfleet_url) {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n\n                        if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.store_id]   =   {\n                                        name        :   storeName[val.store_id],\n                                        id          :   val.state_code+val.store_id,\n                                        orders      :   []\n                            };\n                        } else {\n                            if(!!!tasks[val.state_code][val.store_id]) {\n                                tasks[val.state_code][val.store_id]   =   {\n                                    name        :   storeName[val.store_id],\n                                    id          :   val.state_code+val.store_id,\n                                    orders      :   []\n                                };\n                            }\n                        }\n                        \n                        tasks[val.state_code][val.store_id].orders.push({\n                            created_at              :   created_at,\n                            timestamp               :   val.completeAfter,\n                            complete_after          :   completeafter,\n                            complete_before         :   completebefore,\n                            recpnt_address          :   val.recipients.address,\n                            mrchnt_address          :   val.merchant.address,\n                            mrchnt_notes            :   val.merchant.notes,\n                            recpnt_notes            :   val.recipients.notes,\n                            tsk_status              :   tskStatus,\n                            uuid                    :   val.uuid,\n                            order_number            :   val.orderNumber,\n                            driver_name             :   val.driver_name,\n                            recipient_sig           :   recipient_sig,\n                            timezone                :   val.timezone,\n                            mrchnt_location         :   val.merchant.location,\n                            recpnt_location         :   val.recipients.location,\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\n                            track_driver            :   track_driver,\n                            current_url             :   current_url,\n                            tip                     :   val.tip,\n                            state_code              :   val.state_code,\n                            store_id                :   val.store_id,\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\n                        });\n                    });\n                }\n                let temp                        =   {};\n                _.each(tasks, (val, key) => {\n                    _.each(val, (vz, kz) => {\n                        tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\n                    });\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\n                });\n                tasks                           =   temp;\n            } else if(actionData.value_one === 'state'){                \n                if(result.tasks.length > 0) {\n                    result.tasks.map((val, key) => {\n                        //console.log('Value : ', val);\n                        let recipient_sig   =   false;                    \n                        let track_driver    =   '';\n                        let current_url     =   '';\n                        //console.log(val, key)\n                        let tskStatus = 'Scheduled';\n                        if(val.tskStatus === 'tsk_proc_hld') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\n                            tskStatus = 'Picked Up';\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\n                            tskStatus = 'Processing'\n                        } else if(val.tskStatus === 'tsk_cmp') {\n                            tskStatus = 'Completed'\n                        } else if(val.tskStatus === 'tsk_cncling') {\n                            tskStatus = 'Deleted'\n                        } else if(val.tskStatus === 'tsk_cncled') {\n                            tskStatus = 'Deleted'\n                        }\n                        let dt = val.timeCreated.split('T');\n                        let d = dt[0].split('-');\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \n                        \n                        let completeafter = '';\n                        let completebefore = '';\n                        \n                        if(val.timezone !== '') {\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\n                        } else {\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n\n                        if(!!val.pickup_onfleet_url) {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n                        \n                        if(!!val.drop_onfleet_url) {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n\n                        /* if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                        name        :   val.mkt_ofc_cty_del_zne_name,\n                                        id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                        orders      :   []\n                            };\n                        } else {\n                            if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                    name        :   val.mkt_ofc_cty_del_zne_name,\n                                    id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                    orders      :   []\n                                };\n                            }\n                        } */\n\n                        if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {\n                                name        :   val.state_code,\n                                orders      :   []\n                            };\n                        }\n\n                        //console.log(tasks[val.state_code]);\n                        \n                        tasks[val.state_code].orders.push({\n                            created_at              :   created_at,\n                            timestamp               :   val.completeAfter,\n                            complete_after          :   completeafter,\n                            complete_before         :   completebefore,\n                            recpnt_address          :   val.recipients.address,\n                            mrchnt_address          :   val.merchant.address,\n                            mrchnt_notes            :   val.merchant.notes,\n                            recpnt_notes            :   val.recipients.notes,\n                            tsk_status              :   tskStatus,\n                            uuid                    :   val.uuid,\n                            order_number            :   val.orderNumber,\n                            driver_name             :   val.driver_name,\n                            recipient_sig           :   recipient_sig,\n                            timezone                :   val.timezone,\n                            mrchnt_location         :   val.merchant.location,\n                            recpnt_location         :   val.recipients.location,\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\n                            track_driver            :   track_driver,\n                            current_url             :   current_url,\n                            tip                     :   val.tip,\n                            state_code              :   val.state_code,\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\n                        });\n                    });\n                }\n                _.each(tasks, (val, key) => {\n                    tasks[key].orders               =  _.orderBy(tasks[key].orders, [o => o.timestamp], ['desc']);\n                });\n            } else if(actionData.value_one === 'zone') {\n                if(result.tasks.length > 0) {\n                    result.tasks.map((val, key) => {\n                        //console.log('Value : ', val);\n                        let recipient_sig   =   false;                    \n                        let track_driver    =   '';\n                        let current_url     =   '';\n                        //console.log(val, key)\n                        let tskStatus = 'Scheduled';\n                        if(val.tskStatus === 'tsk_proc_hld') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\n                            tskStatus = 'Scheduled'\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\n                            tskStatus = 'Picked Up';\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\n                            tskStatus = 'Processing'\n                        } else if(val.tskStatus === 'tsk_cmp') {\n                            tskStatus = 'Completed'\n                        } else if(val.tskStatus === 'tsk_cncling') {\n                            tskStatus = 'Deleted'\n                        } else if(val.tskStatus === 'tsk_cncled') {\n                            tskStatus = 'Deleted'\n                        }\n                        let dt = val.timeCreated.split('T');\n                        let d = dt[0].split('-');\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \n                        \n                        let completeafter = '';\n                        let completebefore = '';\n                        \n                        if(val.timezone !== '') {\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\n                        } else {\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n                        if(!_.isEmpty(val.completionDetails.events) && \n                            !!val.completionDetails.events.onflt_recpnt_sig) {\n                            recipient_sig = true;\n                        }\n\n                        if(!!val.pickup_onfleet_url) {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n                        \n                        if(!!val.drop_onfleet_url) {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n\n                        if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                        name        :   val.mkt_ofc_cty_del_zne_name,\n                                        id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                        orders      :   []\n                            };\n                        } else {\n                            if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                    name        :   val.mkt_ofc_cty_del_zne_name,\n                                    id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                    orders      :   []\n                                };\n                            }\n                        }\n                        \n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\n                            created_at              :   created_at,\n                            timestamp               :   val.completeAfter,\n                            complete_after          :   completeafter,\n                            complete_before         :   completebefore,\n                            recpnt_address          :   val.recipients.address,\n                            mrchnt_address          :   val.merchant.address,\n                            mrchnt_notes            :   val.merchant.notes,\n                            recpnt_notes            :   val.recipients.notes,\n                            tsk_status              :   tskStatus,\n                            uuid                    :   val.uuid,\n                            order_number            :   val.orderNumber,\n                            driver_name             :   val.driver_name,\n                            recipient_sig           :   recipient_sig,\n                            timezone                :   val.timezone,\n                            mrchnt_location         :   val.merchant.location,\n                            recpnt_location         :   val.recipients.location,\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\n                            track_driver            :   track_driver,\n                            current_url             :   current_url,\n                            tip                     :   val.tip,\n                            state_code              :   val.state_code,\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\n                        });\n                    });\n                }\n                let temp                        =   {};\n                _.each(tasks, (val, key) => {\n                    _.each(val, (vz, kz) => {\n                        tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\n                    });\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\n                });\n                tasks                           =   temp;\n            } else {\n                tasks                           =   result.tasks || [];\n                //tasks                           =   _.orderBy(tasks, [o => o.completeAfter], ['desc'])\n            }\n            //console.log('Saga : ', tasks)\n            //notifysuccess({message:result.message});\n            yield put(taskHistoryAction.listenHistorySuccess({tasks: tasks, task_count: result.task_count, list_type: actionData.value_one}));\n        }\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n}\n\nexport function* exportTaskCsv(action){\n    try {\n        let actionData      =   action.data;\n        let data            =   {\n            user_type: actionData.type,\n            page: actionData.pageno,\n            start:  actionData.start,\n            end:actionData.end,\n            value_one:  actionData.value_one,\n            value_two:actionData.value_two\n        }\n        const payload = yield call(callApiV2, 'POST', 'tasks/download', data);\n\n        // check for error\n        if(payload.data.error){\n            yield put(taskHistoryAction.listenExportTaskCsvError());\n        };\n\n        if(payload.data.result){\n            yield put(taskHistoryAction.listenExportTaskCsvSuccess(payload.data.result));\n        };\n    } catch (e) {\n        notifyerror(e);\n        console.log(e.message);\n    }\n};\n\nexport function* watchTaskHistoryStore() {\n    try{\n        //yield takeEvery( taskHistoryConstant.GET_HISTORY_FILTER, get_history_filter );\n        yield takeEvery( taskHistoryConstant.GET_HISTORY, get_history );\n        yield takeEvery( taskHistoryConstant.EXPORT_CSV_TASK_HISTORY, exportTaskCsv );\n    } catch(e){\n        console.log(e)\n    }\n}"]},"metadata":{},"sourceType":"module"}