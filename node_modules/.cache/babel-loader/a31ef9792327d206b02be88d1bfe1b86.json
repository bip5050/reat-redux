{"ast":null,"code":"import _toConsumableArray from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Dashboard/dashboardList.js\";\nimport React, { Component } from 'react';\nimport { fb as firebase, database as firebaseDb } from '../../util/firebase';\nimport { sortTaskList } from '../../util/helper';\nimport { Link } from 'react-router-dom';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport CustomContext from '../Modals/contextMenu';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport UncategorisedList from './uncategorizedList';\nimport StateWiseList from './stateWiseList';\nimport ZoneWiseList from './zoneWiseList';\n\nvar DashboardList = /*#__PURE__*/function (_Component) {\n  _inherits(DashboardList, _Component);\n\n  var _super = _createSuper(DashboardList);\n\n  function DashboardList(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardList);\n\n    _this = _super.call(this, props);\n\n    _this.hideContextMenu = function () {\n      _this.setState({\n        visible: false,\n        x: 0,\n        y: 0\n      });\n    };\n\n    _this.state = {\n      editShow: false,\n      detailsShow: false,\n      mapShow: false,\n      trackShow: false,\n      visible: false,\n      x: '',\n      y: '',\n      tasks: {},\n      isLoading: true,\n      mrchnt_address: '',\n      recpnt_address: '',\n      filteredList: [],\n      listType: ''\n    };\n    _this.snapshot = null;\n    _this.statefilter = [];\n    _this.areafilter = [];\n    _this.storefilter = [];\n    _this.arrangeData = _this.arrangeData.bind(_assertThisInitialized(_this));\n    _this.handleContextMenu = _this.handleContextMenu.bind(_assertThisInitialized(_this));\n    _this.openEditWindow = _this.openEditWindow.bind(_assertThisInitialized(_this));\n    _this.openDetailsWindow = _this.openDetailsWindow.bind(_assertThisInitialized(_this));\n    _this.openMapWindow = _this.openMapWindow.bind(_assertThisInitialized(_this));\n    _this.openTrackWindow = _this.openTrackWindow.bind(_assertThisInitialized(_this));\n    _this.deleteTask = _this.deleteTask.bind(_assertThisInitialized(_this));\n    _this.updateTask = _this.updateTask.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DashboardList, [{\n    key: \"openEditWindow\",\n    value: function openEditWindow(uuid, mrchnt_address, recpnt_address) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        editShow: true,\n        mrchnt_address: mrchnt_address,\n        recpnt_address: recpnt_address\n      });\n    }\n  }, {\n    key: \"openDetailsWindow\",\n    value: function openDetailsWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        detailsShow: true\n      });\n    }\n  }, {\n    key: \"openMapWindow\",\n    value: function openMapWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        mapShow: true\n      });\n    }\n  }, {\n    key: \"openTrackWindow\",\n    value: function openTrackWindow(e, data) {\n      e.stopPropagation();\n      this.setState({\n        trackShow: true,\n        currentUrl: data.current_url,\n        trackDriver: data.track_driver\n      });\n    }\n  }, {\n    key: \"updateTask\",\n    value: function updateTask(uuid, status) {\n      if (window.confirm('Do you really want to update status of this task?')) {\n        this.props.updateTaskStatus({\n          uuid: uuid,\n          status: status\n        });\n      }\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(uuid) {\n      if (window.confirm('Do you really want to delete this task?')) {\n        this.props.deleteTask({\n          uuid: uuid\n        });\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      //console.log('Handle Close');\n      this.setState({\n        visible: false,\n        editShow: false,\n        mapShow: false,\n        detailsShow: false,\n        trackShow: false\n      });\n    }\n  }, {\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(event, order) {\n      var self = this;\n      event.preventDefault();\n      var clickX = event.clientX;\n      var clickY = event.pageY;\n      self.setState({\n        visible: true,\n        x: clickX,\n        y: clickY,\n        selOrder: _objectSpread({}, order)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log('List Mounted ');\n      this.statefilter = _toConsumableArray(this.props.statefilter);\n      this.areafilter = _toConsumableArray(this.props.areafilter);\n      this.storefilter = _toConsumableArray(this.props.storefilter);\n      var org_id = this.props.org_id || '';\n      var task_type = this.props.type || '';\n      this.getTasks({\n        org_id: org_id,\n        task_type: task_type,\n        statefilter: this.props.statefilter,\n        areafilter: this.props.areafilter,\n        storefilter: this.props.storefilter\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      //console.log('Will Receive Props Filter : ', props);\n      if (this.props.type !== props.type || !!!this.unsubscribe) {\n        this.statefilter = _toConsumableArray(props.statefilter);\n        this.areafilter = _toConsumableArray(props.areafilter);\n        this.storefilter = _toConsumableArray(props.storefilter);\n        var org_id = props.org_id || '';\n        var task_type = props.type || '';\n        this.getTasks({\n          org_id: org_id,\n          task_type: task_type,\n          statefilter: props.statefilter,\n          areafilter: props.areafilter,\n          storefilter: props.storefilter\n        });\n      } else {\n        if (this.searchTxt !== props.searchTxt || !isEqual(this.statefilter, props.statefilter) || !isEqual(this.areafilter, props.areafilter) || !isEqual(this.storefilter, props.storefilter)) {\n          this.statefilter = _toConsumableArray(props.statefilter);\n          this.areafilter = _toConsumableArray(props.areafilter);\n          this.storefilter = _toConsumableArray(props.storefilter);\n          this.searchTxt = props.searchTxt;\n          this.arrangeData();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      //console.log('Subscribe : ', this.unsubscribe, !!this.unsubscribe)\n      if (!!this.unsubscribe) this.unsubscribe();\n    }\n  }, {\n    key: \"getTasks\",\n    value: function getTasks(data) {\n      //console.log('called get tasks : ', data);\n      if (!!this.unsubscribe) this.unsubscribe();\n      var self = this;\n      var org_id = data.org_id;\n      var task_type = data.task_type;\n      var statefilter = data.statefilter; //let areafilter      =   data.areafilter;\n      //let storefilter     =   data.storefilter;\n\n      var query = firebaseDb.collection(\"tasks\").where('org_id', '==', org_id).where('tsk_type', '==', task_type);\n      /*\n      if(statefilter.length > 0) {\n          let stateArr    =   _map(statefilter, 'value');\n          if(stateArr.length > 0)\n              query   =   query.where('state_code', 'in', [...stateArr]);\n      }\n      */\n\n      /*\n      if(areafilter.length > 0) {\n          let areaArr    =   _map(areafilter, 'value');\n          console.log('Area : ', areaArr);\n          if(areaArr.length > 0)\n              query   =   query.where('mkt_ofc_cty_del_zne_name', 'in', [...areaArr]);\n      }\n      if(storefilter.length > 0) {\n          let storeArr    =   _map(storefilter, 'value');\n          console.log('Store : ', storeArr);\n          //if(storeArr.length > 0)\n            //  query   =   query.where('state_code', 'in', [...storeArr]);\n      }\n      */\n\n      this.unsubscribe = query //.where('mkt_ofc_cty_del_zne_id', 'in', [11, 13])\n      //.where('org_id', 'in', [3, 2])\n      .onSnapshot(function (querySnapshot) {\n        self.snapshot = querySnapshot;\n        self.arrangeData();\n      });\n    }\n  }, {\n    key: \"arrangeData\",\n    value: function arrangeData() {\n      var _this2 = this;\n\n      var snapshot = this.snapshot;\n      var store = [];\n      var storeName = {};\n      (this.storefilter || []).forEach(function (item) {\n        store.push(item.store_id);\n        storeName[item.store_id] = item.label;\n      }); //console.log('Store Filter : ', store, storeName);\n\n      var filter = {\n        state: _map(this.statefilter, 'value'),\n        area: _map(this.areafilter, 'value'),\n        //store       :   _map(this.storefilter, 'store_id'),\n        //storeName   :   map(this.storefilter) => 'label'),\n        store: store,\n        storeName: storeName,\n        searchTxt: this.searchTxt\n      };\n      var result = sortTaskList(snapshot, filter);\n      var tasks = result.tasks;\n      var count = result.count;\n      var type = result.type;\n      this.setState({\n        tasks: tasks,\n        listType: type,\n        isLoading: false\n      }, function () {\n        _this2.props.updateTotalCount(count || 0);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = this.state.tasks || {}; //console.log(tasks);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomContext, {\n        visible: this.state.visible,\n        x: this.state.x,\n        y: this.state.y,\n        selOrder: this.state.selOrder,\n        openEditWindow: this.openEditWindow,\n        openDetailsWindow: this.openDetailsWindow,\n        openMapWindow: this.openMapWindow,\n        deleteTask: this.deleteTask,\n        updateTask: this.updateTask,\n        hideContextMenu: this.hideContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }), !!!this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, this.state.listType === 'UncategorizedList' ? /*#__PURE__*/React.createElement(UncategorisedList, {\n        tasks: tasks,\n        openTrackWindow: this.openTrackWindow,\n        handleContextMenu: this.handleContextMenu,\n        shoppedLate: this.props.shoppedLate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 33\n        }\n      }) : null, this.state.listType === 'StateWiseList' ? /*#__PURE__*/React.createElement(StateWiseList, {\n        tasks: tasks,\n        openTrackWindow: this.openTrackWindow,\n        handleContextMenu: this.handleContextMenu,\n        shoppedLate: this.props.shoppedLate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 33\n        }\n      }) : null, this.state.listType === 'ZoneWiseList' ? /*#__PURE__*/React.createElement(ZoneWiseList, {\n        tasks: tasks,\n        openTrackWindow: this.openTrackWindow,\n        handleContextMenu: this.handleContextMenu,\n        shoppedLate: this.props.shoppedLate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }\n      }) : null, !!this.state.editShow ? /*#__PURE__*/React.createElement(EditTask, {\n        taskDetails: this.props.taskDetails,\n        show: this.state.editShow,\n        taskType: this.props.taskType,\n        stores: this.props.stores,\n        locations: this.props.locations,\n        pharmacy: this.props.pharmacy,\n        timings: this.props.timings,\n        settingsData: this.props.settingsData,\n        editTask: this.props.editTask,\n        mrchnt_address: this.state.mrchnt_address,\n        recpnt_address: this.state.recpnt_address,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }\n      }) : null,\n      /*#__PURE__*/\n\n      /* (!!this.state.trackShow) ? */\n      React.createElement(TrackDetails, {\n        show: this.state.trackShow,\n        currentUrl: this.state.currentUrl,\n        trackDriver: this.state.trackDriver,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }\n      })\n      /* : null */\n      , !!this.state.detailsShow ? /*#__PURE__*/React.createElement(TaskDetails, {\n        show: this.state.detailsShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }\n      }) : null, !!this.state.mapShow ? /*#__PURE__*/React.createElement(MapDetails, {\n        show: this.state.mapShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 29\n        }\n      }) : null) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 30\n        }\n      }, \"Loading....\"));\n    }\n  }]);\n\n  return DashboardList;\n}(Component);\n\nexport default DashboardList;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Dashboard/dashboardList.js"],"names":["React","Component","fb","firebase","database","firebaseDb","sortTaskList","Link","isEmpty","isEqual","map","_map","CustomContext","EditTask","TaskDetails","MapDetails","TrackDetails","UncategorisedList","StateWiseList","ZoneWiseList","DashboardList","props","hideContextMenu","setState","visible","x","y","state","editShow","detailsShow","mapShow","trackShow","tasks","isLoading","mrchnt_address","recpnt_address","filteredList","listType","snapshot","statefilter","areafilter","storefilter","arrangeData","bind","handleContextMenu","openEditWindow","openDetailsWindow","openMapWindow","openTrackWindow","deleteTask","updateTask","handleClose","uuid","getTaskDetails","e","data","stopPropagation","currentUrl","current_url","trackDriver","track_driver","status","window","confirm","updateTaskStatus","event","order","self","preventDefault","clickX","clientX","clickY","pageY","selOrder","org_id","task_type","type","getTasks","unsubscribe","searchTxt","query","collection","where","onSnapshot","querySnapshot","store","storeName","forEach","item","push","store_id","label","filter","area","result","count","updateTotalCount","shoppedLate","taskDetails","taskType","stores","locations","pharmacy","timings","settingsData","editTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { fb as firebase, database as firebaseDb } from '../../util/firebase';\nimport { sortTaskList } from '../../util/helper';\nimport { Link } from 'react-router-dom';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport CustomContext from '../Modals/contextMenu';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport UncategorisedList from './uncategorizedList';\nimport StateWiseList from './stateWiseList';\nimport ZoneWiseList from './zoneWiseList';\n\nclass DashboardList extends Component{\n    constructor(props) {\n        super(props);\n        this.state                  =   {\n                                            editShow        :   false,\n                                            detailsShow     :   false,\n                                            mapShow         :   false,\n                                            trackShow       :   false,\n                                            visible         :   false,\n                                            x               :   '',\n                                            y               :   '',\n                                            tasks           :   {},\n                                            isLoading       :   true,\n                                            mrchnt_address  :   '',\n                                            recpnt_address  :   '',\n                                            filteredList    :   [],\n                                            listType        :   ''\n                                        };\n        this.snapshot               =   null;\n        this.statefilter            =   [];\n        this.areafilter             =   [];\n        this.storefilter            =   [];\n        this.arrangeData            =   this.arrangeData.bind(this);\n        this.handleContextMenu      =   this.handleContextMenu.bind(this);\n        this.openEditWindow         =   this.openEditWindow.bind(this);\n        this.openDetailsWindow      =   this.openDetailsWindow.bind(this);\n        this.openMapWindow          =   this.openMapWindow.bind(this);\n        this.openTrackWindow        =   this.openTrackWindow.bind(this);\n        this.deleteTask             =   this.deleteTask.bind(this);\n        this.updateTask             =   this.updateTask.bind(this);\n        this.handleClose            =   this.handleClose.bind(this);\n    }\n\n    openEditWindow(uuid, mrchnt_address, recpnt_address){\n        this.props.getTaskDetails({uuid: uuid})\n        this.setState({\n            editShow        :   true,\n            mrchnt_address  :   mrchnt_address,\n            recpnt_address  :   recpnt_address\n        })\n    }\n\n    openDetailsWindow(uuid){\n        this.props.getTaskDetails({uuid: uuid})\n        this.setState({\n            detailsShow: true\n        })\n    }    \n\n    openMapWindow(uuid){\n        this.props.getTaskDetails({uuid: uuid});\n        this.setState({\n            mapShow: true\n        })\n    }\n\n    openTrackWindow(e, data){\n        e.stopPropagation();\n        this.setState({\n            trackShow: true,\n            currentUrl: data.current_url,\n            trackDriver: data.track_driver\n        })\n    }\n\n    updateTask(uuid, status){\n        if(window.confirm('Do you really want to update status of this task?')) {\n            this.props.updateTaskStatus({uuid: uuid, status: status});\n        }\n    }\n\n    deleteTask(uuid){\n        if(window.confirm('Do you really want to delete this task?')) {\n            this.props.deleteTask({uuid: uuid});\n        }\n    }\n    \n    handleClose(){\n        //console.log('Handle Close');\n        this.setState({\n            visible     :   false,\n            editShow    :   false,            \n            mapShow     :   false,\n            detailsShow :   false,\n            trackShow   :   false\n        })\n    }\n\n    handleContextMenu(event, order) {\n        let self                   =  this;\n        event.preventDefault();        \n        const clickX               =  event.clientX;\n        const clickY               =  event.pageY;\n        self.setState({\n            visible     :  true,\n            x           :  clickX,\n            y           :  clickY,\n            selOrder    :  {...order}\n        });\n    }\n    \n    hideContextMenu = () => {\n        this.setState({\n            visible :   false,\n            x       :   0,\n            y       :   0\n        });\n    }\n\n    componentDidMount() {\n        //console.log('List Mounted ');\n        this.statefilter        =   [...this.props.statefilter];\n        this.areafilter         =   [...this.props.areafilter];\n        this.storefilter        =   [...this.props.storefilter];\n        let org_id              =   this.props.org_id || '';\n        let task_type           =   this.props.type || '';\n        this.getTasks({\n            org_id          :   org_id,\n            task_type       :   task_type,\n            statefilter     :   this.props.statefilter,\n            areafilter      :   this.props.areafilter,\n            storefilter     :   this.props.storefilter\n        });\n    }\n\n    componentWillReceiveProps(props) {\n        //console.log('Will Receive Props Filter : ', props);\n        if(this.props.type !== props.type\n            || !!!this.unsubscribe) {\n            this.statefilter        =   [...props.statefilter];\n            this.areafilter         =   [...props.areafilter];\n            this.storefilter        =   [...props.storefilter];\n            let org_id              =   props.org_id || '';\n            let task_type           =   props.type || '';\n            this.getTasks({\n                org_id          :   org_id,\n                task_type       :   task_type,\n                statefilter     :   props.statefilter,\n                areafilter      :   props.areafilter,\n                storefilter     :   props.storefilter\n            });\n        } else {\n            if(this.searchTxt !== props.searchTxt\n                || !isEqual(this.statefilter, props.statefilter)\n                || !isEqual(this.areafilter, props.areafilter)\n                || !isEqual(this.storefilter, props.storefilter)) {                    \n                this.statefilter        =   [...props.statefilter];\n                this.areafilter         =   [...props.areafilter];\n                this.storefilter        =   [...props.storefilter];\n                this.searchTxt          =   props.searchTxt;\n                this.arrangeData();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        //console.log('Subscribe : ', this.unsubscribe, !!this.unsubscribe)\n        if(!!this.unsubscribe)\n            this.unsubscribe();\n    }\n\n    getTasks(data){\n        //console.log('called get tasks : ', data);\n        if(!!this.unsubscribe)\n            this.unsubscribe();\n        let self            =   this;\n        let org_id          =   data.org_id;\n        let task_type       =   data.task_type;\n        let statefilter     =   data.statefilter;\n        //let areafilter      =   data.areafilter;\n        //let storefilter     =   data.storefilter;\n        let query           =   firebaseDb\n        .collection(\"tasks\")\n        .where('org_id', '==', org_id)\n        .where('tsk_type', '==', task_type);\n        /*\n        if(statefilter.length > 0) {\n            let stateArr    =   _map(statefilter, 'value');\n            if(stateArr.length > 0)\n                query   =   query.where('state_code', 'in', [...stateArr]);\n        }\n        */\n        /*\n        if(areafilter.length > 0) {\n            let areaArr    =   _map(areafilter, 'value');\n            console.log('Area : ', areaArr);\n            if(areaArr.length > 0)\n                query   =   query.where('mkt_ofc_cty_del_zne_name', 'in', [...areaArr]);\n        }\n        if(storefilter.length > 0) {\n            let storeArr    =   _map(storefilter, 'value');\n            console.log('Store : ', storeArr);\n            //if(storeArr.length > 0)\n              //  query   =   query.where('state_code', 'in', [...storeArr]);\n        }\n        */\n        this.unsubscribe    =   query\n        //.where('mkt_ofc_cty_del_zne_id', 'in', [11, 13])\n        //.where('org_id', 'in', [3, 2])\n        .onSnapshot(function(querySnapshot) {\n            self.snapshot   =   querySnapshot;\n            self.arrangeData();\n        })\n    }\n\n    arrangeData() {        \n        let snapshot    =   this.snapshot;\n        let store       =   [];\n        let storeName   =   {};\n        (this.storefilter || []).forEach((item) => {\n            store.push(item.store_id);\n            storeName[item.store_id]  =   item.label;\n        })\n        //console.log('Store Filter : ', store, storeName);\n        let filter      =   {\n            state       :   _map(this.statefilter, 'value'),\n            area        :   _map(this.areafilter, 'value'),\n            //store       :   _map(this.storefilter, 'store_id'),\n            //storeName   :   map(this.storefilter) => 'label'),\n            store       :   store,\n            storeName   :   storeName,\n            searchTxt   :   this.searchTxt\n        }\n        let result      =   sortTaskList(snapshot, filter);\n        let tasks       =   result.tasks;\n        let count       =   result.count;\n        let type        =   result.type;\n        this.setState({\n            tasks       :   tasks,\n            listType    :   type,\n            isLoading   :   false\n        }, () => {\n            this.props.updateTotalCount(count || 0);\n        })\n    }\n\n    render() {\n        let tasks                       =   this.state.tasks || {};\n        //console.log(tasks);\n        return (  \n            <div>                         \n                <CustomContext\n                    visible             =   {this.state.visible}\n                    x                   =   {this.state.x}\n                    y                   =   {this.state.y}\n                    selOrder            =   {this.state.selOrder}\n                    openEditWindow      =   {this.openEditWindow}\n                    openDetailsWindow   =   {this.openDetailsWindow}\n                    openMapWindow       =   {this.openMapWindow}\n                    deleteTask          =   {this.deleteTask}\n                    updateTask          =   {this.updateTask}\n                    hideContextMenu     =   {this.hideContextMenu}\n                />\n                {\n                    (!!!this.state.isLoading) ?\n                    <div>\n                        {\n                            (this.state.listType === 'UncategorizedList') ? \n                                <UncategorisedList\n                                    tasks               =   {tasks}\n                                    openTrackWindow     =   {this.openTrackWindow}\n                                    handleContextMenu   =   {this.handleContextMenu}\n                                    shoppedLate         =   {this.props.shoppedLate}\n                                />\n                            : null\n                        }\n                        {\n                            (this.state.listType === 'StateWiseList') ? \n                                <StateWiseList\n                                    tasks               =   {tasks}\n                                    openTrackWindow     =   {this.openTrackWindow}\n                                    handleContextMenu   =   {this.handleContextMenu}\n                                    shoppedLate         =   {this.props.shoppedLate}\n                                />\n                            : null\n                        }\n                        {\n                            (this.state.listType === 'ZoneWiseList') ? \n                                <ZoneWiseList\n                                    tasks               =   {tasks}\n                                    openTrackWindow     =   {this.openTrackWindow}\n                                    handleContextMenu   =   {this.handleContextMenu}\n                                    shoppedLate         =   {this.props.shoppedLate}\n                                />\n                            : null\n                        }\n                        {\n                            (!!this.state.editShow) ?\n                            <EditTask\n                                taskDetails         =   {this.props.taskDetails}\n                                show                =   {this.state.editShow}\n                                taskType            =   {this.props.taskType}\n                                stores              =   {this.props.stores}\n                                locations           =   {this.props.locations}\n                                pharmacy            =   {this.props.pharmacy}\n                                timings             =   {this.props.timings}\n                                settingsData        =   {this.props.settingsData}\n                                editTask            =   {this.props.editTask}\n                                mrchnt_address      =   {this.state.mrchnt_address}\n                                recpnt_address      =   {this.state.recpnt_address}\n                                handleClose         =   {this.handleClose}\n                            /> : null\n                        }\n                        {\n                            /* (!!this.state.trackShow) ? */\n                            <TrackDetails\n                                show                =   {this.state.trackShow}\n                                currentUrl          =   {this.state.currentUrl}\n                                trackDriver         =   {this.state.trackDriver}\n                                handleClose         =   {this.handleClose}\n                            /> /* : null */\n                        }\n                        {\n                            (!!this.state.detailsShow) ?\n                            <TaskDetails\n                                show                =   {this.state.detailsShow}\n                                taskDetails         =   {this.props.taskDetails}\n                                handleClose         =   {this.handleClose}\n                            /> : null\n                        }                    \n                        {\n                            (!!this.state.mapShow) ?\n                            <MapDetails\n                                show                =   {this.state.mapShow}\n                                taskDetails         =   {this.props.taskDetails}\n                                handleClose         =   {this.handleClose}\n                            /> : null\n                        }\n                    </div> : <div className=\"loader\">Loading....</div>\n                }\n            </div>\n        )\n    }\n}\nexport default DashboardList;"]},"metadata":{},"sourceType":"module"}