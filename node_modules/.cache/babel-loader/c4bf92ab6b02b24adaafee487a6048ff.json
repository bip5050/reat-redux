{"ast":null,"code":"import _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Modals/mapDetailsModal.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport { Modal } from 'react-bootstrap';\nimport { withGoogleMap, GoogleMap, Marker, Polyline, DirectionsRenderer } from 'react-google-maps';\nimport { isEmpty, isEqual } from 'lodash';\n/* function makeMarker( position, icon, title ) {\n    let map = new window.google.maps.Map( element, options );\n    new window.google.maps.Marker({\n     position: position,\n     map: map,\n     icon: icon,\n     title: title\n    });\n   }\n */\n\nvar MapDetails = /*#__PURE__*/function (_Component) {\n  _inherits(MapDetails, _Component);\n\n  var _super = _createSuper(MapDetails);\n\n  function MapDetails(props) {\n    var _this;\n\n    _classCallCheck(this, MapDetails);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      show: false\n    };\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MapDetails, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this2 = this;\n\n      if (!isEmpty(props.taskDetails)) {\n        var directionsService = new window.google.maps.DirectionsService();\n        var origin = {\n          lat: parseFloat(props.taskDetails.mrchnt_lat),\n          lng: parseFloat(props.taskDetails.mrchnt_lng),\n          icon: 'https://storage.googleapis.com/creative-image/order_status_icon25.png'\n        };\n        var destination = {\n          lat: parseFloat(props.taskDetails.recpnt_lat),\n          lng: parseFloat(props.taskDetails.recpnt_lng),\n          icon: 'https://storage.googleapis.com/creative-image/order_status_icon25.png'\n        };\n        directionsService.route({\n          origin: origin,\n          destination: destination,\n          travelMode: window.google.maps.TravelMode.DRIVING\n          /* waypoints: [\n              {\n                  location: new window.google.maps.LatLng(6.4698,  3.5852)\n              },\n              {\n                  location: new window.google.maps.LatLng(6.6018,3.3515)\n              }\n          ] */\n\n        }, function (result, status) {\n          if (status === window.google.maps.DirectionsStatus.OK) {\n            //console.log(result)\n            _this2.setState({\n              directions: result\n            });\n          } else {\n            console.error(\"error fetching directions \".concat(result));\n          }\n        });\n      }\n\n      this.setState({\n        show: props.show\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false,\n        directions: ''\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(props, state) {\n      console.log(isEqual(this.props, props), isEqual(this.state, state)); //if(!isEqual(this.props, props) || (!isEqual(this.state, state) && !isEmpty(this.state.directions))) {\n\n      if (!!this.state && !!this.state.directions) {\n        console.log(this.state.directions.routes[0].legs, state.directions.routes[0].legs);\n        console.log(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path); //console.log(this.props, props);\n\n        console.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\n        console.log('[0].legs : ', isEqual(this.state.directions.routes[0].legs, state.directions.routes[0].legs));\n        console.log('[0].warnings : ', isEqual(this.state.directions.routes[0].warnings, state.directions.routes[0].warnings));\n        console.log('[0].waypoint_order : ', isEqual(this.state.directions.routes[0].waypoint_order, state.directions.routes[0].waypoint_order));\n        console.log('[0].overview_path : ', isEqual(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path)); //.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\n\n        if (!!this.state.directions.routes[0].legs && !!this.state.directions.routes[0].overview_path) return false;\n      } //}\n\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //console.log('state : ', this.state);\n      var show = this.state.show || false;\n      var taskDetails = this.props.taskDetails || {};\n      var GoogleMapExample = withGoogleMap(function (props) {\n        return !isEmpty(_this3.state.directions) ? /*#__PURE__*/React.createElement(GoogleMap, {\n          defaultCenter: {\n            lat: 6.5244,\n            lng: 3.3792\n          } //defaultCenter = { { lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) } }\n          ,\n          defaultZoom: 12,\n          mapTypeControl: false,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(DirectionsRenderer, {\n          directions: _this3.state.directions,\n          options: {\n            polylineOptions: {\n              stokeColor: \"#FF0000\",\n              strokeOpacity: 0.5,\n              strokeWeight: 4\n            },\n            icon: false,\n            suppressMarkers: true\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Marker, {\n          position: {\n            lat: parseFloat(taskDetails.mrchnt_lat),\n            lng: parseFloat(taskDetails.mrchnt_lng)\n          },\n          icon: \"/assets/icon01.png\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Marker, {\n          position: {\n            lat: parseFloat(taskDetails.recpnt_lat),\n            lng: parseFloat(taskDetails.recpnt_lng)\n          },\n          icon: \"/assets/icon02.png\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }\n        })) : null;\n      });\n      return /*#__PURE__*/React.createElement(Modal, {\n        size: \"md\",\n        className: \"c-modal\",\n        show: show,\n        onHide: this.props.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, \"Map Details\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        sm: \"12\",\n        className: \"v-map\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, !isEmpty(taskDetails) ? /*#__PURE__*/React.createElement(GoogleMapExample, {\n        containerElement: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: \"300px\",\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 60\n          }\n        }),\n        mapElement: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 54\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 38\n        }\n      }, \"Loading...\")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        className: \"map_footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }\n      }, \"Distance:\"), \" \", !!this.state.directions ? this.state.directions.routes[0].legs[0].distance.text : '', \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 24\n        }\n      }, \"Duration:\"), \" \", !!this.state.directions ? this.state.directions.routes[0].legs[0].duration.text : '', \" \")));\n    }\n  }]);\n\n  return MapDetails;\n}(Component);\n\nexport default MapDetails;","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Modals/mapDetailsModal.js"],"names":["React","Component","Row","Col","Button","Modal","withGoogleMap","GoogleMap","Marker","Polyline","DirectionsRenderer","isEmpty","isEqual","MapDetails","props","state","show","handleClose","bind","taskDetails","directionsService","window","google","maps","DirectionsService","origin","lat","parseFloat","mrchnt_lat","lng","mrchnt_lng","icon","destination","recpnt_lat","recpnt_lng","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","directions","console","error","log","routes","legs","overview_path","bounds","warnings","waypoint_order","GoogleMapExample","polylineOptions","stokeColor","strokeOpacity","strokeWeight","suppressMarkers","height","width","distance","text","duration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,GADJ,EAEIC,GAFJ,EAGIC,MAHJ,QAIO,YAJP;AAKA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,QAA3C,EACIC,kBADJ,QAC8B,mBAD9B;AAEA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,QAA/B;AAEA;;;;;;;;;;;IAUMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAA4B;AACzBC,MAAAA,IAAI,EAAa;AADQ,KAA5B;AAGA,UAAKC,WAAL,GAA4B,MAAKA,WAAL,CAAiBC,IAAjB,+BAA5B;AALe;AAMlB;;;;8CAEyBJ,K,EAAO;AAAA;;AAC7B,UAAG,CAACH,OAAO,CAACG,KAAK,CAACK,WAAP,CAAX,EAAgC;AAC5B,YAAMC,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,iBAAvB,EAA1B;AAEA,YAAMC,MAAM,GAAG;AAAEC,UAAAA,GAAG,EAAGC,UAAU,CAACb,KAAK,CAACK,WAAN,CAAkBS,UAAnB,CAAlB;AAAkDC,UAAAA,GAAG,EAAEF,UAAU,CAACb,KAAK,CAACK,WAAN,CAAkBW,UAAnB,CAAjE;AAAiGC,UAAAA,IAAI,EAAC;AAAtG,SAAf;AACA,YAAMC,WAAW,GAAG;AAAEN,UAAAA,GAAG,EAAEC,UAAU,CAACb,KAAK,CAACK,WAAN,CAAkBc,UAAnB,CAAjB;AAAiDJ,UAAAA,GAAG,EAAEF,UAAU,CAACb,KAAK,CAACK,WAAN,CAAkBe,UAAnB,CAAhE;AAAgGH,UAAAA,IAAI,EAAC;AAArG,SAApB;AAEAX,QAAAA,iBAAiB,CAACe,KAAlB,CACI;AACIV,UAAAA,MAAM,EAAEA,MADZ;AAEIO,UAAAA,WAAW,EAAEA,WAFjB;AAGII,UAAAA,UAAU,EAAEf,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBc,UAAnB,CAA8BC;AAE1C;;;;;;;;;AALJ,SADJ,EAeI,UAACC,MAAD,EAASC,MAAT,EAAoB;AAChB,cAAIA,MAAM,KAAKnB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBkB,gBAAnB,CAAoCC,EAAnD,EAAuD;AACnD;AACA,YAAA,MAAI,CAACC,QAAL,CAAc;AACVC,cAAAA,UAAU,EAAEL;AADF,aAAd;AAGH,WALD,MAKO;AACHM,YAAAA,OAAO,CAACC,KAAR,qCAA2CP,MAA3C;AACH;AACJ,SAxBL;AA0BH;;AACD,WAAKI,QAAL,CAAc;AACV3B,QAAAA,IAAI,EAAEF,KAAK,CAACE;AADF,OAAd;AAGH;;;kCAEa;AACV,WAAK2B,QAAL,CAAc;AAAC3B,QAAAA,IAAI,EAAE,KAAP;AAAc4B,QAAAA,UAAU,EAAE;AAA1B,OAAd;AACH;;;0CAEqB9B,K,EAAOC,K,EAAM;AAC/B8B,MAAAA,OAAO,CAACE,GAAR,CAAYnC,OAAO,CAAC,KAAKE,KAAN,EAAaA,KAAb,CAAnB,EAAwCF,OAAO,CAAC,KAAKG,KAAN,EAAaA,KAAb,CAA/C,EAD+B,CAE/B;;AACI,UAAG,CAAC,CAAC,KAAKA,KAAP,IAAgB,CAAC,CAAC,KAAKA,KAAL,CAAW6B,UAAhC,EAA4C;AACxCC,QAAAA,OAAO,CAACE,GAAR,CAAY,KAAKhC,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCC,IAA5C,EAAkDlC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BC,IAA7E;AACAJ,QAAAA,OAAO,CAACE,GAAR,CAAY,KAAKhC,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCE,aAA5C,EAA2DnC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BE,aAAtF,EAFwC,CAGxC;;AACAL,QAAAA,OAAO,CAACE,GAAR,CAAY,eAAZ,EAA6BnC,OAAO,CAAC,KAAKG,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCG,MAAjC,EAAyCpC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BG,MAApE,CAApC;AACAN,QAAAA,OAAO,CAACE,GAAR,CAAY,aAAZ,EAA2BnC,OAAO,CAAC,KAAKG,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCC,IAAjC,EAAuClC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BC,IAAlE,CAAlC;AACAJ,QAAAA,OAAO,CAACE,GAAR,CAAY,iBAAZ,EAA+BnC,OAAO,CAAC,KAAKG,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCI,QAAjC,EAA2CrC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BI,QAAtE,CAAtC;AACAP,QAAAA,OAAO,CAACE,GAAR,CAAY,uBAAZ,EAAqCnC,OAAO,CAAC,KAAKG,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCK,cAAjC,EAAiDtC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BK,cAA5E,CAA5C;AACAR,QAAAA,OAAO,CAACE,GAAR,CAAY,sBAAZ,EAAoCnC,OAAO,CAAC,KAAKG,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCE,aAAjC,EAAgDnC,KAAK,CAAC6B,UAAN,CAAiBI,MAAjB,CAAwB,CAAxB,EAA2BE,aAA3E,CAA3C,EARwC,CASxC;;AACA,YAAG,CAAC,CAAC,KAAKnC,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCC,IAAlC,IAA0C,CAAC,CAAC,KAAKlC,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCE,aAA/E,EACI,OAAO,KAAP;AACP,OAf0B,CAgB/B;;;AACA,aAAO,IAAP;AACH;;;6BAEQ;AAAA;;AACL;AACA,UAAIlC,IAAI,GAAgB,KAAKD,KAAL,CAAWC,IAAX,IAAmB,KAA3C;AACA,UAAIG,WAAW,GAAS,KAAKL,KAAL,CAAWK,WAAX,IAA0B,EAAlD;AACI,UAAMmC,gBAAgB,GAAGhD,aAAa,CAAC,UAAAQ,KAAK;AAAA,eACvC,CAACH,OAAO,CAAC,MAAI,CAACI,KAAL,CAAW6B,UAAZ,CAAT,gBACA,oBAAC,SAAD;AACA,UAAA,aAAa,EAAE;AAAElB,YAAAA,GAAG,EAAE,MAAP;AAAeG,YAAAA,GAAG,EAAG;AAArB,WADf,CAEA;AAFA;AAGA,UAAA,WAAW,EAAK,EAHhB;AAIA,UAAA,cAAc,EAAI,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMI,oBAAC,kBAAD;AACI,UAAA,UAAU,EAAE,MAAI,CAACd,KAAL,CAAW6B,UAD3B;AAEI,UAAA,OAAO,EAAE;AACLW,YAAAA,eAAe,EAAE;AACfC,cAAAA,UAAU,EAAE,SADG;AAEfC,cAAAA,aAAa,EAAE,GAFA;AAGfC,cAAAA,YAAY,EAAE;AAHC,aADZ;AAML3B,YAAAA,IAAI,EAAE,KAND;AAOL4B,YAAAA,eAAe,EAAC;AAPX,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,eAkBI,oBAAC,MAAD;AACI,UAAA,QAAQ,EAAE;AAAEjC,YAAAA,GAAG,EAAEC,UAAU,CAACR,WAAW,CAACS,UAAb,CAAjB;AAA2CC,YAAAA,GAAG,EAAEF,UAAU,CAACR,WAAW,CAACW,UAAb;AAA1D,WADd;AAEI,UAAA,IAAI,EAAC,oBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBJ,eAsBI,oBAAC,MAAD;AACI,UAAA,QAAQ,EAAE;AAAEJ,YAAAA,GAAG,EAAEC,UAAU,CAACR,WAAW,CAACc,UAAb,CAAjB;AAA2CJ,YAAAA,GAAG,EAAEF,UAAU,CAACR,WAAW,CAACe,UAAb;AAA1D,WADd;AAEI,UAAA,IAAI,EAAC,oBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBJ,CADA,GA+Be,IAhCyB;AAAA,OAAN,CAAtC;AAkCJ,0BACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAqC,QAAA,IAAI,EAAElB,IAA3C;AAAiD,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,IAAhB;AAAqB,QAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAES,CAACN,OAAO,CAACQ,WAAD,CAAT,gBACA,oBAAC,gBAAD;AACQ,QAAA,gBAAgB,eAAG;AAAK,UAAA,KAAK,EAAE;AAAEyC,YAAAA,MAAM,SAAR;AAAmBC,YAAAA,KAAK,EAAE;AAA1B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD3B;AAEQ,QAAA,UAAU,eAAG;AAAK,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,gBAIK;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANb,CADJ,CADJ,CAJJ,eAiBI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAA4B,CAAC,CAAC,KAAK7C,KAAL,CAAW6B,UAAd,GAA4B,KAAK7B,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCC,IAAhC,CAAqC,CAArC,EAAwCa,QAAxC,CAAiDC,IAA7E,GAAoF,EAA/G,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAA4B,CAAC,CAAC,KAAKhD,KAAL,CAAW6B,UAAd,GAA4B,KAAK7B,KAAL,CAAW6B,UAAX,CAAsBI,MAAtB,CAA6B,CAA7B,EAAgCC,IAAhC,CAAqC,CAArC,EAAwCe,QAAxC,CAAiDD,IAA7E,GAAoF,EAA/G,MAFJ,CAjBJ,CADJ;AAwBH;;;;EAtIoB9D,S;;AAwIzB,eAAeY,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    Button\n} from 'reactstrap';\nimport { Modal } from 'react-bootstrap';\nimport { withGoogleMap, GoogleMap, Marker, Polyline,\n    DirectionsRenderer } from 'react-google-maps';\nimport {isEmpty, isEqual} from 'lodash';\n\n/* function makeMarker( position, icon, title ) {\n    let map = new window.google.maps.Map( element, options );\n    new window.google.maps.Marker({\n     position: position,\n     map: map,\n     icon: icon,\n     title: title\n    });\n   }\n */\nclass MapDetails extends Component{\n    constructor(props) {\n        super(props);\n        this.state              =   {\n           show         :   false\n        }\n        this.handleClose        =   this.handleClose.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n        if(!isEmpty(props.taskDetails)) {\n            const directionsService = new window.google.maps.DirectionsService();\n\n            const origin = { lat : parseFloat(props.taskDetails.mrchnt_lat), lng: parseFloat(props.taskDetails.mrchnt_lng), icon:'https://storage.googleapis.com/creative-image/order_status_icon25.png'  };\n            const destination = { lat: parseFloat(props.taskDetails.recpnt_lat), lng: parseFloat(props.taskDetails.recpnt_lng), icon:'https://storage.googleapis.com/creative-image/order_status_icon25.png'  };\n\n            directionsService.route(\n                {\n                    origin: origin,\n                    destination: destination,\n                    travelMode: window.google.maps.TravelMode.DRIVING,\n\n                    /* waypoints: [\n                        {\n                            location: new window.google.maps.LatLng(6.4698,  3.5852)\n                        },\n                        {\n                            location: new window.google.maps.LatLng(6.6018,3.3515)\n                        }\n                    ] */\n                },\n                (result, status) => {\n                    if (status === window.google.maps.DirectionsStatus.OK) {\n                        //console.log(result)\n                        this.setState({\n                            directions: result\n                        });\n                    } else {\n                        console.error(`error fetching directions ${result}`);\n                    }\n                }\n            );\n        }\n        this.setState({\n            show: props.show\n        })\n    }\n\n    handleClose() {\n        this.setState({show: false, directions: ''});\n    }   \n    \n    shouldComponentUpdate(props, state){\n        console.log(isEqual(this.props, props), isEqual(this.state, state));\n        //if(!isEqual(this.props, props) || (!isEqual(this.state, state) && !isEmpty(this.state.directions))) {\n            if(!!this.state && !!this.state.directions) {\n                console.log(this.state.directions.routes[0].legs, state.directions.routes[0].legs);\n                console.log(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path);\n                //console.log(this.props, props);\n                console.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\n                console.log('[0].legs : ', isEqual(this.state.directions.routes[0].legs, state.directions.routes[0].legs));\n                console.log('[0].warnings : ', isEqual(this.state.directions.routes[0].warnings, state.directions.routes[0].warnings));\n                console.log('[0].waypoint_order : ', isEqual(this.state.directions.routes[0].waypoint_order, state.directions.routes[0].waypoint_order));\n                console.log('[0].overview_path : ', isEqual(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path));\n                //.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\n                if(!!this.state.directions.routes[0].legs && !!this.state.directions.routes[0].overview_path)\n                    return false;\n            }\n        //}\n        return true;\n    }\n\n    render() {\n        //console.log('state : ', this.state);\n        let show            =   this.state.show || false;\n        let taskDetails     =   this.props.taskDetails || {};\n            const GoogleMapExample = withGoogleMap(props => (\n                (!isEmpty(this.state.directions)) ? \n                <GoogleMap\n                defaultCenter={{ lat: 6.5244, lng:  3.3792 }}\n                //defaultCenter = { { lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) } }\n                defaultZoom = { 12 }\n                mapTypeControl = {false}\n                >\n                    <DirectionsRenderer\n                        directions={this.state.directions}\n                        options={{\n                            polylineOptions: {\n                              stokeColor: \"#FF0000\",\n                              strokeOpacity: 0.5,\n                              strokeWeight: 4\n                            },\n                            icon: false,\n                            suppressMarkers:true\n                          }}\n                    />\n                    <Marker\n                        position={{ lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) }}\n                        icon='/assets/icon01.png'\n                    />\n                    <Marker\n                        position={{ lat: parseFloat(taskDetails.recpnt_lat), lng: parseFloat(taskDetails.recpnt_lng) }}\n                        icon='/assets/icon02.png'\n                    />\n                    {/* <Marker position={{ lat: 38.6013835, lng: -121.39313700000002 }} /> */}\n                    {/* <Polyline\n                        path={[{ lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) }, { lat: parseFloat(taskDetails.recpnt_lat), lng: parseFloat(taskDetails.recpnt_lng) }]}\n                        /> */}\n                </GoogleMap> : null\n            ));\n        return (\n            <Modal size=\"md\" className=\"c-modal\" show={show} onHide={this.props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Map Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row noGutters>\n                        <Col md=\"12\" sm=\"12\" className=\"v-map\"> \n                            {\n                                (!isEmpty(taskDetails)) ?\n                                <GoogleMapExample\n                                        containerElement={ <div style={{ height: `300px`, width: '100%' }} /> }\n                                        mapElement={ <div style={{ height: `100%` }} /> }\n                                /> : <div className=\"loader\">Loading...</div>\n                            }\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer className=\"map_footer\">\n                    <p><span>Distance:</span> {(!!this.state.directions) ? this.state.directions.routes[0].legs[0].distance.text : ''} </p>\n                    <p><span>Duration:</span> {(!!this.state.directions) ? this.state.directions.routes[0].legs[0].duration.text : ''} </p>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nexport default MapDetails;"]},"metadata":{},"sourceType":"module"}