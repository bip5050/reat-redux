{"ast":null,"code":"import Config from'../config';import axios from\"axios\";import{getCookie}from'../util/cookies';var baseAPIUrl=Config.ApiUrl;var baseAPIUrl2=Config.ApiUrl2;//console.log('Config : ', baseAPIUrl);\nexport function callApi(){var method=arguments.length<=0?undefined:arguments[0];var url=(arguments.length<=1?undefined:arguments[1])||'';var postData=(arguments.length<=2?undefined:arguments[2])||{};var userData=getCookie('foodjets_merchant')||{};//let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\nvar reqHeaders={Accept:\"application/json\",\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin':'*'};if(!!userData.token){reqHeaders.Authorization=\"Bearer \"+userData.token;}var instance=axios.create({headers:reqHeaders});var result='';var bodydata={};switch(method){case'POST':bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.post(baseAPIUrl+url,bodydata);break;case'PUT':bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.put(baseAPIUrl+url,bodydata);break;case'DELETE':bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.delete(baseAPIUrl+url,bodydata);break;case'GET':result=instance.get(baseAPIUrl+url);break;}return result;}export function callApiV2(){var method=arguments.length<=0?undefined:arguments[0];var url=(arguments.length<=1?undefined:arguments[1])||'';var postData=(arguments.length<=2?undefined:arguments[2])||{};var userData=getCookie('foodjets_merchant')||{};//let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\nvar reqHeaders={Accept:\"application/json\",\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin':'*'};if(!!userData.token){reqHeaders.Authorization=\"Bearer \"+userData.token;}var instance=axios.create({headers:reqHeaders});var result='';switch(method){case'POST':var bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.post(baseAPIUrl2+url,bodydata);break;case'PUT':bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.put(baseAPIUrl2+url,bodydata);break;case'DELETE':bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.delete(baseAPIUrl2+url,bodydata);break;case'GET':result=instance.get(baseAPIUrl2+url);break;}return result;}export function callOnFleetApi(){var method=arguments.length<=0?undefined:arguments[0];var url=(arguments.length<=1?undefined:arguments[1])||'';var postData=(arguments.length<=2?undefined:arguments[2])||{};var userData=getCookie('foodjets_merchant')||{};//let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\nvar reqHeaders={Accept:\"application/json\",\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin':'*'};if(!!userData.token){//reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n}var instance=axios.create({headers:reqHeaders});var result='';switch(method){case'POST':var bodydata=JSON.stringify({jsonrpc:2,ver:1,platform:\"web\",brw:{os:\"Win32\",name:\"Chrome 67\"},params:postData});result=instance.post('/api2/'+url,bodydata);break;case'GET':result=instance.get('/fleet/tasks/6ae0019f/public');break;}return result;}","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/Helper/api.js"],"names":["Config","axios","getCookie","baseAPIUrl","ApiUrl","baseAPIUrl2","ApiUrl2","callApi","method","url","postData","userData","reqHeaders","Accept","token","Authorization","instance","create","headers","result","bodydata","JSON","stringify","jsonrpc","ver","platform","brw","os","name","params","post","put","delete","get","callApiV2","callOnFleetApi"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,KAAwB,iBAAxB,CAEA,GAAIC,CAAAA,UAAU,CAAcH,MAAM,CAACI,MAAnC,CACA,GAAIC,CAAAA,WAAW,CAAaL,MAAM,CAACM,OAAnC,CACA;AACA,MAAO,SAASC,CAAAA,OAAT,EAA4B,CAC/B,GAAIC,CAAAA,MAAM,2CAAV,CACA,GAAIC,CAAAA,GAAG,CAAiB,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAY,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAgBT,SAAS,CAAC,mBAAD,CAAT,EAAkC,EAA9D,CACA;AACA,GAAIU,CAAAA,UAAU,CAAU,CACIC,MAAM,CAAE,kBADZ,CAEI,eAAgB,kBAFpB,CAGI,8BAA+B,GAHnC,CAAxB,CAKA,GAAG,CAAC,CAACF,QAAQ,CAACG,KAAd,CAAqB,CACjBF,UAAU,CAACG,aAAX,CAAgC,UAAYJ,QAAQ,CAACG,KAArD,CACH,CAED,GAAIE,CAAAA,QAAQ,CAAGf,KAAK,CAACgB,MAAN,CAAa,CACxBC,OAAO,CAAEN,UADe,CAAb,CAAf,CAIA,GAAIO,CAAAA,MAAM,CAAc,EAAxB,CACA,GAAIC,CAAAA,QAAQ,CAAY,EAAxB,CACA,OAAOZ,MAAP,EACI,IAAI,MAAJ,CACIY,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACP,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADO,CAAX,CAWAS,MAAM,CAAUH,QAAQ,CAACc,IAAT,CAAc3B,UAAU,CAACM,GAAzB,CAA8BW,QAA9B,CAAhB,CACJ,MAEA,IAAI,KAAJ,CACIA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACP,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADO,CAAX,CAWAS,MAAM,CAAUH,QAAQ,CAACe,GAAT,CAAa5B,UAAU,CAACM,GAAxB,CAA6BW,QAA7B,CAAhB,CACJ,MAEA,IAAI,QAAJ,CACIA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACP,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADO,CAAX,CAWAS,MAAM,CAAUH,QAAQ,CAACgB,MAAT,CAAgB7B,UAAU,CAACM,GAA3B,CAAgCW,QAAhC,CAAhB,CACJ,MAEA,IAAI,KAAJ,CACID,MAAM,CAAUH,QAAQ,CAACiB,GAAT,CAAa9B,UAAU,CAACM,GAAxB,CAAhB,CACJ,MAhDJ,CAkDA,MAAOU,CAAAA,MAAP,CACH,CAED,MAAO,SAASe,CAAAA,SAAT,EAA8B,CACjC,GAAI1B,CAAAA,MAAM,2CAAV,CACA,GAAIC,CAAAA,GAAG,CAAiB,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAY,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAgBT,SAAS,CAAC,mBAAD,CAAT,EAAkC,EAA9D,CACA;AACA,GAAIU,CAAAA,UAAU,CAAU,CACIC,MAAM,CAAE,kBADZ,CAEI,eAAgB,kBAFpB,CAGI,8BAA+B,GAHnC,CAAxB,CAKA,GAAG,CAAC,CAACF,QAAQ,CAACG,KAAd,CAAqB,CACjBF,UAAU,CAACG,aAAX,CAAgC,UAAYJ,QAAQ,CAACG,KAArD,CACH,CAED,GAAIE,CAAAA,QAAQ,CAAGf,KAAK,CAACgB,MAAN,CAAa,CACxBC,OAAO,CAAEN,UADe,CAAb,CAAf,CAIA,GAAIO,CAAAA,MAAM,CAAc,EAAxB,CACA,OAAOX,MAAP,EACI,IAAI,MAAJ,CACI,GAAIY,CAAAA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACX,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADW,CAAf,CAWAS,MAAM,CAAUH,QAAQ,CAACc,IAAT,CAAczB,WAAW,CAACI,GAA1B,CAA+BW,QAA/B,CAAhB,CACJ,MAEA,IAAI,KAAJ,CACIA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACP,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADO,CAAX,CAWAS,MAAM,CAAUH,QAAQ,CAACe,GAAT,CAAa1B,WAAW,CAACI,GAAzB,CAA8BW,QAA9B,CAAhB,CACJ,MAEA,IAAI,QAAJ,CACIA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACP,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADO,CAAX,CAWAS,MAAM,CAAUH,QAAQ,CAACgB,MAAT,CAAgB3B,WAAW,CAACI,GAA5B,CAAiCW,QAAjC,CAAhB,CACJ,MAEA,IAAI,KAAJ,CACID,MAAM,CAAUH,QAAQ,CAACiB,GAAT,CAAa5B,WAAW,CAACI,GAAzB,CAAhB,CACJ,MAhDJ,CAkDA,MAAOU,CAAAA,MAAP,CACH,CAED,MAAO,SAASgB,CAAAA,cAAT,EAAmC,CACtC,GAAI3B,CAAAA,MAAM,2CAAV,CACA,GAAIC,CAAAA,GAAG,CAAiB,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAY,8CAAa,EAArC,CACA,GAAIC,CAAAA,QAAQ,CAAgBT,SAAS,CAAC,mBAAD,CAAT,EAAkC,EAA9D,CACA;AACA,GAAIU,CAAAA,UAAU,CAAU,CACIC,MAAM,CAAE,kBADZ,CAEI,eAAgB,kBAFpB,CAGI,8BAA+B,GAHnC,CAAxB,CAKA,GAAG,CAAC,CAACF,QAAQ,CAACG,KAAd,CAAqB,CACjB;AACH,CAED,GAAIE,CAAAA,QAAQ,CAAGf,KAAK,CAACgB,MAAN,CAAa,CACxBC,OAAO,CAAEN,UADe,CAAb,CAAf,CAIA,GAAIO,CAAAA,MAAM,CAAc,EAAxB,CACA,OAAOX,MAAP,EACI,IAAI,MAAJ,CACI,GAAIY,CAAAA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CACX,CACIC,OAAO,CAAC,CADZ,CAEIC,GAAG,CAAC,CAFR,CAGIC,QAAQ,CAAC,KAHb,CAIIC,GAAG,CAAC,CACAC,EAAE,CAAC,OADH,CAEAC,IAAI,CAAC,WAFL,CAJR,CAQIC,MAAM,CAACnB,QARX,CADW,CAAf,CAWAS,MAAM,CAAUH,QAAQ,CAACc,IAAT,CAAc,SAASrB,GAAvB,CAA4BW,QAA5B,CAAhB,CACJ,MAEA,IAAI,KAAJ,CACID,MAAM,CAAUH,QAAQ,CAACiB,GAAT,CAAa,8BAAb,CAAhB,CACJ,MAlBJ,CAoBA,MAAOd,CAAAA,MAAP,CACH","sourcesContent":["import Config from '../config';\nimport axios from \"axios\";\nimport {getCookie} from '../util/cookies';\n\nlet baseAPIUrl          =   Config.ApiUrl;\nlet baseAPIUrl2         =   Config.ApiUrl2;\n//console.log('Config : ', baseAPIUrl);\nexport function callApi(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    let bodydata        =   {};\n    switch(method) {\n        case'POST': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post(baseAPIUrl+url, bodydata);\n        break;\n\n        case'PUT': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.put(baseAPIUrl+url, bodydata);\n        break;\n\n        case'DELETE': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.delete(baseAPIUrl+url, bodydata);\n        break;\n        \n        case'GET':\n            result      =   instance.get(baseAPIUrl+url);\n        break;\n    }\n    return result;\n}\n\nexport function callApiV2(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    switch(method) {\n        case'POST': \n            let bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post(baseAPIUrl2+url, bodydata);\n        break;\n\n        case'PUT': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.put(baseAPIUrl2+url, bodydata);\n        break;\n\n        case'DELETE': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.delete(baseAPIUrl2+url, bodydata);\n        break;\n        \n        case'GET':        \n            result      =   instance.get(baseAPIUrl2+url);\n        break;\n    }\n    return result;\n}\n\nexport function callOnFleetApi(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        //reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    switch(method) {\n        case'POST': \n            let bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post('/api2/'+url, bodydata);\n        break;\n        \n        case'GET':        \n            result      =   instance.get('/fleet/tasks/6ae0019f/public');\n        break;\n    }\n    return result;\n}"]},"metadata":{},"sourceType":"module"}