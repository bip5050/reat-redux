{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import*as actions from'./actions';import ForgotPasswordForm from'./forgotPassword';var ForgotPassword=function ForgotPassword(_ref){var isProcessing=_ref.isProcessing,isError=_ref.isError,isSuccess=_ref.isSuccess,forgotPassword=_ref.forgotPassword,forgotPasswordData=_ref.forgotPasswordData,forgotPasswordreset=_ref.forgotPasswordreset;return/*#__PURE__*/React.createElement(ForgotPasswordForm,{isProcessing:isProcessing,isError:isError,isSuccess:isSuccess,forgotPassword:forgotPassword,forgotPasswordData:forgotPasswordData,forgotPasswordreset:forgotPasswordreset});};var mapStateToProps=function mapStateToProps(_ref2){var forgotPasswordReducer=_ref2.forgotPasswordReducer;return{isProcessing:forgotPasswordReducer.isProcessing,isError:forgotPasswordReducer.isError,isSuccess:forgotPasswordReducer.isSuccess,forgotPasswordData:forgotPasswordReducer.forgotPasswordData};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{forgotPassword:function forgotPassword(data){return dispatch(actions.forgotPassword(data));},forgotPasswordreset:function forgotPasswordreset(){return dispatch(actions.forgotPasswordreset());}};};export default connect(mapStateToProps,mapDispatchToProps)(withRouter(ForgotPassword));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/ForgotPassword/index.js"],"names":["React","connect","withRouter","actions","ForgotPasswordForm","ForgotPassword","isProcessing","isError","isSuccess","forgotPassword","forgotPasswordData","forgotPasswordreset","mapStateToProps","forgotPasswordReducer","mapDispatchToProps","dispatch","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,WAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,kBAA/B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAOf,IANcC,CAAAA,YAMd,MANcA,YAMd,CALcC,OAKd,MALcA,OAKd,CAJcC,SAId,MAJcA,SAId,CAHcC,cAGd,MAHcA,cAGd,CAFcC,kBAEd,MAFcA,kBAEd,CADcC,mBACd,MADcA,mBACd,CACJ,mBACE,oBAAC,kBAAD,EACE,YAAY,CAAEL,YADhB,CAEE,OAAO,CAAEC,OAFX,CAGE,SAAS,CAAEC,SAHb,CAIE,cAAc,CAAEC,cAJlB,CAKE,kBAAkB,CAAEC,kBALtB,CAME,mBAAmB,CAAGC,mBANxB,EADF,CAUF,CAlBF,CA6BC,GAAOC,CAAAA,eAAe,CAAK,QAApBA,CAAAA,eAAoB,OAA6B,IAA3BC,CAAAA,qBAA2B,OAA3BA,qBAA2B,CACtD,MAAQ,CACLP,YAAY,CAAEO,qBAAqB,CAACP,YAD/B,CAELC,OAAO,CAAEM,qBAAqB,CAACN,OAF1B,CAGLC,SAAS,CAAEK,qBAAqB,CAACL,SAH5B,CAILE,kBAAkB,CAAEG,qBAAqB,CAACH,kBAJrC,CAAR,CAMA,CAPF,CAUD,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCN,cAAc,CAAE,wBAACO,IAAD,QAAUD,CAAAA,QAAQ,CAACZ,OAAO,CAACM,cAAR,CAAuBO,IAAvB,CAAD,CAAlB,EADsB,CAEtCL,mBAAmB,CAAE,qCAAMI,CAAAA,QAAQ,CAACZ,OAAO,CAACQ,mBAAR,EAAD,CAAd,EAFiB,CAAL,EAAnC,CAIA,cAAeV,CAAAA,OAAO,CAACW,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CZ,UAAU,CAACG,cAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {PropTypes as PT} from 'prop-types';\nimport * as actions from './actions';\nimport ForgotPasswordForm from './forgotPassword';\n\nconst ForgotPassword = ({\n                      isProcessing,\n                      isError,\n                      isSuccess,\n                      forgotPassword,\n                      forgotPasswordData,\n                      forgotPasswordreset\n  }) => {\n    return (\n      <ForgotPasswordForm\n        isProcessing={isProcessing}\n        isError={isError}\n        isSuccess={isSuccess}\n        forgotPassword={forgotPassword}\n        forgotPasswordData={forgotPasswordData}\n        forgotPasswordreset ={forgotPasswordreset}\n      />\n    )\n };\n\n ForgotPassword.propTypes   = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  forgotPassword:PT.func,\n  forgotPasswordreset:PT.func,\n  forgotPasswordData:PT.object\n }\n\n const  mapStateToProps   = ({forgotPasswordReducer}) => {\n   return ({\n      isProcessing: forgotPasswordReducer.isProcessing,\n      isError: forgotPasswordReducer.isError,\n      isSuccess: forgotPasswordReducer.isSuccess,\n      forgotPasswordData: forgotPasswordReducer.forgotPasswordData\n    })\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  forgotPassword: (data) => dispatch(actions.forgotPassword(data)),\n  forgotPasswordreset: () => dispatch(actions.forgotPasswordreset())\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ForgotPassword));"]},"metadata":{},"sourceType":"module"}