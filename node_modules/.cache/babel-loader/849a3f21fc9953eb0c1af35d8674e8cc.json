{"ast":null,"code":"import _defineProperty from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Dashboard/customFilter.js\";\nimport React, { Component } from 'react';\nimport { getStatusClass } from '../../util/helper';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { isEmpty } from 'lodash';\nimport { addressFormater } from '../../util/helper';\nimport { error as notifyerror } from '../../util/notify';\nimport { Form } from 'reactstrap';\nimport CustomContext from '../Modals/contextMenu';\n\nvar CustomFilter = /*#__PURE__*/function (_Component) {\n  _inherits(CustomFilter, _Component);\n\n  var _super = _createSuper(CustomFilter);\n\n  function CustomFilter(props) {\n    var _this;\n\n    _classCallCheck(this, CustomFilter);\n\n    _this = _super.call(this, props);\n\n    _this.hideContextMenu = function () {\n      _this.setState({\n        visible: false,\n        x: 0,\n        y: 0\n      });\n    };\n\n    _this.handleChange = function (merchant_address) {\n      //console.log('Recipient Address', recipient_address);\n      _this.setState({\n        search: _objectSpread(_objectSpread({}, _this.state.search), {}, {\n          merchant_address: merchant_address\n        })\n      });\n    };\n\n    _this.handleSelect = function (merchant_address) {\n      //console.log('Merchant Address', merchant_address);\n      var self = _assertThisInitialized(_this);\n\n      var data = {\n        zipcode: '',\n        state_code: '',\n        latitude: '',\n        longitude: '',\n        address: ''\n      };\n      geocodeByAddress(merchant_address).then(function (results) {\n        //console.log(merchant_address, results[0], results[0].formatted_address);\n        data.address = results[0].formatted_address || '';\n        return getLatLng(results[0]);\n      }).then(function (_ref) {\n        var lat = _ref.lat,\n            lng = _ref.lng;\n        //console.log(lat, lng, data.address);\n        var matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\n\n        if (matchExp.test(data.address)) {\n          var delAddData = _this.props.deliveryAddress;\n          var addressArray = addressFormater(data.address); //console.log('Address : ', addressArray.formattedAddress);\n\n          if (!isEmpty(addressArray) && addressArray.validAdrs) {\n            var formattedAddress = addressArray.formattedAddress || '';\n            self.setState({\n              search: _objectSpread(_objectSpread({}, _this.state.search), {}, {\n                merchant_address: formattedAddress\n              })\n            }, function () {\n              self.props.searchFilter({\n                type: self.state.search.type,\n                value: formattedAddress,\n                user_type: this.props.userType\n              });\n            });\n          } else {\n            notifyerror('Oops, that does not seem like a valid address. Please try again.');\n            self.setState({\n              /* errors: {\n                      ...self.state.error,\n                      recipient_address:\"Invalid Address\"\n              },\n              recipient_location: {} */\n              recipient_address: ''\n            });\n          }\n        }\n      }).catch(function (error) {\n        console.log('Error', error);\n      });\n    };\n\n    _this.handleRecipientChange = function (recipient_address) {\n      //console.log('Recipient Address', recipient_address);\n      _this.setState({\n        search: _objectSpread(_objectSpread({}, _this.state.search), {}, {\n          recipient_address: recipient_address\n        })\n      });\n    };\n\n    _this.handleRecipientSelect = function (recipient_address) {\n      //console.log('Merchant Address', merchant_address);\n      var self = _assertThisInitialized(_this);\n\n      var data = {\n        zipcode: '',\n        state_code: '',\n        latitude: '',\n        longitude: '',\n        address: ''\n      };\n      geocodeByAddress(recipient_address).then(function (results) {\n        //console.log(merchant_address, results[0], results[0].formatted_address);\n        data.address = results[0].formatted_address || '';\n        return getLatLng(results[0]);\n      }).then(function (_ref2) {\n        var lat = _ref2.lat,\n            lng = _ref2.lng;\n        //console.log(lat, lng, data.address);\n        var matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\n\n        if (matchExp.test(data.address)) {\n          var delAddData = _this.props.deliveryAddress;\n          var addressArray = addressFormater(data.address); //console.log('Address : ', addressArray.formattedAddress);\n\n          if (!isEmpty(addressArray) && addressArray.validAdrs) {\n            var formattedAddress = addressArray.formattedAddress || '';\n            self.setState({\n              search: _objectSpread(_objectSpread({}, _this.state.search), {}, {\n                recipient_address: formattedAddress\n              })\n            }, function () {\n              self.props.searchFilter({\n                type: self.state.search.type,\n                value: formattedAddress,\n                user_type: this.props.userType\n              });\n            });\n          } else {\n            notifyerror('Oops, that does not seem like a valid address. Please try again.');\n            self.setState({\n              /* errors: {\n                      ...self.state.error,\n                      recipient_address:\"Invalid Address\"\n              },\n              recipient_location: {} */\n              recipient_address: ''\n            });\n          }\n        }\n      }).catch(function (error) {\n        console.log('Error', error);\n      });\n    };\n\n    _this.state = {\n      x: '',\n      y: '',\n      typeOpen: false,\n      search: {\n        text: '',\n        merchant_address: '',\n        recipient_address: '',\n        start_time: '',\n        end_time: '',\n        type: 'order-number',\n        label: 'Order Number'\n      },\n      filteredList: {}\n    };\n    _this.timings = [];\n    _this.changeSearchType = _this.changeSearchType.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.handleRecipientChange = _this.handleRecipientChange.bind(_assertThisInitialized(_this));\n    _this.handleRecipientSelect = _this.handleRecipientSelect.bind(_assertThisInitialized(_this));\n    _this.onSearchDelTime = _this.onSearchDelTime.bind(_assertThisInitialized(_this));\n    _this.resetSearch = _this.resetSearch.bind(_assertThisInitialized(_this));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_this));\n    _this.handleSelectbox = _this.handleSelectbox.bind(_assertThisInitialized(_this));\n    _this.collapse = _this.collapse.bind(_assertThisInitialized(_this));\n    _this.handleContextMenu = _this.handleContextMenu.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /* shouldComponentUpdate(nextProps, nextState) {\n      console.log('Should Update : ', (!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow));\n      if(!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow){\n          return false;\n      } else {\n          return true;\n      }\n  } */\n\n\n  _createClass(CustomFilter, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.timings = props.timings || {};\n      this.setState({\n        filteredList: props.filteredList\n      });\n    }\n  }, {\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(event, order) {\n      //console.log('Context Menu : ', order);\n      var self = this;\n      event.preventDefault();\n      var clickX = event.pageX;\n      var clickY = event.pageY;\n      var element = document.getElementById('sideBar');\n      var left = 0;\n      if (element.offsetLeft >= 0) left = element.clientWidth;\n      self.setState({\n        visible: true,\n        x: clickX - left,\n        y: clickY - 250,\n        selOrder: _objectSpread({}, order)\n      });\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(type) {\n      this.setState({\n        typeOpen: false\n      });\n    }\n  }, {\n    key: \"handleSelectbox\",\n    value: function handleSelectbox(cls) {\n      this.setState(_defineProperty({}, cls, !this.state[cls]));\n    }\n  }, {\n    key: \"changeSearchType\",\n    value: function changeSearchType(data) {\n      this.setState({\n        search: _objectSpread(_objectSpread({}, this.state.search), {}, {\n          type: data.type,\n          label: data.label,\n          text: '',\n          typeOpen: false\n        }) //typeOpen    :   !this.state.typeOpen\n\n      });\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(e) {\n      var value = e.target.value;\n      this.setState({\n        search: _objectSpread(_objectSpread({}, this.state.search), {}, {\n          text: e.target.value\n        })\n      }, function () {\n        if (value.length > 1) this.props.searchFilter({\n          type: this.state.search.type,\n          value: value,\n          user_type: this.props.userType\n        });else this.setState({\n          filteredList: {}\n        });\n      });\n    }\n  }, {\n    key: \"onSearchDelTime\",\n    value: function onSearchDelTime(e, type) {\n      var self = this;\n      /* let i = e.target.value || '';\n      let start   =  this.timings.from[i].value;\n      let end   =  this.timings.to[i].value; */\n\n      var start = '';\n      var end = '';\n\n      if (type === 'start') {\n        start = e.target.value || '';\n        end = this.state.search.end_time || '';\n      }\n\n      if (type === 'end') {\n        end = e.target.value || '';\n        start = this.state.search.start_time || '';\n      } //console.log('Search By time : ', start, end);\n\n\n      this.setState({\n        search: _objectSpread(_objectSpread({}, this.state.search), {}, {\n          start_time: start,\n          end_time: end\n        })\n      }, function () {\n        if (!!start && !!end) {\n          self.props.searchFilter({\n            type: start,\n            value: end,\n            user_type: this.props.userType\n          });\n        }\n      });\n    }\n  }, {\n    key: \"resetSearch\",\n    value: function resetSearch() {\n      var _this2 = this;\n\n      this.setState({\n        search: {\n          text: '',\n          merchant_address: '',\n          recipient_address: '',\n          delivery_time: '',\n          start_date: '',\n          end_date: '',\n          type: 'order-number',\n          label: 'Order Number'\n        },\n        filteredList: {}\n      }, function () {\n        _this2.props.resetSearch();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.resetSearch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //console.log(this.state.search);\n      var startTimings = !!this.timings && !!this.timings.from ? this.timings.from : [];\n      var endTimings = !!this.timings && !!this.timings.to ? this.timings.to : [];\n      var filteredData = this.state.filteredList || {};\n      var filteredList = {};\n      var filteredCount = 0;\n\n      if (!isEmpty(filteredData)) {\n        filteredList = filteredData.tasks || {};\n        filteredCount = filteredData.count || 0;\n      }\n\n      var rsSrchStyles = {\n        input: {\n          width: '260px',\n          padding: '0px 15px 0px 35px',\n          color: '#333',\n          margin: '0'\n        },\n        autocompleteContainer: {\n          borderRadius: '0 0 3px 3px',\n          zIndex: '999',\n          background: 'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\n          position: 'relative',\n          border: '1px solid #e8e8e8',\n          boxShadow: '1px 5px 10px rgba(68,68,68,0.2)'\n        },\n        autocompleteItem: _defineProperty({\n          textAlign: 'left',\n          fontSize: '12px',\n          padding: '5px 8px 5px 30px',\n          lineHeight: '20px',\n          color: '#999',\n          background: '10px 8px #fff',\n          margin: '0',\n          borderTop: 'none',\n          borderBottom: '1px solid #ccc'\n        }, \"background\", 'url(/static/images/location_google.png) no-repeat 10px 8px #fff'),\n        autocompleteItemActive: {\n          color: '#E44500'\n        }\n      };\n\n      var renderFunc = function renderFunc(_ref3) {\n        var getInputProps = _ref3.getInputProps,\n            suggestions = _ref3.suggestions,\n            getSuggestionItemProps = _ref3.getSuggestionItemProps,\n            loading = _ref3.loading;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps({\n          placeholder: 'Enter Address',\n          className: 't_box'\n        }), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }\n        }, loading && /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            data: \"autosuggest\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }\n          }, suggestion.description));\n        })));\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchMod_sec\".concat(!!this.props.showSearch ? '' : ' hide'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"s_bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 19\n        }\n      }, \"Search by:\"), /*#__PURE__*/React.createElement(Form, {\n        method: \"get\",\n        action: \"\",\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"select-box \".concat(this.state.typeOpen ? \" sopen\" : \" \"),\n        onBlur: function onBlur() {\n          return _this3.collapse('typeOpen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"s-result\",\n        onClick: function onClick() {\n          return _this3.handleSelectbox('typeOpen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        readOnly: true,\n        value: this.state.search.label,\n        name: \"searchType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"selectchild\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this3.changeSearchType({\n            type: 'order-number',\n            label: 'Order Number'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 28\n        }\n      }, \"Order Number\"), this.props.section !== 'All Tasks' ? /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this3.changeSearchType({\n            type: 'delivery-window',\n            label: 'Delivery Window'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 32\n        }\n      }, \"Delivery Window\") : null, /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this3.changeSearchType({\n            type: 'merchant-address',\n            label: 'Merchant Address'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 28\n        }\n      }, \"Merchant Address\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this3.changeSearchType({\n            type: 'recipient-address',\n            label: 'Recipient Address'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 28\n        }\n      }, \"Recipient Address\"), /*#__PURE__*/React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this3.changeSearchType({\n            type: 'driver',\n            label: 'Driver'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 28\n        }\n      }, \"Driver\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resboxwrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 22\n        }\n      }, ['order-number', 'driver'].includes(this.state.search.type) ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"Search\",\n        name: \"searchTxt\",\n        value: this.state.search.text,\n        onChange: this.handleSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 31\n        }\n      }) : null, this.state.search.type === 'delivery-window' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d_window\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"sdate\",\n        name: \"start_time\",\n        onChange: function onChange(e) {\n          return _this3.onSearchDelTime(e, 'start');\n        },\n        value: this.state.search.start_time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 37\n        }\n      }, \"-- Select --\"), (startTimings || []).map(function (v, k) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: k,\n          value: v.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 46\n          }\n        }, v.label);\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 34\n        }\n      }, \"to\"), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"edate\",\n        name: \"end_time\",\n        onChange: function onChange(e) {\n          return _this3.onSearchDelTime(e, 'end');\n        },\n        value: this.state.search.end_time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 37\n        }\n      }, \"-- Select --\"), (endTimings || []).map(function (v, k) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: k,\n          value: v.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 46\n          }\n        }, v.label);\n      }))) : null, this.state.search.type === 'merchant-address' ? /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n        value: this.state.search.merchant_address,\n        onChange: this.handleChange,\n        onSelect: this.handleSelect,\n        styles: rsSrchStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 31\n        }\n      }, renderFunc) : null, this.state.search.type === 'recipient-address' ? /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n        value: this.state.search.recipient_address,\n        onChange: this.handleRecipientChange,\n        onSelect: this.handleRecipientSelect,\n        styles: rsSrchStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 31\n        }\n      }, renderFunc) : null), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.resetSearch,\n        className: \"reset_btn\",\n        type: \"reset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 22\n        }\n      }, \"Reset\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"s_result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(CustomContext, {\n        visible: this.state.visible,\n        x: this.state.x,\n        y: this.state.y,\n        selOrder: this.state.selOrder,\n        openEditWindow: this.props.openEditWindow,\n        openDetailsWindow: this.props.openDetailsWindow,\n        openMapWindow: this.props.openMapWindow,\n        deleteTask: this.props.deleteTask,\n        updateTask: this.props.updateTask,\n        hideContextMenu: this.hideContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }\n      }), filteredCount > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }\n      }, !isEmpty(filteredList) ? Object.keys(filteredList || {}).map(function (item, i) {\n        var cities = filteredList[item] || [];\n        return /*#__PURE__*/React.createElement(\"section\", {\n          key: i,\n          className: \"t_content\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 49\n          }\n        }, item), cities.map(function (city, index) {\n          var orderList = city.orders || [];\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"table_sec\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 57\n            }\n          }, /*#__PURE__*/React.createElement(\"table\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"thead\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 65\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"th\", {\n            colSpan: \"7\",\n            className: \"t-titel\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 73\n            }\n          }, city.name)), /*#__PURE__*/React.createElement(\"tr\", {\n            className: \"t-heading\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 73\n            }\n          }, \"Order Number\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 73\n            }\n          }, \"Delivery Window\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 73\n            }\n          }, \"Merchant Address\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 73\n            }\n          }, \"Recipient Address\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 73\n            }\n          }, \"Driver\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 73\n            }\n          }, \"Task Status\"), /*#__PURE__*/React.createElement(\"th\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 73\n            }\n          }))), /*#__PURE__*/React.createElement(\"tbody\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 65\n            }\n          }, orderList.map(function (order, oIndex) {\n            //console.log('Onfleet : ', order);\n            var clsName = getStatusClass(order.tsk_status);\n            var merchant_address = \"\".concat(order.mrchnt_address.number, \" \").concat(order.mrchnt_address.street, \", \").concat(order.mrchnt_address.city);\n            var recipient_address = \"\".concat(order.recpnt_address.number, \" \").concat(order.recpnt_address.street, \", \").concat(order.recpnt_address.city);\n            return /*#__PURE__*/React.createElement(\"tr\", {\n              key: oIndex,\n              onContextMenu: function onContextMenu(e) {\n                return _this3.handleContextMenu(e, {\n                  order_number: order.order_number,\n                  order_id: order.id,\n                  order_uuid: order.uuid,\n                  tsk_status: order.tsk_status,\n                  mrchnt_address: merchant_address,\n                  recpnt_address: recipient_address\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 81\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 81\n              }\n            }, order.order_number), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 81\n              }\n            }, order.complete_after, \" - \", order.complete_before), /*#__PURE__*/React.createElement(\"td\", {\n              className: \"acell\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 81\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 85\n              }\n            }, merchant_address), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"tTip\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 85\n              }\n            }, merchant_address)), /*#__PURE__*/React.createElement(\"td\", {\n              className: \"acell\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 81\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 85\n              }\n            }, recipient_address), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"tTip\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 85\n              }\n            }, recipient_address)), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 81\n              }\n            }, order.driver_name), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 81\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: clsName,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 85\n              }\n            }, order.tsk_status)), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 81\n              }\n            }, !!order.track_driver && order.tsk_status !== 'Completed' ? /*#__PURE__*/React.createElement(\"a\", {\n              onClick: function onClick(e) {\n                return _this3.props.openTrackWindow(e, {\n                  current_url: order.current_url,\n                  track_driver: order.track_driver\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 93\n              }\n            }, order.track_driver) : null));\n          }))));\n        }));\n      }) : null, \"              \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"resultCount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 48\n        }\n      }, filteredCount, \" SEARCH RESULT(S)\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"t_result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"noresult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 34\n        }\n      }, \"Type to search and relevant results will appear\")));\n    }\n  }]);\n\n  return CustomFilter;\n}(Component);\n\nexport { CustomFilter as default };","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Dashboard/customFilter.js"],"names":["React","Component","getStatusClass","PlacesAutocomplete","geocodeByAddress","getLatLng","isEmpty","addressFormater","error","notifyerror","Form","CustomContext","CustomFilter","props","hideContextMenu","setState","visible","x","y","handleChange","merchant_address","search","state","handleSelect","self","data","zipcode","state_code","latitude","longitude","address","then","results","formatted_address","lat","lng","matchExp","test","delAddData","deliveryAddress","addressArray","validAdrs","formattedAddress","searchFilter","type","value","user_type","userType","recipient_address","catch","console","log","handleRecipientChange","handleRecipientSelect","typeOpen","text","start_time","end_time","label","filteredList","timings","changeSearchType","bind","onSearchDelTime","resetSearch","handleSearch","handleSelectbox","collapse","handleContextMenu","event","order","preventDefault","clickX","pageX","clickY","pageY","element","document","getElementById","left","offsetLeft","clientWidth","selOrder","cls","e","target","length","start","end","delivery_time","start_date","end_date","startTimings","from","endTimings","to","filteredData","filteredCount","tasks","count","rsSrchStyles","input","width","padding","color","margin","autocompleteContainer","borderRadius","zIndex","background","position","border","boxShadow","autocompleteItem","textAlign","fontSize","lineHeight","borderTop","borderBottom","autocompleteItemActive","renderFunc","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","showSearch","section","includes","v","k","openEditWindow","openDetailsWindow","openMapWindow","deleteTask","updateTask","Object","keys","item","i","cities","city","index","orderList","orders","name","oIndex","clsName","tsk_status","mrchnt_address","number","street","recpnt_address","order_number","order_id","id","order_uuid","uuid","complete_after","complete_before","driver_name","track_driver","openTrackWindow","current_url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { getStatusClass } from '../../util/helper';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { isEmpty } from 'lodash';\nimport { addressFormater } from '../../util/helper';\nimport { error as notifyerror } from '../../util/notify';\nimport { Form } from 'reactstrap';\nimport CustomContext from '../Modals/contextMenu';\n\nexport default class CustomFilter extends Component{\n    constructor(props) {\n        super(props);\n        this.state      =   { \n            x               :   '',\n            y               :   '',\n            typeOpen                :   false,\n            search                  :   {\n                text                :   '',\n                merchant_address    :   '',\n                recipient_address   :   '',\n                start_time          :   '',\n                end_time            :   '',\n                type                :   'order-number',\n                label               :   'Order Number'\n            },\n            filteredList            :   {}\n        }\n        this.timings                    =   [];\n        this.changeSearchType           =   this.changeSearchType.bind(this);\n        this.handleChange               =   this.handleChange.bind(this);\n        this.handleSelect               =   this.handleSelect.bind(this);\n        this.handleRecipientChange      =   this.handleRecipientChange.bind(this);\n        this.handleRecipientSelect      =   this.handleRecipientSelect.bind(this);\n        this.onSearchDelTime            =   this.onSearchDelTime.bind(this);\n        this.resetSearch                =   this.resetSearch.bind(this);\n        this.handleSearch               =   this.handleSearch.bind(this);\n        this.handleSelectbox            =   this.handleSelectbox.bind(this);\n        this.collapse                   =   this.collapse.bind(this);\n        this.handleContextMenu          =   this.handleContextMenu.bind(this);\n    }\n\n    /* shouldComponentUpdate(nextProps, nextState) {\n        console.log('Should Update : ', (!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow));\n        if(!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow){\n            return false;\n        } else {\n            return true;\n        }\n    } */\n\n    componentWillReceiveProps(props) {\n        this.timings        =   props.timings || {};\n        this.setState({\n            filteredList:   props.filteredList\n        })\n    }\n\n    handleContextMenu(event, order) {\n        //console.log('Context Menu : ', order);\n        let self                   =  this;\n        event.preventDefault();        \n        const clickX            =   event.pageX;\n        const clickY            =   event.pageY;\n        let element             =   document.getElementById('sideBar');\n        let left                =   0;\n        if(element.offsetLeft >= 0)\n            left                =   element.clientWidth;\n        self.setState({\n            visible     :  true,\n            x           :  clickX - left,\n            y           :  clickY - 250,\n            selOrder    :  {...order}\n        });\n    }\n\n    hideContextMenu = () => {\n        this.setState({\n            visible     :  false,\n            x:0,\n            y:0\n        });\n    }\n\n    collapse(type) {\n        this.setState({\n            typeOpen: false\n        })\n    } \n\n    handleSelectbox(cls) {\n        this.setState({\n            [cls]: !this.state[cls]\n        })\n    }\n\n    changeSearchType(data) {\n       this.setState({\n            search: {\n                ...this.state.search,\n                type        :   data.type,\n                label       :   data.label,\n                text        :   '',\n                typeOpen    :   false\n            },\n            //typeOpen    :   !this.state.typeOpen\n       })\n    }  \n\n    handleSearch(e) {\n        let value = e.target.value;\n        this.setState({\n        search: { ...this.state.search, text: e.target.value }\n        }, function () {\n        if (value.length > 1)\n            this.props.searchFilter({\n                type: this.state.search.type,\n                value: value,\n                user_type: this.props.userType\n            });\n        else\n            this.setState({\n                filteredList: {}\n            })\n        })\n    }\n\n    onSearchDelTime(e, type) {\n        let self = this;\n        /* let i = e.target.value || '';\n        let start   =  this.timings.from[i].value;\n        let end   =  this.timings.to[i].value; */\n        \n        let start   =   '';\n        let end     =   '';\n        if(type === 'start') {\n            start   =   e.target.value || '';\n            end     =   this.state.search.end_time || '';\n        }\n        \n        if(type === 'end') {\n            end   =   e.target.value || '';\n            start     =   this.state.search.start_time || '';\n        }\n        //console.log('Search By time : ', start, end);\n        this.setState({\n            search: {\n                ...this.state.search,\n                start_time: start,\n                end_time: end\n            }\n        }, function () {\n            if(!!start && !!end) {\n                self.props.searchFilter({\n                    type: start,\n                    value: end,\n                    user_type: this.props.userType\n                })\n            }\n        })\n    }\n\n    resetSearch() {\n        this.setState({\n            search                  :   {\n                text                :  '',\n                merchant_address    :  '',\n                recipient_address   :  '',\n                delivery_time       :  '',\n                start_date          :  '',\n                end_date            :  '',\n                type                :  'order-number',\n                label               :  'Order Number'\n            },\n            filteredList            : {}\n        }, () => {\n            this.props.resetSearch();\n        })\n    }\n\n    handleChange = merchant_address => {\n        //console.log('Recipient Address', recipient_address);\n        this.setState({ search: { ...this.state.search, merchant_address: merchant_address } });\n    };\n\n    handleSelect = merchant_address => {\n        //console.log('Merchant Address', merchant_address);\n        let self = this;\n        let data = {\n        zipcode: '',\n        state_code: '',\n        latitude: '',\n        longitude: '',\n        address: ''\n        };\n        geocodeByAddress(merchant_address)\n        .then((results) => {\n            //console.log(merchant_address, results[0], results[0].formatted_address);\n            data.address = results[0].formatted_address || '';\n            return getLatLng(results[0]);\n        })\n        .then(({ lat, lng }) => {\n            //console.log(lat, lng, data.address);\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\n            if (matchExp.test(data.address)) {\n                let delAddData = this.props.deliveryAddress;\n                let addressArray = addressFormater(data.address);\n                //console.log('Address : ', addressArray.formattedAddress);\n                if (!isEmpty(addressArray) && addressArray.validAdrs) {\n                    let formattedAddress = addressArray.formattedAddress || '';\n                    self.setState({\n                    search: {\n                        ...this.state.search,\n                        merchant_address: formattedAddress\n                    }\n                    }, function () {\n                    self.props.searchFilter({\n                        type: self.state.search.type,\n                        value: formattedAddress,\n                        user_type: this.props.userType\n                    });\n                    });\n                } else {\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\n                    self.setState({\n                    /* errors: {\n                            ...self.state.error,\n                            recipient_address:\"Invalid Address\"\n                    },\n                    recipient_location: {} */\n                    recipient_address: ''\n                    });\n                }\n            }\n        })\n        .catch(error => {\n            console.log('Error', error);\n        });\n    };\n\n    handleRecipientChange = recipient_address => {\n        //console.log('Recipient Address', recipient_address);\n        this.setState({ search: { ...this.state.search, recipient_address: recipient_address } });\n    };\n\n    handleRecipientSelect = recipient_address => {\n        //console.log('Merchant Address', merchant_address);\n        let self = this;\n        let data = {\n        zipcode: '',\n        state_code: '',\n        latitude: '',\n        longitude: '',\n        address: ''\n        };\n        geocodeByAddress(recipient_address)\n        .then((results) => {\n            //console.log(merchant_address, results[0], results[0].formatted_address);\n            data.address = results[0].formatted_address || '';\n            return getLatLng(results[0]);\n        })\n        .then(({ lat, lng }) => {\n            //console.log(lat, lng, data.address);\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\n            if (matchExp.test(data.address)) {\n                let delAddData = this.props.deliveryAddress;\n                let addressArray = addressFormater(data.address);\n                //console.log('Address : ', addressArray.formattedAddress);\n                if (!isEmpty(addressArray) && addressArray.validAdrs) {\n                    let formattedAddress = addressArray.formattedAddress || '';\n                    self.setState({\n                    search: {\n                        ...this.state.search,\n                        recipient_address: formattedAddress\n                    }\n                    }, function () {\n                    self.props.searchFilter({\n                        type: self.state.search.type,\n                        value: formattedAddress,\n                        user_type: this.props.userType\n                    });\n                    });\n                } else {\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\n                    self.setState({\n                    /* errors: {\n                            ...self.state.error,\n                            recipient_address:\"Invalid Address\"\n                    },\n                    recipient_location: {} */\n                    recipient_address: ''\n                    });\n                }\n            }\n        })\n        .catch(error => {\n            console.log('Error', error);\n        });\n    };\n\n    componentWillUnmount() {\n        this.props.resetSearch();\n    }\n\n    render () {\n        //console.log(this.state.search);\n        let startTimings        =   (!!this.timings && !!this.timings.from) ? this.timings.from : [];\n        let endTimings          =   (!!this.timings && !!this.timings.to) ? this.timings.to : [];     \n        let filteredData        =   this.state.filteredList || {};\n        let filteredList        =   {};\n        let filteredCount       =   0;\n        if (!isEmpty(filteredData)) {\n            filteredList        =   filteredData.tasks || {};\n            filteredCount       =   filteredData.count || 0;\n        }\n        const rsSrchStyles      =   {\n            input           :   {\n                width       :   '260px',\n                padding     :   '0px 15px 0px 35px',\n                color       :   '#333',\n                margin      :   '0'\n            },\n            autocompleteContainer   :   {\n                borderRadius    :   '0 0 3px 3px',\n                zIndex          :   '999',\n                background      :   'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\n                position        :   'relative',\n                border          :   '1px solid #e8e8e8',\n                boxShadow       :   '1px 5px 10px rgba(68,68,68,0.2)',\n            },\n            autocompleteItem    :   {\n                textAlign       :   'left',\n                fontSize        :   '12px',\n                padding         :   '5px 8px 5px 30px',\n                lineHeight      :   '20px',\n                color           :   '#999',\n                background      :   '10px 8px #fff',\n                margin          :   '0',\n                borderTop       :   'none',\n                borderBottom    :   '1px solid #ccc',\n                background      :   'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\n            },\n            autocompleteItemActive  :   { color: '#E44500' }\n        };\n\n        const renderFunc = ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n                <input\n                {...getInputProps({\n                    placeholder: 'Enter Address',\n                    className: 't_box',\n                })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                    const className = suggestion.active\n                        ? 'suggestion-item--active'\n                        : 'suggestion-item';\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                        <div\n                            {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style,\n                            })}\n                        >\n                            <span data=\"autosuggest\">{suggestion.description}</span>\n                        </div>\n                    );\n                })}\n                </div>\n            </div>\n        );\n        return (\n            \n            <div className={`searchMod_sec${(!!this.props.showSearch) ? '' : ' hide'}`}>\n               <div className=\"s_bar\">\n                  <label>Search by:</label>\n                  <Form method=\"get\" action=\"\" autoComplete=\"off\">\n                     <div\n                        className={`select-box ${this.state.typeOpen ? \" sopen\" : \" \"}`}                        \n                        onBlur={() => this.collapse('typeOpen')}\n                     >\n                        <div className=\"s-result\" onClick={() => this.handleSelectbox('typeOpen')}>\n                            <input type=\"text\" autoComplete=\"off\" readOnly value={this.state.search.label} name=\"searchType\"/>\n                        </div>\n                        <ul className=\"selectchild\">\n                           <li onClick={() => this.changeSearchType({\n                              type: 'order-number',\n                              label: 'Order Number'\n                           })}>Order Number</li>\n                           {\n                               (this.props.section !== 'All Tasks') ? \n                               <li onClick={() => this.changeSearchType({\n                                    type: 'delivery-window',\n                                    label: 'Delivery Window'\n                                })}>Delivery Window</li> : null\n                           }                           \n                           <li onClick={() => this.changeSearchType({\n                              type: 'merchant-address',\n                              label: 'Merchant Address'\n                           })}>Merchant Address</li>\n                           <li onClick={() => this.changeSearchType({\n                              type: 'recipient-address',\n                              label: 'Recipient Address'\n                           })}>Recipient Address</li>\n                           <li onClick={() => this.changeSearchType({\n                              type: 'driver',\n                              label: 'Driver'\n                           })}>Driver</li>\n                           {/* <li>Task Status</li> */}\n                        </ul>\n                     </div>\n                     <div className=\"resboxwrap\">\n                     <div className=\"search_box\">\n                           {\n                              (['order-number', 'driver'].includes(this.state.search.type)) ?\n                              <input type=\"text\"autoComplete=\"off\" placeholder=\"Search\" name=\"searchTxt\" value={this.state.search.text} onChange={this.handleSearch}/> : null\n                           }\n                           {                              \n                              (this.state.search.type === 'delivery-window') ?\n                              <div className=\"d_window\">\n                                 <select className=\"sdate\" name=\"start_time\" onChange={(e) => this.onSearchDelTime(e, 'start')} value={this.state.search.start_time}>\n                                    <option>-- Select --</option>\n                                    {\n                                       (startTimings || []).map((v, k)    =>  {\n                                          return (\n                                             <option key={k} value={v.value}>{v.label}</option>\n                                          )\n                                       })\n                                    }\n                                 </select>\n                                 <span>to</span> \n                                 <select className=\"edate\" name=\"end_time\" onChange={(e) => this.onSearchDelTime(e, 'end')} value={this.state.search.end_time}>\n                                    <option>-- Select --</option>\n                                    {\n                                       (endTimings || []).map((v, k)    =>  {\n                                          return (\n                                             <option key={k} value={v.value}>{v.label}</option>\n                                          )\n                                       })\n                                    }\n                                 </select>\n                              </div>: null\n                           }\n                           {\n                              (this.state.search.type === 'merchant-address') ?\n                              <PlacesAutocomplete\n                                    value={this.state.search.merchant_address}\n                                    onChange={this.handleChange}\n                                    onSelect={this.handleSelect}\n                                    styles={rsSrchStyles}\n                              >\n                                    {renderFunc}\n                              </PlacesAutocomplete> : null\n                           }                        \n                           {\n                              (this.state.search.type === 'recipient-address') ?\n                              <PlacesAutocomplete\n                                    value={this.state.search.recipient_address}\n                                    onChange={this.handleRecipientChange}\n                                    onSelect={this.handleRecipientSelect}\n                                    styles={rsSrchStyles}\n                              >\n                                    {renderFunc}\n                              </PlacesAutocomplete> : null\n                           }\n                        </div>\n                     <button onClick={this.resetSearch} className=\"reset_btn\" type=\"reset\">Reset</button>\n                     </div>\n                  </Form>\n               </div>\n               <div className=\"s_result\">                                           \n                    <CustomContext\n                        visible             =   {this.state.visible}\n                        x                   =   {this.state.x}\n                        y                   =   {this.state.y}\n                        selOrder            =   {this.state.selOrder}\n                        openEditWindow      =   {this.props.openEditWindow}\n                        openDetailsWindow   =   {this.props.openDetailsWindow}\n                        openMapWindow       =   {this.props.openMapWindow}\n                        deleteTask          =   {this.props.deleteTask}\n                        updateTask          =   {this.props.updateTask}\n                        hideContextMenu     =   {this.hideContextMenu}\n                    />\n                    {\n                        (filteredCount > 0) ? \n                        <div>\n              {\n                                    (!isEmpty(filteredList)) ?\n                                    Object.keys(filteredList || {}).map((item, i) => {\n                                        let cities = filteredList[item] || [];\n                                        return (\n                                            <section key={i} className=\"t_content\">\n                                                <h3 className=\"title\">{item}</h3>\n                                                {\n                                                cities.map((city, index) => {\n                                                    let orderList = city.orders || [];\n                                                    return (\n                                                        <div key={index} className=\"table_sec\">\n                                                            <table>\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th colSpan=\"7\" className=\"t-titel\">{city.name}</th>\n                                                                    </tr>\n                                                                    <tr className=\"t-heading\">\n                                                                        <th>Order Number</th>\n                                                                        <th>Delivery Window</th>\n                                                                        <th>Merchant Address</th>\n                                                                        <th>Recipient Address</th>\n                                                                        <th>Driver</th>\n                                                                        <th>Task Status</th>\n                                                                        <th></th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {\n                                                                        orderList.map((order, oIndex) => {\n                                                                            //console.log('Onfleet : ', order);\n                                                                            let clsName = getStatusClass(order.tsk_status);\n                                                                            let merchant_address = `${order.mrchnt_address.number} ${order.mrchnt_address.street}, ${order.mrchnt_address.city}`;\n                                                                            let recipient_address = `${order.recpnt_address.number} ${order.recpnt_address.street}, ${order.recpnt_address.city}`;\n                                                                            return (\n                                                                                <tr\n                                                                                key={oIndex}\n                                                                                onContextMenu={(e) => this.handleContextMenu(e, {\n                                                                                    order_number: order.order_number,\n                                                                                    order_id: order.id,\n                                                                                    order_uuid: order.uuid,\n                                                                                    tsk_status:order.tsk_status,\n                                                                                    mrchnt_address: merchant_address,\n                                                                                    recpnt_address: recipient_address\n                                                                                })}>\n                                                                                <td>{order.order_number}</td>\n                                                                                <td>{order.complete_after} - {order.complete_before}</td>\n                                                                                <td className=\"acell\">\n                                                                                    <label>{merchant_address}</label>\n                                                                                    <span className=\"tTip\">{merchant_address}</span>\n                                                                                </td>\n                                                                                <td className=\"acell\">\n                                                                                    <label>{recipient_address}</label>\n                                                                                    <span className=\"tTip\">{recipient_address}</span>\n                                                                                </td>\n                                                                                <td>{order.driver_name}</td>\n                                                                                <td>\n                                                                                    <span className={clsName}>{order.tsk_status}</span>\n                                                                                </td>\n                                                                                <td>\n                                                                                        {\n                                                                                            (!!order.track_driver && order.tsk_status !== 'Completed') ? \n                                                                                            <a onClick={(e)  => this.props.openTrackWindow(e, {\n                                                                                                current_url: order.current_url,\n                                                                                                track_driver: order.track_driver\n                                                                                            })}>{order.track_driver}</a> : null\n                                                                                        }\n                                                                                        {/* <a href=\"/dashboard\">{order.track_driver}</a> */}\n                                                                                </td>\n                                                                                </tr>\n                                                                            )\n                                                                        })\n                                                                    }\n                                                                </tbody>\n                                                            </table>\n                                                        </div>\n                                                    )\n                                                })\n                                                }\n                                            </section>\n                                        )\n                                    })\n                                    : null\n                                }              <div className=\"resultCount\">{filteredCount} SEARCH RESULT(S)</div>\n                            <div className=\"t_result\">\n                                \n                            </div>\n                        </div> : <div className=\"noresult\">Type to search and relevant results will appear</div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}