{"ast":null,"code":"import _objectSpread from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/TaskHistory/taskList.js\";\nimport React, { Component } from 'react';\nimport { getStatusClass } from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport CustomContext from '../Modals/contextMenu';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport Pagination from '../../Helper/pagination';\nimport StateWiseList from './stateWiseList';\nimport ZoneWiseList from './zoneWiseList';\nimport UncategorizedList from './uncategorizedList';\n\nvar TaskList = /*#__PURE__*/function (_Component) {\n  _inherits(TaskList, _Component);\n\n  var _super = _createSuper(TaskList);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _super.call(this, props);\n\n    _this.hideContextMenu = function () {\n      _this.setState({\n        visible: false,\n        x: 0,\n        y: 0\n      });\n    };\n\n    _this.changePage = function (data) {\n      //console.log('Current Page : ', this.props.filterData);\n      var currentPage = data.currentPage; //console.log('Current Page : ', currentPage, this.props.filterData, this.props.filterData.pageno);\n      //const offset\t\t\t\t\t\t\t\t\t=\t(currentPage - 1) * pageLimit;\n      //const limit\t\t\t\t\t\t\t\t\t\t=\t(offset + pageLimit);\n\n      var filterData = _objectSpread({}, _this.props.filterData);\n\n      filterData.pageno = currentPage;\n      if (currentPage !== _this.props.filterData.pageno) _this.props.getHistory(filterData, _this.props.savedFilterData);\n      /* this.setState({currentPage:currentPage}, function(){         \n         if(this.state.searchText !== '')\n            this.props.getCustomerList({searchType:this.state.searchType, searchText:this.state.searchText, currentPage:this.state.currentPage});\n      }); */\n    };\n\n    _this.state = {\n      editShow: false,\n      detailsShow: false,\n      mapShow: false,\n      trackShow: false,\n      visible: false,\n      x: '',\n      y: '',\n      tasks: {},\n      isLoading: true,\n      mrchnt_address: '',\n      recpnt_address: '',\n      filteredList: [] //totalRecords      :  0,\n      //itemsPerPage      :  100\n\n    };\n    _this.handleContextMenu = _this.handleContextMenu.bind(_assertThisInitialized(_this));\n    _this.openEditWindow = _this.openEditWindow.bind(_assertThisInitialized(_this));\n    _this.openDetailsWindow = _this.openDetailsWindow.bind(_assertThisInitialized(_this));\n    _this.openMapWindow = _this.openMapWindow.bind(_assertThisInitialized(_this));\n    _this.openTrackWindow = _this.openTrackWindow.bind(_assertThisInitialized(_this));\n    _this.deleteTask = _this.deleteTask.bind(_assertThisInitialized(_this));\n    _this.updateTask = _this.updateTask.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(event, order) {\n      var self = this;\n      event.preventDefault();\n      var clickX = event.clientX;\n      var clickY = event.pageY;\n      self.setState({\n        visible: true,\n        x: clickX,\n        y: clickY,\n        selOrder: _objectSpread({}, order)\n      });\n    }\n  }, {\n    key: \"openEditWindow\",\n    value: function openEditWindow(uuid, mrchnt_address, recpnt_address) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        editShow: true,\n        mrchnt_address: mrchnt_address,\n        recpnt_address: recpnt_address\n      });\n    }\n  }, {\n    key: \"openDetailsWindow\",\n    value: function openDetailsWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        detailsShow: true\n      });\n    }\n  }, {\n    key: \"openMapWindow\",\n    value: function openMapWindow(uuid) {\n      this.props.getTaskDetails({\n        uuid: uuid\n      });\n      this.setState({\n        mapShow: true\n      });\n    }\n  }, {\n    key: \"openTrackWindow\",\n    value: function openTrackWindow(e, data) {\n      e.stopPropagation();\n      this.setState({\n        trackShow: true,\n        currentUrl: data.current_url,\n        trackDriver: data.track_driver\n      });\n    }\n  }, {\n    key: \"updateTask\",\n    value: function updateTask(uuid, status) {\n      if (window.confirm('Do you really want to update status of this task?')) {\n        this.props.updateTaskStatus({\n          uuid: uuid,\n          status: status\n        });\n      }\n    }\n  }, {\n    key: \"deleteTask\",\n    value: function deleteTask(uuid) {\n      if (window.confirm('Do you really want to delete this task?')) {\n        this.props.deleteTask({\n          uuid: uuid\n        });\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      //console.log('Handle Close');\n      this.setState({\n        visible: false,\n        editShow: false,\n        mapShow: false,\n        detailsShow: false,\n        trackShow: false\n      });\n    }\n    /* componentWillReceiveProps(props) {\n       if(!isEmpty(props)){\n          this.setState()\n       }\n    } */\n\n    /* shouldComponentUpdate(props){\n       console.log(!isEqual(props.filterData, this.props.filterData), this.props isEmpty(this.props.filterData));\n       if(isEmpty(this.props.filterData) || !isEqual(props.filterData, this.props.filterData)){\n          return true;\n       } else {\n          return false;\n       }\n       //return true;\n    } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log('Task History List : ', this.props.isProcessing);\n      var taskHistory = this.props.taskHistory || {};\n      var taskList = {};\n      var taskCount = 0;\n      var listType = '';\n\n      if (!isEmpty(taskHistory)) {\n        taskList = taskHistory.tasks || {};\n        taskCount = taskHistory.task_count || 0;\n        listType = taskHistory.list_type;\n      }\n\n      var itemsPerPage = 500;\n      var totalRecords = taskCount; //console.log(this.props.taskHistory, listType);\n      //console.log(taskList.length > 0, taskList);\n\n      return !isEmpty(this.props.taskHistory) ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(CustomContext, {\n        visible: this.state.visible,\n        x: this.state.x,\n        y: this.state.y,\n        selOrder: this.state.selOrder,\n        openEditWindow: this.openEditWindow,\n        openDetailsWindow: this.openDetailsWindow,\n        openMapWindow: this.openMapWindow,\n        deleteTask: this.deleteTask,\n        updateTask: this.updateTask,\n        hideContextMenu: this.hideContextMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }), !isEmpty(taskList) ? /*#__PURE__*/React.createElement(\"section\", {\n        className: \"content\",\n        style: {\n          minHeight: '400px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 16\n        }\n      }, //(taskList.length > 0) ? \n      listType === 'date' ? /*#__PURE__*/React.createElement(UncategorizedList, {\n        taskList: taskList,\n        handleContextMenu: this.handleContextMenu,\n        openTrackWindow: this.openTrackWindow,\n        isProcessing: this.props.isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 22\n        }\n      }) : null, listType === 'state' ? /*#__PURE__*/React.createElement(StateWiseList, {\n        taskList: taskList,\n        handleContextMenu: this.handleContextMenu,\n        openTrackWindow: this.openTrackWindow,\n        isProcessing: this.props.isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 22\n        }\n      }) : null, listType === 'zone' ? /*#__PURE__*/React.createElement(ZoneWiseList, {\n        taskList: taskList,\n        handleContextMenu: this.handleContextMenu,\n        openTrackWindow: this.openTrackWindow,\n        isProcessing: this.props.isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 22\n        }\n      }) : null, listType === 'store-id' ? /*#__PURE__*/React.createElement(ZoneWiseList, {\n        taskList: taskList,\n        handleContextMenu: this.handleContextMenu,\n        openTrackWindow: this.openTrackWindow,\n        isProcessing: this.props.isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 22\n        }\n      }) : null, totalRecords >= itemsPerPage ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pagination_Pan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Pagination, {\n        totalRecords: totalRecords,\n        pageLimit: itemsPerPage,\n        pageNeighbours: 1,\n        onPageChanged: this.changePage,\n        isProcessing: this.props.isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 54\n        }\n      })) : null) : /*#__PURE__*/React.createElement(\"section\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-records\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 47\n        }\n      }, \"No Records\")), !!this.state.editShow ? /*#__PURE__*/React.createElement(EditTask, {\n        taskDetails: this.props.taskDetails,\n        show: this.state.editShow,\n        taskType: this.props.taskType,\n        stores: this.props.stores,\n        locations: this.props.locations,\n        pharmacy: this.props.pharmacy,\n        timings: this.props.timings,\n        settingsData: this.props.settingsData,\n        editTask: this.props.editTask,\n        mrchnt_address: this.state.mrchnt_address,\n        recpnt_address: this.state.recpnt_address,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 16\n        }\n      }) : null,\n      /*#__PURE__*/\n\n      /* (!!this.state.trackShow) ? */\n      React.createElement(TrackDetails, {\n        show: this.state.trackShow,\n        currentUrl: this.state.currentUrl,\n        trackDriver: this.state.trackDriver,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 16\n        }\n      })\n      /* : null */\n      , !!this.state.detailsShow ? /*#__PURE__*/React.createElement(TaskDetails, {\n        show: this.state.detailsShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 16\n        }\n      }) : null, !!this.state.mapShow ? /*#__PURE__*/React.createElement(MapDetails, {\n        show: this.state.mapShow,\n        taskDetails: this.props.taskDetails,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 16\n        }\n      }) : null) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 12\n        }\n      }, \"Loading....\");\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nexport { TaskList as default };","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/TaskHistory/taskList.js"],"names":["React","Component","getStatusClass","isEmpty","isEqual","map","_map","CustomContext","EditTask","TaskDetails","MapDetails","TrackDetails","Pagination","StateWiseList","ZoneWiseList","UncategorizedList","TaskList","props","hideContextMenu","setState","visible","x","y","changePage","data","currentPage","filterData","pageno","getHistory","savedFilterData","state","editShow","detailsShow","mapShow","trackShow","tasks","isLoading","mrchnt_address","recpnt_address","filteredList","handleContextMenu","bind","openEditWindow","openDetailsWindow","openMapWindow","openTrackWindow","deleteTask","updateTask","handleClose","event","order","self","preventDefault","clickX","clientX","clickY","pageY","selOrder","uuid","getTaskDetails","e","stopPropagation","currentUrl","current_url","trackDriver","track_driver","status","window","confirm","updateTaskStatus","taskHistory","taskList","taskCount","listType","task_count","list_type","itemsPerPage","totalRecords","minHeight","isProcessing","taskDetails","taskType","stores","locations","pharmacy","timings","settingsData","editTask"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { getStatusClass } from '../../util/helper';\nimport { isEmpty, isEqual, map as _map } from 'lodash';\nimport CustomContext from '../Modals/contextMenu';\nimport EditTask from '../Modals/editTaskModal';\nimport TaskDetails from '../Modals/taskDetailsModal';\nimport MapDetails from '../Modals/mapDetailsModal';\nimport TrackDetails from '../Modals/trackDetailsModal';\nimport Pagination from '../../Helper/pagination';\nimport StateWiseList from './stateWiseList';\nimport ZoneWiseList from './zoneWiseList';\nimport UncategorizedList from './uncategorizedList';\n\nexport default class TaskList extends Component {\n   constructor(props) {\n      super(props);\n      this.state                  =   {\n                                          editShow          :   false,\n                                          detailsShow       :   false,\n                                          mapShow           :   false,\n                                          trackShow         :   false,\n                                          visible           :   false,\n                                          x                 :   '',\n                                          y                 :   '',\n                                          tasks             :   {},\n                                          isLoading         :   true,\n                                          mrchnt_address    :   '',\n                                          recpnt_address    :   '',\n                                          filteredList      :   [],\n                                          //totalRecords      :  0,\n                                          //itemsPerPage      :  100\n                                      };\n      this.handleContextMenu      =   this.handleContextMenu.bind(this);\n      this.openEditWindow         =   this.openEditWindow.bind(this);\n      this.openDetailsWindow      =   this.openDetailsWindow.bind(this);\n      this.openMapWindow          =   this.openMapWindow.bind(this);\n      this.openTrackWindow        =   this.openTrackWindow.bind(this);\n      this.deleteTask             =   this.deleteTask.bind(this);\n      this.updateTask             =   this.updateTask.bind(this);\n      this.handleClose            =   this.handleClose.bind(this);\n   }\n\n   handleContextMenu(event, order) {\n       let self                   =  this;\n       event.preventDefault();        \n       const clickX               =  event.clientX;\n       const clickY               =  event.pageY;\n       self.setState({\n           visible     :  true,\n           x           :  clickX,\n           y           :  clickY,\n           selOrder    :  {...order}\n       });\n   }\n\n   hideContextMenu = () => {\n      this.setState({\n         visible     :  false,\n         x:0,\n         y:0\n      });\n   }\n\n   openEditWindow(uuid, mrchnt_address, recpnt_address){\n      this.props.getTaskDetails({uuid: uuid})\n      this.setState({\n         editShow        :   true,\n         mrchnt_address  :   mrchnt_address,\n         recpnt_address  :   recpnt_address\n      })\n   }\n\n   openDetailsWindow(uuid){\n      this.props.getTaskDetails({uuid: uuid})\n      this.setState({\n         detailsShow: true\n      })\n   }    \n\n   openMapWindow(uuid){\n      this.props.getTaskDetails({uuid: uuid});\n      this.setState({\n         mapShow: true\n      })\n   }\n\n   openTrackWindow(e, data){\n      e.stopPropagation();\n      this.setState({\n         trackShow: true,\n         currentUrl: data.current_url,\n         trackDriver: data.track_driver\n      })\n   }\n\n   updateTask(uuid, status){\n      if(window.confirm('Do you really want to update status of this task?')) {\n         this.props.updateTaskStatus({uuid: uuid, status: status});\n      }\n   }\n\n   deleteTask(uuid){\n       if(window.confirm('Do you really want to delete this task?')) {\n           this.props.deleteTask({uuid: uuid});\n       }\n   }\n   \n   handleClose(){\n       //console.log('Handle Close');\n       this.setState({\n           visible     :   false,\n           editShow    :   false,            \n           mapShow     :   false,\n           detailsShow :   false,\n           trackShow   :   false\n       })\n   }\n\n   /* componentWillReceiveProps(props) {\n      if(!isEmpty(props)){\n         this.setState()\n      }\n   } */\n\n   /* shouldComponentUpdate(props){\n      console.log(!isEqual(props.filterData, this.props.filterData), this.props isEmpty(this.props.filterData));\n      if(isEmpty(this.props.filterData) || !isEqual(props.filterData, this.props.filterData)){\n         return true;\n      } else {\n         return false;\n      }\n      //return true;\n   } */\n\n   changePage = (data) => {\n      //console.log('Current Page : ', this.props.filterData);\n      const { currentPage }\t=\tdata;\n      //console.log('Current Page : ', currentPage, this.props.filterData, this.props.filterData.pageno);\n\t\t//const offset\t\t\t\t\t\t\t\t\t=\t(currentPage - 1) * pageLimit;\n      //const limit\t\t\t\t\t\t\t\t\t\t=\t(offset + pageLimit);\n      let filterData          =  {...this.props.filterData};\n      filterData.pageno       =  currentPage;\n      if(currentPage !== this.props.filterData.pageno)\n         this.props.getHistory(filterData, this.props.savedFilterData);\n      /* this.setState({currentPage:currentPage}, function(){         \n         if(this.state.searchText !== '')\n            this.props.getCustomerList({searchType:this.state.searchType, searchText:this.state.searchText, currentPage:this.state.currentPage});\n      }); */\n   }\n\n   render() {\n      //console.log('Task History List : ', this.props.isProcessing);\n      let taskHistory         =   this.props.taskHistory || {};\n      let taskList            =   {};\n      let taskCount           =   0;\n      let listType            =  '';\n      if (!isEmpty(taskHistory)) {\n         taskList             =   taskHistory.tasks || {};\n         taskCount            =   taskHistory.task_count || 0;\n         listType             =  taskHistory.list_type;\n      }\n      let itemsPerPage            =  500;\n      let totalRecords            =  taskCount;\n      //console.log(this.props.taskHistory, listType);\n      //console.log(taskList.length > 0, taskList);\n      return (\n         (!isEmpty(this.props.taskHistory)) ? \n         <div>                       \n            <CustomContext\n               visible             =   {this.state.visible}\n               x                   =   {this.state.x}\n               y                   =   {this.state.y}\n               selOrder            =   {this.state.selOrder}\n               openEditWindow      =   {this.openEditWindow}\n               openDetailsWindow   =   {this.openDetailsWindow}\n               openMapWindow       =   {this.openMapWindow}\n               deleteTask          =   {this.deleteTask}\n               updateTask          =   {this.updateTask}\n               hideContextMenu     =   {this.hideContextMenu}\n            />\n            {\n               (!isEmpty(taskList)) ? \n               <section className=\"content\" style={{minHeight:'400px'}}>\n                  {\n                     //(taskList.length > 0) ? \n                     (listType === 'date') ?\n                     <UncategorizedList\n                        taskList             =  {taskList}\n                        handleContextMenu    =  {this.handleContextMenu}\n                        openTrackWindow    =  {this.openTrackWindow}\n                        isProcessing      =  {this.props.isProcessing}\n                     /> : null\n                  }\n                  {\n                     (listType === 'state') ?\n                     <StateWiseList\n                        taskList             =  {taskList}\n                        handleContextMenu    =  {this.handleContextMenu}\n                        openTrackWindow    =  {this.openTrackWindow}\n                        isProcessing      =  {this.props.isProcessing}\n                     /> : null\n                  }\n                  {\n                     (listType === 'zone') ?\n                     <ZoneWiseList\n                        taskList             =  {taskList}\n                        handleContextMenu    =  {this.handleContextMenu}\n                        openTrackWindow    =  {this.openTrackWindow}\n                        isProcessing      =  {this.props.isProcessing}\n                     /> : null\n                  }\n                  {\n                     (listType === 'store-id') ?\n                     <ZoneWiseList\n                        taskList             =  {taskList}\n                        handleContextMenu    =  {this.handleContextMenu}\n                        openTrackWindow    =  {this.openTrackWindow}\n                        isProcessing      =  {this.props.isProcessing}\n                     /> : null\n                  }\n                  {\n\t\t\t\t\t\t\ttotalRecords >= itemsPerPage ?\n                     <div className=\"pagination_Pan\"><Pagination totalRecords={totalRecords} pageLimit={itemsPerPage} pageNeighbours={1} onPageChanged={this.changePage} isProcessing={this.props.isProcessing}/></div>:null\n                  }\n               </section>\n               : <section className=\"content\"><div className=\"no-records\">No Records</div></section>\n            }            \n            {\n               (!!this.state.editShow) ?\n               <EditTask\n                  taskDetails         =   {this.props.taskDetails}\n                  show                =   {this.state.editShow}\n                  taskType            =   {this.props.taskType}\n                  stores              =   {this.props.stores}\n                  locations           =   {this.props.locations}\n                  pharmacy            =   {this.props.pharmacy}\n                  timings             =   {this.props.timings}\n                  settingsData        =   {this.props.settingsData}\n                  editTask            =   {this.props.editTask}\n                  mrchnt_address      =   {this.state.mrchnt_address}\n                  recpnt_address      =   {this.state.recpnt_address}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }\n            {\n               /* (!!this.state.trackShow) ? */\n               <TrackDetails\n                  show                =   {this.state.trackShow}\n                  currentUrl          =   {this.state.currentUrl}\n                  trackDriver         =   {this.state.trackDriver}\n                  handleClose         =   {this.handleClose}\n               /> /* : null */\n            }\n            {\n               (!!this.state.detailsShow) ?\n               <TaskDetails\n                  show                =   {this.state.detailsShow}\n                  taskDetails         =   {this.props.taskDetails}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }                    \n            {\n               (!!this.state.mapShow) ?\n               <MapDetails\n                  show                =   {this.state.mapShow}\n                  taskDetails         =   {this.props.taskDetails}\n                  handleClose         =   {this.handleClose}\n               /> : null\n            }\n         </div>\n         : <div className=\"loader\">Loading....</div>\n      )\n   }\n}"]},"metadata":{},"sourceType":"module"}