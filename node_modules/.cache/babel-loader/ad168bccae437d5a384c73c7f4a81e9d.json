{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Dashboard/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { PropTypes as PT } from 'prop-types';\nimport * as actions from './actions';\nimport DashboardComponent from './dashboard';\n\nvar Dashboard = function Dashboard(_ref) {\n  var userData = _ref.userData,\n      getLocations = _ref.getLocations,\n      locations = _ref.locations,\n      settingsData = _ref.settingsData,\n      userType = _ref.userType,\n      createTask = _ref.createTask,\n      getTaskDetails = _ref.getTaskDetails,\n      taskDetails = _ref.taskDetails,\n      deleteTask = _ref.deleteTask,\n      editTask = _ref.editTask,\n      updateTaskStatus = _ref.updateTaskStatus,\n      getTrackDetails = _ref.getTrackDetails,\n      search = _ref.search,\n      resetSearch = _ref.resetSearch,\n      filteredList = _ref.filteredList,\n      isTaskProcessing = _ref.isTaskProcessing,\n      updateFilter = _ref.updateFilter,\n      filterData = _ref.filterData,\n      isFilterLoaded = _ref.isFilterLoaded,\n      getShoppedLate = _ref.getShoppedLate,\n      shoppedLate = _ref.shoppedLate;\n  return /*#__PURE__*/React.createElement(DashboardComponent, {\n    userData: userData,\n    getLocations: getLocations,\n    locations: locations,\n    settingsData: settingsData,\n    userType: userType,\n    createTask: createTask,\n    getTaskDetails: getTaskDetails,\n    taskDetails: taskDetails,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    updateTaskStatus: updateTaskStatus,\n    getTrackDetails: getTrackDetails,\n    search: search,\n    resetSearch: resetSearch,\n    filteredList: filteredList,\n    isTaskProcessing: isTaskProcessing,\n    updateFilter: updateFilter,\n    filterData: filterData,\n    isFilterLoaded: isFilterLoaded,\n    getShoppedLate: getShoppedLate,\n    shoppedLate: shoppedLate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  });\n};\n\nDashboard.propTypes = {\n  userData: PT.object,\n  getLocations: PT.func,\n  createTask: PT.func,\n  getTaskDetails: PT.func,\n  getTrackDetails: PT.func,\n  deleteTask: PT.func,\n  editTask: PT.func,\n  updateTaskStatus: PT.func,\n  search: PT.func,\n  resetSearch: PT.func,\n  locations: PT.object,\n  taskDetails: PT.object,\n  settingsData: PT.object,\n  userType: PT.string,\n  isTaskProcessing: PT.bool,\n  updateFilter: PT.func,\n  filterData: PT.object,\n  isFilterLoaded: PT.bool,\n  getShoppedLate: PT.func,\n  shoppedLate: PT.object\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2, ownProps) {\n  var dashboardReducer = _ref2.dashboardReducer,\n      headerReducer = _ref2.headerReducer;\n  //console.log('Header Reducer : ', headerReducer.filterData);\n  return {\n    userData: ownProps.userData,\n    isTaskProcessing: dashboardReducer.isTaskProcessing,\n    locations: dashboardReducer.locations,\n    userType: headerReducer.userType,\n    settingsData: headerReducer.settingsData,\n    taskDetails: dashboardReducer.taskDetails,\n    filteredList: dashboardReducer.filteredList,\n    filterData: headerReducer.filterData,\n    isFilterLoaded: headerReducer.isFilterLoaded,\n    shoppedLate: dashboardReducer.shoppedLate\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateFilter: function updateFilter(data) {\n      return dispatch(actions.updateFilter(data));\n    },\n    updateTaskStatus: function updateTaskStatus(data) {\n      return dispatch(actions.updateTaskStatus(data));\n    },\n    deleteTask: function deleteTask(data) {\n      return dispatch(actions.deleteTask(data));\n    },\n    getLocations: function getLocations(data) {\n      return dispatch(actions.getLocations(data));\n    },\n    createTask: function createTask(data) {\n      return dispatch(actions.createTask(data));\n    },\n    editTask: function editTask(data) {\n      return dispatch(actions.editTask(data));\n    },\n    getTaskDetails: function getTaskDetails(data) {\n      return dispatch(actions.getTaskDetails(data));\n    },\n    getTrackDetails: function getTrackDetails(data) {\n      return dispatch(actions.getTrackDetails(data));\n    },\n    search: function search(data) {\n      return dispatch(actions.search(data));\n    },\n    resetSearch: function resetSearch(data) {\n      return dispatch(actions.resetSearch(data));\n    },\n    getShoppedLate: function getShoppedLate(data) {\n      return dispatch(actions.getShoppedLate(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Dashboard/index.js"],"names":["React","connect","withRouter","PropTypes","PT","actions","DashboardComponent","Dashboard","userData","getLocations","locations","settingsData","userType","createTask","getTaskDetails","taskDetails","deleteTask","editTask","updateTaskStatus","getTrackDetails","search","resetSearch","filteredList","isTaskProcessing","updateFilter","filterData","isFilterLoaded","getShoppedLate","shoppedLate","propTypes","object","func","string","bool","mapStateToProps","ownProps","dashboardReducer","headerReducer","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {PropTypes as PT} from 'prop-types';\nimport * as actions from './actions';\nimport DashboardComponent from './dashboard';\n\nconst Dashboard   = ({\n                        userData,\n                        getLocations,\n                        locations,\n                        settingsData,\n                        userType,\n                        createTask,\n                        getTaskDetails,\n                        taskDetails,\n                        deleteTask,\n                        editTask,\n                        updateTaskStatus,\n                        getTrackDetails,\n                        search,\n                        resetSearch,\n                        filteredList,\n                        isTaskProcessing,\n                        updateFilter,\n                        filterData,\n                        isFilterLoaded,\n                        getShoppedLate,\n                        shoppedLate\n    }) => {\n    return (\n      <DashboardComponent\n        userData={userData}\n        getLocations={getLocations}\n        locations={locations}\n        settingsData={settingsData}\n        userType={userType}\n        createTask={createTask}\n        getTaskDetails={getTaskDetails}\n        taskDetails={taskDetails}\n        deleteTask={deleteTask}\n        editTask={editTask}\n        updateTaskStatus={updateTaskStatus}\n        getTrackDetails={getTrackDetails}\n        search={search}\n        resetSearch={resetSearch}\n        filteredList={filteredList}\n        isTaskProcessing={isTaskProcessing}\n        updateFilter={updateFilter}\n        filterData={filterData}\n        isFilterLoaded={isFilterLoaded}\n        getShoppedLate={getShoppedLate}\n        shoppedLate={shoppedLate}\n      />\n    )\n };\n\n Dashboard.propTypes   = {\n  userData: PT.object,\n  getLocations: PT.func,\n  createTask: PT.func,\n  getTaskDetails: PT.func,\n  getTrackDetails: PT.func,\n  deleteTask: PT.func,\n  editTask: PT.func,\n  updateTaskStatus: PT.func,\n  search: PT.func,\n  resetSearch: PT.func,\n  locations: PT.object,\n  taskDetails: PT.object,\n  settingsData: PT.object,\n  userType: PT.string,\n  isTaskProcessing: PT.bool,\n  updateFilter: PT.func,\n\tfilterData: PT.object,\n\tisFilterLoaded: PT.bool,\n  getShoppedLate: PT.func,\n\tshoppedLate: PT.object,\n }\n\n const  mapStateToProps   = ({dashboardReducer, headerReducer}, ownProps) => {\n    //console.log('Header Reducer : ', headerReducer.filterData);\n    return ({\n            userData: ownProps.userData,\n            isTaskProcessing: dashboardReducer.isTaskProcessing,\n            locations: dashboardReducer.locations,\n            userType: headerReducer.userType,\n            settingsData: headerReducer.settingsData,\n            taskDetails: dashboardReducer.taskDetails,\n            filteredList: dashboardReducer.filteredList,\n            filterData: headerReducer.filterData,\n            isFilterLoaded: headerReducer.isFilterLoaded,\n            shoppedLate: dashboardReducer.shoppedLate\n        })\n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateFilter: (data) => dispatch(actions.updateFilter(data)),\n  updateTaskStatus: (data) => dispatch(actions.updateTaskStatus(data)),\n  deleteTask: (data) => dispatch(actions.deleteTask(data)),\n  getLocations: (data) => dispatch(actions.getLocations(data)),\n  createTask: (data) => dispatch(actions.createTask(data)),\n  editTask: (data) => dispatch(actions.editTask(data)),\n  getTaskDetails: (data) => dispatch(actions.getTaskDetails(data)),\n  getTrackDetails: (data) => dispatch(actions.getTrackDetails(data)),\n  search: (data) => dispatch(actions.search(data)),\n  resetSearch: (data) => dispatch(actions.resetSearch(data)),\n  getShoppedLate: (data) => dispatch(actions.getShoppedLate(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));"]},"metadata":{},"sourceType":"module"}