{"ast":null,"code":"import Config from '../config';\nimport axios from \"axios\";\nimport { getCookie } from '../util/cookies';\nvar baseAPIUrl = Config.ApiUrl;\nvar baseAPIUrl2 = Config.ApiUrl2; //console.log('Config : ', baseAPIUrl);\n\nexport function callApi() {\n  var method = arguments.length <= 0 ? undefined : arguments[0];\n  var url = (arguments.length <= 1 ? undefined : arguments[1]) || '';\n  var postData = (arguments.length <= 2 ? undefined : arguments[2]) || {};\n  var userData = getCookie('foodjets_merchant') || {}; //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n\n  var reqHeaders = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    'Access-Control-Allow-Origin': '*'\n  };\n\n  if (!!userData.token) {\n    reqHeaders.Authorization = \"Bearer \" + userData.token;\n  }\n\n  var instance = axios.create({\n    headers: reqHeaders\n  });\n  var result = '';\n  var bodydata = {};\n\n  switch (method) {\n    case 'POST':\n      bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.post(baseAPIUrl + url, bodydata);\n      break;\n\n    case 'PUT':\n      bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.put(baseAPIUrl + url, bodydata);\n      break;\n\n    case 'DELETE':\n      bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.delete(baseAPIUrl + url, bodydata);\n      break;\n\n    case 'GET':\n      result = instance.get(baseAPIUrl + url);\n      break;\n  }\n\n  return result;\n}\nexport function callApiV2() {\n  var method = arguments.length <= 0 ? undefined : arguments[0];\n  var url = (arguments.length <= 1 ? undefined : arguments[1]) || '';\n  var postData = (arguments.length <= 2 ? undefined : arguments[2]) || {};\n  var userData = getCookie('foodjets_merchant') || {}; //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n\n  var reqHeaders = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    'Access-Control-Allow-Origin': '*'\n  };\n\n  if (!!userData.token) {\n    reqHeaders.Authorization = \"Bearer \" + userData.token;\n  }\n\n  var instance = axios.create({\n    headers: reqHeaders\n  });\n  var result = '';\n\n  switch (method) {\n    case 'POST':\n      var bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.post(baseAPIUrl2 + url, bodydata);\n      break;\n\n    case 'PUT':\n      bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.put(baseAPIUrl2 + url, bodydata);\n      break;\n\n    case 'DELETE':\n      bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.delete(baseAPIUrl2 + url, bodydata);\n      break;\n\n    case 'GET':\n      result = instance.get(baseAPIUrl2 + url);\n      break;\n  }\n\n  return result;\n}\nexport function callOnFleetApi() {\n  var method = arguments.length <= 0 ? undefined : arguments[0];\n  var url = (arguments.length <= 1 ? undefined : arguments[1]) || '';\n  var postData = (arguments.length <= 2 ? undefined : arguments[2]) || {};\n  var userData = getCookie('foodjets_merchant') || {}; //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n\n  var reqHeaders = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    'Access-Control-Allow-Origin': '*'\n  };\n\n  if (!!userData.token) {//reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n  }\n\n  var instance = axios.create({\n    headers: reqHeaders\n  });\n  var result = '';\n\n  switch (method) {\n    case 'POST':\n      var bodydata = JSON.stringify({\n        jsonrpc: 2,\n        ver: 1,\n        platform: \"web\",\n        brw: {\n          os: \"Win32\",\n          name: \"Chrome 67\"\n        },\n        params: postData\n      });\n      result = instance.post('/api2/' + url, bodydata);\n      break;\n\n    case 'GET':\n      result = instance.get('/fleet/tasks/6ae0019f/public');\n      break;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/Helper/api.js"],"names":["Config","axios","getCookie","baseAPIUrl","ApiUrl","baseAPIUrl2","ApiUrl2","callApi","method","url","postData","userData","reqHeaders","Accept","token","Authorization","instance","create","headers","result","bodydata","JSON","stringify","jsonrpc","ver","platform","brw","os","name","params","post","put","delete","get","callApiV2","callOnFleetApi"],"mappings":"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","sourcesContent":["import Config from '../config';\nimport axios from \"axios\";\nimport {getCookie} from '../util/cookies';\n\nlet baseAPIUrl          =   Config.ApiUrl;\nlet baseAPIUrl2         =   Config.ApiUrl2;\n//console.log('Config : ', baseAPIUrl);\nexport function callApi(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    let bodydata        =   {};\n    switch(method) {\n        case'POST': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post(baseAPIUrl+url, bodydata);\n        break;\n\n        case'PUT': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.put(baseAPIUrl+url, bodydata);\n        break;\n\n        case'DELETE': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.delete(baseAPIUrl+url, bodydata);\n        break;\n        \n        case'GET':\n            result      =   instance.get(baseAPIUrl+url);\n        break;\n    }\n    return result;\n}\n\nexport function callApiV2(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    switch(method) {\n        case'POST': \n            let bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post(baseAPIUrl2+url, bodydata);\n        break;\n\n        case'PUT': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.put(baseAPIUrl2+url, bodydata);\n        break;\n\n        case'DELETE': \n            bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.delete(baseAPIUrl2+url, bodydata);\n        break;\n        \n        case'GET':        \n            result      =   instance.get(baseAPIUrl2+url);\n        break;\n    }\n    return result;\n}\n\nexport function callOnFleetApi(...params) {\n    let method          =   params[0];\n    let url             =   params[1] || '';\n    let postData        =   params[2] || {};\n    let userData            =   getCookie('foodjets_merchant') || {};\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\n    let reqHeaders      =   {\n                                Accept: \"application/json\",\n                                \"Content-Type\": \"application/json\",\n                                'Access-Control-Allow-Origin': '*'\n                            };\n    if(!!userData.token) {\n        //reqHeaders.Authorization    =   \"Bearer \" + userData.token;\n    }\n    \n    let instance = axios.create({\n        headers: reqHeaders\n    });\n\n    let result          =   '';\n    switch(method) {\n        case'POST': \n            let bodydata = JSON.stringify(\n                {        \n                    jsonrpc:2,\n                    ver:1,\n                    platform:\"web\",\n                    brw:{\n                        os:\"Win32\",\n                        name:\"Chrome 67\"\n                    },\n                    params:postData\n                });\n            result      =   instance.post('/api2/'+url, bodydata);\n        break;\n        \n        case'GET':        \n            result      =   instance.get('/fleet/tasks/6ae0019f/public');\n        break;\n    }\n    return result;\n}"]},"metadata":{},"sourceType":"module"}