{"ast":null,"code":"import _objectSpread from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withRouter}from'react-router-dom';import{Link}from'react-router-dom';var RsetpasswordForm=/*#__PURE__*/function(_Component){_inherits(RsetpasswordForm,_Component);var _super=_createSuper(RsetpasswordForm);function RsetpasswordForm(props){var _this;_classCallCheck(this,RsetpasswordForm);_this=_super.call(this,props);_this.handleSubmit=function(e){e.preventDefault();if(_this.password.value!=_this.confirmpassword.value&&e.type==\"submit\"){_this.props.passwordnotmatch();return;}var password=_this.password.value;var confirmpassword=_this.confirmpassword.value;var key=_this.state.key;var data={password:password,key:key};if(!_this.validate({password:password,confirmpassword:confirmpassword}).errors.password&&!_this.validate({password:password,confirmpassword:confirmpassword}).errors.Confirmpass&&e.type==\"submit\")_this.props.resetPassword(data);};_this.validate=function(data){var formData=data||{};var errors=_objectSpread({},_this.state.defaultError);var isError=false;if(!!!formData.password){errors.password=true;isError=true;}else{errors.password=false;isError=false;}if(!!!formData.confirmpassword){errors.Confirmpass=true;isError=true;}else{errors.Confirmpass=false;isError=false;}console.log(\"errors\",errors);_this.setState({defaultError:errors});return{isError:isError,errors:errors};};_this.state={msg:'',key:\"\",match:false,defaultError:{password:false,Confirmpass:false}};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(RsetpasswordForm,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(this.props);this.setState({key:window.location.href.split('/').slice(-2)[1]});}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(props){console.log(\"recive\",props);}},{key:\"render\",value:function render(){var _this2=this;var errors=_objectSpread({},this.state.defaultError);return/*#__PURE__*/React.createElement(\"div\",{className:\"login_p\"},/*#__PURE__*/React.createElement(\"div\",{className:\"log_left forgot-l\"},!!!this.props.isSuccess?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Reset Password\"),/*#__PURE__*/React.createElement(\"p\",null,\"Set your new password for your account\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"input\",{className:\"t-pass ltbox \".concat(!!errors.password?' error':''),type:\"password\",ref:function ref(input){return _this2.password=input;},onChange:function onChange(e){return _this2.handleSubmit(e);},placeholder:\"New password\"/*defaultValue=\"admin\"*/})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group\"},/*#__PURE__*/React.createElement(\"input\",{className:\"t-pass ltbox \".concat(!!errors.Confirmpass?' error':''),type:\"password\",ref:function ref(input){return _this2.confirmpassword=input;},onChange:function onChange(e){return _this2.handleSubmit(e);},placeholder:\"Confirm password\"/*defaultValue=\"admin\"*/})),/*#__PURE__*/React.createElement(\"div\",{className:\"sbtn_pan\"},/*#__PURE__*/React.createElement(\"button\",{className:\"sbtn\",disabled:!!this.props.isProcessing},!!this.props.isProcessing?'Processing....':'Reset My Password')),this.props.isError?/*#__PURE__*/React.createElement(\"div\",{className:\"aleart_pan\"},/*#__PURE__*/React.createElement(\"div\",{className:\"alert_box\"},this.props.errMassage)):\"\")):/*#__PURE__*/React.createElement(\"div\",{className:\"aftersend\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Password successfully changed!\"),/*#__PURE__*/React.createElement(\"div\",{className:\"sbtn_pan\"},/*#__PURE__*/React.createElement(Link,{className:\"sbtn\",to:\"/login\"},\"Back to Login\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"log_right forgot-r\"},/*#__PURE__*/React.createElement(\"img\",{src:\"/assets/unlock.svg\",alt:\"login_img\"})));}}]);return RsetpasswordForm;}(Component);RsetpasswordForm.defaultProps={isFetching:false,isProcessing:false,isError:false,isSuccess:false,states:[],forgotPassword:function forgotPassword(){}};export default withRouter(RsetpasswordForm);","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/ResetPassword/resetPassword.js"],"names":["React","Component","withRouter","Link","RsetpasswordForm","props","handleSubmit","e","preventDefault","password","value","confirmpassword","type","passwordnotmatch","key","state","data","validate","errors","Confirmpass","resetPassword","formData","defaultError","isError","console","log","setState","msg","match","bind","window","location","href","split","slice","isSuccess","input","isProcessing","errMassage","defaultProps","isFetching","states","forgotPassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {PropTypes as PT} from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nclass RsetpasswordForm extends Component{\n   static propTypes = {\n\t\tisProcessing         :  PT.bool,\n\t\tisError              :  PT.bool,\n\t\tisSuccess            :  PT.bool,\n\t\tforgotPasswordData   :  PT.object,\n\t\tforgotPassword       :  PT.func\n\t}\n\n\tstatic defaultProps = {\n\t\tisFetching           :  false,\n\t\tisProcessing         :  false,\n\t\tisError              :  false,\n\t\tisSuccess            :  false,\n\t\tstates               :  [],\n\t\tforgotPassword       :  () => {}\n\t}\n\n   constructor(props){\n      super(props);\n      this.state          =   {\n         msg             :   '',\n         key             :\"\",\n         match           : false,\n         defaultError:{\n            password\t:\tfalse,\n            Confirmpass\t:\tfalse\n         }\n      }\n      this.handleSubmit          =  this.handleSubmit.bind(this);\n   }\n\n   componentDidMount() {\n      console.log(this.props);\n     this.setState({\n      key: window.location.href.split('/').slice(-2)[1]\n     });\n     \n   }\n    \n   handleSubmit = (e) => {\n      e.preventDefault();\n     \n      if(this.password.value != this.confirmpassword.value && e.type==\"submit\" ) {\n       \n            this.props.passwordnotmatch();\n            return;\n            \n      }\n      const password         =   this.password.value;\n      const confirmpassword         =   this.confirmpassword.value;\n      const  key             =     this.state.key;\n      const data          =   {\n                                password,\n                                key\n                              }\n          if(!this.validate({password,confirmpassword}).errors.password && !this.validate({password,confirmpassword}).errors.Confirmpass && e.type==\"submit\"  )\n      this.props.resetPassword(data);\n   }\n\n   validate = (data) => {\n\t\tlet formData\t=\tdata || {};\n\t\tlet errors\t\t=\t{...this.state.defaultError};\n\t\tlet isError\t\t=\tfalse;\n\t\tif(!!!formData.password) {\n\t\t\terrors.password\t\t=\ttrue;\n\t\t\tisError\t\t\t\t=\ttrue;\n      } \n    \n      else {\n         errors.password\t\t=\tfalse;\n\t\t\tisError\t\t\t\t=\tfalse;\n      }\n\n\t\tif(!!!formData.confirmpassword) {\n\t\t\terrors.Confirmpass=\ttrue;\n\t\t\tisError\t\t\t\t=\ttrue;\n      }\n     \n      else {\n         errors.Confirmpass=\tfalse;\n\t\t\tisError\t\t\t\t=\tfalse;\n      }\n\n      console.log(\"errors\",errors);\n      this.setState({\n         defaultError: errors\n      });\n\t\treturn {isError: isError, errors: errors};\n   }\n\n   componentWillReceiveProps (props) {\n      console.log(\"recive\",props);\n   }\n\n   render(){\n      let errors\t\t=\t{...this.state.defaultError};\n      return (\n         <div className=\"login_p\">\n            <div className=\"log_left forgot-l\">               \n               {\n                     (!!!this.props.isSuccess) ?  \n                     <div>\n                        <h4>Reset Password</h4>\n                        <p>Set your new password for your account</p>\n                        <form onSubmit={this.handleSubmit}>\n                           <div className=\"input-group\">\n                              <input className={`t-pass ltbox ${(!!errors.password) ? ' error' : ''}`}type=\"password\" ref={(input) => this.password = input} onChange={(e)=>this.handleSubmit(e)} placeholder=\"New password\" /*defaultValue=\"admin\"*/ />\n                           </div>\n                           <div className=\"input-group\">\n                              <input className={`t-pass ltbox ${(!!errors.Confirmpass) ? ' error' : ''}`} type=\"password\" ref={(input) => this.confirmpassword = input} onChange={(e)=>this.handleSubmit(e)} placeholder=\"Confirm password\" /*defaultValue=\"admin\"*/ />\n                           </div>\n                           <div className=\"sbtn_pan\">\n                              <button className=\"sbtn\" disabled={!!this.props.isProcessing}>{(!!this.props.isProcessing) ? 'Processing....' : 'Reset My Password'}</button>\n                           </div>\n                           {this.props.isError ?  <div className=\"aleart_pan\">\n                                \n                                <div className=\"alert_box\">\n                              {this.props.errMassage}\n                                </div>\n                                {/* <div className={`alert_box${(this.props.loginData.message === \"We can't find an account with that email.\") ? '' : ' hide'}`}>\n                                Sorry, that email isn’t right. We can help you <Link to='/forgot-password'>recover your email address.</Link>\n                                </div> */}\n  \n                                </div> :\"\" }\n                             \n                             \n                        </form>\n                     </div> : \n                     <div className=\"aftersend\">\n                        <h4>Password successfully changed!</h4>\n                        <div className=\"sbtn_pan\">\n                           <Link className=\"sbtn\" to='/login'>Back to Login</Link>\n                        </div>\n                     </div>\n               }\n            </div>\n            <div className=\"log_right forgot-r\">\n               <img src=\"/assets/unlock.svg\" alt=\"login_img\" />\n            </div>\n         </div>               \n      )\n   }\n}\nexport default withRouter(RsetpasswordForm);"]},"metadata":{},"sourceType":"module"}