{"ast":null,"code":"import * as _ from 'lodash';\nimport { getDateTime } from '../Helper/common';\nexport function sortTaskList(snapshot, filter) {\n  var filterState = filter.state || [];\n  var filterArea = filter.area || [];\n  var filterStore = filter.store || [];\n  var filterStoreName = filter.storeName || [];\n  var filterTxt = !!filter.searchTxt ? filter.searchTxt.toLowerCase() : '';\n  var tsk_status = '';\n  var track_driver = '';\n  var current_url = '';\n  var created_at = '';\n  var tasks = {};\n  var order_status = null;\n  var tip = 0;\n  var tsk_type = 'general';\n  var task_count = 0;\n  var type = 'UncategorizedList';\n\n  if (!!snapshot) {\n    if (filterState.length === 0 && filterArea.length === 0 && filterStore.length === 0) {\n      type = 'UncategorizedList';\n      tasks = {\n        ready: 0,\n        not_ready: 0,\n        total: 0,\n        shopping: 0,\n        orders: [],\n        totShoppedLate: 0\n      };\n      snapshot.forEach(function (doc) {\n        var val = doc.data(); //console.log('Val : ', val.ready_timestamp, val.complete_after);\n\n        task_count++;\n        tsk_type = 'general';\n        tsk_status = '';\n        track_driver = '';\n        current_url = '';\n        created_at = '';\n        order_status = null;\n        tip = 0;\n\n        if (!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n          tsk_type = val.tsk_type;\n        }\n\n        if (val.tsk_status === 'tsk_proc_hld') {\n          tsk_status = 'Scheduled';\n        } else if (val.tsk_status === 'tsk_proc_mrchnt') {\n          tsk_status = 'Scheduled';\n        } else if (val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n          tsk_status = 'Picked Up';\n        } else if (val.tsk_status === 'tsk_proc_drv') {\n          tsk_status = 'Processing';\n        } else if (val.tsk_status === 'tsk_cmp') {\n          tsk_status = 'Completed';\n        } else if (val.tsk_status === 'tsk_cncling') {\n          tsk_status = 'Deleted';\n        } else if (val.tsk_status === 'tsk_cncled') {\n          tsk_status = 'Deleted';\n        } else {\n          tsk_status = 'Scheduled';\n        }\n\n        if (!_.isUndefined(val.created_at) && val.created_at !== '') {\n          created_at = getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n        }\n\n        if (!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n          track_driver = 'Driver to Merchant';\n          current_url = val.pickup_onfleet_url;\n        }\n\n        if (!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n          track_driver = 'Driver to Recipient';\n          current_url = val.drop_onfleet_url;\n        }\n\n        var coa = getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n        var cob = getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n        if (!!val.order_status) {\n          order_status = val.order_status;\n        }\n\n        tasks.total++;\n\n        if (order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n          tasks.ready++;\n        } else if (order_status === 'W') {\n          tasks.shopping++;\n        } else {\n          tasks.not_ready++;\n        }\n\n        if (!!val.tip) {\n          tip = val.tip;\n        }\n\n        var shoppedLate = 0;\n\n        if (!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n          shoppedLate = Math.round((val.ready_timestamp - val.complete_after) / 60);\n        }\n\n        if (shoppedLate > 0) tasks.totShoppedLate++;\n        tasks.orders.push({\n          id: val.id,\n          created_at: created_at,\n          complete_after: coa,\n          complete_before: cob,\n          recpnt_address: val.recpnt_address_full,\n          mrchnt_address: val.mrchnt_address_full,\n          driver_name: val.driver_name,\n          tsk_status: tsk_status,\n          uuid: val.uuid,\n          drop_onfleet_url: val.drop_onfleet_url || '',\n          pickup_onfleet_url: val.pickup_onfleet_url || '',\n          track_driver: track_driver,\n          current_url: current_url,\n          order_number: val.order_number,\n          timestamp: val.complete_after,\n          timezone: val.time_zone,\n          order_status: order_status,\n          mrchnt_name: val.mrchnt_name,\n          tsk_type: tsk_type,\n          shoppedLate: shoppedLate\n        });\n      });\n      tasks.orders = _.orderBy(tasks.orders, [function (o) {\n        return o.timestamp;\n      }], ['asc']);\n    } else {\n      if (filterState.length > 0 && filterArea.length === 0 && filterStore.length === 0) {\n        type = 'StateWiseList';\n        snapshot.forEach(function (doc) {\n          var val = doc.data();\n\n          if ((filterState.length === 0 || filterState.includes(val.state_code)) && (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt)) && (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name)) && (filterStore.length === 0 || filterStore.includes(val.store_id))) {\n            task_count++; //console.log('Data : ', val);\n\n            tsk_type = 'general';\n            tsk_status = '';\n            track_driver = '';\n            current_url = '';\n            created_at = '';\n            order_status = null;\n            tip = 0;\n\n            if (!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n              tsk_type = val.tsk_type;\n            }\n\n            if (val.tsk_status === 'tsk_proc_hld') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_mrchnt') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n              tsk_status = 'Picked Up';\n            } else if (val.tsk_status === 'tsk_proc_drv') {\n              tsk_status = 'Processing';\n            } else if (val.tsk_status === 'tsk_cmp') {\n              tsk_status = 'Completed';\n            } else if (val.tsk_status === 'tsk_cncling') {\n              tsk_status = 'Deleted';\n            } else if (val.tsk_status === 'tsk_cncled') {\n              tsk_status = 'Deleted';\n            } else {\n              tsk_status = 'Scheduled';\n            }\n\n            if (!_.isUndefined(val.created_at) && val.created_at !== '') {\n              created_at = getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n            }\n\n            if (!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n              track_driver = 'Driver to Merchant';\n              current_url = val.pickup_onfleet_url;\n            }\n\n            if (!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n              track_driver = 'Driver to Recipient';\n              current_url = val.drop_onfleet_url;\n            }\n\n            var coa = getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n            var cob = getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n            if (!!!tasks[val.state_code]) {\n              tasks[val.state_code] = {\n                name: val.state_code,\n                ready: 0,\n                not_ready: 0,\n                shopping: 0,\n                total: 0,\n                orders: [],\n                totShoppedLate: 0\n              };\n            }\n\n            if (!!val.order_status) {\n              order_status = val.order_status;\n            }\n\n            tasks[val.state_code].total++;\n\n            if (order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n              tasks[val.state_code].ready++;\n            } else if (order_status === 'W') {\n              tasks[val.state_code].shopping++;\n            } else {\n              tasks[val.state_code].not_ready++;\n            }\n\n            if (!!val.tip) {\n              tip = val.tip;\n            }\n\n            var shoppedLate = 0; //console.log('Status : ', val.order_number, val.ready_timestamp, val.complete_after, val.ready_timestamp > val.complete_after);\n\n            if (!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n              shoppedLate = Math.round((val.ready_timestamp - val.complete_after) / 60);\n            }\n\n            if (shoppedLate > 0) tasks[val.state_code].totShoppedLate++;\n            tasks[val.state_code].orders.push({\n              id: val.id,\n              created_at: created_at,\n              complete_after: coa,\n              complete_before: cob,\n              recpnt_address: val.recpnt_address_full,\n              mrchnt_address: val.mrchnt_address_full,\n              driver_name: val.driver_name,\n              tsk_status: tsk_status,\n              uuid: val.uuid,\n              drop_onfleet_url: val.drop_onfleet_url || '',\n              pickup_onfleet_url: val.pickup_onfleet_url || '',\n              track_driver: track_driver,\n              current_url: current_url,\n              order_number: val.order_number,\n              timestamp: val.complete_after,\n              timezone: val.time_zone,\n              order_status: order_status,\n              mrchnt_name: val.mrchnt_name,\n              tsk_type: tsk_type,\n              shoppedLate: shoppedLate\n            });\n          }\n        });\n\n        _.each(tasks, function (val, key) {\n          //console.log(val, key);\n          tasks[key].orders = _.orderBy(tasks[key].orders, [function (o) {\n            return o.timestamp;\n          }], ['asc']);\n        });\n\n        tasks = _.orderBy(tasks, [function (o) {\n          return o.name;\n        }], ['asc']);\n      }\n\n      if (filterState.length > 0 && filterArea.length > 0 && filterStore.length === 0) {\n        type = 'ZoneWiseList';\n        snapshot.forEach(function (doc) {\n          var val = doc.data();\n\n          if ((filterState.length === 0 || filterState.includes(val.state_code)) && (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt)) && (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name)) && (filterStore.length === 0 || filterStore.includes(val.store_id))) {\n            task_count++; //console.log('Data : ', val);\n\n            tsk_type = 'general';\n            tsk_status = '';\n            track_driver = '';\n            current_url = '';\n            created_at = '';\n            order_status = null;\n            tip = 0;\n\n            if (!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n              tsk_type = val.tsk_type;\n            } //console.log('Status : ', val.tsk_status);\n\n\n            if (val.tsk_status === 'tsk_proc_hld') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_mrchnt') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n              tsk_status = 'Picked Up';\n            } else if (val.tsk_status === 'tsk_proc_drv') {\n              tsk_status = 'Processing';\n            } else if (val.tsk_status === 'tsk_cmp') {\n              tsk_status = 'Completed';\n            } else if (val.tsk_status === 'tsk_cncling') {\n              tsk_status = 'Deleted';\n            } else if (val.tsk_status === 'tsk_cncled') {\n              tsk_status = 'Deleted';\n            } else {\n              tsk_status = 'Scheduled';\n            }\n\n            if (!_.isUndefined(val.created_at) && val.created_at !== '') {\n              created_at = getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n            }\n\n            if (!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n              track_driver = 'Driver to Merchant';\n              current_url = val.pickup_onfleet_url;\n            }\n\n            if (!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n              track_driver = 'Driver to Recipient';\n              current_url = val.drop_onfleet_url;\n            }\n\n            var coa = getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n            var cob = getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n            if (_.isUndefined(tasks[val.state_code])) {\n              tasks[val.state_code] = {};\n              tasks[val.state_code][val.mkt_ofc_cty_del_zne_id] = {\n                name: val.mkt_ofc_cty_del_zne_name,\n                id: val.state_code + val.mkt_ofc_cty_del_zne_id,\n                uniqueid: val.mkt_ofc_cty_del_zne_id,\n                ready: 0,\n                not_ready: 0,\n                shopping: 0,\n                total: 0,\n                orders: [],\n                totShoppedLate: 0\n              };\n            } else {\n              if (_.isUndefined(tasks[val.state_code][val.mkt_ofc_cty_del_zne_id])) {\n                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id] = {\n                  name: val.mkt_ofc_cty_del_zne_name,\n                  id: val.state_code + val.mkt_ofc_cty_del_zne_id,\n                  uniqueid: val.mkt_ofc_cty_del_zne_id,\n                  ready: 0,\n                  not_ready: 0,\n                  shopping: 0,\n                  total: 0,\n                  orders: [],\n                  totShoppedLate: 0\n                };\n              }\n            }\n\n            if (!!val.order_status) {\n              order_status = val.order_status;\n            }\n\n            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].total++;\n\n            if (order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n              tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].ready++;\n            } else if (order_status === 'W') {\n              tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].shopping++;\n            } else {\n              tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].not_ready++;\n            }\n\n            if (!!val.tip) {\n              tip = val.tip;\n            }\n\n            var shoppedLate = 0;\n\n            if (!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n              shoppedLate = Math.round((val.ready_timestamp - val.complete_after) / 60);\n            }\n\n            if (shoppedLate > 0) tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].totShoppedLate++;\n            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\n              id: val.id,\n              created_at: created_at,\n              complete_after: coa,\n              complete_before: cob,\n              recpnt_address: val.recpnt_address_full,\n              mrchnt_address: val.mrchnt_address_full,\n              driver_name: val.driver_name,\n              tsk_status: tsk_status,\n              uuid: val.uuid,\n              drop_onfleet_url: val.drop_onfleet_url || '',\n              pickup_onfleet_url: val.pickup_onfleet_url || '',\n              track_driver: track_driver,\n              current_url: current_url,\n              order_number: val.order_number,\n              timestamp: val.complete_after,\n              timezone: val.time_zone,\n              order_status: order_status,\n              mrchnt_name: val.mrchnt_name,\n              tsk_type: tsk_type,\n              shoppedLate: shoppedLate\n            });\n          }\n        });\n        var temp = {};\n\n        _.each(tasks, function (val, key) {\n          _.each(val, function (vz, kz) {\n            tasks[key][kz].orders = _.sortBy(tasks[key][kz].orders, function (o) {\n              return o.timestamp;\n            });\n          });\n\n          temp[key] = _.sortBy(tasks[key], function (o) {\n            return o.name;\n          });\n        });\n\n        tasks = temp;\n      }\n\n      if (filterStore.length > 0) {\n        type = 'ZoneWiseList';\n        snapshot.forEach(function (doc) {\n          var val = doc.data();\n\n          if ((filterState.length === 0 || filterState.includes(val.state_code)) && (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt)) && (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name)) && (filterStore.length === 0 || filterStore.includes(val.store_id))) {\n            task_count++; //console.log('Data : ', val);\n\n            tsk_type = 'general';\n            tsk_status = '';\n            track_driver = '';\n            current_url = '';\n            created_at = '';\n            order_status = null;\n            tip = 0;\n\n            if (!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n              tsk_type = val.tsk_type;\n            } //console.log('Status : ', val.tsk_status);\n\n\n            if (val.tsk_status === 'tsk_proc_hld') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_mrchnt') {\n              tsk_status = 'Scheduled';\n            } else if (val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n              tsk_status = 'Picked Up';\n            } else if (val.tsk_status === 'tsk_proc_drv') {\n              tsk_status = 'Processing';\n            } else if (val.tsk_status === 'tsk_cmp') {\n              tsk_status = 'Completed';\n            } else if (val.tsk_status === 'tsk_cncling') {\n              tsk_status = 'Deleted';\n            } else if (val.tsk_status === 'tsk_cncled') {\n              tsk_status = 'Deleted';\n            } else {\n              tsk_status = 'Scheduled';\n            }\n\n            if (!_.isUndefined(val.created_at) && val.created_at !== '') {\n              created_at = getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n            }\n\n            if (!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n              track_driver = 'Driver to Merchant';\n              current_url = val.pickup_onfleet_url;\n            }\n\n            if (!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n              track_driver = 'Driver to Recipient';\n              current_url = val.drop_onfleet_url;\n            }\n\n            var coa = getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n            var cob = getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n            if (_.isUndefined(tasks[val.state_code])) {\n              tasks[val.state_code] = {};\n              tasks[val.state_code][val.store_id] = {\n                name: filterStoreName[val.store_id],\n                id: val.state_code + val.store_id,\n                uniqueid: val.store_id,\n                ready: 0,\n                not_ready: 0,\n                shopping: 0,\n                total: 0,\n                orders: [],\n                totShoppedLate: 0\n              };\n            } else {\n              if (_.isUndefined(tasks[val.state_code][val.store_id])) {\n                tasks[val.state_code][val.store_id] = {\n                  name: filterStoreName[val.store_id],\n                  id: val.state_code + val.store_id,\n                  uniqueid: val.store_id,\n                  ready: 0,\n                  not_ready: 0,\n                  shopping: 0,\n                  total: 0,\n                  orders: [],\n                  totShoppedLate: 0\n                };\n              }\n            }\n\n            if (!!val.order_status) {\n              order_status = val.order_status;\n            }\n\n            tasks[val.state_code][val.store_id].total++;\n\n            if (order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n              tasks[val.state_code][val.store_id].ready++;\n            } else if (order_status === 'W') {\n              tasks[val.state_code][val.store_id].shopping++;\n            } else {\n              tasks[val.state_code][val.store_id].not_ready++;\n            }\n\n            if (!!val.tip) {\n              tip = val.tip;\n            }\n\n            var shoppedLate = 0;\n\n            if (!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n              shoppedLate = Math.round((val.ready_timestamp - val.complete_after) / 60);\n            }\n\n            if (shoppedLate > 0) tasks[val.state_code][val.store_id].totShoppedLate++;\n            tasks[val.state_code][val.store_id].orders.push({\n              id: val.id,\n              created_at: created_at,\n              complete_after: coa,\n              complete_before: cob,\n              recpnt_address: val.recpnt_address_full,\n              mrchnt_address: val.mrchnt_address_full,\n              driver_name: val.driver_name,\n              tsk_status: tsk_status,\n              uuid: val.uuid,\n              drop_onfleet_url: val.drop_onfleet_url || '',\n              pickup_onfleet_url: val.pickup_onfleet_url || '',\n              track_driver: track_driver,\n              current_url: current_url,\n              order_number: val.order_number,\n              timestamp: val.complete_after,\n              timezone: val.time_zone,\n              order_status: order_status,\n              mrchnt_name: val.mrchnt_name,\n              tsk_type: tsk_type,\n              shoppedLate: shoppedLate\n            });\n          }\n        });\n        var _temp = {};\n\n        _.each(tasks, function (val, key) {\n          _.each(val, function (vz, kz) {\n            tasks[key][kz].orders = _.sortBy(tasks[key][kz].orders, function (o) {\n              return o.timestamp;\n            });\n          });\n\n          _temp[key] = _.sortBy(tasks[key], function (o) {\n            return o.name;\n          });\n        });\n\n        tasks = _temp;\n      }\n    }\n  }\n\n  return {\n    tasks: tasks,\n    count: task_count,\n    type: type\n  };\n}\nexport var addressFormater = function addressFormater(obj) {\n  try {\n    var regex = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/;\n    var address = obj.match(regex); //console.log(address);\n\n    if (address[4].indexOf(',') > -1 && address[3].indexOf(' ') > -1) {\n      var formattedAddress = address[3] + ', ' + address[4] + ' ' + address[address.length - 1];\n      var modAddress = formattedAddress + ', USA';\n\n      if (/(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g.test(modAddress)) {\n        var _address = modAddress.match(regex);\n\n        return {\n          validAdrs: true,\n          formattedAddress: formattedAddress,\n          address: modAddress,\n          number: _address[0],\n          street: _address[1],\n          city: _address[2],\n          country: 'United States',\n          state_code: _address[4],\n          zipcode: _address[_address.length - 1]\n        };\n      } else {\n        return {\n          validAdrs: false\n        };\n      }\n    } else {\n      var _formattedAddress = address[1] + ' ' + address[2] + ', ' + address[3] + ', ' + address[4] + ' ' + address[address.length - 1];\n\n      return {\n        validAdrs: true,\n        formattedAddress: _formattedAddress,\n        address: obj,\n        number: address[1],\n        street: address[2],\n        city: address[3],\n        country: 'United States',\n        state_code: address[4],\n        zipcode: address[address.length - 1]\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      validAdrs: false\n    };\n  }\n};\nexport function getStatusClass(status) {\n  var clsName = '';\n\n  switch (status) {\n    case 'Processing':\n      clsName = 'btn_Processing';\n      break;\n\n    case 'Picked Up':\n      clsName = 'btn_Pickedup';\n      break;\n\n    case 'Scheduled':\n      clsName = 'btn_Scheduled';\n      break;\n\n    case 'Completed':\n      clsName = 'btn_Completed';\n      break;\n\n    case 'Deleted':\n      clsName = 'btn_Deleted';\n      break;\n\n    default:\n      clsName = 'btn_Processing';\n      break;\n  }\n\n  return clsName;\n}\nexport function getTaskStatus(status) {\n  var tsk_status = 'Scheduled';\n\n  if (status === 'tsk_proc_hld') {\n    tsk_status = 'Scheduled';\n  } else if (status === 'tsk_proc_mrchnt') {\n    tsk_status = 'Scheduled';\n  } else if (status === 'tsk_proc_drv' && status === 'drv_strt_recpnt_tsk') {\n    tsk_status = 'Picked Up';\n  } else if (status === 'tsk_proc_drv') {\n    tsk_status = 'Processing';\n  } else if (status === 'tsk_cmp') {\n    tsk_status = 'Completed';\n  } else if (status === 'tsk_cncling') {\n    tsk_status = 'Deleted';\n  } else if (status === 'tsk_cncled') {\n    tsk_status = 'Deleted';\n  } else {\n    tsk_status = 'Scheduled';\n  }\n\n  return tsk_status;\n}\nexport function getDeliveryWindow(completeAfter, completeBefore, time_zone) {\n  var coa = getDateTime(parseInt(completeAfter) * 1000, time_zone, 'MM/DD · hh:mma');\n  var cob = getDateTime(parseInt(completeBefore) * 1000, time_zone, 'hh:mma');\n  return \"\".concat(coa, \" - \").concat(cob);\n}","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/util/helper.js"],"names":["_","getDateTime","sortTaskList","snapshot","filter","filterState","state","filterArea","area","filterStore","store","filterStoreName","storeName","filterTxt","searchTxt","toLowerCase","tsk_status","track_driver","current_url","created_at","tasks","order_status","tip","tsk_type","task_count","type","length","ready","not_ready","total","shopping","orders","totShoppedLate","forEach","doc","val","data","isUndefined","driver_status","parseInt","time_zone","pickup_onfleet_url","drop_onfleet_url","coa","complete_after","cob","complete_before","shoppedLate","ready_timestamp","Math","round","push","id","recpnt_address","recpnt_address_full","mrchnt_address","mrchnt_address_full","driver_name","uuid","order_number","timestamp","timezone","mrchnt_name","orderBy","o","includes","state_code","mkt_ofc_cty_del_zne_name","store_id","name","each","key","mkt_ofc_cty_del_zne_id","uniqueid","temp","vz","kz","sortBy","count","addressFormater","obj","regex","address","match","indexOf","formattedAddress","modAddress","test","_address","validAdrs","number","street","city","country","zipcode","e","console","log","getStatusClass","status","clsName","getTaskStatus","getDeliveryWindow","completeAfter","completeBefore"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\nimport { getDateTime } from '../Helper/common';\n\nexport function sortTaskList(snapshot, filter) {\n    let filterState     =   filter.state || [];\n    let filterArea      =   filter.area || [];\n    let filterStore     =   filter.store || [];\n    let filterStoreName =   filter.storeName || [];\n    let filterTxt       =   (!!filter.searchTxt) ? filter.searchTxt.toLowerCase() : '';\n    let tsk_status      =   '';\n    let track_driver    =   '';\n    let current_url     =   '';\n    let created_at      =   '';\n    let tasks                       =   {};\n    let order_status                =   null;\n    let tip                         =   0;\n    let tsk_type                    =   'general';\n    let task_count                  =   0;\n    let type                        =   'UncategorizedList';\n    if(!!snapshot) {\n        if(filterState.length === 0 && filterArea.length === 0 && filterStore.length === 0) {\n            type                        =   'UncategorizedList';\n            tasks                       =   {\n                ready           :   0,\n                not_ready       :   0,\n                total           :   0,\n                shopping        :   0,\n                orders          :   [],\n                totShoppedLate  :   0\n            }\n            snapshot.forEach(function(doc) {\n                let val                 =   doc.data();\n                //console.log('Val : ', val.ready_timestamp, val.complete_after);\n                task_count++;\n                tsk_type                =   'general';\n                tsk_status              =   '';\n                track_driver            =   '';\n                current_url             =   '';\n                created_at              =   '';\n                order_status            =   null;\n                tip                     =   0;\n                if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n                    tsk_type            =   val.tsk_type;\n                }\n\n                if(val.tsk_status === 'tsk_proc_hld') {\n                    tsk_status          =   'Scheduled';\n                } else if(val.tsk_status === 'tsk_proc_mrchnt') {\n                    tsk_status          =   'Scheduled';\n                } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n                    tsk_status          =   'Picked Up';\n                } else if(val.tsk_status === 'tsk_proc_drv') {\n                    tsk_status          =   'Processing';\n                } else if(val.tsk_status === 'tsk_cmp') {\n                    tsk_status          =   'Completed'\n                } else if(val.tsk_status === 'tsk_cncling') {\n                    tsk_status          =   'Deleted'\n                } else if(val.tsk_status === 'tsk_cncled') {\n                    tsk_status          =   'Deleted'\n                } else {\n                    tsk_status          =   'Scheduled'\n                }\n\n                if(!_.isUndefined(val.created_at) && val.created_at !== ''){\n                    created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n                }\n\n                if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n                    track_driver        =   'Driver to Merchant';\n                    current_url         =   val.pickup_onfleet_url;\n                }\n\n                if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n                    track_driver        =   'Driver to Recipient';\n                    current_url         =   val.drop_onfleet_url;\n                }\n                let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n                let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n                if(!!val.order_status) {\n                    order_status            =   val.order_status;\n                }\n\n                tasks.total++;\n                if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n                    tasks.ready++;\n                } else if(order_status === 'W') {\n                    tasks.shopping++;\n                }\n                else {\n                    tasks.not_ready++;\n                }\n\n                if(!!val.tip) {\n                    tip                     =   val.tip;\n                }\n                let shoppedLate             =   0;\n                if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n                    shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\n                }\n                if(shoppedLate > 0)\n                    tasks.totShoppedLate++;\n\n                tasks.orders.push({\n                    id                  :   val.id,\n                    created_at          :   created_at,\n                    complete_after      :   coa,\n                    complete_before     :   cob,\n                    recpnt_address      :   val.recpnt_address_full,\n                    mrchnt_address      :   val.mrchnt_address_full,\n                    driver_name         :   val.driver_name,\n                    tsk_status          :   tsk_status,\n                    uuid                :   val.uuid,\n                    drop_onfleet_url    :   val.drop_onfleet_url || '',\n                    pickup_onfleet_url  :   val.pickup_onfleet_url || '',\n                    track_driver        :   track_driver,\n                    current_url         :   current_url,\n                    order_number        :   val.order_number,\n                    timestamp           :   val.complete_after,\n                    timezone            :   val.time_zone,\n                    order_status        :   order_status,\n                    mrchnt_name         :   val.mrchnt_name,\n                    tsk_type            :   tsk_type,\n                    shoppedLate         :   shoppedLate\n                });\n            });\n            tasks.orders                   =   _.orderBy(tasks.orders, [o => o.timestamp], ['asc'])\n        } else {\n            if(filterState.length > 0 && filterArea.length === 0 && filterStore.length === 0) {\n                type                        =   'StateWiseList';\n                snapshot.forEach(function(doc) {\n                    let val                 =   doc.data();\n                    if((filterState.length === 0\n                        || filterState.includes(val.state_code)) &&\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\n                        &&\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\n                        &&\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\n                    ) {\n                        task_count++;\n                        //console.log('Data : ', val);\n                        tsk_type                =   'general';\n                        tsk_status              =   '';\n                        track_driver            =   '';\n                        current_url             =   '';\n                        created_at              =   '';\n                        order_status            =   null;\n                        tip                     =   0;\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n                            tsk_type            =   val.tsk_type;\n                        }\n\n                        if(val.tsk_status === 'tsk_proc_hld') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n                            tsk_status          =   'Picked Up';\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\n                            tsk_status          =   'Processing';\n                        } else if(val.tsk_status === 'tsk_cmp') {\n                            tsk_status          =   'Completed'\n                        } else if(val.tsk_status === 'tsk_cncling') {\n                            tsk_status          =   'Deleted'\n                        } else if(val.tsk_status === 'tsk_cncled') {\n                            tsk_status          =   'Deleted'\n                        } else {\n                            tsk_status          =   'Scheduled'\n                        }\n\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n                        }\n\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n\n                        if(!!!tasks[val.state_code]) {\n                            tasks[val.state_code]   =   {\n                                        name            :   val.state_code,\n                                        ready           :   0,\n                                        not_ready       :   0,\n                                        shopping        :   0,\n                                        total           :   0,\n                                        orders          :   [],\n                                        totShoppedLate  :   0\n                            };\n                        }\n\n                        if(!!val.order_status) {\n                            order_status            =   val.order_status;\n                        }\n\n                        tasks[val.state_code].total++;\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n                            tasks[val.state_code].ready++;\n                        } else if(order_status === 'W') {\n                            tasks[val.state_code].shopping++;\n                        }\n                        else {\n                            tasks[val.state_code].not_ready++;\n                        }\n\n                        if(!!val.tip) {\n                            tip                     =   val.tip;\n                        }\n                        let shoppedLate             =   0;\n                        //console.log('Status : ', val.order_number, val.ready_timestamp, val.complete_after, val.ready_timestamp > val.complete_after);\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\n                        }\n                        if(shoppedLate > 0)\n                            tasks[val.state_code].totShoppedLate++;\n                        tasks[val.state_code].orders.push({\n                            id                  :   val.id,\n                            created_at          :   created_at,\n                            complete_after      :   coa,\n                            complete_before     :   cob,\n                            recpnt_address      :   val.recpnt_address_full,\n                            mrchnt_address      :   val.mrchnt_address_full,\n                            driver_name         :   val.driver_name,\n                            tsk_status          :   tsk_status,\n                            uuid                :   val.uuid,\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\n                            track_driver        :   track_driver,\n                            current_url         :   current_url,\n                            order_number        :   val.order_number,\n                            timestamp           :   val.complete_after,\n                            timezone            :   val.time_zone,\n                            order_status        :   order_status,\n                            mrchnt_name         :   val.mrchnt_name,\n                            tsk_type            :   tsk_type,\n                            shoppedLate         :   shoppedLate\n                        });\n                    }\n                });\n                _.each(tasks, (val, key) => {\n                    //console.log(val, key);\n                    tasks[key].orders           =  _.orderBy(tasks[key].orders, [o => o.timestamp], ['asc']);\n                });\n                tasks                       =   _.orderBy(tasks, [o => o.name], ['asc']);\n            }\n            if(filterState.length > 0 && filterArea.length > 0 && filterStore.length === 0) {\n                type                        =   'ZoneWiseList';\n                snapshot.forEach(function(doc) {\n                    let val                 =   doc.data();\n                    if((filterState.length === 0\n                        || filterState.includes(val.state_code)) &&\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\n                        &&\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\n                        &&\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\n                    ) {\n                        task_count++;\n                        //console.log('Data : ', val);\n                        tsk_type                =   'general';\n                        tsk_status              =   '';\n                        track_driver            =   '';\n                        current_url             =   '';\n                        created_at              =   '';\n                        order_status            =   null;\n                        tip                     =   0;\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n                            tsk_type            =   val.tsk_type;\n                        }\n                        //console.log('Status : ', val.tsk_status);\n\n                        if(val.tsk_status === 'tsk_proc_hld') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n                            tsk_status          =   'Picked Up';\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\n                            tsk_status          =   'Processing';\n                        } else if(val.tsk_status === 'tsk_cmp') {\n                            tsk_status          =   'Completed'\n                        } else if(val.tsk_status === 'tsk_cncling') {\n                            tsk_status          =   'Deleted'\n                        } else if(val.tsk_status === 'tsk_cncled') {\n                            tsk_status          =   'Deleted'\n                        } else {\n                            tsk_status          =   'Scheduled'\n                        }\n\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n                        }\n\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n\n                        if(_.isUndefined(tasks[val.state_code])) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                        name            :   val.mkt_ofc_cty_del_zne_name,\n                                        id              :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                        uniqueid        :   val.mkt_ofc_cty_del_zne_id,\n                                        ready           :   0,\n                                        not_ready       :   0,\n                                        shopping        :   0,\n                                        total           :   0,\n                                        orders          :   [],\n                                        totShoppedLate  :   0\n                            };\n                        } else {\n                            if(_.isUndefined(tasks[val.state_code][val.mkt_ofc_cty_del_zne_id])) {\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\n                                    name            :   val.mkt_ofc_cty_del_zne_name,\n                                    id              :   val.state_code+val.mkt_ofc_cty_del_zne_id,\n                                    uniqueid        :   val.mkt_ofc_cty_del_zne_id,\n                                    ready           :   0,\n                                    not_ready       :   0,\n                                    shopping        :   0,\n                                    total           :   0,\n                                    orders          :   [],\n                                    totShoppedLate  :   0\n                                };\n                            }\n                        }\n\n                        if(!!val.order_status) {\n                            order_status            =   val.order_status;\n                        }\n\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].total++;\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].ready++;\n                        } else if(order_status === 'W') {\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].shopping++;\n                        }\n                        else {\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].not_ready++;\n                        }\n\n                        if(!!val.tip) {\n                            tip                     =   val.tip;\n                        }\n                        \n                        let shoppedLate             =   0;\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\n                        }\n                        if(shoppedLate > 0)\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].totShoppedLate++;\n\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\n                            id                  :   val.id,\n                            created_at          :   created_at,\n                            complete_after      :   coa,\n                            complete_before     :   cob,\n                            recpnt_address      :   val.recpnt_address_full,\n                            mrchnt_address      :   val.mrchnt_address_full,\n                            driver_name         :   val.driver_name,\n                            tsk_status          :   tsk_status,\n                            uuid                :   val.uuid,\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\n                            track_driver        :   track_driver,\n                            current_url         :   current_url,\n                            order_number        :   val.order_number,\n                            timestamp           :   val.complete_after,\n                            timezone            :   val.time_zone,\n                            order_status        :   order_status,\n                            mrchnt_name         :   val.mrchnt_name,\n                            tsk_type            :   tsk_type,\n                            shoppedLate         :   shoppedLate\n                        });\n                    }\n                });\n                let temp                        =   {};\n                _.each(tasks, (val, key) => {\n                    _.each(val, (vz, kz) => {\n                        tasks[key][kz].orders   =   _.sortBy(tasks[key][kz].orders, (o) => { return o.timestamp; })\n                    });\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\n                });\n                tasks                           =   temp;\n            }\n            if(filterStore.length > 0) {\n                type                        =   'ZoneWiseList';\n                snapshot.forEach(function(doc) {\n                    let val                 =   doc.data();\n                    if((filterState.length === 0\n                        || filterState.includes(val.state_code)) &&\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\n                        &&\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\n                        &&\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\n                    ) {\n                        task_count++;\n                        //console.log('Data : ', val);\n                        tsk_type                =   'general';\n                        tsk_status              =   '';\n                        track_driver            =   '';\n                        current_url             =   '';\n                        created_at              =   '';\n                        order_status            =   null;\n                        tip                     =   0;\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\n                            tsk_type            =   val.tsk_type;\n                        }\n                        //console.log('Status : ', val.tsk_status);\n\n                        if(val.tsk_status === 'tsk_proc_hld') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\n                            tsk_status          =   'Scheduled';\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\n                            tsk_status          =   'Picked Up';\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\n                            tsk_status          =   'Processing';\n                        } else if(val.tsk_status === 'tsk_cmp') {\n                            tsk_status          =   'Completed'\n                        } else if(val.tsk_status === 'tsk_cncling') {\n                            tsk_status          =   'Deleted'\n                        } else if(val.tsk_status === 'tsk_cncled') {\n                            tsk_status          =   'Deleted'\n                        } else {\n                            tsk_status          =   'Scheduled'\n                        }\n\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\n                        }\n\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\n                            track_driver        =   'Driver to Merchant';\n                            current_url         =   val.pickup_onfleet_url;\n                        }\n\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\n                            track_driver        =   'Driver to Recipient';\n                            current_url         =   val.drop_onfleet_url;\n                        }\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\n\n\n                        if(_.isUndefined(tasks[val.state_code])) {\n                            tasks[val.state_code]   =   {};\n                            tasks[val.state_code][val.store_id]   =   {\n                                        name            :   filterStoreName[val.store_id],\n                                        id              :   val.state_code+val.store_id,\n                                        uniqueid        :   val.store_id,\n                                        ready           :   0,\n                                        not_ready       :   0,\n                                        shopping        :   0,\n                                        total           :   0,\n                                        orders          :   [],\n                                        totShoppedLate  :   0\n                            };\n                        } else {\n                            if(_.isUndefined(tasks[val.state_code][val.store_id])) {\n                                tasks[val.state_code][val.store_id]   =   {\n                                    name            :   filterStoreName[val.store_id],\n                                    id              :   val.state_code+val.store_id,\n                                    uniqueid        :   val.store_id,\n                                    ready           :   0,\n                                    not_ready       :   0,\n                                    shopping        :   0,\n                                    total           :   0,\n                                    orders          :   [],\n                                    totShoppedLate  :   0\n                                };\n                            }\n                        }\n\n                        if(!!val.order_status) {\n                            order_status            =   val.order_status;\n                        }\n\n                        tasks[val.state_code][val.store_id].total++;\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\n                            tasks[val.state_code][val.store_id].ready++;\n                        } else if(order_status === 'W') {\n                            tasks[val.state_code][val.store_id].shopping++;\n                        }\n                        else {\n                            tasks[val.state_code][val.store_id].not_ready++;\n                        }\n\n                        if(!!val.tip) {\n                            tip                     =   val.tip;\n                        }\n                        let shoppedLate             =   0;\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\n                        }\n                        if(shoppedLate > 0)\n                            tasks[val.state_code][val.store_id].totShoppedLate++;\n\n                        tasks[val.state_code][val.store_id].orders.push({\n                            id                  :   val.id,\n                            created_at          :   created_at,\n                            complete_after      :   coa,\n                            complete_before     :   cob,\n                            recpnt_address      :   val.recpnt_address_full,\n                            mrchnt_address      :   val.mrchnt_address_full,\n                            driver_name         :   val.driver_name,\n                            tsk_status          :   tsk_status,\n                            uuid                :   val.uuid,\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\n                            track_driver        :   track_driver,\n                            current_url         :   current_url,\n                            order_number        :   val.order_number,\n                            timestamp           :   val.complete_after,\n                            timezone            :   val.time_zone,\n                            order_status        :   order_status,\n                            mrchnt_name         :   val.mrchnt_name,\n                            tsk_type            :   tsk_type,\n                            shoppedLate         :   shoppedLate\n                        });\n                    }\n                });\n                let temp                        =   {};\n                _.each(tasks, (val, key) => {\n                    _.each(val, (vz, kz) => {\n                        tasks[key][kz].orders   =   _.sortBy(tasks[key][kz].orders, (o) => { return o.timestamp; })\n                    });\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\n                });\n                tasks                           =   temp;\n            }\n        }\n    }\n    return {tasks: tasks, count: task_count, type: type};\n}\n\n\nexport const addressFormater = (obj) => {\n    try{\n      let regex = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/;\n  \n      let address = obj.match(regex);\n      //console.log(address);\n      if(address[4].indexOf(',') > -1 && address[3].indexOf(' ') > -1){\n        let formattedAddress = address[3]+', '+ address[4] + ' '+ address[address.length -1];\n        let modAddress = formattedAddress+', USA';\n        if(/(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g.test(modAddress)){\n          let _address = modAddress.match(regex);\n  \n          return {\n            validAdrs: true, \n            formattedAddress: formattedAddress,\n            address: modAddress,\n            number: _address[0],\n            street: _address[1],\n            city: _address[2],\n            country: 'United States',\n            state_code: _address[4],\n            zipcode: _address[_address.length -1]\n          }\n        } else {\n          return {\n            validAdrs: false \n          }\n        }\n      } else {\n        let formattedAddress = address[1] + ' ' + address[2] + ', '+ address[3] + ', ' + address[4] + ' ' + address[address.length -1];\n        return {\n          validAdrs: true, \n          formattedAddress: formattedAddress,\n          address: obj,\n          number: address[1],\n          street: address[2],\n          city: address[3],\n          country: 'United States',\n          state_code: address[4],\n          zipcode: address[address.length -1],\n        }\n      }\n    } catch(e){\n      console.log(e);\n      return {\n        validAdrs: false \n      }\n    }\n};\n\n\n\nexport function getStatusClass(status){\n    let clsName         =  '';\n    switch(status) {\n        case'Processing':\n            clsName     =  'btn_Processing';\n        break;\n        case'Picked Up':\n            clsName     =  'btn_Pickedup';\n        break;\n        case'Scheduled':\n            clsName     =  'btn_Scheduled';\n        break;\n        case'Completed':\n            clsName     =  'btn_Completed';\n        break;\n        case'Deleted':\n            clsName     =  'btn_Deleted';\n        break;\n        default:\n            clsName     =  'btn_Processing';\n        break;\n    }\n    return clsName;\n}\n\nexport function getTaskStatus(status) {\n    let tsk_status          =   'Scheduled';\n    if(status === 'tsk_proc_hld') {\n        tsk_status          =   'Scheduled';\n    } else if(status === 'tsk_proc_mrchnt') {\n        tsk_status          =   'Scheduled';\n    } else if(status === 'tsk_proc_drv' && status === 'drv_strt_recpnt_tsk') {\n        tsk_status          =   'Picked Up';\n    } else if(status === 'tsk_proc_drv') {\n        tsk_status          =   'Processing';\n    } else if(status === 'tsk_cmp') {\n        tsk_status          =   'Completed';\n    } else if(status === 'tsk_cncling') {\n        tsk_status          =   'Deleted';\n    } else if(status === 'tsk_cncled') {\n        tsk_status          =   'Deleted';\n    } else {\n        tsk_status          =   'Scheduled';\n    }\n    return tsk_status;\n}\n\nexport function getDeliveryWindow(completeAfter, completeBefore, time_zone){\n    let coa     =   getDateTime(parseInt(completeAfter) * 1000, time_zone, 'MM/DD · hh:mma');\n    let cob     =   getDateTime(parseInt(completeBefore) * 1000, time_zone, 'hh:mma');\n    return `${coa} - ${cob}`;\n}"]},"metadata":{},"sourceType":"module"}