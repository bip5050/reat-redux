{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/biplab/Desktop/foodjets/src/containers/Header/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { PropTypes as PT } from 'prop-types';\nimport * as actions from './actions';\nimport HeaderContainer from './header';\n\nvar Header = function Header(_ref) {\n  var isProcessing = _ref.isProcessing,\n      isError = _ref.isError,\n      isSuccess = _ref.isSuccess,\n      isAuthenticateError = _ref.isAuthenticateError,\n      getSettings = _ref.getSettings,\n      settingsData = _ref.settingsData,\n      userType = _ref.userType,\n      authenticate = _ref.authenticate,\n      authenticateData = _ref.authenticateData,\n      userData = _ref.userData,\n      currentPage = _ref.currentPage,\n      logo = _ref.logo;\n  return /*#__PURE__*/React.createElement(HeaderContainer, {\n    isProcessing: isProcessing,\n    isError: isError,\n    isSuccess: isSuccess,\n    isAuthenticateError: isAuthenticateError,\n    getSettings: getSettings,\n    settingsData: settingsData,\n    userType: userType,\n    authenticate: authenticate,\n    authenticateData: authenticateData,\n    userData: userData,\n    currentPage: currentPage,\n    logo: logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  });\n};\n\nHeader.propTypes = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  isAuthenticateError: PT.bool,\n  getSettings: PT.func,\n  settingsData: PT.object,\n  userType: PT.string,\n  authenticate: PT.func,\n  authenticateData: PT.object,\n  userData: PT.object,\n  logo: PT.object,\n  currentPage: PT.string\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2, ownProps) {\n  var headerReducer = _ref2.headerReducer;\n  return {\n    isProcessing: headerReducer.isProcessing,\n    isError: headerReducer.isError,\n    isSuccess: headerReducer.isSuccess,\n    isAuthenticateError: headerReducer.isAuthenticateError,\n    settingsData: headerReducer.settingsData,\n    logo: headerReducer.logo,\n    userType: headerReducer.userType,\n    authenticateData: headerReducer.authenticateData,\n    userData: ownProps.userData,\n    currentPage: ownProps.currentPage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getSettings: function getSettings(data) {\n      return dispatch(actions.getSettings(data));\n    },\n    authenticate: function authenticate(data) {\n      return dispatch(actions.authenticate(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Header/index.js"],"names":["React","connect","withRouter","PropTypes","PT","actions","HeaderContainer","Header","isProcessing","isError","isSuccess","isAuthenticateError","getSettings","settingsData","userType","authenticate","authenticateData","userData","currentPage","logo","propTypes","bool","func","object","string","mapStateToProps","ownProps","headerReducer","mapDispatchToProps","dispatch","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,SAAS,IAAIC,EAArB,QAA8B,YAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,eAAP,MAA4B,UAA5B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAaP;AAAA,MAZcC,YAYd,QAZcA,YAYd;AAAA,MAXcC,OAWd,QAXcA,OAWd;AAAA,MAVcC,SAUd,QAVcA,SAUd;AAAA,MATcC,mBASd,QATcA,mBASd;AAAA,MARcC,WAQd,QARcA,WAQd;AAAA,MAPcC,YAOd,QAPcA,YAOd;AAAA,MANcC,QAMd,QANcA,QAMd;AAAA,MALcC,YAKd,QALcA,YAKd;AAAA,MAJcC,gBAId,QAJcA,gBAId;AAAA,MAHcC,QAGd,QAHcA,QAGd;AAAA,MAFcC,WAEd,QAFcA,WAEd;AAAA,MADcC,IACd,QADcA,IACd;AACJ,sBACE,oBAAC,eAAD;AACE,IAAA,YAAY,EAAEX,YADhB;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,mBAAmB,EAAEC,mBAJvB;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,YAAY,EAAEC,YANhB;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,YAAY,EAAEC,YARhB;AASE,IAAA,gBAAgB,EAAEC,gBATpB;AAUE,IAAA,QAAQ,EAAEC,QAVZ;AAWE,IAAA,WAAW,EAAEC,WAXf;AAYE,IAAA,IAAI,EAAEC,IAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBF,CA9BF;;AAgCCZ,MAAM,CAACa,SAAP,GAAqB;AACpBZ,EAAAA,YAAY,EAAEJ,EAAE,CAACiB,IADG;AAEpBZ,EAAAA,OAAO,EAAEL,EAAE,CAACiB,IAFQ;AAGpBX,EAAAA,SAAS,EAAEN,EAAE,CAACiB,IAHM;AAIpBV,EAAAA,mBAAmB,EAAEP,EAAE,CAACiB,IAJJ;AAKpBT,EAAAA,WAAW,EAACR,EAAE,CAACkB,IALK;AAMpBT,EAAAA,YAAY,EAACT,EAAE,CAACmB,MANI;AAOpBT,EAAAA,QAAQ,EAACV,EAAE,CAACoB,MAPQ;AAQpBT,EAAAA,YAAY,EAACX,EAAE,CAACkB,IARI;AASpBN,EAAAA,gBAAgB,EAACZ,EAAE,CAACmB,MATA;AAUpBN,EAAAA,QAAQ,EAACb,EAAE,CAACmB,MAVQ;AAWpBJ,EAAAA,IAAI,EAACf,EAAE,CAACmB,MAXY;AAYpBL,EAAAA,WAAW,EAACd,EAAE,CAACoB;AAZK,CAArB;;AAeA,IAAOC,eAAe,GAAK,SAApBA,eAAoB,QAAkBC,QAAlB,EAA+B;AAAA,MAA7BC,aAA6B,SAA7BA,aAA6B;AACxD,SAAQ;AACLnB,IAAAA,YAAY,EAAEmB,aAAa,CAACnB,YADvB;AAELC,IAAAA,OAAO,EAAEkB,aAAa,CAAClB,OAFlB;AAGLC,IAAAA,SAAS,EAAEiB,aAAa,CAACjB,SAHpB;AAILC,IAAAA,mBAAmB,EAAEgB,aAAa,CAAChB,mBAJ9B;AAKLE,IAAAA,YAAY,EAAEc,aAAa,CAACd,YALvB;AAMLM,IAAAA,IAAI,EAAEQ,aAAa,CAACR,IANf;AAOLL,IAAAA,QAAQ,EAAEa,aAAa,CAACb,QAPnB;AAQLE,IAAAA,gBAAgB,EAAEW,aAAa,CAACX,gBAR3B;AASLC,IAAAA,QAAQ,EAAES,QAAQ,CAACT,QATd;AAULC,IAAAA,WAAW,EAAEQ,QAAQ,CAACR;AAVjB,GAAR;AAYA,CAbF;;AAgBD,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCjB,IAAAA,WAAW,EAAE,qBAACkB,IAAD;AAAA,aAAUD,QAAQ,CAACxB,OAAO,CAACO,WAAR,CAAoBkB,IAApB,CAAD,CAAlB;AAAA,KADyB;AAEtCf,IAAAA,YAAY,EAAE,sBAACe,IAAD;AAAA,aAAUD,QAAQ,CAACxB,OAAO,CAACU,YAAR,CAAqBe,IAArB,CAAD,CAAlB;AAAA;AAFwB,GAAL;AAAA,CAAnC;;AAIA,eAAe7B,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,UAAU,CAACK,MAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {PropTypes as PT} from 'prop-types';\nimport * as actions from './actions';\nimport HeaderContainer from './header';\n\nconst Header = ({\n                      isProcessing,\n                      isError,\n                      isSuccess,\n                      isAuthenticateError,\n                      getSettings,\n                      settingsData,\n                      userType,\n                      authenticate,\n                      authenticateData,\n                      userData,\n                      currentPage,\n                      logo\n  }) => {\n    return (\n      <HeaderContainer\n        isProcessing={isProcessing}\n        isError={isError}\n        isSuccess={isSuccess}\n        isAuthenticateError={isAuthenticateError}\n        getSettings={getSettings}\n        settingsData={settingsData}\n        userType={userType}\n        authenticate={authenticate}\n        authenticateData={authenticateData}\n        userData={userData}\n        currentPage={currentPage}\n        logo={logo}\n      />\n    )\n };\n\n Header.propTypes   = {\n  isProcessing: PT.bool,\n  isError: PT.bool,\n  isSuccess: PT.bool,\n  isAuthenticateError: PT.bool,\n  getSettings:PT.func,\n  settingsData:PT.object,\n  userType:PT.string,\n  authenticate:PT.func,\n  authenticateData:PT.object,\n  userData:PT.object,\n  logo:PT.object,\n  currentPage:PT.string\n }\n\n const  mapStateToProps   = ({headerReducer}, ownProps) => {\n   return ({\n      isProcessing: headerReducer.isProcessing,\n      isError: headerReducer.isError,\n      isSuccess: headerReducer.isSuccess,\n      isAuthenticateError: headerReducer.isAuthenticateError,\n      settingsData: headerReducer.settingsData,\n      logo: headerReducer.logo,\n      userType: headerReducer.userType,\n      authenticateData: headerReducer.authenticateData,\n      userData: ownProps.userData,\n      currentPage: ownProps.currentPage\n    })\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  getSettings: (data) => dispatch(actions.getSettings(data)),\n  authenticate: (data) => dispatch(actions.authenticate(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));"]},"metadata":{},"sourceType":"module"}