{"ast":null,"code":"import _objectSpread from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/biplab/Desktop/foodjets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import List from'./list';import lodash from'lodash';import moment from'moment-timezone';import{isEqual,isEmpty}from'lodash';import'bootstrap/dist/css/bootstrap.css';import FeedbackFilter from'./feedbackFilter';import{withRouter}from'react-router-dom';import{setFilter,getFilter,clearFilter}from'../../Helper/common';var FeedbackComponent=/*#__PURE__*/function(_React$Component){_inherits(FeedbackComponent,_React$Component);var _super=_createSuper(FeedbackComponent);function FeedbackComponent(props){var _this;_classCallCheck(this,FeedbackComponent);_this=_super.call(this,props);/* let filter = getFilter('FeedBack');\n\t\tlet endDate = moment().format('YYYY-MM-DD');\n\t\tlet startDate = moment().subtract(1, 'days').format('YYYY-MM-DD'); */_this.state={sOpen:false,aOpen:false,stOpen:false,//type: (filter && filter.type)?filter.type:'general',\nallRatings:true,//endDate: endDate,\nfilterByStart:[],advSearchData:{},showSearch:false,//selectedState: null,\n//selectedArea: null,\n//selectedStore: null,\n//startDate: startDate,\nfilteredFeedbackData:[]//filterKeys: !isEmpty(filter)?filter.filterKeys:{ State:[], Area: [], Store: [] },\n//noofdays: ''\n};_this.searchFilter=_this.searchFilter.bind(_assertThisInitialized(_this));//this.handleTypeChange = this.handleTypeChange.bind(this);\nreturn _this;}_createClass(FeedbackComponent,[{key:\"searchFilter\",/* handleTypeChange(type) {\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\n\n\t\tmakeFeedbackFilterObj.page = 1;\n\t\tthis.setState({ \n\t\t\ttype: type, \n\t\t\tallRatings: true, \n\t\t\tfilterByStart: [], \n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\n\t\t}, ()=>{\n\t\t\tthis.updateFeedbackSummery();\n\t\t\tthis.updateFeedbackList();\n\n\t\t\tif(!isEmpty(this.state.advSearchData)){\n\t\t\t\tthis.props.feedbackSearch({ ...this.state.advSearchData, user_type: type });\n\t\t\t}\n\t\t});\n\n      \tsetFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: type, filterKeys: this.state.filterKeys || {}});\n\t}; */value:function searchFilter(searchData){var _this2=this;this.setState({advSearchData:searchData},function(){//this.props.feedbackSearch({ ...searchData, user_type: this.state.type });\n_this2.props.feedbackSearch(_objectSpread({},searchData));});}},{key:\"handleCheckboxFilter\",value:function handleCheckboxFilter(event,type){var _this3=this;event.persist();if(event.target.checked&&event.target.value===\"all\"){this.setState({allRatings:true,filterByStart:[],filteredFeedbackData:this.props.feedbackData});}else{this.setState({allRatings:false});if(event.target.value!==\"all\"){var filterByStart=this.state.filterByStart||{};var selIndex=filterByStart.findIndex(function(item){return item===event.target.value;});if(selIndex===-1){filterByStart.push(event.target.value);}else{filterByStart.splice(selIndex,1);}this.setState({filterByStart:filterByStart},function(){var sortedArray=lodash.filter(_this3.props.feedbackData?_this3.props.feedbackData:[],function(v){return lodash.includes(filterByStart,v.rating);});_this3.setState({filteredFeedbackData:sortedArray});});}else{this.setState({filterByStart:[],filteredFeedbackData:this.props.feedbackData});}}if(this.state.filterByStart.length===0){this.setState({allRatings:true,filterByStart:[],filteredFeedbackData:[]},function(){_this3.setState({filteredFeedbackData:_this3.props.feedbackData});});}}},{key:\"changePage\",value:function changePage(data){var currentPage=data.currentPage;var savedFilterData=_objectSpread({},this.props.savedFilterData);var makeFeedbackFilterObj=savedFilterData.makeFeedbackFilterObj;//console.log('Api Data From Change Page : ', makeFeedbackFilterObj.page, currentPage, makeFeedbackFilterObj.page !== currentPage);\nif(makeFeedbackFilterObj.page!==currentPage){makeFeedbackFilterObj.page=currentPage;var _data=_objectSpread(_objectSpread({},makeFeedbackFilterObj),{},{filter:savedFilterData});this.props.getFeedback(_data);}/* this.setState({ makeFeedbackFilterObj: makeFeedbackFilterObj, allRatings: true, filterByStart: []  }, ()=> {\n\t\t\tthis.updateFeedbackList();\n\t\t}); */}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(props){//console.log(props.locations)\n/* if(!!props.userType && !isEqual(this.props.userType, props.userType)) {\n\t\t \tlet filterKeys = this.state.filterKeys;\n\t\t\tlet type = (props.userType === 'admin') ? 'general' : props.userType;\n\n\t\t\tif(!!props.userType){\n\t\t\t\tlet filter = getFilter('FeedBack');\n\t\t\t\tif(!isEmpty(filter) && filter.user_type === props.userType) {\n\t\t\t\t\ttype       = filter.type;\n\t\t\t\t\tfilterKeys = filter.filterKeys;\n\t\t\t\t} else {\n\t\t\t\t\tclearFilter('FeedBack');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setState({ type: type, filterKeys: filterKeys });\n\t\t};\n\n\t\tthis.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount }); */this.setState({filteredFeedbackData:props.feedbackData,feedBackCount:props.feedBackCount});}},{key:\"componentWillMount\",value:function componentWillMount(){this.props.getLocations();}},{key:\"componentDidMount\",value:function componentDidMount(){//this.props.getLocations();\n/* let filterKeys = this.state.filterKeys;\n\t\tlet type = (this.props.userType === 'admin') ? 'general' : this.props.userType;\n\n\t\tif(!!this.props.userType){\n\t\t\tlet filter = getFilter('FeedBack');\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\n\t\t\t\ttype        =  filter.type;\n\t\t\t\tfilterKeys  =  filter.filterKeys;\n\t\t\t} else {\n\t\t\t\tclearFilter('FeedBack');\n\t\t\t}\n\t\t};\n\n\t\tthis.setState({ filteredFeedbackData: this.props.feedbackData, feedBackCount: this.props.feedBackCount, type: type, filterKeys: filterKeys });\n\n\t\tthis.updateFeedbackSummery();\n\t\tthis.updateFeedbackList(); */ //this.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount });\n}},{key:\"render\",value:function render(){var _this$state=this.state,type=_this$state.type,makeFilterObj=_this$state.makeFilterObj,filterKeys=_this$state.filterKeys,startDate=_this$state.startDate,endDate=_this$state.endDate,noofdays=_this$state.noofdays,allRatings=_this$state.allRatings,filterByStart=_this$state.filterByStart,filteredFeedbackData=_this$state.filteredFeedbackData,feedBackCount=_this$state.feedBackCount;var locationData=this.props.locations||{};var stores=locationData.stores||[];var zones=locationData.zones||{};var userType=this.props.userType||{};var settingsData=this.props.settingsData||{};//console.log('Filter Loaded : ', this.props.isFilterLoaded && !isEmpty(this.props.locations));\nreturn/*#__PURE__*/React.createElement(\"main\",{className:\"dash right_sec feedP\".concat(userType!=='admin'?' noAdmin':'')},this.props.isFilterLoaded&&!isEmpty(this.props.locations)?/*#__PURE__*/React.createElement(FeedbackFilter,{userType:this.props.userType//type={type}\n,area:zones,stores:stores//endDate={endDate}\n//startDate={startDate}\n//noofdays={noofdays}\n//filterKeys={filterKeys} \n,reply:this.props.reply,feedBackCount:feedBackCount,searchFilter:this.searchFilter,isReplying:this.props.isReplying,replyResult:this.props.replyResult,isSearching:this.props.isSearching,filteredList:this.props.filteredList,getFeedback:this.props.getFeedback,getSummary:this.props.getSummary,savedFilterData:this.props.savedFilterData/* handleTypeChange={this.handleTypeChange}\t\t\t\t\n\t\t\t\t\t\tonDateRange = {this.onDateRange.bind(this)}\t\n\t\t\t\t\t\tonSelectEndDate = {this.onSelectEndDate.bind(this)} */,searchResultList:this.props.searchResultList||[]/* handleAreaChange = {this.handleAreaChange.bind(this)}\t\t\t\t\n\t\t\t\t\t\thandleStateChange = {this.handleStateChange.bind(this)}\n\t\t\t\t\t\thandleStoreChange = {this.handleStoreChange.bind(this)}\n\t\t\t\t\t\tonSelectStartDate = {this.onSelectStartDate.bind(this)}\t\n\t\t\t\t\t\thandleRemoveFilter = {this.handleRemoveFilter.bind(this)} */}):null,/*#__PURE__*/React.createElement(List,{type:type,endDate:endDate,startDate:startDate,allRatings:allRatings,reply:this.props.reply,filterByStart:filterByStart,feedBackCount:feedBackCount,isLoading:this.props.isLoading,isReplying:this.props.isReplying,replyResult:this.props.replyResult,isFiltering:this.props.isFiltering,changePage:this.changePage.bind(this),filteredFeedbackData:filteredFeedbackData||[],feedbackSummeryData:this.props.feedbackSummeryData||{},handleCheckboxFilter:this.handleCheckboxFilter.bind(this)}));}}]);return FeedbackComponent;}(React.Component);FeedbackComponent.defaultProps={feedbackData:[],feedBackCount:0,replyResult:{},searchResultList:[],feedbackSummeryData:{}};;export default withRouter(FeedbackComponent);","map":{"version":3,"sources":["/home/biplab/Desktop/foodjets/src/containers/Feedbacks/feedback.js"],"names":["React","List","lodash","moment","isEqual","isEmpty","FeedbackFilter","withRouter","setFilter","getFilter","clearFilter","FeedbackComponent","props","state","sOpen","aOpen","stOpen","allRatings","filterByStart","advSearchData","showSearch","filteredFeedbackData","searchFilter","bind","searchData","setState","feedbackSearch","event","type","persist","target","checked","value","feedbackData","selIndex","findIndex","item","push","splice","sortedArray","filter","v","includes","rating","length","data","currentPage","savedFilterData","makeFeedbackFilterObj","page","getFeedback","feedBackCount","getLocations","makeFilterObj","filterKeys","startDate","endDate","noofdays","locationData","locations","stores","zones","userType","settingsData","isFilterLoaded","reply","isReplying","replyResult","isSearching","filteredList","getSummary","searchResultList","isLoading","isFiltering","changePage","feedbackSummeryData","handleCheckboxFilter","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport List from './list';\nimport lodash from 'lodash';\nimport moment from 'moment-timezone';\nimport { isEqual, isEmpty } from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { PropTypes as PT } from 'prop-types';\nimport FeedbackFilter from './feedbackFilter';\nimport { withRouter } from 'react-router-dom';\nimport {setFilter, getFilter, clearFilter} from '../../Helper/common';\n\nclass FeedbackComponent extends React.Component {\n\tstatic propTypes = {\n\t\treply: PT.func,\n\t\tisLoading: PT.bool,\n\t\tisFiltering: PT.bool,\n\t\tisSearching: PT.bool,\n\t\tgetFeedback: PT.func,\n\t\tgetSummary: PT.func,\n\t\tgetLocations: PT.func,\n\t\tlocations: PT.object,\n\t\tfeedbackData: PT.array,\n\t\tfeedBackCount: PT.number,\n\t\tfeedbackSearch: PT.func,\n\t\tisReplying: PT.bool,\n\t\treplyResult: PT.object,\n\t\tfeedbackSummeryData: PT.object\n\t};\n\n\tstatic defaultProps = {\n\t\tfeedbackData: [],\n\t\tfeedBackCount: 0,\n\t\treplyResult: {},\n\t\tsearchResultList:  [],\n\t\tfeedbackSummeryData:  {}\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t/* let filter = getFilter('FeedBack');\n\t\tlet endDate = moment().format('YYYY-MM-DD');\n\t\tlet startDate = moment().subtract(1, 'days').format('YYYY-MM-DD'); */\n\n\t\tthis.state = {\t\n\t\t\tsOpen: false,\n\t\t\taOpen: false,\n\t\t\tstOpen: false,\t\n\t\t\t//type: (filter && filter.type)?filter.type:'general',\n\t\t\tallRatings: true, \n\t\t\t//endDate: endDate,\n          \tfilterByStart: [], \n          \tadvSearchData: {},\n\t\t\tshowSearch: false,\t\t\n\t\t \t//selectedState: null,\n\t\t \t//selectedArea: null,\n          \t//selectedStore: null,\n\t\t\t//startDate: startDate,\n\t\t\tfilteredFeedbackData: [],\n\t\t\t//filterKeys: !isEmpty(filter)?filter.filterKeys:{ State:[], Area: [], Store: [] },\n\t\t\t//noofdays: ''\n\t\t}; \n\n\t\tthis.searchFilter = this.searchFilter.bind(this);\n\t  \t//this.handleTypeChange = this.handleTypeChange.bind(this);\n\t};\n\n\t/* handleTypeChange(type) {\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\n\n\t\tmakeFeedbackFilterObj.page = 1;\n\t\tthis.setState({ \n\t\t\ttype: type, \n\t\t\tallRatings: true, \n\t\t\tfilterByStart: [], \n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\n\t\t}, ()=>{\n\t\t\tthis.updateFeedbackSummery();\n\t\t\tthis.updateFeedbackList();\n\n\t\t\tif(!isEmpty(this.state.advSearchData)){\n\t\t\t\tthis.props.feedbackSearch({ ...this.state.advSearchData, user_type: type });\n\t\t\t}\n\t\t});\n\n      \tsetFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: type, filterKeys: this.state.filterKeys || {}});\n\t}; */\n\n\tsearchFilter (searchData) {\n\t\tthis.setState({ advSearchData: searchData }, ()=> {\n\t\t\t//this.props.feedbackSearch({ ...searchData, user_type: this.state.type });\n\t\t\tthis.props.feedbackSearch({ ...searchData });\n\t\t});\n   \t};\n\n\thandleCheckboxFilter(event, type){\n\t\tevent.persist();\n\n\t\tif(event.target.checked && (event.target.value === \"all\")){\n\t\t\tthis.setState({ allRatings: true, filterByStart: [], filteredFeedbackData: this.props.feedbackData});\n\t\t} else {\n\t\t\tthis.setState({ allRatings: false });\n\n\t\t\tif(event.target.value !== \"all\") {\t\n\t\t\t\tlet filterByStart = this.state.filterByStart || {};\n\t\t\t\tlet selIndex = filterByStart.findIndex((item) => {\n\t\t\t\t\treturn item === event.target.value;\n\t\t\t\t});\n\n\t\t\t\tif(selIndex === -1) {\n\t\t\t\t\tfilterByStart.push(event.target.value);\n\t\t\t\t} else {\n\t\t\t\t\tfilterByStart.splice(selIndex, 1);\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ filterByStart: filterByStart }, ()=> {\n\t\t\t\t\tlet sortedArray = lodash.filter((this.props.feedbackData)?this.props.feedbackData:[], (v) => lodash.includes(filterByStart, v.rating));\t\n\n\t\t\t\t\tthis.setState({ filteredFeedbackData: sortedArray });\n\t\t\t\t});\t\n\t\t\t} else {\t\n\t\t\t\tthis.setState({ filterByStart: [], filteredFeedbackData: this.props.feedbackData});\n\t\t\t}\n\t\t}\n\n\t\tif(this.state.filterByStart.length === 0){\n\t\t\tthis.setState({ allRatings: true, filterByStart: [], filteredFeedbackData: []}, ()=> {\n\t\t\t\tthis.setState({ filteredFeedbackData: this.props.feedbackData });\t\t\t\t\n\t\t\t});\n\t\t}\t\t\n\t};\n\n\tchangePage(data){\n\t\tconst { currentPage } =\tdata;\n\t\tlet savedFilterData\t\t\t=\t{...this.props.savedFilterData};\n\t\tlet makeFeedbackFilterObj\t=\tsavedFilterData.makeFeedbackFilterObj;\n\t\t//console.log('Api Data From Change Page : ', makeFeedbackFilterObj.page, currentPage, makeFeedbackFilterObj.page !== currentPage);\n\t\tif(makeFeedbackFilterObj.page !== currentPage) {\n\t\t\tmakeFeedbackFilterObj.page = currentPage;\n\t\t\tlet data\t=\t{\n\t\t\t\t...makeFeedbackFilterObj,\n\t\t\t\tfilter: savedFilterData\n\t\t\t}\n\t\t\tthis.props.getFeedback(data);\n\t\t}\n\t\t/* this.setState({ makeFeedbackFilterObj: makeFeedbackFilterObj, allRatings: true, filterByStart: []  }, ()=> {\n\t\t\tthis.updateFeedbackList();\n\t\t}); */\n\t};\n\n\tcomponentWillReceiveProps(props) {\n\t\t//console.log(props.locations)\n\t\t/* if(!!props.userType && !isEqual(this.props.userType, props.userType)) {\n\t\t \tlet filterKeys = this.state.filterKeys;\n\t\t\tlet type = (props.userType === 'admin') ? 'general' : props.userType;\n\n\t\t\tif(!!props.userType){\n\t\t\t\tlet filter = getFilter('FeedBack');\n\t\t\t\tif(!isEmpty(filter) && filter.user_type === props.userType) {\n\t\t\t\t\ttype       = filter.type;\n\t\t\t\t\tfilterKeys = filter.filterKeys;\n\t\t\t\t} else {\n\t\t\t\t\tclearFilter('FeedBack');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setState({ type: type, filterKeys: filterKeys });\n\t\t};\n\n\t\tthis.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount }); */\n\t\tthis.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount });\n\t};\n\n\tcomponentWillMount() {\t\t\n\t\tthis.props.getLocations();\n\t}\n\n\tcomponentDidMount(){\n\t\t//this.props.getLocations();\n\t \t/* let filterKeys = this.state.filterKeys;\n\t\tlet type = (this.props.userType === 'admin') ? 'general' : this.props.userType;\n\n\t\tif(!!this.props.userType){\n\t\t\tlet filter = getFilter('FeedBack');\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\n\t\t\t\ttype        =  filter.type;\n\t\t\t\tfilterKeys  =  filter.filterKeys;\n\t\t\t} else {\n\t\t\t\tclearFilter('FeedBack');\n\t\t\t}\n\t\t};\n\n\t\tthis.setState({ filteredFeedbackData: this.props.feedbackData, feedBackCount: this.props.feedBackCount, type: type, filterKeys: filterKeys });\n\n\t\tthis.updateFeedbackSummery();\n\t\tthis.updateFeedbackList(); */\n\t\t//this.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount });\n\t};\n\n\trender() {\n\t\tconst { type, makeFilterObj, filterKeys, startDate, endDate, noofdays, allRatings, filterByStart, filteredFeedbackData, feedBackCount } = this.state;\n\t \tlet locationData = this.props.locations || {};\n\t \tlet stores = locationData.stores || [];\n\t\tlet zones = locationData.zones || {};\n\t\tlet userType = this.props.userType || {};\n\t\tlet settingsData = this.props.settingsData || {};\n\t\t//console.log('Filter Loaded : ', this.props.isFilterLoaded && !isEmpty(this.props.locations));\n\t\treturn (\n\t\t\t<main className={`dash right_sec feedP${(userType !== 'admin') ? ' noAdmin' : ''}`}>\n\t\t\t\t{\n\t\t\t\t\t(this.props.isFilterLoaded && !isEmpty(this.props.locations)) ? \n\t\t\t\t\t<FeedbackFilter \n\t\t\t\t\t\tuserType={this.props.userType}\n\t\t\t\t\t\t//type={type}\n\t\t\t\t\t\tarea={zones}\n\t\t\t\t\t\tstores={stores}\n\t\t\t\t\t\t//endDate={endDate}\n\t\t\t\t\t\t//startDate={startDate}\n\t\t\t\t\t\t//noofdays={noofdays}\n\t\t\t\t\t\t//filterKeys={filterKeys} \n\t\t\t\t\t\treply={this.props.reply}\n\t\t\t\t\t\tfeedBackCount={feedBackCount}\n\t\t\t\t\t\tsearchFilter={this.searchFilter}\n\t\t\t\t\t\tisReplying={this.props.isReplying}\n\t\t\t\t\t\treplyResult={this.props.replyResult}\n\t\t\t\t\t\tisSearching={this.props.isSearching} \n\t\t\t\t\t\tfilteredList={this.props.filteredList}\n\t\t\t\t\t\tgetFeedback={this.props.getFeedback} \n\t\t\t\t\t\tgetSummary={this.props.getSummary} \n\t\t\t\t\t\tsavedFilterData={this.props.savedFilterData}\n\t\t\t\t\t\t/* handleTypeChange={this.handleTypeChange}\t\t\t\t\n\t\t\t\t\t\tonDateRange = {this.onDateRange.bind(this)}\t\n\t\t\t\t\t\tonSelectEndDate = {this.onSelectEndDate.bind(this)} */\n\t\t\t\t\t\tsearchResultList={this.props.searchResultList || []} \n\t\t\t\t\t\t/* handleAreaChange = {this.handleAreaChange.bind(this)}\t\t\t\t\n\t\t\t\t\t\thandleStateChange = {this.handleStateChange.bind(this)}\n\t\t\t\t\t\thandleStoreChange = {this.handleStoreChange.bind(this)}\n\t\t\t\t\t\tonSelectStartDate = {this.onSelectStartDate.bind(this)}\t\n\t\t\t\t\t\thandleRemoveFilter = {this.handleRemoveFilter.bind(this)} */\n\t\t\t\t\t/> : null\n\t\t\t\t}\n\t\t\t\t\n\n\t            <List \n\t            \ttype={type}\n\t            \tendDate={endDate}\n\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\tallRatings={allRatings}\n\t\t\t\t\treply={this.props.reply}\n\t\t\t\t\tfilterByStart={filterByStart}\t\t            \n\t\t            feedBackCount={feedBackCount}\t\t\n\t\t            isLoading={this.props.isLoading} \n\t\t\t\t\tisReplying={this.props.isReplying}\n\t\t\t\t\treplyResult={this.props.replyResult}\n\t\t            isFiltering={this.props.isFiltering}   \n\t\t\t\t\tchangePage = {this.changePage.bind(this)}         \n\t\t            filteredFeedbackData={filteredFeedbackData || []} \n\t\t            feedbackSummeryData={this.props.feedbackSummeryData || {}} \n\t\t\t\t\thandleCheckboxFilter = {this.handleCheckboxFilter.bind(this)}\n\t            />  \n\t\t\t</main>\n\t\t);\n\t};\n};\n\nexport default withRouter(FeedbackComponent);"]},"metadata":{},"sourceType":"module"}