{"version":3,"sources":["containers/Dashboard/constants.js","containers/Dashboard/actions.js","config.js","util/firebase.js","Helper/common.js","util/helper.js","util/notify.js","containers/Modals/contextMenu.js","containers/Modals/editTaskModal.js","containers/Modals/orderDetailsTemplate.js","containers/Modals/taskDetailsModal.js","containers/Modals/mapDetailsModal.js","containers/Modals/trackDetailsModal.js","containers/Dashboard/uncategorizedList.js","containers/Dashboard/stateWiseList.js","containers/Dashboard/zoneWiseList.js","containers/Dashboard/dashboardList.js","containers/Filter/storeDropdown.js","containers/Filter/locationDropdown.js","containers/Modals/createTaskModal.js","containers/Dashboard/customFilter.js","containers/Filter/stateFilter.js","containers/Filter/areaFilter.js","containers/Filter/storeFilter.js","containers/Dashboard/filter.js","containers/Dashboard/dashboard.js","containers/Dashboard/index.js","components/Dashboard/index.js","containers/Feedbacks/constants.js","containers/Feedbacks/actions.js","util/cookies.js","containers/Feedbacks/replyModal.js","Helper/pagination.js","containers/Feedbacks/taskDetailsModal.js","containers/Feedbacks/list.js","components/Calendar/calendar.js","containers/Feedbacks/feedbackAdvanceFilter.js","containers/Feedbacks/feedbackFilter.js","containers/Feedbacks/feedback.js","containers/Header/constants.js","containers/Header/actions.js","containers/Feedbacks/index.js","components/Feedbacks/index.js","containers/Settings/constants.js","containers/Settings/actions.js","containers/Settings/profile.js","containers/Settings/changePassword.js","containers/Settings/contextMenu.js","containers/Modals/editLocation.js","containers/Settings/stores.js","containers/Modals/addLocation.js","containers/Settings/userContextMenu.js","containers/Settings/users.js","containers/Modals/addUserModal.js","containers/Settings/setting.js","containers/Settings/index.js","components/Settings/index.js","containers/Reports/constants.js","containers/Reports/actions.js","containers/Reports/filter.js","containers/Reports/reruns.js","containers/Reports/dailyView.js","containers/Reports/totalScore.js","containers/Reports/monthlyView.js","containers/Modals/lateOrdersModal.js","containers/Reports/onTimeReport.js","containers/Reports/reportGrid.js","containers/Reports/report.js","containers/Reports/index.js","components/Reports/index.js","containers/Login/constants.js","containers/Login/actions.js","containers/Login/login.js","containers/Login/index.js","components/Login/index.js","containers/ForgotPassword/constants.js","containers/ForgotPassword/actions.js","containers/ForgotPassword/forgotPassword.js","containers/ForgotPassword/index.js","components/ForgotPassword/index.js","containers/ResetPassword/constants.js","containers/ResetPassword/actions.js","containers/ResetPassword/resetPassword.js","containers/ResetPassword/index.js","components/ResetPassword/index.js","components/Home/index.js","containers/Header/header.js","containers/Header/index.js","components/common/Header/index.js","containers/Modals/toastModal.js","components/common/Sidebar/index.js","containers/TaskHistory/constants.js","containers/TaskHistory/actions.js","containers/TaskHistory/filter.js","containers/TaskHistory/stateWiseList.js","containers/TaskHistory/zoneWiseList.js","containers/TaskHistory/uncategorizedList.js","containers/TaskHistory/taskList.js","containers/TaskHistory/taskHistory.js","containers/TaskHistory/index.js","components/TaskHistory/index.js","routes.js","App.js","serviceWorker.js","containers/Login/reducer.js","containers/ForgotPassword/reducer.js","containers/ResetPassword/reducer.js","containers/Header/reducer.js","containers/Dashboard/reducer.js","containers/TaskHistory/reducer.js","containers/Feedbacks/reducer.js","containers/Settings/reducer.js","containers/Reports/reducer.js","reducers/index.js","Helper/api.js","containers/Login/Saga/index.js","containers/ForgotPassword/Saga/index.js","containers/ResetPassword/Saga/index.js","containers/Header/Saga/index.js","containers/Dashboard/Saga/index.js","containers/TaskHistory/Saga/index.js","containers/Feedbacks/Saga/index.js","containers/Settings/Saga/index.js","containers/Reports/Saga/index.js","sagas/index.js","index.js"],"names":["GET_LOCATIONS","CREATE_TASK","EDIT_TASK","GET_TASK_DETAILS","GET_TRACK_DETAILS","DELETE_TASK","UPDATE_TASK_STATUS","TASK_SEARCH","GET_SHOPPEDLATE","UPDATE_FILTER","getLocations","data","type","listenGetLocationsSuccess","listenGetLocationsError","listenCreateTaskSuccess","listenCreateTaskError","editTask","listenEditTaskSuccess","listenEditTaskError","getTrackDetails","getTaskDetails","listenGetTaskDetailsSuccess","listenGetTaskDetailsError","deleteTask","listenDeleteTaskSuccess","listenDeleteTaskError","updateTaskStatus","listenUpdateTaskStatusSuccess","listenUpdateTaskStatusError","resetSearch","search","listenSearchSuccess","listenSearchError","getShoppedLate","listenShoppedLateSuccess","listenShoppedLateError","ApiUrl","ApiUrl2","firebase","cookie","states","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","domain","hostname","id","value","Config","Title","Pagination","itemsPerPage","Object","objectSpread","Auth","initializeApp","auth","signInAnonymously","database","firestore","formatDate","date","moment","format","getDateTime","timestamp","tz","getSysDateTime","convertTwoDecimalRound","num","Math","round","addressFormater","obj","regex","address","match","indexOf","formattedAddress","length","modAddress","test","_address","validAdrs","number","street","city","country","state_code","zipcode","e","console","log","getStatusClass","status","clsName","getTaskStatus","getDeliveryWindow","completeAfter","completeBefore","time_zone","coa","parseInt","cob","concat","success","text","$","fadeIn","removeClass","addClass","html","message","setTimeout","fadeOut","error","inform","CustomContext","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","x","y","contextDiv","React","createRef","openEditWindow","bind","assertThisInitialized","updateTask","uuid","mrchnt_address","recpnt_address","tsk_status","notifysuccess","self","document","addEventListener","event","stopPropagation","hideContextMenu","setState","selOrder","removeEventListener","_this2","myStyle","position","top","left","order","order_number","isEmpty","react_default","a","createElement","ref","className","style","onClick","openDetailsWindow","order_uuid","openMapWindow","Component","EditTask","onSelectDate","formData","delivery_date","handleMerchantChange","merchant_address","errors","handleChange","recipient_address","handleSelect","latitude","longitude","geocodeByAddress","then","results","formatted_address","getLatLng","_ref","lat","lng","deliveryAddress","addressArray","recipient_location","notifyerror","catch","handleMerchantSelect","_ref2","merchant_location","onDateSelect","handleEditClick","stopImmediatePropagation","show","alcohol","signature","locations","startDate","Date","settingsData","isProcessing","delivery_time","tip","handleClose","handleEditTask","validateForm","onChangeHandle","isEqual","timings","timing","start_time","end_time","key","taskDetails","tskStatus","driverStatus","toTime","fromTime","fulldate","year","month","merchant","recipients","merchant_notes","notes","recipient_notes","start","end","today","now","unix","stimestamp","etimestamp","i","push","t","time","datetime","utc","preventDefault","timeZone","split","from_time","to_time","recipient","complete_after","complete_before","location","postalCode","store_id","params","isError","isNaN","name","target","err_merchant_address","err_recipient_address","err_delivery_date","err_delivery_time","err_tip","isDisabled","rsSrchStyles","input","width","padding","color","margin","autocompleteContainer","borderRadius","zIndex","background","border","boxShadow","autocompleteItem","defineProperty","textAlign","fontSize","lineHeight","borderTop","borderBottom","autocompleteItemActive","Modal","size","onHide","Header","closeButton","onSubmit","Body","Row","noGutters","Col","md","sm","htmlFor","react_datepicker_min_default","selected","onChange","minDate","placeholderText","map","v","k","driver_id","dist_default","toString","onSelect","styles","_ref3","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","backgroundColor","cursor","description","_ref4","Footer","Button","disabled","variant","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","getDetails","events","completionDetails","mrchnt_pics","onflt_mrchnt_pics","recpnt_pics","onflt_recpnt_pics","recpnt_sig","onflt_recpnt_sig","mrchnt_sig","onflt_mrchnt_sig","path","orderNumber","phone","recpnt_email","driver_name","work_in_progress_timestamp","timezone","ready_timestamp","merchant_start","merchant_eta","merchant_arrival","merchant_complete","merchant_worker_note","recipient_start","recipient_eta","recipient_arrival","recipient_complete","recipient_worker_note","src","react_multi_carousel_default","pic","feedback","comment","reply_message","TaskDetails","MapDetails","directionsService","window","google","maps","DirectionsService","origin","parseFloat","mrchnt_lat","mrchnt_lng","icon","destination","recpnt_lat","recpnt_lng","route","travelMode","TravelMode","DRIVING","result","DirectionsStatus","OK","directions","routes","legs","overview_path","_this3","GoogleMapExample","withGoogleMap","lib","defaultCenter","defaultZoom","mapTypeControl","options","polylineOptions","stokeColor","strokeOpacity","strokeWeight","suppressMarkers","containerElement","height","mapElement","distance","duration","TrackDetails","trackDriver","currentUrl","frameborder","UncategorizedList","tasks","orderList","orders","shoppedLateData","shoppedLate","shoppedLateSummary","summary","totalShopped","shoppedLatePerc","total_orders","shopped_late","shopping_late_percent","colSpan","total","ready","shopping","not_ready","oIndex","ordClsName","order_status","shoppedLateCls","onContextMenu","handleContextMenu","order_id","abbr","track_driver","openTrackWindow","current_url","align","keys","item","task","stateSummary","cities","index","zoneSummary","uniqueid","DashboardList","editShow","detailsShow","mapShow","trackShow","isLoading","filteredList","listType","snapshot","statefilter","areafilter","storefilter","arrangeData","confirm","clickX","clientX","clickY","pageY","toConsumableArray","org_id","task_type","getTasks","unsubscribe","searchTxt","query","firebaseDb","collection","where","onSnapshot","querySnapshot","store","storeName","forEach","label","filter","filterState","filterArea","area","filterStore","filterStoreName","filterTxt","toLowerCase","created_at","tsk_type","task_count","totShoppedLate","doc","val","_","driver_status","pickup_onfleet_url","drop_onfleet_url","recpnt_address_full","mrchnt_address_full","mrchnt_name","o","includes","mkt_ofc_cty_del_zne_name","mkt_ofc_cty_del_zne_id","temp","vz","kz","count","sortTaskList","_map","updateTotalCount","contextMenu","uncategorizedList_UncategorizedList","stateWiseList_UncategorizedList","zoneWiseList_UncategorizedList","editTaskModal","taskType","stores","pharmacy","trackDetailsModal","taskDetailsModal","mapDetailsModal","StoreDropdown","_this$setState","handleClick","nodeStore","contains","getAttribute","stOpen","storeTxt","selStoreTxt","handleSelectbox","selId","selectedIndex","findIndex","selectedStore","unsortedStore","_sortBy","autoComplete","handleStoreChange","LocationDropdown","nodeAddress","lOpen","locationTxt","selLocaTxt","selectedLocation","unsortedLocations","handleLocationChange","CreateTask","selectStore","merchant_phone","note","selectMerchantAddress","defaultErrors","merchant_name","last_name","recipient_name","recipient_phone","handleCbox","handleCreateTask","fullname","userData","org_name","isTaskProcessing","storeId","storeIndex","email","recipient_email","metadata","sms","merchantStart","merchantEta","recipientStart","recipientEta","createTask","validate","Form","storeDropdown_StoreDropdown","locationDropdown_LocationDropdown","assign","checked","CustomFilter","searchFilter","user_type","userType","handleRecipientChange","handleRecipientSelect","typeOpen","changeSearchType","onSearchDelTime","handleSearch","collapse","pageX","element","getElementById","offsetLeft","clientWidth","cls","start_date","end_date","startTimings","from","endTimings","to","filteredData","filteredCount","renderFunc","showSearch","method","action","onBlur","readOnly","section","StateFilter","handleStateChange","stateTxt","dropdownInput","current","focus","nodeState","sOpen","unsortedStates","JSON","parse","localStorage","getItem","stateFilter","handleRemoveFilter","AreaFilter","handleAreaChange","areaTxt","nodeArea","aOpen","areaFilter","zones","unsortedZoneList","stateCodeFilter","zoneList","zone","delivery_zone_name","StoreFilter","storeFilter","filteredArea","exists","zone_id","Filter","setIntervalSummary","interval","clearInterval","setInterval","nodeSearch","nodeSrchButton","nodeResSrchButton","selectedState","filterKeys","State","Store","Area","handleUpdateFilter","selectedArea","filters","stateCode","_remove","splice","updateFilter","showFilter","handleShow","handleSearchClose","toggleCustomSearch","toggleResFilter","filterData","_this4","_React$createElement","_this5","handleTypeChange","alt","stateFilter_StateFilter","areaFilter_AreaFilter","storeFilter_StoreFilter","liveOrderCount","customFilter_CustomFilter","createTaskModal","withRouter","DashboardComponent","z","place","searchData","dashboard","locationData","Dashboard_filter","dashboardList","defaultProps","connect","ownProps","dashboardReducer","headerReducer","isFilterLoaded","dispatch","actions","Dashboard","containers_Dashboard","GET_SUMMERY","GET_FEEDBACK","FEEDBACK_SEARCH","REPLY","listenGetSummerySuccess","listenGetSummeryError","listenGetFeedbackSuccess","listenGetFeedbackError","listenFeedbackSearchSuccess","listenFeedbackSearchError","replySuccess","replyError","get","arguments","undefined","config","Cookies","getJSON","set","remove","setCookie","setLifetimeCookie","expires","removeCookie","getCookie","ReplyModal","fields","replyModalShow","handleReply","handleValidation","_e$target","replyeData","org_email","cust_last_name","order_details","cust_first_name","tp_order_number","reply","starObj","activeFormBtn","_this$state","rate","rating","customerName","handleCloseModal","defaultValue","rows","isReplying","range","step","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","totalPages","paginationData","pageLimit","totalRecords","scrollTo","evt","handleMoveLeft","handleMoveRight","fetchPageNumbers","pageNeighbours","startPage","endPage","pages","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","_props$searchTag","searchTag","ceil","nextProps","TaskDetailsModal","orderDetailsModalShow","customerFeedback","responseToCustomer","List","repliedIds","filteredFeedbackData","ordObj","replyResult","task_id","totalFeedBack","feedbackSummeryData","total_feedback","feedbackSummery","feedBackCount","avgRating","ratingPrcnt","totalRatingPrcnt","el","percentage","avgStarObj","avgStarObj1","avgRatingObj","dec","whole","floor","fraction","r","newwhole","avgCustomerFeedback","s","toFixed","ProgressBar","feedback_count","handleCheckboxFilter","allRatings","filterByStart","isFiltering","handleOpenModal","time_stamp","replyModal","Feedbacks_taskDetailsModal","pagination","changePage","Calendar","noofdays","monthName","weekDaysArr","getMonthDays","prevMonth","nextMonth","selectDate","handleDateRange","outerClick","getMonth","getFullYear","calendar","node","days","endDate","subtract","onDateRange","week","selWeek","firstDate","firstDay","getDay","setDate","getDate","lastDate","lastDay","weekLastDate","getTime","chkCurrDate","day","currentDate","j","calendarArr","arr","slice","currentWeek","dateArr","some","allDays","currTimestamp","endTimestamp","tillDate","tillTimestamp","FeedBackAdvanceFilter","field","searchResultList","_this$props$searchFil","isSearching","FeedBackFilter","updateFeedbackSummery","makeSummeryFilterObj","AreaArray","StateArray","StoreArray","storeIds","skey","placeObj","areaIds","akey","area_id","getSummary","updateFeedbackList","makeFeedbackFilterObj","getFeedback","stateDropdownInput","areaDropdownInput","storeDropdownInput","onSelectStartDate","onSelectEndDate","handleFilterOutsideClick","filter_rating_by","order_by","advSearchData","feedbackSearch","savedFilterData","lodash","orderBy","storeList","user","selIndex","stateItem","areaItem","storeItem","calendar_Calendar","feedbackAdvanceFilter","FeedbackComponent","persist","feedbackData","sortedArray","makeFilterObj","feedbackFilter","list","GET_SETTINGS","AUTHENTICATE","getSettings","listenSettingsSuccess","listenSettingsError","listenAuthenticateSuccess","listenAuthenticateError","syncFilter","feedbackReducer","feedBackList","headerActions","dashboardActions","FeedBack","Feedbacks","GET_INFO","GET_STORES","UPDATE_PROFILE","CHANGE_PASS","ADD_LOCATION","EDIT_STORE","DELETE_STORE","GET_USER","ADD_USER","EDIT_USER","DELETE_USER","SUSPEND_USER","listenGetInfoError","listenGetInfoSuccess","getStores","listenStoresError","listenStoresSuccess","listenUpdateProfileError","listenUpdateProfileSuccess","listenChangePasswordError","listenChangePasswordSuccess","listenAddLocationError","listenAddLocationSuccess","listenEditStoreError","listenEditStoreSuccess","listenDeleteStoreError","listenDeleteStoreSuccess","listenGetUsersError","listenGetUserSuccess","listenAddUsersError","listenAddUserSuccess","listenEditUsersError","listenEditUserSuccess","listenDeleteUsersError","listenDeleteUserSuccess","listenSuspendUsersError","listenSuspendUserSuccess","Profile","handleProfileSubmit","show_report","updateProfile","changeHandle","defaultError","first_name","getInfo","profileData","ChangePassword","handleSubmit","conf_password","changePassword","password","property","edit","delete","EditLocation","handleAddressChange","invalidAddress","handleAddressSelect","place_id","fetch","response","json","res","timeZoneId","handleEditStore","selStore","editStore","Stores","deleteStore","storesList","Settings_contextMenu","editLocation","AddLocation","handleCreateLocation","addLocation","itemObj","handleShowUserModel","Users","userObj","usersList","userCount","activeUserCount","active_count","inActiveUserCount","inactive_count","users","userContextMenu","textTransform","AddUserModal","values","handleChecked","_e$target2","postData","updateUserData","addUserData","initialData","initialUserErrorData","FormFeedback","display","isUserUpdating","SettingComponent","handleShowLocation","select","getUsers","showUserModel","userAction","initialUserData","team","find","pick","confirmAlert","title","closeOnClickOutside","buttons","suspendUser","deleteUser","Modals_addLocation","isLocProcessing","addUserModal","addUser","editUser","profile_Profile","changePassword_ChangePassword","isPassProcessing","users_Users","isUserLoading","stores_Stores","isStoreLoading","isStoreProcessing","settingReducer","setting","Setting","Settings","GET_REPORT","GET_ORDER","GET_LATE_ORDER","SORT_LATE_ORDERS","listenGetReportError","listenGetReportSuccess","listenGetOrderError","listenGetOrderSuccess","sortLateOrders","listenLateOrders","listenLateOrdersSuccess","diff","getReport","fromDate","toDate","Reruns","objectDestructuringEmpty","rerunData","reportData","reRunOrders","rerun","chngRerunTotalPercent","chng_rerun_total_percent","esm_Col","total_rerun","react_custom_scrollbars_lib","store_name","order_count","DailyView","maxOrders","_this$props","showBy","ordersData","arrangeGraphData","apply","dailyArr","formattedDate","D","addrArr","join","slab","slabArr","TotalScore","reportTotal","chngTotOrdersPercent","chng_tot_orders_percent","chngShoppingLatePercent","chng_shopping_late_percent","MonthlyView","monthNameArray","monthlyTotalOrderArray","orderGrpedArray","_groupBy","orderObj","monthlyOrder","scaleY","guide","line-style","scaleX","max-labels","labels","plot","tooltip","font-family","font-size","line-height","font-weight","text-align","border-radius","background-color","box-shadow","callout","series","data-days","zingchart_react_es","LateOrdersModal","showDetails","backToList","lateOrder","pageno","pageChangeLateOrders","sortBy","showLateOrderModal","lateOrders","sortByValue","b","c","d","GetTableRows","lateClass","time_diff","customer_name","recpnt_task_start_time","driver_wait","OnTimeReport","getLateOrders","on_time_percentage","late_orders","late_percentage","viewBox","strokeDasharray","lateOrdersModal","ReportGrid","getOrder","handleOutsideClick","optOpen","showByTxt","totalScore","isOrderLoading","dailyView","monthlyView","esm_Row","reruns","onTimeReport","isLateOrderLoading","ReportComponent","selFilterData","show_by","stringify","reports","srchData","unsortedLateOrders","showReport","Reports_filter","reportGrid","reportReducer","report","Reports","containers_Reports","DO_LOGIN","listenLoginSuccess","listenLoginError","LoginForm","remember","doLogin","validateEmail","String","msg","typePass","handleRem","toggleShowpass","href","isSuccess","react_router_dom","loginData","isFetching","loginReducer","login","Login","containers_Login","FORGOT_PASSWORD","listenForgotPasswordSuccess","listenForgotPasswordError","ForgotPasswordForm","forgotPassword","forgotPasswordreset","forgotPasswordData","forgotPasswordReducer","ForgotPassword_forgotPassword","ForgotPassword","containers_ForgotPassword","RESET_PASSWORD","listenresetPasswordSuccess","listenresetPasswordError","RsetpasswordForm","confirmpassword","Confirmpass","resetPassword","passwordnotmatch","errMassage","resetPasswordReducer","resetPasswordData","ResetPassword_resetPassword","ResetPassword","Home","HeaderContainer","loginHeader","authenticate","token","authenticateData","isAuthenticateError","removeItem","removeDomainCookie","Container","fluid","xs","logo","image","header","containers_Header","toastModal","toastModalShow","Sidebar","querySelector","classList","toggle","innerWidth","add","handlecollapse","handleLogout","Modals_toastModal","Sidebar_Sidebar","GET_HISTORY","EXPORT_CSV_TASK_HISTORY","listenHistorySuccess","listenHistoryError","listenExportTaskCsvSuccess","listenExportTaskCsvError","handleGetHistory","handleFromChange","handleToChange","handleExportTaskCsv","value_one","value_two","getHistory","exportTaskCsv","_this$state2","getDayPicker","showMonth","showFromMonth","csvUrl","open","Location","filepath","taskHistory","taskCount","_this$state3","isTaskCsvExporting","StateWiseList","taskList","ZoneWiseList","completeafter","completebefore","TaskList","list_type","minHeight","TaskHistory_uncategorizedList_UncategorizedList","stateWiseList_StateWiseList","zoneWiseList_ZoneWiseList","TaskHistory","dateType","history","TaskHistory_filter","taskList_TaskList","taskHistoryReducer","isEditTaskProcessing","TaskHistory_taskHistory","containers_TaskHistory","exact","component","privateRoutes","Feedback","Router","newCookie","getDomainCookie","currentCookie","setItem","useLocation","pathname","Fragment","common_Header","common_Sidebar","react_router","PrivateRoute","rest","objectWithoutProperties","App","Boolean","initialState","LoginReducer","ForgotPasswordReducer","HomeReducer","settings","isTaskError","isTaskSuccess","isEditTaskError","isEditTaskSuccess","isDetailsError","isDetailsSuccess","isDetailsProcessing","isDeleteError","isDeleteSuccess","isDeleteProcessing","DashboardReducer","FeedbackReducer","SettingReducer","ReportReducer","arrangedTasks","combineReducers","baseAPIUrl","baseAPIUrl2","callApi","url","reqHeaders","Accept","Content-Type","Access-Control-Allow-Origin","Authorization","instance","axios","create","headers","bodydata","jsonrpc","ver","platform","brw","os","post","put","callApiV2","callOnFleetApi","do_login","watchLoginStore","rawdata","payload","regenerator_default","wrap","_context","prev","next","sent","loginAction","setDomainCookie","t0","stop","_marked","_context2","takeEvery","loginConstant","_marked2","forgot_password","watchForgotPasswordStore","forgotPasswordAction","Saga_marked","forgotPasswordConstant","Saga_marked2","reset_password","watchRsetPasswordStore","resetPasswordAction","ResetPassword_Saga_marked","takeLatest","resetpasswordConstant","ResetPassword_Saga_marked2","get_settings","watchHeaderStore","headerAction","Header_Saga_marked","Header_Saga_marked2","_context3","headerConstant","_marked3","watchDashboardStore","statesLocalStorage","all","dashboardAction","compact","Dashboard_Saga_marked","Dashboard_Saga_marked2","Saga_marked3","_context4","_marked4","_context5","_marked5","_context6","orderStatus","_marked6","_context7","cause","_marked7","_context8","valueOne","valueTwo","recipient_sig","timeCreated","mrchnt_notes","recpnt_notes","mrchnt_location","recpnt_location","_marked8","_data","_context9","_marked9","_context10","_marked10","_context11","dashboardConstant","_marked11","get_history","watchTaskHistoryStore","actionData","_temp","taskHistoryAction","TaskHistory_Saga_marked","TaskHistory_Saga_marked2","taskHistoryConstant","TaskHistory_Saga_marked3","watchFeedbackStore","feedbackAction","Feedbacks_Saga_marked","Feedbacks_Saga_marked2","Feedbacks_Saga_marked3","replyData","notifyinform","Saga_marked4","feedbackConstant","Saga_marked5","watchSettingStore","settingAction","Settings_Saga_marked","Settings_Saga_marked2","updatedData","Settings_Saga_marked3","Settings_Saga_marked4","Settings_Saga_marked5","Saga_marked6","Saga_marked7","actionId","Saga_marked8","Saga_marked9","Saga_marked10","Saga_marked11","_context12","_marked12","_context13","settingConstant","_marked13","watchReportStore","statsData","statsTotal","reportAction","Reports_Saga_marked","Reports_Saga_marked2","sortData","Reports_Saga_marked3","cust_name","zone_name","Reports_Saga_marked4","reportConstant","Reports_Saga_marked5","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","ReactDOM","render","es","src_App_0","navigator","serviceWorker","registration","unregister"],"mappings":"mRACaA,EAA+C,gBAK/CC,EAA+C,cAK/CC,EAA+C,YAK/CC,EAA+C,mBAK/CC,EAA+C,oBAK/CC,EAA+C,cAK/CC,EAA+C,qBAM/CC,EAA+C,cAK/CC,EAA+C,kBAK/CC,EAA+C,gBChB/CC,EAAe,SAACC,GAAD,MAAW,CACrCC,KAAMZ,EACNW,SAGWE,EAA4B,SAACF,GAAD,MAAW,CAClDC,KDnC0D,wBCoC1DD,SAGWG,EAA0B,SAACH,GAAD,MAAW,CAChDC,KDvC0D,sBCwC1DD,SAQWI,EAA0B,SAACJ,GAAD,MAAW,CAChDC,KD7C0D,sBC8C1DD,SAGWK,EAAwB,SAACL,GAAD,MAAW,CAC9CC,KDjD0D,oBCkD1DD,SAGWM,EAAW,SAACN,GAAD,MAAW,CACjCC,KAAMV,EACNS,SAGWO,EAAwB,SAACP,GAAD,MAAW,CAC9CC,KDvD0D,oBCwD1DD,SAGWQ,EAAsB,SAACR,GAAD,MAAW,CAC5CC,KD3D0D,kBC4D1DD,SAGWS,EAAkB,SAACT,GAAD,MAAW,CACxCC,KAAMR,EACNO,SAaWU,EAAiB,SAACV,GAAD,MAAW,CACvCC,KAAMT,EACNQ,SAGWW,EAA8B,SAACX,GAAD,MAAW,CACpDC,KDhF0D,2BCiF1DD,SAGWY,EAA4B,SAACZ,GAAD,MAAW,CAClDC,KDpF0D,yBCqF1DD,SAGWa,EAAa,SAACb,GAAD,MAAW,CACnCC,KAAMP,EACNM,SAGWc,EAA0B,SAACd,GAAD,MAAW,CAChDC,KDrF0D,sBCsF1DD,SAGWe,EAAwB,SAACf,GAAD,MAAW,CAC9CC,KDzF0D,oBC0F1DD,SAGWgB,EAAmB,SAAChB,GAAD,MAAW,CACzCC,KAAMN,EACNK,SAGWiB,EAAgC,SAACjB,GAAD,MAAW,CACtDC,KD/F0D,6BCgG1DD,SAGWkB,EAA8B,SAAClB,GAAD,MAAW,CACpDC,KDnG0D,2BCoG1DD,SAGWmB,EAAc,SAACnB,GAAD,MAAW,CACpCC,KDrG0D,oBCsG1DD,SAGWoB,EAAS,SAACpB,GAAD,MAAW,CAC/BC,KAAML,EACNI,SAGWqB,EAAsB,SAACrB,GAAD,MAAW,CAC5CC,KD7G0D,sBC8G1DD,SAGWsB,EAAoB,SAACtB,GAAD,MAAW,CAC1CC,KDjH0D,oBCkH1DD,SAGWuB,EAAiB,SAACvB,GAAD,MAAW,CACvCC,KAAMJ,EACNG,SAGWwB,EAA2B,SAACxB,GAAD,MAAW,CACjDC,KDvH0D,0BCwH1DD,SAGWyB,EAAyB,SAACzB,GAAD,MAAW,CAC/CC,KD3H0D,wBC4H1DD,uDCrKE0B,kBAAoB,SACpBC,GAAoB,SAMxB,IAAIC,GAAoB,GACpBC,GAAoB,GACpBC,GAAoB,GA0BpBF,GAAoB,CAChBG,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,cAAe,2BACfC,kBAAmB,eACnBC,UAAW,gBAEfP,GAAoB,CAChBQ,OAA8B,oBAC9BC,SAAU,mCAEdR,GAAoB,CACR,CAACS,GAAG,KAAKC,MAAM,cAEf,CAACD,GAAG,KAAKC,MAAM,WAQ/B,IAWeC,GAXS,CACpBC,MAAgB,WAChBC,WAAc,CACVC,aAAe,KAEnBlB,OAAQA,GACRC,QAASA,GACTC,SAASiB,OAAAC,EAAA,EAAAD,CAAA,GAAKjB,IACdC,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GAAKhB,IACZC,OAAQA,ICjERiB,IAAc,EAClBnB,KAASoB,cAAeP,GAAOb,WAEnB,IAATmB,KAEDnB,KAASqB,OAAOC,oBAChBH,IAAO,GAGF,IAAMI,GAAevB,KAASwB,gBACTxB,KAASwB,4BCd9B,SAASC,GAAWC,GACvB,OAAOC,KAAOD,GAAME,OAAO,uBAGxB,SAASC,GAAYC,EAAWC,EAAIH,GACvC,OAAOD,KAAOI,GAAGD,EAAWC,GAAIH,OAAOA,GAGpC,SAASI,GAAeF,EAAWF,GACtC,OAAOD,KAAOG,GAAWF,OAAOA,GA8D7B,IAIMK,GAAyB,SAASC,GAC7C,QAASC,KAAKC,MAAMF,EAAM,OAAS,QC8d9B,IAAMG,GAAkB,SAACC,GAC5B,IACE,IAAIC,EAAQ,uCAERC,EAAUF,EAAIG,MAAMF,GAExB,GAAGC,EAAQ,GAAGE,QAAQ,MAAQ,GAAKF,EAAQ,GAAGE,QAAQ,MAAQ,EAAE,CAC9D,IAAIC,EAAmBH,EAAQ,GAAG,KAAMA,EAAQ,GAAK,IAAKA,EAAQA,EAAQI,OAAQ,GAC9EC,EAAaF,EAAiB,QAClC,GAAG,wCAAwCG,KAAKD,GAAY,CAC1D,IAAIE,EAAWF,EAAWJ,MAAMF,GAEhC,MAAO,CACLS,WAAW,EACXL,iBAAkBA,EAClBH,QAASK,EACTI,OAAQF,EAAS,GACjBG,OAAQH,EAAS,GACjBI,KAAMJ,EAAS,GACfK,QAAS,gBACTC,WAAYN,EAAS,GACrBO,QAASP,EAASA,EAASH,OAAQ,IAGrC,MAAO,CACLI,WAAW,GAKf,MAAO,CACLA,WAAW,EACXL,iBAHqBH,EAAQ,GAAK,IAAMA,EAAQ,GAAK,KAAMA,EAAQ,GAAK,KAAOA,EAAQ,GAAK,IAAMA,EAAQA,EAAQI,OAAQ,GAI1HJ,QAASF,EACTW,OAAQT,EAAQ,GAChBU,OAAQV,EAAQ,GAChBW,KAAMX,EAAQ,GACdY,QAAS,gBACTC,WAAYb,EAAQ,GACpBc,QAASd,EAAQA,EAAQI,OAAQ,IAGrC,MAAMW,GAEN,OADAC,QAAQC,IAAIF,GACL,CACLP,WAAW,KAOZ,SAASU,GAAeC,GAC3B,IAAIC,EAAmB,GACvB,OAAOD,GACH,IAAI,aACAC,EAAe,iBACnB,MACA,IAAI,YACAA,EAAe,eACnB,MACA,IAAI,YACAA,EAAe,gBACnB,MACA,IAAI,YACAA,EAAe,gBACnB,MACA,IAAI,UACAA,EAAe,cACnB,MACA,QACIA,EAAe,iBAGvB,OAAOA,EAGJ,SAASC,GAAcF,GAmB1B,MAjBc,iBAAXA,EACyB,YACP,oBAAXA,EACkB,YACP,iBAAXA,GAAwC,wBAAXA,EACX,YACP,iBAAXA,EACkB,aACP,YAAXA,EACkB,YACP,gBAAXA,EACkB,UACP,eAAXA,EACkB,UAEA,YAKzB,SAASG,GAAkBC,EAAeC,EAAgBC,GAC7D,IAAIC,EAAYrC,GAAsC,IAA1BsC,SAASJ,GAAuBE,EAAW,qBACnEG,EAAYvC,GAAuC,IAA3BsC,SAASH,GAAwBC,EAAW,UACxE,SAAAI,OAAUH,EAAV,OAAAG,OAAmBD,2BC9oBVE,WAAU,SAACC,GACvBC,KAAE,WAAWC,OAAO,QAEpBD,KAAE,WAAWE,YAAY,UAAUA,YAAY,SAASA,YAAY,WAAWC,SAAS,WACxFH,KAAE,WAAWI,KAAKL,EAAKM,SACvBC,WAAW,WACVN,KAAE,WAAWO,QAAQ,SACnB,OAGSC,GAAQ,SAACT,GACrBC,KAAE,WAAWC,OAAO,QACpBD,KAAE,WAAWE,YAAY,UAAUA,YAAY,WAAWA,YAAY,WAAWC,SAAS,SAC1FH,KAAE,WAAWI,KAAKL,EAAKM,SACvBC,WAAW,WACVN,KAAE,WAAWO,QAAQ,SACnB,MAYSE,GAAS,SAACV,GACtBC,KAAE,WAAWC,OAAO,QACpBD,KAAE,WAAWE,YAAY,SAASA,YAAY,WAAWA,YAAY,WAAWC,SAAS,UACzFH,KAAE,WAAWI,KAAKL,EAAKM,SACvBC,WAAW,WACVN,KAAE,WAAWO,QAAQ,SACnB,MC6EWG,eA7GX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAJ,IACfE,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAiE,GAAAO,KAAAH,KAAMH,KACDO,MAAe,CAChBC,SAAgB,EAChBC,EAAgB,EAChBC,EAAgB,GAEpBT,EAAKU,WAAaC,IAAMC,YACxBZ,EAAKa,eAAuBb,EAAKa,eAAeC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAKgB,WAAuBhB,EAAKgB,WAAWF,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KATbA,8EAYJiB,EAAMC,EAAgBC,EAAgBC,GAQjDlB,KAAKH,MAAMc,eAAeI,EAAMC,EAAgBC,sCAGzCF,EAAM1C,EAAQ6C,GACrBhD,QAAQC,IAAI,iBAAkB+C,GACZ,cAAfA,EACClB,KAAKH,MAAMiB,WAAWC,EAAM1C,GAG5B8C,GAAc,CAAC5B,QAAO,sBAAAR,OAAwBmC,EAAxB,wDAK1B,IAAIE,EAAoBpB,KACxBqB,SAASC,iBAAiB,QAAS,SAASC,GACxCA,EAAMC,kBACNJ,EAAKvB,MAAM4B,sEAUO5B,GAEtBG,KAAK0B,SAAS,CACVrB,QAAgBR,EAAMQ,QACtBC,EAAgBT,EAAMS,EACtBC,EAAgBV,EAAMU,EACtBoB,SAAgB9B,EAAM8B,0DAK1BN,SAASO,oBAAoB,QAAS,+CAKjC,IAAAC,EAAA7B,KACD8B,EAAgB,CAChBC,SAAgB,WAChBC,IAAA,GAAAjD,OAAmBiB,KAAKI,MAAMG,EAA9B,MACA0B,KAAA,GAAAlD,OAAmBiB,KAAKI,MAAME,EAAE,EAAhC,OAEA4B,EAAoBlC,KAAKH,MAAM8B,UAAY,GAEaO,EAAMC,aAalE,OACMC,kBAAQpC,KAAKH,MAAM8B,UAoBZ,KAnBTU,EAAAC,EAAAC,cAAA,OAAKlH,GAAG,QAAQmH,IAAKxC,KAAKQ,YAElBR,KAAKI,MAAMC,QACXgC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBpH,GAAG,OAAOqH,MAAOZ,GAC7CO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAf,UAAA1D,OAAgDmD,EAAMC,eACtDE,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAM+C,kBAAkBV,EAAMW,cAAjH,aACAR,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAMiD,cAAcZ,EAAMW,cAA7G,YACAR,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKlB,eAAeuB,EAAMW,WAAYX,EAAMlB,eAAgBkB,EAAMjB,eAAgBiB,EAAMhB,cAAtK,aACAmB,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAMlG,WAAWuI,EAAMW,cAA1G,eACAR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBAAf,gBAEIJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIzJ,KAAK,qBAAqB6J,QAAS,kBAAMd,EAAKf,WAAWoB,EAAMW,WAAY,IAAKX,EAAMhB,cAA1F,SACAmB,EAAAC,EAAAC,cAAA,MAAIzJ,KAAK,qBAAqB6J,QAAS,kBAAMd,EAAKf,WAAWoB,EAAMW,WAAY,IAAKX,EAAMhB,cAA1F,uBAIV,aAxGM6B,oHCmpBbC,eAtoBX,SAAAA,EAAYnD,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAgD,IACflD,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAqH,GAAA7C,KAAAH,KAAMH,KA6BVoD,aAAe,SAAC7G,GACZ0D,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CACJC,cAAmB/G,OAjCZ0D,EAsCnBsD,qBAAuB,SAAAC,GAEnBvD,EAAK4B,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAmE,EAAKM,MAAMkD,OADZ,CAEFD,iBAAoBA,EAAoB,GAAK,kCAEjDA,iBAAiBA,KA7CNvD,EAiDnByD,aAAe,SAAAC,GAEX1D,EAAK4B,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAmE,EAAKM,MAAMkD,OADZ,CAEFE,kBAAqBA,EAAqB,GAAK,mCAEnDA,kBAAoBA,KAxDT1D,EA4DnB2D,aAAe,SAAAD,GACX,IAAIpC,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACPkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAEb0G,4BAAiBJ,GAChBK,KAAK,SAACC,GAGH,OADAhL,EAAKoE,QAAU4G,EAAQ,GAAGC,mBAAqB,GACxCC,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAI,GAAkB,IAAfC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,IAGV,GADe,wCACH3G,KAAK1E,EAAKoE,SAAS,CACV4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,SACxCgB,QAAQC,IAAI,aAAcrF,EAAKoE,QAASmH,IACpCjC,kBAAQiC,IAAiBA,EAAa3G,WACtC5E,EAAK4K,SAAWQ,EAChBpL,EAAK6K,UAAYQ,EACjBrL,EAAKoE,QAAUmH,EAAanH,QAC5BpE,EAAKkF,QAAUqG,EAAarG,QAC5BlF,EAAKiF,WAAasG,EAAatG,WAC/BjF,EAAK+E,KAAOwG,EAAaxG,KACzB/E,EAAKgF,QAAUuG,EAAavG,QAC5BhF,EAAK6E,OAAS0G,EAAa1G,OAC3B7E,EAAK8E,OAASyG,EAAazG,OAI3BwD,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF8D,kBAAkB,KAEtBc,mBAAoBxL,EACpB0K,kBAAmB1K,EAAKoE,YAG5BqH,GAAY,oEACZnD,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF8D,kBAAkB,oBAEtBc,mBAAoB,WAK5BC,GAAY,oEACZnD,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF8D,kBAAkB,oBAEtBc,mBAAoB,OAK/BE,MAAM,SAAA9E,GACH0B,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF8D,kBAAkB,oBAEtBc,mBAAoB,KAExBpG,QAAQC,IAAI,QAASuB,MAtIVI,EA0InB2E,qBAAuB,SAAApB,GACnB,IAAIjC,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACPkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAEb0G,4BAAiBP,GAChBQ,KAAK,SAACC,GAEH,OADAhL,EAAKoE,QAAU4G,EAAQ,GAAGC,mBAAqB,GACxCC,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAa,GAAkB,IAAfR,EAAeQ,EAAfR,IAAKC,EAAUO,EAAVP,IAGV,GADe,wCACH3G,KAAK1E,EAAKoE,SAAS,CACV4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,UACpCkF,kBAAQiC,IAAiBA,EAAa3G,WACtC5E,EAAK4K,SAAWQ,EAChBpL,EAAK6K,UAAYQ,EACjBrL,EAAKoE,QAAUmH,EAAanH,QAC5BpE,EAAKkF,QAAUqG,EAAarG,QAC5BlF,EAAKiF,WAAasG,EAAatG,WAC/BjF,EAAK+E,KAAOwG,EAAaxG,KACzB/E,EAAKgF,QAAUuG,EAAavG,QAC5BhF,EAAK6E,OAAS0G,EAAa1G,OAC3B7E,EAAK8E,OAASyG,EAAazG,OAC3BwD,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF2D,iBAAiB,KAErBsB,kBAAmB7L,EACnBuK,iBAAkBvK,EAAKoE,WAG3BkE,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF2D,iBAAiB,oBAErBsB,kBAAmB,UAK3BvD,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF2D,iBAAiB,oBAErBsB,kBAAmB,OAK9BH,MAAM,SAAA9E,GACH0B,EAAKM,SAAS,CACV4B,OAAO3H,OAAAC,EAAA,EAAAD,CAAA,GACAyF,EAAKhB,MAAMV,MADZ,CAEF2D,iBAAiB,oBAErBsB,kBAAmB,KAEvBzG,QAAQC,IAAI,QAASuB,MA7MVI,EAiNnB8E,aAAe,SAAAxI,GACX0D,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAMmE,EAAKM,MAAM8C,SAAlB,CAA4BC,cAAe/G,OAnNxC0D,EAuNnB+E,gBAAkB,SAAC5G,GAEfA,EAAE6G,2BACF5G,QAAQC,IAAI,sBAxNZ2B,EAAKM,MAAuB,CACzB2E,MAA6B,EAC7BC,SAA6B,EAC7BC,WAA6B,EAC7BC,UAA6B,GAC7BhC,SAA6B,GAC7BiC,UAA6B,IAAIC,KACjCC,aAA6B,GAC7Bf,mBAA6B,GAC7BK,kBAA6B,GAC7BW,cAA6B,EAC7BhC,OAAO,CACHD,iBAAiB,GACjBG,kBAAkB,GAClBL,cAAc,GACdoC,cAAc,GACdC,IAAI,KAGX1F,EAAK2F,YAA2B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK4F,eAA2B5F,EAAK4F,eAAe9E,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK6F,aAA2B7F,EAAK6F,aAAa/E,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK8F,eAA2B9F,EAAK8F,eAAehF,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKyD,aAA2BzD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKsD,qBAA2BtD,EAAKsD,qBAAqBxC,KAA1BjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK8E,aAA2B9E,EAAK8E,aAAahE,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA3BjBA,mFA8NfuB,SAASC,iBAAiB,QAAStB,KAAK6E,mEAGlBhF,GAYtB,GALGA,EAAMyF,eAAiBtF,KAAKH,MAAMyF,cACjCtF,KAAK0B,SAAS,CACV4D,cAAc,KAGlBlD,kBAAQvC,EAAMwF,gBAAkBQ,kBAAQ7F,KAAKI,MAAMiF,aAAcxF,EAAMwF,cAAe,CACtFrF,KAAK8F,QAAmB9F,KAAK+F,OAAOlG,EAAMwF,aAAaW,WAAYnG,EAAMwF,aAAaY,UACtF,IAAIV,EAAuBvF,KAAK8F,QAAQI,MAAUlG,KAAKI,MAAM8C,SAASqC,cAAiBvF,KAAK8F,QAAQI,IAAM,GAC1GlG,KAAK0B,SAAS,CACV2D,aAAgBxF,EAAMwF,aACtBnC,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFqE,KAAKI,MAAM8C,SADV,CACoBqC,cAAeA,MAInD,IAAIM,kBAAQhG,EAAMsG,YAAanG,KAAKH,MAAMsG,eAAiB/D,kBAAQvC,EAAMsG,aAAc,CACnF,IAAIA,EAAgBtG,EAAMsG,aAAe,GACrCC,EAAY,YACa,iBAA1BD,EAAYC,UACXA,EAAY,YACoB,oBAA1BD,EAAYC,UAClBA,EAAY,YACoB,iBAA1BD,EAAYC,WAA6D,wBAA7BD,EAAYE,aAC9DD,EAAY,YACoB,iBAA1BD,EAAYC,UAClBA,EAAY,aACoB,YAA1BD,EAAYC,UAClBA,EAAY,YACoB,gBAA1BD,EAAYC,UAClBA,EAAY,UACoB,eAA1BD,EAAYC,YAClBA,EAAY,WAGC,cAAdA,IACCjF,GAAc,CAAC5B,QAAO,sBAAAR,OAAwBqH,EAAxB,YACtBpG,KAAKyF,eAGT,IAAIa,EAAwB/J,GAAyD,IAA7CsC,SAASgB,EAAMsG,YAAYzH,gBAAwBmB,EAAMsG,YAAYxH,UAAW,WACpH4H,EAAwBhK,GAAwD,IAA5CsC,SAASgB,EAAMsG,YAAY1H,eAAuBoB,EAAMsG,YAAYxH,UAAW,WAEnH6H,EAAwBnK,KAAOI,GAA+C,IAA5CoC,SAASgB,EAAMsG,YAAY1H,eAAuBoB,EAAMsG,YAAYxH,WACtG8H,EAAwBD,EAASlK,OAAO,QACxCoK,EAAwBF,EAASlK,OAAO,MAC5CoK,GAAoC,EACpC,IAAItK,EAAwBoK,EAASlK,OAAO,MACxC6G,EAAwB,IAAIiC,KAAKqB,EAAMC,EAAOtK,GAGlD4D,KAAK0B,SAAS,CACViF,SAAU9G,EAAMsG,YAAYQ,SAC5BC,WAAY/G,EAAMsG,YAAYS,WAC9BpD,kBAA2B3D,EAAMoB,eAAkBpB,EAAMoB,eAAiB,GAC1EoC,iBAA2BxD,EAAMmB,eAAkBnB,EAAMmB,eAAiB,GAC1ErC,UAAwBkB,EAAMsG,YAAYxH,UAC1CuE,SAAW,CACP2D,eAA2BhH,EAAMsG,YAAYQ,UAAc9G,EAAMsG,YAAYQ,SAASG,MAASjH,EAAMsG,YAAYQ,SAASG,MAAQ,GAClIC,gBAA2BlH,EAAMsG,YAAYS,YAAgB/G,EAAMsG,YAAYS,WAAWE,MAASjH,EAAMsG,YAAYS,WAAWE,MAAQ,GACxItB,IAAwB3F,EAAMsG,YAAYX,IAC1CrC,cAAwBA,EACxBoC,cAAwBgB,EAAW,IAAMD,4CAYrDtG,KAAK0B,SAAS,CAACqD,MAAM,IACrB/E,KAAKH,MAAM4F,6CAGRuB,EAAOC,GASX,IAPA,IAAIC,EAAQ7K,OAASC,OAAO,cACxB6K,EAAM9K,OAAS+K,OAEflB,EAAM,GACNmB,EAAahL,KAAO6K,EAAM,IAAIF,EAAO,mBAAmBI,OACxDE,EAAajL,KAAO6K,EAAM,IAAID,EAAK,mBAAmBG,OACtDtO,EAAO,GACHyO,EAAEF,EAAYE,EAAED,EAAYC,GAL1B,KAMPzO,EAAK0O,KAAK,CACPC,EAAGpL,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAP5C,OAOyDjL,OAAO,aAEpE6K,GAAOI,GAAKJ,GAAOI,EATf,OAUJrB,EAAM7J,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAV/C,OAU4DjL,OAAO,YAG7E,MAAO,CAACxD,KAAKA,EAAMoN,IAAKA,+BAGvB9J,EAAMsL,EAAMjL,GACZ,IAAIkL,EAAWtL,KAAOD,GAAME,OAAO,cAAc,IAAIoL,EACrD,OAAOrL,KAAOI,GAAGkL,EAAU,qBAAsBlL,GAAImL,MAAMR,8CAGhDnJ,GAAG,IAAA4D,EAAA7B,KAId,GAHA/B,EAAE4J,kBAC0B7H,KAAK2F,eAElB,CACX,IAAIzC,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAoBqE,KAAKI,MAAM8C,UACvC4E,EAAwB9H,KAAKI,MAAMzB,UACnC+I,EAAwBxE,EAASqC,cAAcwC,MAAM,KACrDC,EAAwBN,EAAK,GAC7BO,EAAwBP,EAAK,GAC7BjJ,EAAwBuB,KAAK4H,IAAI1E,EAASC,cAAgB6E,EAAWF,GACrEpJ,EAAwBsB,KAAK4H,IAAI1E,EAASC,cAAe8E,EAASH,GAClEI,EAAwBlI,KAAKI,MAAMkE,oBAAsB,GACzDqC,EAAwB3G,KAAKI,MAAMuE,mBAAqB,GACxD7L,EAAwB,GAC5BA,EAAK+N,eAAuB3D,EAAS2D,gBAAkB,GACvD/N,EAAKiO,gBAAuB7D,EAAS6D,iBAAmB,GACxDjO,EAAKqP,eAAuB1J,GAAiB,GAC7C3F,EAAKsP,gBAAuB1J,GAAkB,GAC9C5F,EAAK0M,IAAuBtC,EAASsC,KAAO,EACxCpD,kBAAQ8F,KACRpP,EAAKoP,UAAmB,CACpBG,SAAoB,CAACH,EAAUvE,UAAWuE,EAAUxE,UACpDxG,QAAoB,CAChBkD,MAAgB8H,EAAUnK,WAC1BuK,WAAgBJ,EAAUlK,QAC1BF,QAAgBoK,EAAUpK,QAC1BD,KAAgBqK,EAAUrK,KAC1BD,OAAgBsK,EAAUtK,OAC1BD,OAAgBuK,EAAUvK,UAKlCyE,kBAAQuE,KACR7N,EAAK6N,SAAkB,CACnB0B,SAAoB,CAAC1B,EAAShD,UAAWgD,EAASjD,UAClDxG,QAAoB,CAChBkD,MAAgBuG,EAAS5I,WACzBuK,WAAgB3B,EAAS3I,QACzBF,QAAgB6I,EAAS7I,QACzBD,KAAgB8I,EAAS9I,KACzBD,OAAgB+I,EAAS/I,OACzBD,OAAgBgJ,EAAShJ,QAE7B4K,SAAoBvI,KAAKH,MAAMsG,YAAYoC,WAGnDvI,KAAK0B,SAAS,CAAC4D,cAAc,IAC7BtF,KAAKH,MAAMzG,SAAS,CAAC2H,KAAMf,KAAKH,MAAMsG,YAAYpF,KAAMyH,OAAQ1P,IAChE0G,WAAW,WACPqC,EAAK4D,eACN,6CAKP,IAAIvC,EAAgClD,KAAKI,MAAM8C,UAAY,GACvDI,EAAgCtD,KAAKI,MAAMkD,QAAU,GACrDmF,GAAgC,EAqCpC,OAnCKnF,EAAOD,kBAAsBC,EAAOE,qBACrCiF,GAAgC,GAG9BvF,EAASC,gBACXG,EAAOH,cAAyB,iCAChCsF,GAAgC,GAG9BvF,EAASqC,gBACXjC,EAAOiC,cAAyB,iCAChCkD,GAAgC,GAG9BzI,KAAKI,MAAMiD,mBAAsBC,EAAOD,mBAC1CC,EAAOD,iBAAyB,gCAChCoF,GAAgC,GAG9BzI,KAAKI,MAAMoD,oBAAuBF,EAAOE,oBAC3CF,EAAOE,kBAAyB,iCAChCiF,GAAgC,GAQ/BvF,EAASsC,KAAOkD,MAAMxF,EAASsC,OAChClC,EAAOkC,IAAyB,8BAChCiD,GAAgC,GAGpCzI,KAAK0B,SAAS,CAAC4B,OAAOA,EAAQmF,QAASA,IAChCA,yCAGIxK,GACX,IACIiF,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAyBqE,KAAKI,MAAM8C,UAC1CyF,EAA0B1K,EAAE2K,OAAOD,KACnCrN,EAAuB2C,EAAE2K,OAAOtN,MACtC4H,EAASyF,GAAuBrN,EAChC,IAAIgI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAA0BqE,KAAKI,MAAMkD,QAC/CA,EAAOqF,GAAyB,GAChC3I,KAAK0B,SAAS,CAAEwB,SAAUA,EAAUI,OAAQA,qCAK5C,IAAI6C,EAA4BnG,KAAKH,MAAMsG,aAAe,GACtDpB,EAA4B/E,KAAKH,MAAMkF,OAAQ,EAC/CzB,EAA4BtD,KAAKI,MAAMkD,QAAU,GAC/CuF,EAAwD,KAA5BvF,EAAOD,iBAA4B,KAAOC,EAAOD,iBAC7EyF,EAAyD,KAA7BxF,EAAOE,kBAA6B,KAAOF,EAAOE,kBAC9EuF,EAAqD,KAAzBzF,EAAOH,cAAyB,KAAOG,EAAOH,cAC1E6F,EAAqD,KAAzB1F,EAAOiC,cAAyB,KAAOjC,EAAOiC,cAC1E0D,EAA2C,KAAf3F,EAAOkC,IAAe,KAAOlC,EAAOkC,IAClEtC,EAA4BlD,KAAKI,MAAM8C,UAAY,GAEnD4C,EAA+B9F,KAAK8F,SAAa9F,KAAK8F,QAAQhN,KAAQkH,KAAK8F,QAAQhN,KAAO,GAC1FoQ,GAAwB,GACvBL,GACIC,GACAC,GACAC,GACAC,KACLC,GAAwB,GAG5B,IAAMC,EAAe,CACjBC,MAAO,CACHC,MAAO,QACPC,QAAS,oBACTC,MAAO,OACPC,OAAO,KAEXC,sBAAuB,CACnBC,aAAc,cACdC,OAAQ,MACRC,WAAY,iEACZ7H,SAAU,WACV8H,OAAQ,oBACRC,UAAU,mCAEdC,iBAAiBpO,OAAAqO,GAAA,EAAArO,CAAA,CACbsO,UAAW,OACXC,SAAU,OACVZ,QAAS,mBACTa,WAAW,OACXZ,MAAO,OACPK,WAAY,gBACZJ,OAAQ,IACRY,UAAU,OACVC,aAAc,kBATF,aAUA,mEAEhBC,uBAAwB,CAAEf,MAAO,YAIrC,OACMnH,kBAAQpC,KAAKH,MAAMsG,aAgJnB,KA/IF9D,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAU3J,KAAK,qBAAqBiM,KAAMA,EAAM0F,OAAQzK,KAAKH,MAAM4F,aAC1FpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,mBAEJ6G,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAK0F,gBACjBrD,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,iBACA9I,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CAAYG,UAAS,QAAA1D,OAAagK,EAAqB,SAAW,IAAOsC,SAAUnI,EAASC,cAAemI,SAAUtL,KAAK4E,aAAc2G,QAAS,IAAInG,KAAQoG,gBAAgB,WAEjLnJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,QAAf,QACA9I,EAAAC,EAAAC,cAAA,UAAQE,UAAS,QAAA1D,OAAaiK,EAAqB,SAAW,IAAML,KAAK,gBAAgB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqC,eACpIlD,EAAAC,EAAAC,cAAA,+BAEKuD,GAAW,IAAI2F,IAAI,SAACC,EAAGC,GACpB,OACItJ,EAAAC,EAAAC,cAAA,UAAQ2D,IAAKyF,EAAGrQ,MAAOoQ,EAAEjE,GAAIiE,EAAEjE,MAK9CuB,GAAqB3G,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAeuG,IAGlD7C,EAAYyF,UA4CP,KA3CTvJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,oBACA9I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACIhH,MAAO0E,KAAKI,MAAMiD,iBAAiByI,WACnCR,SAAUtL,KAAKoD,qBACf2I,SAAU/L,KAAKyE,qBACfuH,OAAQ7C,GAGJ,SAAA8C,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,YAAaC,EAA/BH,EAA+BG,uBAAwBC,EAAvDJ,EAAuDI,QAAvD,OACAhK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI2J,EAAc,CACdI,YAAa,gBACb7J,UAAaoG,EAAwB,cAAgB,WAGzDxG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OAC3B,0BACA,kBAEI9J,EAAQ6J,EAAWC,OACvB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WACxC,OACArK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,YAAOgK,EAAWI,qBAYtCxG,EAAYyF,UA4CP,KA3CTvJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,qBACA9I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACIhH,MAAO0E,KAAKI,MAAMoD,kBAAkBsI,WACpCR,SAAUtL,KAAKuD,aACfwI,SAAU/L,KAAKyD,aACfuI,OAAQ7C,GAGJ,SAAAyD,GAAA,IAAGV,EAAHU,EAAGV,cAAeC,EAAlBS,EAAkBT,YAAaC,EAA/BQ,EAA+BR,uBAAwBC,EAAvDO,EAAuDP,QAAvD,OACAhK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI2J,EAAc,CACdI,YAAa,gBACb7J,UAAaqG,EAAyB,cAAgB,WAG1DzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OAC3B,0BACA,kBAEI9J,EAAQ6J,EAAWC,OACvB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WACxC,OACArK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,YAAOgK,EAAWI,qBAW9CtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,OAAf,OACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,OAAO7J,UAAS,QAAA1D,OAAakK,EAAW,SAAW,IAAMN,KAAK,MAAM2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASsC,MACjJyD,GAAW5G,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eAAewG,IAEhD5G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,kBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,iBAAiB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS2D,kBAE9GxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,mBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,kBAAkB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS6D,sBAK3H1E,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAASgU,SAAU7D,KAAgBlJ,KAAKI,MAAMkF,aAAc7C,UAAazC,KAAKI,MAAMkF,cAAiB4D,EAAyB,GAAX,SAAe8D,QAAQ,WAC/IhN,KAAKI,MAAMkF,aAAgB,eAAiB,oBA9nBrDvC,kCCDjBkK,WAAa,CACfC,kBAAmB,CAEjBC,WAAY,CAAEC,IAAK,IAAMC,IAAK,KAC9BC,MAAO,GAETC,QAAS,CACPJ,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,GAETE,OAAQ,CACNL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,GAETG,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,KAIJ,SAASI,GAAWvH,GACzB,IACIwH,GADwBxH,EAAYyH,mBAAqB,IACfD,QAAU,GACpDE,EAAwBF,EAAOG,mBAAqB,GACxDD,EAA+BA,EAAeA,EAAY9F,MAAM,KAAO,GACvE,IAAIgG,EAAwBJ,EAAOK,mBAAqB,GACxDD,EAA+BA,EAAeA,EAAYhG,MAAM,KAAO,GACvE,IAAIkG,EAAwBN,EAAOO,kBAAoB,GACnDC,EAAwBR,EAAOS,kBAAoB,GACnDC,EAAwB,yCAC5B,OACMjM,kBAAQ+D,GA8OR9D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,cA7OFJ,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACAxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC9BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA4B4D,EAAYpF,MACxCsB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAAH,IAAgChE,GAAc4H,EAAYC,YAC1D/D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAH,IAAoC/D,GAAkB2H,EAAY1H,cAAe0H,EAAYzH,eAAgByH,EAAYxH,YACzH0D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAAH,IAAiC4D,EAAYmI,eAGrDjM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,2BACG4D,EAAYQ,SACXtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAAwBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAASgC,MAApD,MACAtG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAAS4H,QACpDlM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAuBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAASzJ,QAAQS,OAApC,KAA8CwI,EAAYQ,SAASzJ,QAAQU,OAA3E,KAAqFuI,EAAYQ,SAASzJ,QAAQoL,WAAlH,KAAgInC,EAAYQ,SAASzJ,QAAQW,KAA7J,KAAqKsI,EAAYQ,SAASzJ,QAAQkD,MAAlM,KAA2M+F,EAAYQ,SAASzJ,QAAQY,UAClQuE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,YAAQ4D,EAAYQ,SAASG,MAA7B,OACrB,OAIfzE,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC9BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,4BACG4D,EAAYQ,SACftE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAAwBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW+B,OACtDtG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW2H,QAEhDpI,EAAYqI,aACfnM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYqI,eAA2B,KAE3EnM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAuBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW1J,QAAQS,OAAtC,KAAgDwI,EAAYS,WAAW1J,QAAQU,OAA/E,KAAyFuI,EAAYS,WAAW1J,QAAQoL,WAAxH,KAAsInC,EAAYS,WAAW1J,QAAQW,KAArK,KAA6KsI,EAAYS,WAAW1J,QAAQkD,MAA5M,KAAqN+F,EAAYS,WAAW1J,QAAQY,UAC9QuE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAWE,QAEvDzE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA2BF,EAAAC,EAAAC,cAAA,YAAU4D,EAAYnB,QAAW,MAAQ,OACpE3C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAoBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYX,OACvC,QAKfnD,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,iBAC/BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,4BACIF,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAAH,IAAgC4D,EAAYsI,gBAIpDpM,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAERkL,EAAOe,2BACVrM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,kCACChG,GAAiD,IAApCoR,EAAOe,2BAAoCvI,EAAYwI,SAAU,uBAC5E,KAGJhB,EAAOiB,gBACVvM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,6BACChG,GAAsC,IAAzBoR,EAAOiB,gBAAyBzI,EAAYwI,SAAU,uBACjE,KAGJhB,EAAOkB,eACVxM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,uBACChG,GAAqC,IAAxBoR,EAAOkB,eAAwB1I,EAAYwI,SAAU,uBAChE,KAGJhB,EAAOmB,aACVzM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,2BACChG,GAAmC,IAAtBoR,EAAOmB,aAAsB3I,EAAYwI,SAAU,uBAC9D,KAGJhB,EAAOoB,iBACV1M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,yBACChG,GAAuC,IAA1BoR,EAAOoB,iBAA0B5I,EAAYwI,SAAU,uBAClE,KAGJhB,EAAOqB,kBACV3M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACChG,GAAwC,IAA3BoR,EAAOqB,kBAA2B7I,EAAYwI,SAAU,uBACnE,KAGJhB,EAAOsB,qBACV5M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACCoL,EAAOsB,sBACL,OAIf5M,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAERkL,EAAOuB,gBACV7M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,uBACChG,GAAsC,IAAzBoR,EAAOuB,gBAAyB/I,EAAYwI,SAAU,uBACjE,KAGJhB,EAAOwB,cACV9M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,2BACChG,GAAoC,IAAvBoR,EAAOwB,cAAuBhJ,EAAYwI,SAAU,uBAC/D,KAGJhB,EAAOyB,kBACV/M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,yBACChG,GAAwC,IAA3BoR,EAAOyB,kBAA2BjJ,EAAYwI,SAAU,uBACnE,KAGJhB,EAAO0B,mBACVhN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACChG,GAAyC,IAA5BoR,EAAO0B,mBAA4BlJ,EAAYwI,SAAU,uBACpE,KAGJhB,EAAO2B,sBACVjN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACCoL,EAAO2B,uBACL,WAS/BjN,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,EAACtI,UAAU,eAElB0L,GAAgBF,EACnB5L,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACf7I,EAAAC,EAAAC,cAAA,gCACS4L,EAAc9L,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAYoP,EAAZ,eAAwC,MAEvE9L,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,UAC9BJ,EAAAC,EAAAC,cAAA,iCACS0L,EAAc5L,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAYkP,EAAZ,eAAwC,SAIrE,KAEV5L,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACfJ,EAAAC,EAAAC,cAAA,4BAEKwL,EAAYzQ,OAAS,GAAKuQ,EAAYvQ,OAAS,EAChD+E,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,CAAU2K,WAAYA,KAEbY,GAAe,IAAIpC,IAAI,SAACgE,EAAKlI,GAC1B,OACOkI,EACHpN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAY0Q,EAAZ,gBAAuC,QAM5E1B,GAAe,IAAItC,IAAI,SAACgE,EAAKlI,GAC1B,OACOkI,EACHpN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAY0Q,EAAZ,gBAAuC,QAavFpN,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,0BAMH0D,EAAYuJ,SACfrN,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,iBAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI4D,EAAYuJ,SAASC,UAE7BtN,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,mCAEI4D,EAAYuJ,SAASE,cACrBvN,EAAAC,EAAAC,cAAA,SAAI4D,EAAYuJ,SAASE,eACzBvN,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,yBAMf,UC7ONoN,eAjCX,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA6P,IACf/P,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAkU,GAAA1P,KAAAH,KAAMH,KACDO,MAAuB,CACzB2E,MAAiB,GAEpBjF,EAAK2F,YAAuB3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KALbA,yFAQOD,GACtBG,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,6CAKhB/E,KAAK0B,SAAS,CAACqD,MAAM,qCAIrB,IAAIA,EAAoB/E,KAAKI,MAAM2E,OAAQ,EACvCoB,EAAoBnG,KAAKH,MAAMsG,aAAe,GAElD,OACI9D,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAUsC,KAAMA,EAAM0F,OAAQzK,KAAKH,MAAM4F,aAChEpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,sBAEHkS,GAAWvH,WA5BFpD,uBCoJX+M,eAvIX,SAAAA,EAAYjQ,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA8P,IACfhQ,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAmU,GAAA3P,KAAAH,KAAMH,KACDO,MAAuB,CACzB2E,MAAiB,GAEpBjF,EAAK2F,YAAuB3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KALbA,yFAQOD,GAAO,IAAAgC,EAAA7B,KAC7B,IAAIoC,kBAAQvC,EAAMsG,aAAc,CAC5B,IAAM4J,EAAoB,IAAIC,OAAOC,OAAOC,KAAKC,kBAE3CC,EAAS,CAAElM,IAAMmM,WAAWxQ,EAAMsG,YAAYmK,YAAanM,IAAKkM,WAAWxQ,EAAMsG,YAAYoK,YAAaC,KAAK,yEAC/GC,EAAc,CAAEvM,IAAKmM,WAAWxQ,EAAMsG,YAAYuK,YAAavM,IAAKkM,WAAWxQ,EAAMsG,YAAYwK,YAAaH,KAAK,yEAEzHT,EAAkBa,MACd,CACIR,OAAQA,EACRK,YAAaA,EACbI,WAAYb,OAAOC,OAAOC,KAAKY,WAAWC,SAW9C,SAACC,EAAQ3S,GACDA,IAAW2R,OAAOC,OAAOC,KAAKe,iBAAiBC,GAE/CrP,EAAKH,SAAS,CACVyP,WAAYH,IAGhB9S,QAAQwB,MAAR,6BAAAX,OAA2CiS,MAK3DhR,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,6CAKhB/E,KAAK0B,SAAS,CAACqD,MAAM,EAAOoM,WAAY,mDAGtBtR,EAAOO,GAGrB,QAAKJ,KAAKI,OAAWJ,KAAKI,MAAM+Q,YAUvBnR,KAAKI,MAAM+Q,WAAWC,OAAO,GAAGC,MAAUrR,KAAKI,MAAM+Q,WAAWC,OAAO,GAAGE,gDAOlF,IAAAC,EAAAvR,KAED+E,EAAoB/E,KAAKI,MAAM2E,OAAQ,EACvCoB,EAAoBnG,KAAKH,MAAMsG,aAAe,GACxCqL,EAAmBC,yBAAc,SAAA5R,GAAK,OACtCuC,kBAAQmP,EAAKnR,MAAM+Q,YA+BN,KA9Bf9O,EAAAC,EAAAC,cAACmP,GAAA,UAAD,CACAC,cAAe,CAAEzN,IAAK,OAAQC,IAAM,QAEpCyN,YAAgB,GAChBC,gBAAkB,GAEdxP,EAAAC,EAAAC,cAACmP,GAAA,mBAAD,CACIP,WAAYI,EAAKnR,MAAM+Q,WACvBW,QAAS,CACLC,gBAAiB,CACfC,WAAY,UACZC,cAAe,GACfC,aAAc,GAEhB1B,MAAM,EACN2B,iBAAgB,KAGxB9P,EAAAC,EAAAC,cAACmP,GAAA,OAAD,CACI3P,SAAU,CAAEmC,IAAKmM,WAAWlK,EAAYmK,YAAanM,IAAKkM,WAAWlK,EAAYoK,aACjFC,KAAK,uBAETnO,EAAAC,EAAAC,cAACmP,GAAA,OAAD,CACI3P,SAAU,CAAEmC,IAAKmM,WAAWlK,EAAYuK,YAAavM,IAAKkM,WAAWlK,EAAYwK,aACjFH,KAAK,0BAQrB,OACInO,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAUsC,KAAMA,EAAM0F,OAAQzK,KAAKH,MAAM4F,aAChEpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,qBAEJ6G,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,SAErBL,kBAAQ+D,GAIL9D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,cAHLJ,EAAAC,EAAAC,cAACiP,EAAD,CACQY,iBAAmB/P,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAE2P,OAAM,QAAWhJ,MAAO,UACzDiJ,WAAajQ,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAE2P,OAAM,eAMzDhQ,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,CAAcpK,UAAU,cACpBJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA8BvC,KAAKI,MAAM+Q,WAAcnR,KAAKI,MAAM+Q,WAAWC,OAAO,GAAGC,KAAK,GAAGkB,SAAStT,KAAO,GAA/G,KACAoD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA8BvC,KAAKI,MAAM+Q,WAAcnR,KAAKI,MAAM+Q,WAAWC,OAAO,GAAGC,KAAK,GAAGmB,SAASvT,KAAO,GAA/G,cAlIK8D,aCgCV0P,eAzCX,SAAAA,EAAY5S,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAyS,IACf3S,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA8W,GAAAtS,KAAAH,KAAMH,KACDO,MAAuB,CACzB2E,MAAiB,GAEpBjF,EAAK2F,YAAuB3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KALbA,yFAQOD,GAEtBG,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,6CAKhB/E,KAAK0B,SAAS,CAACqD,MAAM,qCAIrB,IAAIA,EAAoB/E,KAAKI,MAAM2E,OAAQ,EAC3C,OACI1C,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAUsC,KAAMA,EAAM0F,OAAQzK,KAAKH,MAAM4F,aAChEpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,KAAcwE,KAAKH,MAAM6S,cAE7BrQ,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAEpBzC,KAAKH,MAAM8S,WACdtQ,EAAAC,EAAAC,cAAA,UAASqQ,YAAY,IAAIvJ,MAAM,OAAOkG,IAAKvP,KAAKH,MAAM8S,WAAYjQ,MAAO,CAACmH,OAAO,iBAAkBwI,OAAO,WACxG,gBAjCPtP,aCNN8P,eAClB,SAAAA,EAAYhT,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA6S,GAAAlX,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAkX,GAAA1S,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACF8S,EAA0B9S,KAAKH,MAAMiT,OAAS,GAC9CC,EAA0BD,EAAME,QAAU,GAC1CC,EAA0BjT,KAAKH,MAAMqT,aAAe,GACpDC,EAA0BF,EAAgBG,SAAW,GACrDF,EAA0B,EAC1BG,EAA0B,EAC1BC,EAA0B,EAO9B,OANIlR,kBAAQ+Q,IAAgD,YAAzBF,EAAgBla,OAChDsa,EAA2BF,EAAmBI,aAC9CL,EAA2BC,EAAmBK,aAC9CF,EAA2B3W,GAAuBwW,EAAmBM,wBAInErR,kBAAQ0Q,GA6FLzQ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,gBA5F5BJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACZJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACMF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,cACjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACTJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,WAAoCqQ,EAAMa,OAC1CtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmCqQ,EAAMc,OACzCvR,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,aAAuCqQ,EAAMe,UAC7CxR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,cAAsCqQ,EAAMgB,WAC5CzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,kBAA0C6Q,EAA1C,MAA8DJ,EAA9D,IAA4EG,EAA5E,SAKZhR,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGCwQ,EAAUzV,OAAS,EACpByV,EAAUtH,IAAI,SAACvJ,EAAO6R,GACnB,IAAIC,EAAgB,GAEdA,EADoB,MAAvB9R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,aAC/C,QACW,MAAvB/R,EAAM+R,aACM,WAGA,YAEtB,IAAIf,EAAuB,KACvBgB,EAAuB,SACxBhS,EAAMgR,YAAc,IACpBA,EAAiBhR,EAAMgR,YAAc,OAElCgB,EADAhS,EAAMgR,aAAe,GACA,QAEA,WAG3B,IAAI5U,EAAcF,GAAe8D,EAAMhB,YACvC,OACMmB,EAAAC,EAAAC,cAAA,MACG2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CACnDkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAYgB,EAAMhB,WAClBF,eAAgBkB,EAAMlB,eACtBC,eAAgBiB,EAAMjB,mBAEzBoB,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAS,SAAA1D,OAAWiV,KACzB9R,EAAMC,cAEVE,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMiG,eAArB,MAAwCjG,EAAMkG,iBAC9C/F,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMlB,eAAe8K,YAA7D,IAAiFzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMlB,eAAe8K,aAC9HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMjB,eAAe6K,YAAmBzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMjB,eAAe6K,aAC7HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMuM,aACrBpM,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAWyR,GAAiBhB,IAErC7Q,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BpH,GAAG,0BAC1CgH,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAEpCmB,EAAAC,EAAAC,cAAA,UAEYL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC/CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBAFvB,gBAGuB,SAKvClS,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,MAAImS,MAAM,SAAShB,QAAQ,KAA3B,4BA3GQ3Q,aCA1B8P,eAClB,SAAAA,EAAYhT,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA6S,GAAAlX,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAkX,GAAA1S,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACF8S,EAAmC9S,KAAKH,MAAMiT,OAAS,GAEvDG,EAAmCjT,KAAKH,MAAMqT,aAAe,GAC7DC,EAAmCF,EAAgBG,SAAW,GAClE,OACKhR,kBAAQ0Q,GA6GDzQ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,eA5GnC9G,OAAOgZ,KAAK7B,GAAS,IAAIrH,IAAI,SAACmJ,EAAMrN,GACjC,IAAIsN,EAA0B/B,EAAM8B,IAAS,GACzC7B,EAA0B8B,EAAK7B,QAAU,GAGzCE,EAA0B,EAC1BG,EAA0B,EAC1BC,EAA0B,EAC1BwB,EAA0B3B,EAAmB0B,EAAKlM,MAOtD,OALIvG,kBAAQ0S,IAA0C,UAAzB7B,EAAgBla,OAC1Csa,EAA2ByB,EAAavB,aACxCL,EAA2B4B,EAAatB,aACxCF,EAA2B3W,GAAuBmY,EAAarB,wBAG5DpR,EAAAC,EAAAC,cAAA,WAAS2D,IAAKqB,EAAG9E,UAAU,WACxBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACZJ,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUoS,EAAKlM,MAChEtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,WAAoCoS,EAAKlB,OACzCtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmCoS,EAAKjB,OACxCvR,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,aAAuCoS,EAAKhB,UAC5CxR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,cAAsCoS,EAAKf,WAC3CzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,kBAA0C6Q,EAA1C,MAA8DJ,EAA9D,IAA4EG,EAA5E,SAKZhR,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGAwQ,EAAUtH,IAAI,SAACvJ,EAAO6R,GACnB,IAAIC,EAAgB,GAEdA,EADoB,MAAvB9R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,aAC/C,QACW,MAAvB/R,EAAM+R,aACM,WAGA,YAEtB,IAAIf,EAAuB,KACvBgB,EAAuB,SACxBhS,EAAMgR,YAAc,IACpBA,EAAiBhR,EAAMgR,YAAc,OAElCgB,EADAhS,EAAMgR,aAAe,GACA,QAEA,WAG3B,IAAI5U,EAAcF,GAAe8D,EAAMhB,YACvC,OACMmB,EAAAC,EAAAC,cAAA,MACG2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CACnDkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAYgB,EAAMhB,WAClBF,eAAgBkB,EAAMlB,eACtBC,eAAgBiB,EAAMjB,mBAEzBoB,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAS,SAAA1D,OAAWiV,KACzB9R,EAAMC,cAEVE,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMiG,eAArB,MAAwCjG,EAAMkG,iBAC9C/F,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMlB,eAAe8K,YAA7D,IAAiFzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMlB,eAAe8K,aAC9HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMjB,eAAe6K,YAAmBzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMjB,eAAe6K,aAC7HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMuM,aACrBpM,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAWyR,GAAiBhB,IAErC7Q,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BpH,GAAG,0BAC1CgH,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAEpCmB,EAAAC,EAAAC,cAAA,UAEYL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC/CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBAFvB,gBAGuB,sBA5GjCxR,aCA1B8P,eAClB,SAAAA,EAAYhT,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA6S,GAAAlX,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAkX,GAAA1S,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACF8S,EAAuB9S,KAAKH,MAAMiT,OAAS,GAC3CG,EAAuBjT,KAAKH,MAAMqT,aAAe,GACjDC,EAAuBF,EAAgBG,SAAW,GACtD,OACKhR,kBAAQ0Q,GAuHDzQ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,eAtHnC9G,OAAOgZ,KAAK7B,GAAS,IAAIrH,IAAI,SAACmJ,EAAMrN,GACjC,IAAIwN,EAAcjC,EAAM8B,IAAS,GACjC,OACMvS,EAAAC,EAAAC,cAAA,WAAS2D,IAAKqB,EAAG9E,UAAU,WACxBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASmS,GAEpBG,EAAOtJ,IAAI,SAAC5N,EAAMmX,GACZ,IAAIjC,EAAuBlV,EAAKmV,QAAU,GAEtCE,EAA0B,EAC1BG,EAA0B,EAC1BC,EAA0B,EAC1B2B,EAA0B,GAW9B,OATGA,EADyB,UAAzBhC,EAAgBla,KACWoa,EAAmBtV,EAAKqX,WAAa,GAElC/B,EAAmByB,GAASzB,EAAmByB,GAAM/W,EAAKqX,UAAY,GAEnG9S,kBAAQ6S,KACT5B,EAA2B4B,EAAY1B,aACvCL,EAA2B+B,EAAYzB,aACvCF,EAA2B3W,GAAuBsY,EAAYxB,wBAG9DpR,EAAAC,EAAAC,cAAA,OAAK2D,IAAK8O,EAAOvS,UAAU,yBACxBJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACMF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAU5E,EAAK8K,MAChEtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACTJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,WAAoC5E,EAAK8V,OACzCtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmC5E,EAAK+V,OACxCvR,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,aAAuC5E,EAAKgW,UAC5CxR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,cAAsC5E,EAAKiW,WAC3CzR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,kBAA0C6Q,EAA1C,MAA8DJ,EAA9D,IAA4EG,EAA5E,SAKZhR,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGAwQ,EAAUtH,IAAI,SAACvJ,EAAO6R,GACnB,IAAIC,EAAgB,GAEdA,EADoB,MAAvB9R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,cAA+C,MAAvB/R,EAAM+R,aAC/C,QACW,MAAvB/R,EAAM+R,aACM,WAGA,YAEtB,IAAIf,EAAuB,KACvBgB,EAAuB,SACxBhS,EAAMgR,YAAc,IACpBA,EAAiBhR,EAAMgR,YAAc,OAElCgB,EADAhS,EAAMgR,aAAe,GACA,QAEA,WAG3B,IAAI5U,EAAcF,GAAe8D,EAAMhB,YACvC,OACMmB,EAAAC,EAAAC,cAAA,MACG2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CACnDkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAYgB,EAAMhB,WAClBF,eAAgBkB,EAAMlB,eACtBC,eAAgBiB,EAAMjB,mBAEzBoB,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAS,SAAA1D,OAAWiV,KACzB9R,EAAMC,cAEVE,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMiG,eAArB,MAAwCjG,EAAMkG,iBAC9C/F,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMlB,eAAe8K,YAA7D,IAAiFzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMlB,eAAe8K,aAC9HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQL,EAAMjB,eAAe6K,YAAmBzJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMjB,eAAe6K,aAC7HzJ,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMuM,aACrBpM,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACNjS,EAAAC,EAAAC,cAAA,QAAME,UAAWyR,GAAiBhB,IAErC7Q,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BpH,GAAG,0BAC1CgH,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAEpCmB,EAAAC,EAAAC,cAAA,UAEYL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC/CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBAFvB,gBAGuB,wBAlH7CxR,aCuVhCoS,eA7UX,SAAAA,EAAYtV,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAmV,IACfrV,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAwZ,GAAAhV,KAAAH,KAAMH,KAmGV4B,gBAAkB,WACd3B,EAAK4B,SAAS,CACVrB,SAAY,EACZC,EAAY,EACZC,EAAY,KAtGhBT,EAAKM,MAA2B,CACIgV,UAAoB,EACpBC,aAAoB,EACpBC,SAAoB,EACpBC,WAAoB,EACpBlV,SAAoB,EACpBC,EAAoB,GACpBC,EAAoB,GACpBuS,MAAoB,GACpB0C,WAAoB,EACpBxU,eAAoB,GACpBC,eAAoB,GACpBwU,aAAoB,GACpBC,SAAoB,IAExD5V,EAAK6V,SAA2B,KAChC7V,EAAK8V,YAA2B,GAChC9V,EAAK+V,WAA2B,GAChC/V,EAAKgW,YAA2B,GAChChW,EAAKiW,YAA2BjW,EAAKiW,YAAYnV,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKsU,kBAA2BtU,EAAKsU,kBAAkBxT,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKa,eAA2Bb,EAAKa,eAAeC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK8C,kBAA2B9C,EAAK8C,kBAAkBhC,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKgD,cAA2BhD,EAAKgD,cAAclC,KAAnBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK0U,gBAA2B1U,EAAK0U,gBAAgB5T,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKnG,WAA2BmG,EAAKnG,WAAWiH,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKgB,WAA2BhB,EAAKgB,WAAWF,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK2F,YAA2B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA7BjBA,8EAgCJiB,EAAMC,EAAgBC,GACjCjB,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV0T,UAAoB,EACpBpU,eAAoBA,EACpBC,eAAoBA,8CAIVF,GACdf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV2T,aAAa,0CAIPtU,GACVf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV4T,SAAS,4CAIDrX,EAAGnF,GACfmF,EAAEuD,kBACFxB,KAAK0B,SAAS,CACV6T,WAAW,EACX5C,WAAY7Z,EAAK2b,YACjB/B,YAAa5Z,EAAKyb,kDAIfxT,EAAM1C,GACV2R,OAAOgG,QAAQ,sDACdhW,KAAKH,MAAM/F,iBAAiB,CAACiH,KAAMA,EAAM1C,OAAQA,uCAI9C0C,GACJiP,OAAOgG,QAAQ,4CACdhW,KAAKH,MAAMlG,WAAW,CAACoH,KAAMA,0CAMjCf,KAAK0B,SAAS,CACVrB,SAAgB,EAChB+U,UAAgB,EAChBE,SAAgB,EAChBD,aAAgB,EAChBE,WAAgB,8CAINhU,EAAOW,GAErBX,EAAMsG,iBACN,IAAMoO,EAAwB1U,EAAM2U,QAC9BC,EAAwB5U,EAAM6U,MAHNpW,KAIzB0B,SAAS,CACVrB,SAAe,EACfC,EAAe2V,EACf1V,EAAe4V,EACfxU,SAAQhG,OAAAC,EAAA,EAAAD,CAAA,GAAWuG,iDAcvBlC,KAAK4V,YAALja,OAAA0a,GAAA,EAAA1a,CAAgCqE,KAAKH,MAAM+V,aAC3C5V,KAAK6V,WAALla,OAAA0a,GAAA,EAAA1a,CAAgCqE,KAAKH,MAAMgW,YAC3C7V,KAAK8V,YAALna,OAAA0a,GAAA,EAAA1a,CAAgCqE,KAAKH,MAAMiW,aAC3C,IAAIQ,EAAwBtW,KAAKH,MAAMyW,QAAU,GAC7CC,EAAwBvW,KAAKH,MAAM9G,MAAQ,GAC/CiH,KAAKwW,SAAS,CACVF,OAAoBA,EACpBC,UAAoBA,EACpBX,YAAoB5V,KAAKH,MAAM+V,YAC/BC,WAAoB7V,KAAKH,MAAMgW,WAC/BC,YAAoB9V,KAAKH,MAAMiW,gEAIbjW,GAEtB,GAAGG,KAAKH,MAAM9G,OAAS8G,EAAM9G,MACnBiH,KAAKyW,YAcRzW,KAAK0W,YAAc7W,EAAM6W,WACpB7Q,kBAAQ7F,KAAK4V,YAAa/V,EAAM+V,cAChC/P,kBAAQ7F,KAAK6V,WAAYhW,EAAMgW,aAC/BhQ,kBAAQ7F,KAAK8V,YAAajW,EAAMiW,eACpC9V,KAAK4V,YAALja,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAM+V,aACtC5V,KAAK6V,WAALla,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAMgW,YACtC7V,KAAK8V,YAALna,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAMiW,aACtC9V,KAAK0W,UAAuB7W,EAAM6W,UAClC1W,KAAK+V,mBAtBe,CACxB/V,KAAK4V,YAALja,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAM+V,aACtC5V,KAAK6V,WAALla,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAMgW,YACtC7V,KAAK8V,YAALna,OAAA0a,GAAA,EAAA1a,CAAgCkE,EAAMiW,aACtC,IAAIQ,EAAwBzW,EAAMyW,QAAU,GACxCC,EAAwB1W,EAAM9G,MAAQ,GAC1CiH,KAAKwW,SAAS,CACVF,OAAoBA,EACpBC,UAAoBA,EACpBX,YAAoB/V,EAAM+V,YAC1BC,WAAoBhW,EAAMgW,WAC1BC,YAAoBjW,EAAMiW,8DAkB7B9V,KAAKyW,aACNzW,KAAKyW,+CAGJ3d,GAEAkH,KAAKyW,aACNzW,KAAKyW,cACT,IAAIrV,EAAoBpB,KACpBsW,EAAoBxd,EAAKwd,OACzBC,EAAoBzd,EAAKyd,UAIzBI,GAHoB7d,EAAK8c,YAGLgB,GACvBC,WAAW,SACXC,MAAM,SAAU,KAAMR,GACtBQ,MAAM,WAAY,KAAMP,IAsBzBvW,KAAKyW,YAAmBE,EAGvBI,WAAW,SAASC,GACjB5V,EAAKuU,SAAeqB,EACpB5V,EAAK2U,sDAIC,IAAAlU,EAAA7B,KACN2V,EAAgB3V,KAAK2V,SACrBsB,EAAgB,GAChBC,EAAgB,IACnBlX,KAAK8V,aAAe,IAAIqB,QAAQ,SAACvC,GAC9BqC,EAAMzP,KAAKoN,EAAKrM,UAChB2O,EAAUtC,EAAKrM,UAAeqM,EAAKwC,QAGvC,IASIpG,EX1OL,SAAsB2E,EAAU0B,GACnC,IAAIC,EAAoBD,EAAOjX,OAAS,GACpCmX,EAAoBF,EAAOG,MAAQ,GACnCC,EAAoBJ,EAAOJ,OAAS,GACpCS,EAAoBL,EAAOH,WAAa,GACxCS,EAAuBN,EAAOX,UAAaW,EAAOX,UAAUkB,cAAgB,GAC5E1W,EAAoB,GACpBqT,EAAoB,GACpBE,EAAoB,GACpBoD,EAAoB,GACpB/E,EAAgC,GAChCmB,EAAgC,KAEhC6D,EAAgC,UAChCC,EAAgC,EAChChf,EAAgC,oBACpC,GAAK4c,EACD,GAA0B,IAAvB2B,EAAYha,QAAsC,IAAtBia,EAAWja,QAAuC,IAAvBma,EAAYna,OAClEvE,EAAgC,oBAChC+Z,EAAgC,CAC5Bc,MAAoB,EACpBE,UAAoB,EACpBH,MAAoB,EACpBE,SAAoB,EACpBb,OAAoB,GACpBgF,eAAoB,GAExBrC,EAASwB,QAAQ,SAASc,GACtB,IAAIC,EAAwBD,EAAInf,OAEhCif,IACAD,EAA4B,UAC5B5W,EAA4B,GAC5BqT,EAA4B,GAC5BE,EAA4B,GAC5BoD,EAA4B,GAC5B5D,EAA4B,KAExBkE,cAAcD,EAAIJ,WAA8B,KAAjBI,EAAIJ,WACnCA,EAAwBI,EAAIJ,UAI5B5W,EADkB,iBAAnBgX,EAAIhX,WACqB,YACC,oBAAnBgX,EAAIhX,WACc,YACC,iBAAnBgX,EAAIhX,YAAuD,wBAAtBgX,EAAIE,cACvB,YACC,iBAAnBF,EAAIhX,WACc,aACC,YAAnBgX,EAAIhX,WACc,YACC,gBAAnBgX,EAAIhX,WACc,UACC,eAAnBgX,EAAIhX,WACc,UAEA,YAGxBiX,cAAcD,EAAIL,aAAkC,KAAnBK,EAAIL,aACrCA,EAAwBtb,GAAuC,IAA3BsC,SAASqZ,EAAIL,YAAoBK,EAAIvZ,UAAW,eAGpFwZ,cAAcD,EAAIG,qBAAkD,KAA3BH,EAAIG,qBAC7C9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG5BF,cAAcD,EAAII,mBAA8C,KAAzBJ,EAAII,mBAC3C/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAEhC,IAAI1Z,EAAwBrC,GAA2C,IAA/BsC,SAASqZ,EAAI/P,gBAAwB+P,EAAIvZ,UAAW,qBACxFG,EAAwBvC,GAA4C,IAAhCsC,SAASqZ,EAAI9P,iBAAyB8P,EAAIvZ,UAAW,UAExFuZ,EAAIjE,eACLA,EAA4BiE,EAAIjE,cAGpCnB,EAAMa,QACc,MAAjBM,GAAyC,MAAjBA,GAAyC,MAAjBA,EAC/CnB,EAAMc,QACiB,MAAjBK,EACNnB,EAAMe,WAGNf,EAAMgB,YAGLoE,EAAI1S,KACuB0S,EAAI1S,IAEpC,IAAI0N,EAA4B,EAC3BgF,EAAItJ,iBAAmBsJ,EAAItJ,gBAAkBsJ,EAAI/P,iBAClD+K,EAA4BrW,KAAKC,OAAOob,EAAItJ,gBAAkBsJ,EAAI/P,gBAAgB,KAEnF+K,EAAc,GACbJ,EAAMkF,iBAEVlF,EAAME,OAAOxL,KAAK,CACdnM,GAAwB6c,EAAI7c,GAC5Bwc,WAAwBA,EACxB1P,eAAwBvJ,EACxBwJ,gBAAwBtJ,EACxBmC,eAAwBiX,EAAIK,oBAC5BvX,eAAwBkX,EAAIM,oBAC5B/J,YAAwByJ,EAAIzJ,YAC5BvN,WAAwBA,EACxBH,KAAwBmX,EAAInX,KAC5BuX,iBAAwBJ,EAAII,kBAAoB,GAChDD,mBAAwBH,EAAIG,oBAAsB,GAClD9D,aAAwBA,EACxBE,YAAwBA,EACxBtS,aAAwB+V,EAAI/V,aAC5B3F,UAAwB0b,EAAI/P,eAC5BwG,SAAwBuJ,EAAIvZ,UAC5BsV,aAAwBA,EACxBwE,YAAwBP,EAAIO,YAC5BX,SAAwBA,EACxB5E,YAAwBA,MAGhCJ,EAAME,OAA6BmF,UAAUrF,EAAME,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAElc,YAAY,CAAC,YAC7E,CA+HH,GA9HG8a,EAAYha,OAAS,GAA2B,IAAtBia,EAAWja,QAAuC,IAAvBma,EAAYna,SAChEvE,EAAgC,gBAChC4c,EAASwB,QAAQ,SAASc,GACtB,IAAIC,EAAwBD,EAAInf,OAChC,IAA2B,IAAvBwe,EAAYha,QACTga,EAAYqB,SAAST,EAAIna,eACb,KAAd4Z,GAAoBO,EAAI/V,aAAayV,cAAce,SAAShB,MAEtC,IAAtBJ,EAAWja,QAAgBia,EAAWoB,SAAST,EAAIU,6BAE5B,IAAvBnB,EAAYna,QAAgBma,EAAYkB,SAAST,EAAI3P,WACxD,CACEwP,IAEAD,EAA4B,UAC5B5W,EAA4B,GAC5BqT,EAA4B,GAC5BE,EAA4B,GAC5BoD,EAA4B,GAC5B5D,EAA4B,KAExBkE,cAAcD,EAAIJ,WAA8B,KAAjBI,EAAIJ,WACnCA,EAAwBI,EAAIJ,UAI5B5W,EADkB,iBAAnBgX,EAAIhX,WACqB,YACC,oBAAnBgX,EAAIhX,WACc,YACC,iBAAnBgX,EAAIhX,YAAuD,wBAAtBgX,EAAIE,cACvB,YACC,iBAAnBF,EAAIhX,WACc,aACC,YAAnBgX,EAAIhX,WACc,YACC,gBAAnBgX,EAAIhX,WACc,UACC,eAAnBgX,EAAIhX,WACc,UAEA,YAGxBiX,cAAcD,EAAIL,aAAkC,KAAnBK,EAAIL,aACrCA,EAAwBtb,GAAuC,IAA3BsC,SAASqZ,EAAIL,YAAoBK,EAAIvZ,UAAW,eAGpFwZ,cAAcD,EAAIG,qBAAkD,KAA3BH,EAAIG,qBAC7C9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG5BF,cAAcD,EAAII,mBAA8C,KAAzBJ,EAAII,mBAC3C/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAEhC,IAAI1Z,EAAwBrC,GAA2C,IAA/BsC,SAASqZ,EAAI/P,gBAAwB+P,EAAIvZ,UAAW,qBACxFG,EAAwBvC,GAA4C,IAAhCsC,SAASqZ,EAAI9P,iBAAyB8P,EAAIvZ,UAAW,UAGvFmU,EAAMoF,EAAIna,cACZ+U,EAAMoF,EAAIna,YAAkB,CAChB4K,KAAoBuP,EAAIna,WACxB6V,MAAoB,EACpBE,UAAoB,EACpBD,SAAoB,EACpBF,MAAoB,EACpBX,OAAoB,GACpBgF,eAAoB,IAI/BE,EAAIjE,eACLA,EAA4BiE,EAAIjE,cAGpCnB,EAAMoF,EAAIna,YAAY4V,QACF,MAAjBM,GAAyC,MAAjBA,GAAyC,MAAjBA,EAC/CnB,EAAMoF,EAAIna,YAAY6V,QACC,MAAjBK,EACNnB,EAAMoF,EAAIna,YAAY8V,WAGtBf,EAAMoF,EAAIna,YAAY+V,YAGrBoE,EAAI1S,KACuB0S,EAAI1S,IAEpC,IAAI0N,EAA4B,EAE3BgF,EAAItJ,iBAAmBsJ,EAAItJ,gBAAkBsJ,EAAI/P,iBAClD+K,EAA4BrW,KAAKC,OAAOob,EAAItJ,gBAAkBsJ,EAAI/P,gBAAgB,KAEnF+K,EAAc,GACbJ,EAAMoF,EAAIna,YAAYia,iBAC1BlF,EAAMoF,EAAIna,YAAYiV,OAAOxL,KAAK,CAC9BnM,GAAwB6c,EAAI7c,GAC5Bwc,WAAwBA,EACxB1P,eAAwBvJ,EACxBwJ,gBAAwBtJ,EACxBmC,eAAwBiX,EAAIK,oBAC5BvX,eAAwBkX,EAAIM,oBAC5B/J,YAAwByJ,EAAIzJ,YAC5BvN,WAAwBA,EACxBH,KAAwBmX,EAAInX,KAC5BuX,iBAAwBJ,EAAII,kBAAoB,GAChDD,mBAAwBH,EAAIG,oBAAsB,GAClD9D,aAAwBA,EACxBE,YAAwBA,EACxBtS,aAAwB+V,EAAI/V,aAC5B3F,UAAwB0b,EAAI/P,eAC5BwG,SAAwBuJ,EAAIvZ,UAC5BsV,aAAwBA,EACxBwE,YAAwBP,EAAIO,YAC5BX,SAAwBA,EACxB5E,YAAwBA,OAIpCiF,OAAOrF,EAAO,SAACoF,EAAKhS,GAEhB4M,EAAM5M,GAAK8M,OAAoBmF,UAAUrF,EAAM5M,GAAK8M,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAElc,YAAY,CAAC,UAErFsW,EAAgCqF,UAAUrF,EAAO,CAAC,SAAA4F,GAAC,OAAIA,EAAE/P,OAAO,CAAC,SAElE2O,EAAYha,OAAS,GAAKia,EAAWja,OAAS,GAA4B,IAAvBma,EAAYna,OAAc,CAC5EvE,EAAgC,eAChC4c,EAASwB,QAAQ,SAASc,GACtB,IAAIC,EAAwBD,EAAInf,OAChC,IAA2B,IAAvBwe,EAAYha,QACTga,EAAYqB,SAAST,EAAIna,eACb,KAAd4Z,GAAoBO,EAAI/V,aAAayV,cAAce,SAAShB,MAEtC,IAAtBJ,EAAWja,QAAgBia,EAAWoB,SAAST,EAAIU,6BAE5B,IAAvBnB,EAAYna,QAAgBma,EAAYkB,SAAST,EAAI3P,WACxD,CACEwP,IAEAD,EAA4B,UAC5B5W,EAA4B,GAC5BqT,EAA4B,GAC5BE,EAA4B,GAC5BoD,EAA4B,GAC5B5D,EAA4B,KAExBkE,cAAcD,EAAIJ,WAA8B,KAAjBI,EAAIJ,WACnCA,EAAwBI,EAAIJ,UAK5B5W,EADkB,iBAAnBgX,EAAIhX,WACqB,YACC,oBAAnBgX,EAAIhX,WACc,YACC,iBAAnBgX,EAAIhX,YAAuD,wBAAtBgX,EAAIE,cACvB,YACC,iBAAnBF,EAAIhX,WACc,aACC,YAAnBgX,EAAIhX,WACc,YACC,gBAAnBgX,EAAIhX,WACc,UACC,eAAnBgX,EAAIhX,WACc,UAEA,YAGxBiX,cAAcD,EAAIL,aAAkC,KAAnBK,EAAIL,aACrCA,EAAwBtb,GAAuC,IAA3BsC,SAASqZ,EAAIL,YAAoBK,EAAIvZ,UAAW,eAGpFwZ,cAAcD,EAAIG,qBAAkD,KAA3BH,EAAIG,qBAC7C9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG5BF,cAAcD,EAAII,mBAA8C,KAAzBJ,EAAII,mBAC3C/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAEhC,IAAI1Z,EAAwBrC,GAA2C,IAA/BsC,SAASqZ,EAAI/P,gBAAwB+P,EAAIvZ,UAAW,qBACxFG,EAAwBvC,GAA4C,IAAhCsC,SAASqZ,EAAI9P,iBAAyB8P,EAAIvZ,UAAW,UAG1FwZ,cAAcrF,EAAMoF,EAAIna,cACvB+U,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CAC5ClQ,KAAoBuP,EAAIU,yBACxBvd,GAAoB6c,EAAIna,WAAWma,EAAIW,uBACvC3D,SAAoBgD,EAAIW,uBACxBjF,MAAoB,EACpBE,UAAoB,EACpBD,SAAoB,EACpBF,MAAoB,EACpBX,OAAoB,GACpBgF,eAAoB,IAG7BG,cAAcrF,EAAMoF,EAAIna,YAAYma,EAAIW,2BACvC/F,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CACpDlQ,KAAoBuP,EAAIU,yBACxBvd,GAAoB6c,EAAIna,WAAWma,EAAIW,uBACvC3D,SAAoBgD,EAAIW,uBACxBjF,MAAoB,EACpBE,UAAoB,EACpBD,SAAoB,EACpBF,MAAoB,EACpBX,OAAoB,GACpBgF,eAAoB,IAK3BE,EAAIjE,eACLA,EAA4BiE,EAAIjE,cAGpCnB,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwBlF,QAC9B,MAAjBM,GAAyC,MAAjBA,GAAyC,MAAjBA,EAC/CnB,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwBjF,QAC3B,MAAjBK,EACNnB,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwBhF,WAGlDf,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwB/E,YAGjDoE,EAAI1S,KACuB0S,EAAI1S,IAGpC,IAAI0N,EAA4B,EAC3BgF,EAAItJ,iBAAmBsJ,EAAItJ,gBAAkBsJ,EAAI/P,iBAClD+K,EAA4BrW,KAAKC,OAAOob,EAAItJ,gBAAkBsJ,EAAI/P,gBAAgB,KAEnF+K,EAAc,GACbJ,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwBb,iBAEtDlF,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwB7F,OAAOxL,KAAK,CAC1DnM,GAAwB6c,EAAI7c,GAC5Bwc,WAAwBA,EACxB1P,eAAwBvJ,EACxBwJ,gBAAwBtJ,EACxBmC,eAAwBiX,EAAIK,oBAC5BvX,eAAwBkX,EAAIM,oBAC5B/J,YAAwByJ,EAAIzJ,YAC5BvN,WAAwBA,EACxBH,KAAwBmX,EAAInX,KAC5BuX,iBAAwBJ,EAAII,kBAAoB,GAChDD,mBAAwBH,EAAIG,oBAAsB,GAClD9D,aAAwBA,EACxBE,YAAwBA,EACxBtS,aAAwB+V,EAAI/V,aAC5B3F,UAAwB0b,EAAI/P,eAC5BwG,SAAwBuJ,EAAIvZ,UAC5BsV,aAAwBA,EACxBwE,YAAwBP,EAAIO,YAC5BX,SAAwBA,EACxB5E,YAAwBA,OAIpC,IAAI4F,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,SAASrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,SAAC0F,GAAQ,OAAOA,EAAElc,cAElFsc,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,EAExC,GAAGrB,EAAYna,OAAS,EAAG,CACvBvE,EAAgC,eAChC4c,EAASwB,QAAQ,SAASc,GACtB,IAAIC,EAAwBD,EAAInf,OAChC,IAA2B,IAAvBwe,EAAYha,QACTga,EAAYqB,SAAST,EAAIna,eACb,KAAd4Z,GAAoBO,EAAI/V,aAAayV,cAAce,SAAShB,MAEtC,IAAtBJ,EAAWja,QAAgBia,EAAWoB,SAAST,EAAIU,6BAE5B,IAAvBnB,EAAYna,QAAgBma,EAAYkB,SAAST,EAAI3P,WACxD,CACEwP,IAEAD,EAA4B,UAC5B5W,EAA4B,GAC5BqT,EAA4B,GAC5BE,EAA4B,GAC5BoD,EAA4B,GAC5B5D,EAA4B,KAExBkE,cAAcD,EAAIJ,WAA8B,KAAjBI,EAAIJ,WACnCA,EAAwBI,EAAIJ,UAK5B5W,EADkB,iBAAnBgX,EAAIhX,WACqB,YACC,oBAAnBgX,EAAIhX,WACc,YACC,iBAAnBgX,EAAIhX,YAAuD,wBAAtBgX,EAAIE,cACvB,YACC,iBAAnBF,EAAIhX,WACc,aACC,YAAnBgX,EAAIhX,WACc,YACC,gBAAnBgX,EAAIhX,WACc,UACC,eAAnBgX,EAAIhX,WACc,UAEA,YAGxBiX,cAAcD,EAAIL,aAAkC,KAAnBK,EAAIL,aACrCA,EAAwBtb,GAAuC,IAA3BsC,SAASqZ,EAAIL,YAAoBK,EAAIvZ,UAAW,eAGpFwZ,cAAcD,EAAIG,qBAAkD,KAA3BH,EAAIG,qBAC7C9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG5BF,cAAcD,EAAII,mBAA8C,KAAzBJ,EAAII,mBAC3C/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAEhC,IAAI1Z,EAAwBrC,GAA2C,IAA/BsC,SAASqZ,EAAI/P,gBAAwB+P,EAAIvZ,UAAW,qBACxFG,EAAwBvC,GAA4C,IAAhCsC,SAASqZ,EAAI9P,iBAAyB8P,EAAIvZ,UAAW,UAG1FwZ,cAAcrF,EAAMoF,EAAIna,cACvB+U,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CAC9BI,KAAoB+O,EAAgBQ,EAAI3P,UACxClN,GAAoB6c,EAAIna,WAAWma,EAAI3P,SACvC2M,SAAoBgD,EAAI3P,SACxBqL,MAAoB,EACpBE,UAAoB,EACpBD,SAAoB,EACpBF,MAAoB,EACpBX,OAAoB,GACpBgF,eAAoB,IAG7BG,cAAcrF,EAAMoF,EAAIna,YAAYma,EAAI3P,aACvCuK,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CACtCI,KAAoB+O,EAAgBQ,EAAI3P,UACxClN,GAAoB6c,EAAIna,WAAWma,EAAI3P,SACvC2M,SAAoBgD,EAAI3P,SACxBqL,MAAoB,EACpBE,UAAoB,EACpBD,SAAoB,EACpBF,MAAoB,EACpBX,OAAoB,GACpBgF,eAAoB,IAK3BE,EAAIjE,eACLA,EAA4BiE,EAAIjE,cAGpCnB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUoL,QAChB,MAAjBM,GAAyC,MAAjBA,GAAyC,MAAjBA,EAC/CnB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUqL,QACb,MAAjBK,EACNnB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUsL,WAGpCf,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUuL,YAGnCoE,EAAI1S,KACuB0S,EAAI1S,IAEpC,IAAI0N,EAA4B,EAC3BgF,EAAItJ,iBAAmBsJ,EAAItJ,gBAAkBsJ,EAAI/P,iBAClD+K,EAA4BrW,KAAKC,OAAOob,EAAItJ,gBAAkBsJ,EAAI/P,gBAAgB,KAEnF+K,EAAc,GACbJ,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUyP,iBAExClF,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUyK,OAAOxL,KAAK,CAC5CnM,GAAwB6c,EAAI7c,GAC5Bwc,WAAwBA,EACxB1P,eAAwBvJ,EACxBwJ,gBAAwBtJ,EACxBmC,eAAwBiX,EAAIK,oBAC5BvX,eAAwBkX,EAAIM,oBAC5B/J,YAAwByJ,EAAIzJ,YAC5BvN,WAAwBA,EACxBH,KAAwBmX,EAAInX,KAC5BuX,iBAAwBJ,EAAII,kBAAoB,GAChDD,mBAAwBH,EAAIG,oBAAsB,GAClD9D,aAAwBA,EACxBE,YAAwBA,EACxBtS,aAAwB+V,EAAI/V,aAC5B3F,UAAwB0b,EAAI/P,eAC5BwG,SAAwBuJ,EAAIvZ,UAC5BsV,aAAwBA,EACxBwE,YAAwBP,EAAIO,YAC5BX,SAAwBA,EACxB5E,YAAwBA,OAIpC,IAAI4F,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,SAASrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,SAAC0F,GAAQ,OAAOA,EAAElc,cAElFsc,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,GAIhD,MAAO,CAAChG,MAAOA,EAAOmG,MAAOlB,EAAYhf,KAAMA,GW1TvBmgB,CAAavD,EATb,CAChBvV,MAAgB+Y,cAAKnZ,KAAK4V,YAAa,SACvC4B,KAAgB2B,cAAKnZ,KAAK6V,WAAY,SAGtCoB,MAAgBA,EAChBC,UAAgBA,EAChBR,UAAgB1W,KAAK0W,YAGrB5D,EAAgB9B,EAAO8B,MACvBmG,EAAgBjI,EAAOiI,MACvBlgB,EAAgBiY,EAAOjY,KAC3BiH,KAAK0B,SAAS,CACVoR,MAAgBA,EAChB4C,SAAgB3c,EAChByc,WAAgB,GACjB,WACC3T,EAAKhC,MAAMuZ,iBAAiBH,GAAS,sCAKzC,IAAInG,EAAgC9S,KAAKI,MAAM0S,OAAS,GAExD,OACIzQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8W,GAAD,CACIhZ,QAAyBL,KAAKI,MAAMC,QACpCC,EAAyBN,KAAKI,MAAME,EACpCC,EAAyBP,KAAKI,MAAMG,EACpCoB,SAAyB3B,KAAKI,MAAMuB,SACpChB,eAAyBX,KAAKW,eAC9BiC,kBAAyB5C,KAAK4C,kBAC9BE,cAAyB9C,KAAK8C,cAC9BnJ,WAAyBqG,KAAKrG,WAC9BmH,WAAyBd,KAAKc,WAC9BW,gBAAyBzB,KAAKyB,kBAG1BzB,KAAKI,MAAMoV,UA0ENnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAzETJ,EAAAC,EAAAC,cAAA,WAEiC,sBAAxBvC,KAAKI,MAAMsV,SACRrT,EAAAC,EAAAC,cAAC+W,GAAD,CACIxG,MAAyBA,EACzB0B,gBAAyBxU,KAAKwU,gBAC9BJ,kBAAyBpU,KAAKoU,kBAC9BlB,YAAyBlT,KAAKH,MAAMqT,cAE1C,KAGuB,kBAAxBlT,KAAKI,MAAMsV,SACRrT,EAAAC,EAAAC,cAACgX,GAAD,CACIzG,MAAyBA,EACzB0B,gBAAyBxU,KAAKwU,gBAC9BJ,kBAAyBpU,KAAKoU,kBAC9BlB,YAAyBlT,KAAKH,MAAMqT,cAE1C,KAGuB,iBAAxBlT,KAAKI,MAAMsV,SACRrT,EAAAC,EAAAC,cAACiX,GAAD,CACI1G,MAAyBA,EACzB0B,gBAAyBxU,KAAKwU,gBAC9BJ,kBAAyBpU,KAAKoU,kBAC9BlB,YAAyBlT,KAAKH,MAAMqT,cAE1C,KAGClT,KAAKI,MAAMgV,SACd/S,EAAAC,EAAAC,cAACkX,GAAD,CACItT,YAAyBnG,KAAKH,MAAMsG,YACpCpB,KAAyB/E,KAAKI,MAAMgV,SACpCsE,SAAyB1Z,KAAKH,MAAM6Z,SACpCC,OAAyB3Z,KAAKH,MAAM8Z,OACpCzU,UAAyBlF,KAAKH,MAAMqF,UACpC0U,SAAyB5Z,KAAKH,MAAM+Z,SACpC9T,QAAyB9F,KAAKH,MAAMiG,QACpCT,aAAyBrF,KAAKH,MAAMwF,aACpCjM,SAAyB4G,KAAKH,MAAMzG,SACpC4H,eAAyBhB,KAAKI,MAAMY,eACpCC,eAAyBjB,KAAKI,MAAMa,eACpCwE,YAAyBzF,KAAKyF,cAC7B,KAILpD,EAAAC,EAAAC,cAACsX,GAAD,CACI9U,KAAyB/E,KAAKI,MAAMmV,UACpC5C,WAAyB3S,KAAKI,MAAMuS,WACpCD,YAAyB1S,KAAKI,MAAMsS,YACpCjN,YAAyBzF,KAAKyF,cAI/BzF,KAAKI,MAAMiV,YACdhT,EAAAC,EAAAC,cAACuX,GAAD,CACI/U,KAAyB/E,KAAKI,MAAMiV,YACpClP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC7B,KAGFzF,KAAKI,MAAMkV,QACdjT,EAAAC,EAAAC,cAACwX,GAAD,CACIhV,KAAyB/E,KAAKI,MAAMkV,QACpCnP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC7B,cAtUL1C,wBCZPiX,eACjB,SAAAA,EAAYna,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAga,IACfla,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAqe,GAAA7Z,KAAAH,KAAMH,KAQV+F,eAAiB,SAAC3H,GAAM,IAAAgc,EACftR,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvBwE,EAAK4B,UAALuY,EAAA,GAAAte,OAAAqO,GAAA,EAAArO,CAAAse,EACKtR,EAAYrN,GADjBK,OAAAqO,GAAA,EAAArO,CAAAse,EAAA,UAEiB,GAFjBA,KAZgBna,EA0BnBoa,YAAc,SAACjc,GACXA,EAAEuD,kBACC1B,EAAKqa,UAAUC,SAASnc,EAAE2K,SACQ,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC1Bva,EAAKM,MAAMka,QACNxa,EAAK4B,SAAS,CACV4Y,QAAgB,EAChBC,SAAgBza,EAAKM,MAAMoa,eAjCpB1a,EAsCnB2a,gBAAkB,WACd3a,EAAK4B,SAAS,CACV4Y,QAAgBxa,EAAKM,MAAMka,OAC3BC,SAAmBza,EAAKM,MAAMka,OAAUxa,EAAKM,MAAMoa,YAAc,MAvCrE1a,EAAKM,MAAe,CAChBma,SAAU,GACVC,YAAa,GACbF,QAAQ,GALGxa,mFAmBfuB,SAASC,iBAAiB,QAAStB,KAAKka,4DAIxC7Y,SAASO,oBAAoB,QAAS5B,KAAKka,+DAuBrBra,GACtB,IAAI6a,EAAoB7a,EAAMwL,UAAY,GAC1C,GAAKqP,EAAO,CACR,IAAIC,GAAqB9a,EAAM8Z,QAAU,IAAIiB,UAAU,SAAAhG,GAAI,OAAIA,EAAKvZ,KAAOqf,IACvEG,EAAoBhb,EAAM8Z,OAAOgB,GAAevD,MACpDpX,KAAK0B,SAAS,CACV6Y,SAAoBM,EACpBL,YAAoBK,SAGxB7a,KAAK0B,SAAS,CACV8Y,YAAoB,sCAKvB,IAAA3Y,EAAA7B,KACD8a,EAA4B9a,KAAKH,MAAM8Z,QAAU,GACjDA,EAA4BoB,iBAAQD,EAAe,SACvD,OACIzY,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA2X,GAAS,OAAItY,EAAKsY,UAAYA,GAAW1X,UAAS,aAAA1D,OAAeiB,KAAKI,MAAMka,OAAS,SAAW,KAAO3X,QAAS3C,KAAKya,iBAC3HpY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAWzC,KAAKH,MAAM4C,UAAWuY,aAAa,OAAO1O,YAAY,QAAQ3D,KAAK,WAAWrN,MAAO0E,KAAKI,MAAMma,SAAUjP,SAAUtL,KAAK4F,kBACjLvD,EAAAC,EAAAC,cAAA,UAEIoX,EAAOlO,IAAI,SAACwL,EAAO1P,GACf,OACK0P,EAAMG,MAAMQ,cAAce,SAAS9W,EAAKzB,MAAMma,SAAS3C,eACxDvV,EAAAC,EAAAC,cAAA,MAAI2D,IAAKqB,EAAGzO,KAAK,qBAAqB6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKhC,MAAMob,kBAAXtf,OAAAC,EAAA,EAAAD,CAAA,GAAiCsb,GAAQ1P,KAAK0P,EAAMG,OAAc,gBA1EzGrU,aCAtBmY,eACjB,SAAAA,EAAYrb,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAkb,IACfpb,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAuf,GAAA/a,KAAAH,KAAMH,KAQV+F,eAAiB,SAAC3H,GAAM,IAAAgc,EACftR,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvBwE,EAAK4B,UAALuY,EAAA,GAAAte,OAAAqO,GAAA,EAAArO,CAAAse,EACKtR,EAAYrN,GADjBK,OAAAqO,GAAA,EAAArO,CAAAse,EAAA,SAEgB,GAFhBA,KAZgBna,EA0BnBoa,YAAc,SAACjc,GACXA,EAAEuD,kBACC1B,EAAKqb,YAAYf,SAASnc,EAAE2K,SACM,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC1Bva,EAAKM,MAAMgb,OACNtb,EAAK4B,SAAS,CACV0Z,OAAgB,EAChBC,YAAgBvb,EAAKM,MAAMkb,cAjCpBxb,EAsCnB2a,gBAAkB,WACd3a,EAAK4B,SAAS,CACV0Z,OAAetb,EAAKM,MAAMgb,MAC1BC,YAAmBvb,EAAKM,MAAMgb,MAAStb,EAAKM,MAAMkb,WAAa,MAvCnExb,EAAKM,MAAe,CAChBib,YAAa,GACbC,WAAY,GACZF,OAAO,GALItb,mFAmBfuB,SAASC,iBAAiB,QAAStB,KAAKka,4DAIxC7Y,SAASO,oBAAoB,QAAS5B,KAAKka,+DAuBrBra,GACtB,IAAI6a,EAAoB7a,EAAMwL,UAAY,GAC1C,GAAKqP,GAASA,EAAQ,EAAG,CACrB,IAAIC,GAAyB9a,EAAMqF,WAAa,IAAI0V,UAAU,SAAAhG,GAAI,OAAIA,EAAKvZ,KAAOqf,IAC9Ea,EAAwB1b,EAAMqF,UAAUyV,GAAevD,MAC3DpX,KAAK0B,SAAS,CACV2Z,YAAgBE,EAChBD,WAAgBC,SAGpBvb,KAAK0B,SAAS,CACV4Z,WAAa,sCAKhB,IAAAzZ,EAAA7B,KACDwb,EAA4Bxb,KAAKH,MAAMqF,WAAa,GACpDA,EAA4B6V,iBAAQS,EAAmB,SAC3D,OACInZ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA2Y,GAAW,OAAItZ,EAAKsZ,YAAcA,GAAa1Y,UAAS,aAAA1D,OAAeiB,KAAKI,MAAMgb,MAAQ,SAAW,KAAOzY,QAAS3C,KAAKya,iBAChIpY,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAWzC,KAAKH,MAAM4C,UAAWuY,aAAa,OAAO1O,YAAY,UAAU3D,KAAK,cAAcrN,MAAO0E,KAAKI,MAAMib,YAAa/P,SAAUtL,KAAK4F,kBACzLvD,EAAAC,EAAAC,cAAA,UAEI2C,EAAUuG,IAAI,SAACpD,EAAUd,GACrB,OACKc,EAAS+O,MAAMQ,cAAce,SAAS9W,EAAKzB,MAAMib,YAAYzD,eAC9DvV,EAAAC,EAAAC,cAAA,MAAI2D,IAAKqB,EAAGzO,KAAK,qBAAqB6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKhC,MAAM4b,qBAAX9f,OAAAC,EAAA,EAAAD,CAAA,GAAoC0M,GAAWd,KAAKc,EAAS+O,OAAc,gBA1E/GrU,aCgxB/B2Y,eAhwBX,SAAAA,EAAY7b,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA0b,IACf5b,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+f,GAAAvb,KAAAH,KAAMH,KAmDV0D,aAAe,SAAAC,GAEX1D,EAAK4B,SAAS,CACV8B,kBAAmBA,EACnBN,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJoB,mBAAoB,QA1DbxE,EAmEnB6b,YAAc,SAAC1E,EAAOtL,IAImB7L,EAAKD,MAAMqF,WAAa,IAAI0V,UAAU,SAAChG,GAAD,OAAUA,EAAKvZ,KAAO4b,EAAM5b,KAClG4b,EAAM5b,GAEPyE,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJ+T,MAAwBA,EAAM5b,GAC9BgI,iBAAwB4T,EAAM5b,GAC9BugB,eAAwB3E,EAAMne,KAAKyV,MACnC1H,eAAwBoQ,EAAMne,KAAK+iB,SAK3C/b,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJ+T,MAAwB,GACxB5T,iBAAwB,GACxBuY,eAAwB,GACxB/U,eAAwB,QA3FrB/G,EAmGnBgc,sBAAwB,SAACzT,EAAUsD,IAIM7L,EAAKD,MAAMqF,WAAa,IAAI0V,UAAU,SAAChG,GAAD,OAAUA,EAAKvZ,KAAOgN,EAAShN,KACrGgN,EAAShN,GAEVyE,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJ+T,MAAwB5O,EAAShN,GACjCgI,iBAAwBgF,EAAShN,GACjCugB,eAAwBvT,EAASvP,KAAKyV,MACtC1H,eAAwBwB,EAASvP,KAAK+iB,SAK9C/b,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJ+T,MAAwB,GACxB5T,iBAAwB,GACxBuY,eAAwB,GACxB/U,eAAwB,QA3HrB/G,EAkInB2D,aAAe,SAAAD,GACX,IAAIpC,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACPkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAEb0G,4BAAiBJ,GAChBK,KAAK,SAACC,GAGH,OADAhL,EAAKoE,QAAU4G,EAAQ,GAAGC,mBAAqB,GACxCC,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAI,GAAkB,IAAfC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,IAGV,GADe,wCACH3G,KAAK1E,EAAKoE,SAAS,CACV4C,EAAKD,MAAMuE,gBAA5B,IAKQC,EAAetH,GAAgBjE,EAAKoE,UAEpCkF,kBAAQiC,IAAiBA,EAAa3G,WACtC5E,EAAK4K,SAAWQ,EAChBpL,EAAK6K,UAAYQ,EACjBrL,EAAKoE,QAAUmH,EAAanH,QAC5BpE,EAAKkF,QAAUqG,EAAarG,QAC5BlF,EAAKiF,WAAasG,EAAatG,WAC/BjF,EAAK+E,KAAOwG,EAAaxG,KACzB/E,EAAKgF,QAAUuG,EAAavG,QAC5BhF,EAAK6E,OAAS0G,EAAa1G,OAC3B7E,EAAK8E,OAASyG,EAAazG,OAI3BwD,EAAKM,SAAS,CAKVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFyF,EAAKhB,MAAM8C,SADV,CAEJoB,mBAAoBxL,IAExB0K,kBAAmB1K,EAAKoE,WAG5BkE,EAAKM,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFyF,EAAKhB,MAAM8C,SADV,CAEJoB,mBAAoB,YAWpClD,EAAKM,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFyF,EAAKhB,MAAM8C,SADV,CAEJoB,mBAAoB,SASnCE,MAAM,SAAC9E,GACJ0B,EAAKM,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFyF,EAAKhB,MAAM8C,SADV,CAEJoB,mBAAoB,OAO5BpG,QAAQwB,MAAM,QAASA,MA1NZI,EA8NnB8E,aAAe,SAAAxI,GACX0D,EAAK4B,SAAS,CACVwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACFmE,EAAKM,MAAM8C,SADV,CAEJC,cAAe/G,OAhOvB0D,EAAKic,cAAuB,CACxBC,cAAe,GACfC,UAAY,GACZL,eAAe,GACftN,YAAY,GACZ2I,MAAM,GACN5T,iBAAiB,GACjB6Y,eAAe,GACf/Y,cAAc,GACdgZ,gBAAgB,GAChB5W,cAAc,IAElBzF,EAAKM,MAAuB,CACzB2E,MAAiB,EACjBC,SAAiB,EACjBC,WAAiB,EACjBC,UAAiB,GACjBhC,SAAiB,GACjBmC,aAAiB,GACjBF,UAAiB,IAAIC,KACrB5B,kBAAyB,GACzBc,mBAAyB,CACpBtG,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,KAejB4C,EAAK2F,YAAuB3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAKsc,WAAuBtc,EAAKsc,WAAWxb,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAKuc,iBAAuBvc,EAAKuc,iBAAiBzb,KAAtBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAK6F,aAAuB7F,EAAK6F,aAAa/E,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAK8F,eAAuB9F,EAAK8F,eAAehF,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAKyD,aAAuBzD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC5BA,EAAK8E,aAAuB9E,EAAK8E,aAAahE,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAjDbA,0EA2OR7B,GACUA,EAAE2K,OACnB5I,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GACKsC,EAAE2K,OAAOD,MAAQ3I,KAAKI,MAAMnC,EAAE2K,OAAOD,oDAK1C,IAAI2T,EAAoBtc,KAAKH,MAAM0c,SAASC,SAC5Cxc,KAAK0B,SAAS,CAACwB,SAAU,CAAC8Y,cAAeM,KACzCtc,KAAKH,MAAMhH,iEAGWgH,GAAO,IAAAgC,EAAA7B,KAE7B,GAAMH,EAAM4c,kBAAoB5c,EAAM4c,mBAAqBzc,KAAKH,MAAM4c,iBAE/D,CACH,IAAIH,EAAoBtc,KAAKH,MAAM0c,SAASC,SAC5Cxc,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,KACZ7B,SAAQvH,OAAAC,EAAA,EAAAD,CAAA,GACDqE,KAAKI,MAAM8C,SADV,CAEJ8Y,cAAoBM,KAEzB,WACCza,EAAK8D,sBAVT3F,KAAKyF,cAaT,IAAIrD,kBAAQvC,EAAMwF,gBAAkBQ,kBAAQ7F,KAAKI,MAAMiF,aAAcxF,EAAMwF,cAAe,CACvFrF,KAAK8F,QAAe9F,KAAK+F,OAAOlG,EAAMwF,aAAaW,WAAYnG,EAAMwF,aAAaY,UACjF,IAAIV,EAAuBvF,KAAK8F,QAAQI,MAAUlG,KAAKI,MAAM8C,SAASqC,cAAiBvF,KAAK8F,QAAQI,IAAM,GAC1GlG,KAAK0B,SAAS,CACV2D,aAAgBxF,EAAMwF,aACtBnC,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAMqE,KAAKI,MAAM8C,SAAlB,CAA4BqC,cAAeA,6CAM3D,IAAI+W,EAAoBtc,KAAKH,MAAM0c,SAASC,SACxCjX,EAAoBvF,KAAK8F,QAAQI,IACrClG,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,CAEI2I,mBAAqB,GACrBpB,SAAiB,CACb8Y,cAAoBM,EACpB/W,cAAoBA,GAExB/B,kBAAwB,GACxB2B,UAAiB,IAAIC,MARzB,qBAS6B,CACrBpH,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,KAcd,WACC8C,KAAKH,MAAM4F,+CAIZuB,EAAOC,GASX,IAPA,IAAIC,EAAQ7K,OAASC,OAAO,cACxB6K,EAAM9K,OAAS+K,OAEflB,EAAM,GACNmB,EAAahL,KAAO6K,EAAM,IAAIF,EAAO,mBAAmBI,OACxDE,EAAajL,KAAO6K,EAAM,IAAID,EAAK,mBAAmBG,OACtDtO,EAAO,GACHyO,EAAEF,EAAYE,EAAED,EAAYC,GAL1B,KAMPzO,EAAK0O,KAAK,CACPC,EAAGpL,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAP5C,OAOyDjL,OAAO,aAEpE6K,GAAOI,GAAKJ,GAAOI,EATf,OAUJrB,EAAM7J,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAV/C,OAU4DjL,OAAO,YAG7E,MAAO,CAACxD,KAAKA,EAAMoN,IAAKA,+BAGvB9J,EAAMsL,EAAMjL,GACZ,IAAIkL,EAAWtL,KAAOD,GAAME,OAAO,cAAc,IAAIoL,EAErD,OAAOrL,KAAOI,GAAGkL,EAAU,qBAAsBlL,GAAImL,MAAMR,gDAG9CnJ,GAMb,GAJAA,EAAE4J,iBACsB7H,KAAK2F,eACI8C,QAG7B,OAAO,EAIX,IAAIvF,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAgBqE,KAAKI,MAAM8C,UACnCwZ,EAAoBxZ,EAAS+T,MAC7B0F,GAAqB3c,KAAKH,MAAM8Z,QAAU,IAAIiB,UAAU,SAAAhG,GAAI,OAAIA,EAAKvZ,KAAOqhB,IAC5EzF,EAAoBjX,KAAKH,MAAM8Z,OAAOgD,GACtC7U,EAAoBmP,EAAMne,KAAKgP,SAC/BJ,EAAoBxE,EAASqC,cAAcwC,MAAM,KACjDC,EAAoBN,EAAK,GACzBO,EAAoBP,EAAK,GACzBjJ,EAAoBuB,KAAK4H,IAAI1E,EAASC,cAAgB6E,EAAWF,GACpEpJ,EAAoBsB,KAAK4H,IAAI1E,EAASC,cAAe8E,EAASH,GAE3DhP,EAAY,CACZ4jB,QAAgBzF,EAAMne,KAAKyP,SAC3B5B,SAAU,CACNgC,KAAMzF,EAAS8Y,cACfzN,MAAOrL,EAAS0Y,eAChBvT,SAAU,CACN4O,EAAMne,KAAK6K,UACXsT,EAAMne,KAAK4K,UAEfxG,QAAS,CACLkD,MAAO6W,EAAMne,KAAKsH,MAClBkI,WAAY2O,EAAMne,KAAKwP,WACvBxK,QAASmZ,EAAMne,KAAKgF,QACpBD,KAAMoZ,EAAMne,KAAK+E,KACjBD,OAAQqZ,EAAMne,KAAK8E,OACnBD,OAAQsZ,EAAMne,KAAK6E,QAEvBmJ,MAAO5D,EAAS2D,gBAEpBqB,UAAW,CACP0U,MAAO1Z,EAAS2Z,gBAChBlU,KAAMzF,EAASgZ,eACf3N,MAAOrL,EAASiZ,gBAChB9T,SAAU,CACNnF,EAASoB,mBAAmBX,UAC5BT,EAASoB,mBAAmBZ,UAEhCxG,QAAS,CACLkD,MAAO8C,EAASoB,mBAAmBvG,WACnCuK,WAAYpF,EAASoB,mBAAmBtG,QACxCF,QAASoF,EAASoB,mBAAmBxG,QACrCD,KAAMqF,EAASoB,mBAAmBzG,KAClCD,OAAQsF,EAASoB,mBAAmB1G,OACpCD,OAAQuF,EAASoB,mBAAmB3G,QAExCmJ,MAAO5D,EAAS6D,iBAEpBuH,YAAapL,EAASoL,YACtB2I,MAAOA,EAAMne,KAAKme,MAClBxY,cAAeA,EACfC,eAAgBA,EAChBiQ,SAAU7G,EACV9C,QAAShF,KAAKI,MAAM4E,QAEpB0U,SAAU1Z,KAAKH,MAAM9G,KACrB+jB,SAAU,KACV7X,WAAW,EACXO,IAAQtC,EAASsC,IAAOtC,EAASsC,IAAM,EACvCuX,IAAK,CACDC,cAAe/F,EAAMne,KAAKikB,IAAIlO,eAC9BoO,YAAahG,EAAMne,KAAKikB,IAAIjO,aAC5BoO,eAAgBjG,EAAMne,KAAKikB,IAAI7N,gBAC/BiO,aAAclG,EAAMne,KAAKikB,IAAI5N,gBAIrCnP,KAAKH,MAAMud,WAAWtkB,0CAMtB,IAAIoK,EAA4BlD,KAAKI,MAAM8C,UAAY,GAEnDI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAA0BqE,KAAK+b,eACrCtT,GAA4B,EA0DhC,OAzDMvF,EAAS8Y,gBACX1Y,EAAO0Y,eAAqB,EAC5BvT,GAA4B,GAE1BvF,EAAS0Y,iBAKwB,IAAhC1Y,EAAS0Y,eAAete,QAAeoL,MAAMxF,EAAS0Y,mBAJzDtY,EAAOsY,gBAAqB,EAC5BnT,GAA4B,GAQ1BvF,EAASoL,cACXhL,EAAOgL,aAAqB,EAC5B7F,GAA4B,GAE1BvF,EAAS+T,QACX3T,EAAO2T,OAAqB,EAC5BxO,GAA4B,GAE1BvF,EAASG,mBAEXC,EAAOD,kBAAyB,EAChCoF,GAAgC,GAE9BvF,EAASgZ,iBACX5Y,EAAO4Y,gBAAqB,EAC5BzT,GAA4B,GAE1BvF,EAASC,gBACXG,EAAOH,eAAqB,EAC5BsF,GAA4B,GAE1BvF,EAASqC,gBACXjC,EAAOiC,eAAqB,EAC5BkD,GAA4B,GAE1BvF,EAASiZ,iBAKyB,IAAjCjZ,EAASiZ,gBAAgB7e,QAAcoL,MAAMxF,EAASiZ,oBACrD7Y,EAAO6Y,iBAAqB,EAC5B1T,GAA4B,IALhCnF,EAAO6Y,iBAAqB,EAC5B1T,GAA4B,IAO7BrG,kBAAQc,EAASoB,qBAAyBhB,EAAOE,qBAChDF,EAAOE,mBAAyB,EAChCiF,GAAgC,GAE/BvF,EAASsC,KAAOkD,MAAMxF,EAASsC,OAChClC,EAAOkC,KAAqB,EAC5BiD,GAA4B,GAEzB,CAACA,QAASA,EAASnF,OAAQA,0CAGvBrF,GACX,IAAImD,EAA4BpB,KAC5BkD,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAyBqE,KAAKI,MAAM8C,UAE1CyF,EAA0B1K,EAAE2K,OAAOD,KACnCrN,EAAuB2C,EAAE2K,OAAOtN,MACtC4H,EAASyF,GAAuBrN,EAChC,IAAIgI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAA0BqE,KAAKI,MAAMkD,QAC/CA,EAAOqF,GAAyB,GAEhC3I,KAAK0B,SAAS,CAAEwB,SAAUA,EAAUI,OAAQA,GAAU,WACtC,UAATqF,GACCvH,EAAKua,cAEG,qBAAThT,GACCvH,EAAK0a,2DAIR,IAAAvK,EAAAvR,KACD+E,EAAwB/E,KAAKI,MAAM2E,OAAQ,EAM3C7B,GALwBlD,KAAKH,MAAMqF,UACXlF,KAAKH,MAAM+Z,SACX5Z,KAAKH,MAAM8Z,OACX3Z,KAAKH,MAAMqF,UACXlF,KAAKH,MAAM6Z,SACX1Z,KAAKI,MAAM8C,UAAY,IAE/C4C,EAA2B9F,KAAK8F,SAAa9F,KAAK8F,QAAQhN,KAAQkH,KAAK8F,QAAQhN,KAAO,GAEtFukB,GAD2Brd,KAAKH,MAAMiG,SAAW9F,KAAKH,MAAMiG,QAAQI,IAC5ClG,KAAK2F,gBAE7BrC,EAAwB+Z,EAAS/Z,OACjC4F,EAAwBmU,EAAS5U,QAiB/BU,EAAe,CACjBC,MAAO,CACHC,MAAO,QACPC,QAAS,oBACTC,MAAO,OACPC,OAAO,KAEXC,sBAAuB,CACnBC,aAAc,cACdC,OAAQ,MACRC,WAAY,iEACZ7H,SAAU,WACV8H,OAAQ,oBACRC,UAAU,mCAEdC,iBAAiBpO,OAAAqO,GAAA,EAAArO,CAAA,CACbsO,UAAW,OACXC,SAAU,OACVZ,QAAS,mBACTa,WAAW,OACXZ,MAAO,OACPK,WAAY,gBACZJ,OAAQ,IACRY,UAAU,OACVC,aAAc,kBATF,aAUA,mEAEhBC,uBAAwB,CAAEf,MAAO,YAM1BvJ,KAAKI,MAAMlD,SAAU8C,KAAKI,MAAMlD,QAQ3C,OACImF,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,iBAAiBsC,KAAMA,EAAM0F,OAAQzK,KAAKyF,aACjEpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,qBAEJ6G,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMtC,aAAa,MAAMpQ,SAAU5K,KAAKqc,kBACpCha,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,QAAf,QAECjI,EAAS8Y,eAGd3Z,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SAYA9I,EAAAC,EAAAC,cAACgb,GAAD,CACI5D,OAAyB3Z,KAAKH,MAAM8Z,OACpCtO,SAAyBnI,EAAS+T,MAClCxU,UAA2Ba,EAAO2T,MAAQ,QAAU,GACpDgE,kBAAyBjb,KAAK2b,eAItCtZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,WAYA9I,EAAAC,EAAAC,cAACib,GAAD,CACItY,UAA6BlF,KAAKH,MAAMqF,UACxCmG,SAA6BnI,EAASG,iBACtCZ,UAA+Ba,EAAOD,iBAAmB,QAAU,GACnEoY,qBAA6Bzb,KAAK8b,yBAI1CzZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,gBAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,qBAAsB7J,UAAaa,EAAOgL,YAAe,cAAgB,QAAU3F,KAAK,cAAc2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASoL,eAExLjM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,qBAAqB7J,UAAaa,EAAOsY,eAAiB,cAAgB,QAAUjT,KAAK,iBAAiB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS0Y,mBAG5LvZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,iBAEA9I,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,CAAYG,UAAaa,EAAOH,cAAgB,cAAgB,QAAWkI,SAAUnI,EAASC,cAAemI,SAAUtL,KAAK4E,aAAc2G,QAAS,IAAInG,KAAQoG,gBAAgB,WAEnLnJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,QAAf,QAEA9I,EAAAC,EAAAC,cAAA,UAAQE,UAAaa,EAAOiC,cAAgB,cAAgB,QAAW8F,SAAUnI,EAASC,cAAewF,KAAK,gBAAgB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqC,eACzKlD,EAAAC,EAAAC,cAAA,+BAEKuD,GAAW,IAAI2F,IAAI,SAACC,EAAGC,GACpB,OACAtJ,EAAAC,EAAAC,cAAA,UAAQ2D,IAAKyF,EAAGrQ,MAAOoQ,EAAEjE,GAAIiE,EAAEjE,OAM/CpF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,iBAAiB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS2D,oBAIlHxE,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,QACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOiiB,aAAa,MAAM1O,YAAY,aAAa7J,UAAaa,EAAO4Y,eAAkB,cAAgB,QAAUvT,KAAK,iBAAiB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASgZ,kBAExM7Z,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,WAEA9I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACIhH,MAAO0E,KAAKI,MAAMoD,kBAClB8H,SAAUtL,KAAKuD,aACfwI,SAAU/L,KAAKyD,aACfuI,OAAQ7C,GAEP,SAAAzE,GAAA,IAAGwH,EAAHxH,EAAGwH,cAAeC,EAAlBzH,EAAkByH,YAAaC,EAA/B1H,EAA+B0H,uBAAwBC,EAAvD3H,EAAuD2H,QAAvD,OACDhK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,QAAA5G,OAAA8hB,OAAA,CACAzC,aAAa,OACT9O,EAAc,CACdI,YAAa,gBACb7J,UAAaa,EAAOE,kBAAqB,cAAgB,YAG7DnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OAC3B,0BACA,kBAEI9J,EAAQ6J,EAAWC,OACvB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WACxC,OACArK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,YAAOgK,EAAWI,qBAStCtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,UAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,qBAAqB7J,UAAaa,EAAO6Y,gBAAkB,cAAgB,QAAUxT,KAAK,kBAAkB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASiZ,mBAE9L9Z,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,UAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,QAAQuT,YAAY,cAAc7J,UAAU,QAAQkG,KAAK,kBAAkB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS2Z,mBAE1Ixa,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,aACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,kBAAkB2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS6D,mBAE/G1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cACZJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,WACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,WAAWsC,GAAG,UAAUsN,KAAK,UAAUlG,UAAU,QAAQib,QAAS1d,KAAKI,MAAM4E,QAASsG,SAAU,SAACrN,GAAD,OAAKsT,EAAK6K,WAAWne,SAQzIoE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,OAAf,OACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,OAAO7J,UAAaa,EAAOkC,IAAM,cAAgB,QAAUmD,KAAK,MAAM2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASsC,WAUpKnD,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAASgU,SAAU7D,KAAgBlJ,KAAKH,MAAM4c,iBAAkBha,UAAazC,KAAKH,MAAM4c,kBAAqBvT,EAAyB,GAAX,SAAe8D,QAAQ,WACvJhN,KAAKH,MAAM4c,iBAAmB,eAAiB,oBAzvBtD1Z,aCRJ4a,eACjB,SAAAA,EAAY9d,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2d,IACf7d,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgiB,GAAAxd,KAAAH,KAAMH,KAgEV4B,gBAAkB,WACd3B,EAAK4B,SAAS,CACVrB,SAAe,EACfC,EAAE,EACFC,EAAE,KArEST,EAyKnByD,aAAe,SAAAF,GAEXvD,EAAK4B,SAAS,CAAExH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GAAMmE,EAAKM,MAAMlG,OAAlB,CAA0BmJ,iBAAkBA,OA3KnDvD,EA8KnB2D,aAAe,SAAAJ,GAEX,IAAIjC,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACXkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAET0G,4BAAiBP,GAChBQ,KAAK,SAACC,GAGH,OADAhL,EAAKoE,QAAU4G,EAAQ,GAAGC,mBAAqB,GACxCC,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAI,GAAkBA,EAAfC,IAAeD,EAAVE,IAGV,GADe,wCACF3G,KAAK1E,EAAKoE,SAAU,CACZ4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,SAExC,IAAKkF,kBAAQiC,IAAiBA,EAAa3G,UAAW,CAClD,IAAIL,EAAmBgH,EAAahH,kBAAoB,GACxD+D,EAAKM,SAAS,CACdxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GACAmE,EAAKM,MAAMlG,OADZ,CAEFmJ,iBAAkBhG,KAEnB,WACH+D,EAAKvB,MAAM+d,aAAa,CACpB7kB,KAAMqI,EAAKhB,MAAMlG,OAAOnB,KACxBuC,MAAO+B,EACPwgB,UAAW7d,KAAKH,MAAMie,kBAI1BvZ,GAAY,oEACZnD,EAAKM,SAAS,CAMd8B,kBAAmB,QAK9BgB,MAAM,SAAA9E,GACHxB,QAAQC,IAAI,QAASuB,MAjOVI,EAqOnBie,sBAAwB,SAAAva,GAEpB1D,EAAK4B,SAAS,CAAExH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GAAMmE,EAAKM,MAAMlG,OAAlB,CAA0BsJ,kBAAmBA,OAvOpD1D,EA0OnBke,sBAAwB,SAAAxa,GAEpB,IAAIpC,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACXkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAET0G,4BAAiBJ,GAChBK,KAAK,SAACC,GAGH,OADAhL,EAAKoE,QAAU4G,EAAQ,GAAGC,mBAAqB,GACxCC,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAa,GAAkBA,EAAfR,IAAeQ,EAAVP,IAGV,GADe,wCACF3G,KAAK1E,EAAKoE,SAAU,CACZ4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,SAExC,IAAKkF,kBAAQiC,IAAiBA,EAAa3G,UAAW,CAClD,IAAIL,EAAmBgH,EAAahH,kBAAoB,GACxD+D,EAAKM,SAAS,CACdxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GACAmE,EAAKM,MAAMlG,OADZ,CAEFsJ,kBAAmBnG,KAEpB,WACH+D,EAAKvB,MAAM+d,aAAa,CACpB7kB,KAAMqI,EAAKhB,MAAMlG,OAAOnB,KACxBuC,MAAO+B,EACPwgB,UAAW7d,KAAKH,MAAMie,kBAI1BvZ,GAAY,oEACZnD,EAAKM,SAAS,CAMd8B,kBAAmB,QAK9BgB,MAAM,SAAA9E,GACHxB,QAAQC,IAAI,QAASuB,MA3RzBI,EAAKM,MAAe,CAChBE,EAAoB,GACpBC,EAAoB,GACpB0d,UAA4B,EAC5B/jB,OAA4B,CACxB+E,KAAwB,GACxBoE,iBAAwB,GACxBG,kBAAwB,GACxBwC,WAAwB,GACxBC,SAAwB,GACxBlN,KAAwB,eACxBqe,MAAwB,gBAE5B3B,aAA4B,IAEhC3V,EAAKgG,QAA+B,GACpChG,EAAKoe,iBAA+Bpe,EAAKoe,iBAAiBtd,KAAtBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKyD,aAA+BzD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK2D,aAA+B3D,EAAK2D,aAAa7C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKie,sBAA+Bje,EAAKie,sBAAsBnd,KAA3BjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKke,sBAA+Ble,EAAKke,sBAAsBpd,KAA3BjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKqe,gBAA+Bre,EAAKqe,gBAAgBvd,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK7F,YAA+B6F,EAAK7F,YAAY2G,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKse,aAA+Bte,EAAKse,aAAaxd,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK2a,gBAA+B3a,EAAK2a,gBAAgB7Z,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKue,SAA+Bve,EAAKue,SAASzd,KAAdjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKsU,kBAA+BtU,EAAKsU,kBAAkBxT,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA5BrBA,yFAwCOD,GACtBG,KAAK8F,QAAmBjG,EAAMiG,SAAW,GACzC9F,KAAK0B,SAAS,CACV+T,aAAgB5V,EAAM4V,yDAIZlU,EAAOW,GAGrBX,EAAMsG,iBACN,IAAMoO,EAAsB1U,EAAM+c,MAC5BnI,EAAsB5U,EAAM6U,MAC9BmI,EAAwBld,SAASmd,eAAe,WAChDvc,EAAwB,EACzBsc,EAAQE,YAAc,IACrBxc,EAAwBsc,EAAQG,aAPN1e,KAQzB0B,SAAS,CACVrB,SAAe,EACfC,EAAe2V,EAAShU,EACxB1B,EAAe4V,EAAS,IACxBxU,SAAQhG,OAAAC,EAAA,EAAAD,CAAA,GAAWuG,sCAYlBnJ,GACLiH,KAAK0B,SAAS,CACVuc,UAAU,4CAIFU,GACZ3e,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GACKgjB,GAAO3e,KAAKI,MAAMue,8CAIV7lB,GACdkH,KAAK0B,SAAS,CACTxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GACAqE,KAAKI,MAAMlG,OADZ,CAEFnB,KAAgBD,EAAKC,KACrBqe,MAAgBte,EAAKse,MACrBnY,KAAgB,GAChBgf,UAAgB,2CAMfhgB,GACT,IAAI3C,EAAQ2C,EAAE2K,OAAOtN,MACrB0E,KAAK0B,SAAS,CACdxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GAAMqE,KAAKI,MAAMlG,OAAlB,CAA0B+E,KAAMhB,EAAE2K,OAAOtN,SAC5C,WACCA,EAAMgC,OAAS,EACf0C,KAAKH,MAAM+d,aAAa,CACpB7kB,KAAMiH,KAAKI,MAAMlG,OAAOnB,KACxBuC,MAAOA,EACPuiB,UAAW7d,KAAKH,MAAMie,WAG1B9d,KAAK0B,SAAS,CACV+T,aAAc,+CAKVxX,EAAGlF,GACf,IAAIqI,EAAOpB,KAKPgH,EAAY,GACZC,EAAY,GACJ,UAATlO,IACCiO,EAAY/I,EAAE2K,OAAOtN,OAAS,GAC9B2L,EAAYjH,KAAKI,MAAMlG,OAAO+L,UAAY,IAGlC,QAATlN,IACCkO,EAAUhJ,EAAE2K,OAAOtN,OAAS,GAC5B0L,EAAchH,KAAKI,MAAMlG,OAAO8L,YAAc,IAGlDhG,KAAK0B,SAAS,CACVxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GACAqE,KAAKI,MAAMlG,OADZ,CAEF8L,WAAYgB,EACZf,SAAUgB,KAEf,WACMD,GAAWC,GACZ7F,EAAKvB,MAAM+d,aAAa,CACpB7kB,KAAMiO,EACN1L,MAAO2L,EACP4W,UAAW7d,KAAKH,MAAMie,mDAMxB,IAAAjc,EAAA7B,KACVA,KAAK0B,SAAS,CACVxH,OAA4B,CACxB+E,KAAuB,GACvBoE,iBAAuB,GACvBG,kBAAuB,GACvB+B,cAAuB,GACvBqZ,WAAuB,GACvBC,SAAuB,GACvB9lB,KAAuB,eACvBqe,MAAuB,gBAE3B3B,aAA0B,IAC3B,WACC5T,EAAKhC,MAAM5F,+DA6Hf+F,KAAKH,MAAM5F,+CAGL,IAAAsX,EAAAvR,KAEF8e,EAA2B9e,KAAK8F,SAAa9F,KAAK8F,QAAQiZ,KAAQ/e,KAAK8F,QAAQiZ,KAAO,GACtFC,EAA2Bhf,KAAK8F,SAAa9F,KAAK8F,QAAQmZ,GAAMjf,KAAK8F,QAAQmZ,GAAK,GAClFC,EAAwBlf,KAAKI,MAAMqV,cAAgB,GACnDA,EAAwB,GACxB0J,EAAwB,EACvB/c,kBAAQ8c,KACTzJ,EAAwByJ,EAAapM,OAAS,GAC9CqM,EAAwBD,EAAajG,OAAS,GAElD,IAAM9P,EAAsB,CACxBC,MAAoB,CAChBC,MAAgB,QAChBC,QAAgB,oBAChBC,MAAgB,OAChBC,OAAgB,KAEpBC,sBAA4B,CACxBC,aAAoB,cACpBC,OAAoB,MACpBC,WAAoB,iEACpB7H,SAAoB,WACpB8H,OAAoB,oBACpBC,UAAoB,mCAExBC,iBAAgBpO,OAAAqO,GAAA,EAAArO,CAAA,CACZsO,UAAoB,OACpBC,SAAoB,OACpBZ,QAAoB,mBACpBa,WAAoB,OACpBZ,MAAoB,OACpBK,WAAoB,gBACpBJ,OAAoB,IACpBY,UAAoB,OACpBC,aAAoB,kBATR,aAUQ,mEAExBC,uBAA4B,CAAEf,MAAO,YAGnC6V,EAAa,SAAAnT,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,YAAaC,EAA/BH,EAA+BG,uBAAwBC,EAAvDJ,EAAuDI,QAAvD,OACfhK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI2J,EAAc,CACdI,YAAa,gBACb7J,UAAW,WAGfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OACvB,0BACA,kBAEA9J,EAAQ6J,EAAWC,OACnB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WAC5C,OACIrK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,QAAMzJ,KAAK,eAAeyT,EAAWI,mBAOzD,OAEItK,EAAAC,EAAAC,cAAA,OAAKE,UAAS,gBAAA1D,OAAqBiB,KAAKH,MAAMwf,WAAc,GAAK,UAC9Dhd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,OACvC3Y,EAAAC,EAAAC,cAAA,OACGE,UAAS,cAAA1D,OAAgBiB,KAAKI,MAAM6d,SAAW,SAAW,KAC1DuB,OAAQ,kBAAMjO,EAAK8M,SAAS,cAE5Bhc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWE,QAAS,kBAAM4O,EAAKkJ,gBAAgB,cAC1DpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOiiB,aAAa,MAAMyE,UAAQ,EAACnkB,MAAO0E,KAAKI,MAAMlG,OAAOkd,MAAOzO,KAAK,gBAExFtG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM4O,EAAK2M,iBAAiB,CACtCnlB,KAAM,eACNqe,MAAO,mBAFV,gBAK4B,cAAvBpX,KAAKH,MAAM6f,QACZrd,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM4O,EAAK2M,iBAAiB,CACpCnlB,KAAM,kBACNqe,MAAO,sBAFZ,mBAG4B,KAEhC/U,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM4O,EAAK2M,iBAAiB,CACtCnlB,KAAM,mBACNqe,MAAO,uBAFV,oBAIA/U,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM4O,EAAK2M,iBAAiB,CACtCnlB,KAAM,oBACNqe,MAAO,wBAFV,qBAIA/U,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAM4O,EAAK2M,iBAAiB,CACtCnlB,KAAM,SACNqe,MAAO,aAFV,YAON/U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEL,CAAC,eAAgB,UAAUkW,SAAS3Y,KAAKI,MAAMlG,OAAOnB,MACvDsJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAMiiB,aAAa,MAAM1O,YAAY,SAAS3D,KAAK,YAAYrN,MAAO0E,KAAKI,MAAMlG,OAAO+E,KAAMqM,SAAUtL,KAAKoe,eAAkB,KAG/G,oBAA3Bpe,KAAKI,MAAMlG,OAAOnB,KACnBsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,QAAQkG,KAAK,aAAa2C,SAAU,SAACrN,GAAD,OAAOsT,EAAK4M,gBAAgBlgB,EAAG,UAAU3C,MAAO0E,KAAKI,MAAMlG,OAAO8L,YACrH3D,EAAAC,EAAAC,cAAA,+BAEIuc,GAAgB,IAAIrT,IAAI,SAACC,EAAGC,GAC1B,OACGtJ,EAAAC,EAAAC,cAAA,UAAQ2D,IAAKyF,EAAGrQ,MAAOoQ,EAAEpQ,OAAQoQ,EAAE0L,UAK/C/U,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,QAAQkG,KAAK,WAAW2C,SAAU,SAACrN,GAAD,OAAOsT,EAAK4M,gBAAgBlgB,EAAG,QAAQ3C,MAAO0E,KAAKI,MAAMlG,OAAO+L,UACjH5D,EAAAC,EAAAC,cAAA,+BAEIyc,GAAc,IAAIvT,IAAI,SAACC,EAAGC,GACxB,OACGtJ,EAAAC,EAAAC,cAAA,UAAQ2D,IAAKyF,EAAGrQ,MAAOoQ,EAAEpQ,OAAQoQ,EAAE0L,WAK1C,KAGoB,qBAA3BpX,KAAKI,MAAMlG,OAAOnB,KACnBsJ,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACMhH,MAAO0E,KAAKI,MAAMlG,OAAOmJ,iBACzBiI,SAAUtL,KAAKuD,aACfwI,SAAU/L,KAAKyD,aACfuI,OAAQ7C,GAEPiW,GACiB,KAGI,sBAA3Bpf,KAAKI,MAAMlG,OAAOnB,KACnBsJ,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACMhH,MAAO0E,KAAKI,MAAMlG,OAAOsJ,kBACzB8H,SAAUtL,KAAK+d,sBACfhS,SAAU/L,KAAKge,sBACfhS,OAAQ7C,GAEPiW,GACiB,MAGjC/c,EAAAC,EAAAC,cAAA,UAAQI,QAAS3C,KAAK/F,YAAawI,UAAU,YAAY1J,KAAK,SAA9D,YAINsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACVJ,EAAAC,EAAAC,cAAC8W,GAAD,CACIhZ,QAAyBL,KAAKI,MAAMC,QACpCC,EAAyBN,KAAKI,MAAME,EACpCC,EAAyBP,KAAKI,MAAMG,EACpCoB,SAAyB3B,KAAKI,MAAMuB,SACpChB,eAAyBX,KAAKH,MAAMc,eACpCiC,kBAAyB5C,KAAKH,MAAM+C,kBACpCE,cAAyB9C,KAAKH,MAAMiD,cACpCnJ,WAAyBqG,KAAKH,MAAMlG,WACpCmH,WAAyBd,KAAKH,MAAMiB,WACpCW,gBAAyBzB,KAAKyB,kBAG7B0d,EAAgB,EACjB9c,EAAAC,EAAAC,cAAA,WAEcH,kBAAQqT,GAiFR,KAhFF9Z,OAAOgZ,KAAKc,GAAgB,IAAIhK,IAAI,SAACmJ,EAAMrN,GACvC,IAAIwN,EAASU,EAAab,IAAS,GACnC,OACIvS,EAAAC,EAAAC,cAAA,WAAS2D,IAAKqB,EAAG9E,UAAU,aACvBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASmS,GAEvBG,EAAOtJ,IAAI,SAAC5N,EAAMmX,GACd,IAAIjC,EAAYlV,EAAKmV,QAAU,GAC/B,OACI3Q,EAAAC,EAAAC,cAAA,OAAK2D,IAAK8O,EAAOvS,UAAU,aACvBJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAW5E,EAAK8K,OAE9CtG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,aAEQwQ,EAAUtH,IAAI,SAACvJ,EAAO6R,GAElB,IAAIzV,EAAUF,GAAe8D,EAAMhB,YAC/BmC,EAAgB,GAAAtE,OAAMmD,EAAMlB,eAAerD,OAA3B,KAAAoB,OAAqCmD,EAAMlB,eAAepD,OAA1D,MAAAmB,OAAqEmD,EAAMlB,eAAenD,MAC1G2F,EAAiB,GAAAzE,OAAMmD,EAAMjB,eAAetD,OAA3B,KAAAoB,OAAqCmD,EAAMjB,eAAerD,OAA1D,MAAAmB,OAAqEmD,EAAMjB,eAAepD,MAC/G,OACIwE,EAAAC,EAAAC,cAAA,MACA2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAOsT,EAAK6C,kBAAkBnW,EAAG,CAC5CkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAWgB,EAAMhB,WACjBF,eAAgBqC,EAChBpC,eAAgBuC,MAEpBnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMC,cACXE,EAAAC,EAAAC,cAAA,UAAKL,EAAMiG,eAAX,MAA8BjG,EAAMkG,iBACpC/F,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACVJ,EAAAC,EAAAC,cAAA,aAAQc,GACRhB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQY,IAE5BhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACVJ,EAAAC,EAAAC,cAAA,aAAQiB,GACRnB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQe,IAE5BnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuM,aACXpM,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAErCmB,EAAAC,EAAAC,cAAA,UAEeL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQsT,EAAK1R,MAAM2U,gBAAgBvW,EAAG,CAC9CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBACnBrS,EAAMqS,cAAoB,iBAlEnG,iBAoFuBlS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe0c,EAA9B,qBACnB9c,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAGVJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAf,4DAzjBSM,aCPrB4c,eACjB,SAAAA,EAAY9f,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2f,IACf7f,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgkB,GAAAxf,KAAAH,KAAMH,KAQV+f,kBAAoB,SAAC3hB,EAAGmC,GACpBN,EAAK4B,SAAS,CACVme,SAAgB,IACjB,WACC/f,EAAKggB,cAAcC,QAAQC,UAE/BlgB,EAAKD,MAAM+f,kBAAkB3hB,EAAGmC,IAfjBN,EAkBnB8F,eAAiB,SAAC3H,GAAM,IAAAgc,EACdtR,EAAc1K,EAAE2K,OAAOD,KACvBrN,EAAc2C,EAAE2K,OAAOtN,MAC7BwE,EAAK4B,UAALuY,EAAA,GAAAte,OAAAqO,GAAA,EAAArO,CAAAse,EACKtR,EAAerN,GADpBK,OAAAqO,GAAA,EAAArO,CAAAse,EAAA,SAEoB,GAFpBA,KArBena,EAoCnBoa,YAAc,SAACjc,GACXA,EAAEuD,kBACC1B,EAAKmgB,UAAU7F,SAASnc,EAAE2K,SACQ,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC1Bva,EAAKM,MAAM8f,OACNpgB,EAAK4B,SAAS,CACVwe,OAAgB,EAChBL,SAAgB,MA3CT/f,EAgDnB2a,gBAAkB,WAEd3a,EAAK4B,SAAS,CACVwe,OAAepgB,EAAKM,MAAM8f,SAjD9BpgB,EAAKM,MAAe,CAChByf,SAAU,GACVK,OAAO,GAEXpgB,EAAKggB,cAAgBrf,IAAMC,YANZZ,mFA6BfuB,SAASC,iBAAiB,QAAStB,KAAKka,4DAIxC7Y,SAASO,oBAAoB,QAAS5B,KAAKka,8CAsBtC,IAAArY,EAAA7B,KAEDmgB,EAD0BC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAC1B9U,IAAI,SAACmJ,GAClD,MAAO,CACHwC,MAAOxC,EAAKtZ,MACZA,MAAOsZ,EAAKvZ,MAGhBT,EAA4BmgB,iBAAQoF,EAAgB,SACpDK,EAA4BxgB,KAAKH,MAAM2gB,aAAe,GAC1D,OACIne,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyd,GAAS,OAAIpe,EAAKoe,UAAYA,GAAWxd,UAAS,aAAA1D,OAAeiB,KAAKI,MAAM8f,MAAQ,SAAW,MACrG7d,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWE,QAAS3C,KAAKya,iBACxCpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK8f,cAAe9E,aAAa,OAAO1O,YAAY,QAAQ3D,KAAK,WAAWrN,MAAO0E,KAAKI,MAAMyf,SAAUvU,SAAUtL,KAAK4F,kBAE/IvD,EAAAC,EAAAC,cAAA,MAAIE,UAAY+d,EAAYljB,OAAS,EAAK,WAAa,KAUlD1C,GAAU,IAAI6Q,IAAI,SAACrL,EAAOmH,GACvB,IAAIyN,EAAgBwL,EAAYpjB,QAAQgD,EAAMgX,OAC9C,OACKhX,EAAMgX,MAAMQ,cAAce,SAAS9W,EAAKzB,MAAMyf,SAASjI,eACvD5C,GAAS,EACN3S,EAAAC,EAAAC,cAAA,MACI2D,IAAKqB,EACLzO,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKhC,MAAM4gB,mBAAmBxiB,EAAG,QAAS+W,IAC1DvS,UAAU,YAETrC,EAAMgX,OACH/U,EAAAC,EAAAC,cAAA,MACJ2D,IAAKqB,EACLzO,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAK+d,kBAAkB3hB,EAAvBtC,OAAAC,EAAA,EAAAD,CAAA,GAA8ByE,MAE7CA,EAAMgX,OAEb,gBApGWrU,aCApB2d,eACjB,SAAAA,EAAY7gB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA0gB,IACf5gB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+kB,GAAAvgB,KAAAH,KAAMH,KAQV8gB,iBAAmB,SAAC1iB,EAAGnF,GACnBgH,EAAK4B,SAAS,CACVkf,QAAe,IAChB,WACC9gB,EAAKggB,cAAcC,QAAQC,UAE/BlgB,EAAKD,MAAM8gB,iBAAiB1iB,EAAGnF,IAfhBgH,EAkBnB8F,eAAiB,SAAC3H,GAAM,IAAAgc,EACdtR,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvBwE,EAAK4B,UAALuY,EAAA,GAAAte,OAAAqO,GAAA,EAAArO,CAAAse,EACKtR,EAAWrN,GADhBK,OAAAqO,GAAA,EAAArO,CAAAse,EAAA,SAEgB,GAFhBA,KArBena,EAmCnBoa,YAAc,SAACjc,GACXA,EAAEuD,kBACC1B,EAAK+gB,SAASzG,SAASnc,EAAE2K,SACS,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC1Bva,EAAKM,MAAM0gB,OACNhhB,EAAK4B,SAAS,CACVof,OAAgB,EAChBF,QAAgB,MA1CT9gB,EA+CnB2a,gBAAkB,WACmB,IAA7B3a,EAAKD,MAAMjF,OAAO0C,QAEtBwC,EAAK4B,SAAS,CACVof,OAAehhB,EAAKM,MAAM0gB,SAjD9BhhB,EAAKM,MAAe,CAChBwgB,QAAS,GACTE,OAAO,GAEXhhB,EAAKggB,cAAgBrf,IAAMC,YANZZ,mFA4BfuB,SAASC,iBAAiB,QAAStB,KAAKka,4DAIxC7Y,SAASO,oBAAoB,QAAS5B,KAAKka,8CAuBtC,IAAArY,EAAA7B,KACD+gB,EAAa/gB,KAAKH,MAAM2X,KAAK/L,IAAI,SAAA+L,GAAI,OAAIA,EAAKlc,QAC9C0lB,EAA4BhhB,KAAKH,MAAMmhB,OAAS,GAEhDC,GAD4BjhB,KAAKH,MAAMqhB,iBAAmB,IAChBzV,IAAI,SAAArL,GAC9C,MAAO,CAAEA,MAAOA,EAAO4gB,MAAOA,EAAM5gB,MAEpC+gB,EAA8BpG,iBAAQkG,EAAkB,SAC5D,OACI5e,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAqe,GAAQ,OAAIhf,EAAKgf,SAAWA,GAAUpe,UAAS,aAAA1D,OAAeiB,KAAKI,MAAM0gB,MAAQ,SAAW,KAAOne,QAAS3C,KAAKya,iBACvHpY,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAA4C,IAA7BiB,KAAKH,MAAMjF,OAAO0C,OAAgB,MAAM,MACjE+E,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK8f,cAAe9E,aAAa,MAAMjO,SAAwC,IAA7B/M,KAAKH,MAAMjF,OAAO0C,OAA8BgP,YAAY,OAAO3D,KAAK,UAAUrN,MAAO0E,KAAKI,MAAMwgB,QAAStV,SAAUtL,KAAK4F,kBAE1MvD,EAAAC,EAAAC,cAAA,MAAIE,UAAYse,EAAWzjB,OAAS,EAAK,WAAa,KAUjD6jB,GAAY,IAAI1V,IAAI,SAACmJ,EAAMrN,GACxB,IAAIyZ,EAAYpM,EAAKoM,OAAS,GAE9B,OADAA,EAAgBjG,iBAAQiG,EAAO,uBAErBvV,IAAI,SAAC2V,EAAMzV,GACjB,IAAIqJ,EAAY+L,EAAW3jB,QAAQgkB,EAAKC,oBACxC,OACKD,EAAKC,mBAAmBzJ,cAAce,SAAS9W,EAAKzB,MAAMwgB,QAAQhJ,eAC9D5C,GAAS,EACV3S,EAAAC,EAAAC,cAAA,MACI2D,IAAKyF,EACL7S,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKhC,MAAM4gB,mBAAmBxiB,EAAG,OAAQ+W,IACzDvS,UAAU,YAET2e,EAAKC,mBANV,KAMgCzM,EAAKxU,MANrC,KAOQiC,EAAAC,EAAAC,cAAA,MACJ2D,IAAKyF,EACL7S,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAK8e,iBAAiB1iB,EAAtBtC,OAAAC,EAAA,EAAAD,CAAA,GAA6BylB,EAA7B,CAAmChhB,MAAOwU,EAAKxU,WAE9DghB,EAAKC,mBALF,KAKwBzM,EAAKxU,MAL7B,KAOV,kBAtGM2C,aCAnBue,eACjB,SAAAA,EAAYzhB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAshB,IACfxhB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA2lB,GAAAnhB,KAAAH,KAAMH,KAQVob,kBAAoB,SAAChd,EAAGgZ,GACpBnX,EAAK4B,SAAS,CACV6Y,SAAgB,IACjB,WACCza,EAAKggB,cAAcC,QAAQC,UAE/BlgB,EAAKD,MAAMob,kBAAkBhd,EAAGgZ,IAfjBnX,EAmCnBoa,YAAc,SAACjc,GACXA,EAAEuD,kBACC1B,EAAKqa,UAAUC,SAASnc,EAAE2K,SACQ,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC1Bva,EAAKM,MAAMka,QACNxa,EAAK4B,SAAS,CACV4Y,QAAgB,EAChBC,SAAgB,MA1CTza,EA+CnB2a,gBAAkB,WACiB,IAA3B3a,EAAKD,MAAM2X,KAAKla,SAEpBwC,EAAK4B,SAAS,CACV4Y,QAAgBxa,EAAKM,MAAMka,SAE/Bxa,EAAK8F,eAAuB9F,EAAK8F,eAAehF,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,OAnD5BA,EAAKM,MAAe,CAChBma,SAAU,GACVD,QAAQ,GAEZxa,EAAKggB,cAAgBrf,IAAMC,YANZZ,8EAkBJ7B,GAAG,IAAAgc,EACTtR,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvB0E,KAAK0B,UAALuY,EAAA,GAAAte,OAAAqO,GAAA,EAAArO,CAAAse,EACKtR,EAAYrN,GADjBK,OAAAqO,GAAA,EAAArO,CAAAse,EAAA,UAEiB,GAFjBA,gDAOC5Y,SAASC,iBAAiB,QAAStB,KAAKka,4DAIxC7Y,SAASO,oBAAoB,QAAS5B,KAAKka,8CAwBtC,IAAArY,EAAA7B,KACDuhB,EAAcvhB,KAAKH,MAAMoX,MAAMxL,IAAI,SAAAwL,GAAK,OAAIA,EAAMG,QAClD0D,EAAwB9a,KAAKH,MAAM8Z,QAAU,GAC7CnC,EAAwBxX,KAAKH,MAAM2X,MAAQ,GAC3CgK,EAAyBhK,EAAKla,OAAS,EAAKka,EAAK/L,IAAI,SAACmJ,GAAD,OAAUA,EAAKvZ,GAAGyQ,aAAc,GAErF6N,EAAwBoB,iBAAQD,EAAe,SAEnD,OACIzY,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA2X,GAAS,OAAItY,EAAKsY,UAAYA,GAAW1X,UAAS,aAAA1D,OAAeiB,KAAKI,MAAMka,OAAS,SAAW,KAAO3X,QAAS3C,KAAKya,iBAC3HpY,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAA0C,IAA3BiB,KAAKH,MAAM2X,KAAKla,OAAgB,MAAM,MAC/D+E,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK8f,cAAe9E,aAAa,MAAMjO,SAAsC,IAA3B/M,KAAKH,MAAM2X,KAAKla,OAA8BgP,YAAY,QAAQ3D,KAAK,WAAWrN,MAAO0E,KAAKI,MAAMma,SAAUjP,SAAUtL,KAAK4F,kBAE3MvD,EAAAC,EAAAC,cAAA,MAAIE,UAAY8e,EAAYjkB,OAAS,EAAK,WAAa,IAUnDqc,EAAOlO,IAAI,SAACwL,EAAO1P,GACf,IAAIka,EAAgBxK,EAAMyK,QAAWF,EAAa7I,SAAS1B,EAAMyK,QAAQ5V,YAAc,GACnFkJ,EAAYuM,EAAYnkB,QAAQ6Z,EAAMG,OAE1C,OACOH,EAAMyK,SAAaD,GAAUxK,EAAMG,MAAMQ,cAAce,SAAS9W,EAAKzB,MAAMma,SAAS3C,eAClF5C,GAAS,EACV3S,EAAAC,EAAAC,cAAA,MACI2D,IAAKqB,EACLzO,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKhC,MAAM4gB,mBAAmBxiB,EAAG,QAAS+W,IAC1DvS,UAAU,YAETwU,EAAMG,OACH/U,EAAAC,EAAAC,cAAA,MACJ2D,IAAKqB,EACLzO,KAAK,qBACL6J,QAAS,SAAC1E,GAAD,OAAO4D,EAAKoZ,kBAAkBhd,EAAvBtC,OAAAC,EAAA,EAAAD,CAAA,GAA8Bsb,MAE7CA,EAAMG,OAEb,gBArGWrU,aCenC4e,eACH,SAAAA,EAAY9hB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2hB,IAChB7hB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgmB,GAAAxhB,KAAAH,KAAMH,KAiLTxF,eAAiB,WACdyF,EAAK8hB,qBACL9hB,EAAKD,MAAMxF,kBApLKyF,EAuLnB8hB,mBAAqB,WAEb9hB,EAAK+hB,UACPC,cAAchiB,EAAK+hB,UACtB/hB,EAAK+hB,SAAWE,YAAY,WACzBjiB,EAAKD,MAAMxF,kBACX,MA7LayF,EAgMnBoa,YAAc,SAACjc,GACZA,EAAEuD,kBACC1B,EAAKkiB,WAAW5H,SAASnc,EAAE2K,SACxB9I,EAAKmiB,eAAe7H,SAASnc,EAAE2K,SAC/B9I,EAAKoiB,kBAAkB9H,SAASnc,EAAE2K,SACA,gBAAlC3K,EAAE2K,OAAOyR,aAAa,SACY,uBAAlCpc,EAAE2K,OAAOyR,aAAa,SACpBpc,EAAE2K,OAAOyR,aAAa,gBACtBva,EAAKM,MAAMgV,UAIdtV,EAAKM,MAAMif,YACbvf,EAAK4B,SAAS,CACX2d,YAAe,KA9MLvf,EAmNnB8f,kBAAoB,SAAC3hB,EAAGkkB,GAErBlkB,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWC,MAAMzH,UAAU,SAAChG,GACpD,OAAOA,EAAKtZ,QAAU6mB,EAAc7mB,SAGpC8mB,EAAWC,MAAM7a,KAAK,CACnB4P,MAAY+K,EAAc/K,MAC1B9b,MAAY6mB,EAAc7mB,QAGhC8mB,EAAWC,MAAatH,iBAAQqH,EAAWC,MAAO,SACnB,IAA5BD,EAAWC,MAAM/kB,SACjB8kB,EAAWE,MAAa,GACxBF,EAAWG,KAAa,IAE3BziB,EAAK4B,SAAS,CAEX0gB,WAAYA,GACZ,WACAtiB,EAAK0iB,wBAzOQ1iB,EA6OnB6gB,iBAA8B,SAAC1iB,EAAGwkB,GAC/BxkB,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWG,KAAK3H,UAAU,SAAChG,GACnD,OAAOA,EAAKtZ,QAAUmnB,EAAapB,sBAGnCe,EAAWG,KAAK/a,KAAK,CAClB4P,MAAK,GAAArY,OAAU0jB,EAAapB,mBAAvB,MAAAtiB,OAA8C0jB,EAAariB,MAA3D,KACL9E,MAAYmnB,EAAapB,mBACzBjhB,MAAYqiB,EAAariB,MACzB/E,GAAYonB,EAAapnB,KAG/B+mB,EAAWG,KAAYxH,iBAAQqH,EAAWG,KAAM,SAClB,IAA3BH,EAAWG,KAAKjlB,SAChB8kB,EAAWE,MAAc,IAE5BxiB,EAAK4B,SAAS,CAEX0gB,WAAYA,GACZ,WACAtiB,EAAK0iB,wBAnQQ1iB,EAuQnBmb,kBAA8B,SAAChd,EAAG4c,GAC/B5c,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWE,MAAM1H,UAAU,SAAChG,GACpD,OAAOA,EAAKtZ,QAAUuf,EAAczD,SAGpCgL,EAAWE,MAAM9a,KAAK,CACnBnM,GAAewf,EAAc/hB,KAAKuC,GAClCkN,SAAesS,EAAc/hB,KAAKyP,SAClC6O,MAAeyD,EAAczD,MAC7B9b,MAAeuf,EAAczD,QAGnCgL,EAAWE,MAAavH,iBAAQqH,EAAWE,MAAO,SAClDxiB,EAAK4B,SAAS,CAEX0gB,WAAYA,GACZ,WACAtiB,EAAK0iB,wBA1RQ1iB,EA8RnB2gB,mBAAqB,SAACxiB,EAAGlF,EAAMic,GAE5B/W,EAAEuD,kBACF,IAAIkhB,EAAoB5iB,EAAKM,MAAMgiB,YAAc,GACjD,GAAY,UAATrpB,EAAkB,CAClB,IAAI4pB,EAAiBD,EAAQ3pB,GAAMic,GAAO1Z,MAC1CsnB,iBAAQF,EAAQH,KAAM,SAAU/K,GAC7B,OAAOA,EAAKpX,QAAUuiB,IAS5BD,EAAQ3pB,GAAM8pB,OAAO7N,EAAO,GAC5B,IAAImN,EAA8B,UAATppB,EAAoB+G,EAAKM,MAAM+hB,cAAgB,KACpEM,EAA8B,SAAT1pB,EAAmB+G,EAAKM,MAAMqiB,aAAe,KAClE5H,EAA8B,UAAT9hB,EAAoB+G,EAAKM,MAAMya,cAAgB,KAC5C,IAAzB6H,EAAQL,MAAM/kB,SACdolB,EAAQJ,MAAa,GACrBI,EAAQH,KAAa,IAEG,IAAxBG,EAAQH,KAAKjlB,SACbolB,EAAQJ,MAAc,IAGzBxiB,EAAK4B,SAAS,CACX0gB,WAAaM,EACbP,cAAeA,EACfM,aAAcA,EACd5H,cAAeA,GACf,WACA/a,EAAK0iB,wBAhUQ1iB,EA4UnB0iB,mBAAqB,WAMlB1iB,EAAKD,MAAMijB,aAAa,CACrBjF,UAAU/d,EAAKD,MAAMie,SACrB/kB,KAAM+G,EAAKM,MAAMrH,KACjBqpB,WAAYtiB,EAAKM,MAAMgiB,YAAc,MAnVxCtiB,EAAKM,MAAsB,CACxBgV,UAAoB,EACpBC,aAAoB,EACpBC,SAAoB,EACpBC,WAAoB,EACpBlV,SAAoB,EACpB0E,MAAwB,EACxBod,cAAwB,KACxBM,aAAwB,KACxB5H,cAAwB,KACxBuH,WAAwB,CAACC,MAAM,GAAIE,KAAM,GAAID,MAAO,IACpDjD,YAAY,EACZ0D,YAAY,EACZtN,aAAc,IAEjB3V,EAAK+hB,SAA4B,KACjC/hB,EAAKgG,QAA4B,GACjChG,EAAKkjB,WAA4BljB,EAAKkjB,WAAWpiB,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKmjB,kBAAkCnjB,EAAKmjB,kBAAkBriB,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACvCA,EAAK2gB,mBAA4B3gB,EAAK2gB,mBAAmB7f,KAAxBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAK8F,eAA4B9F,EAAK8F,eAAehF,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKojB,mBAA4BpjB,EAAKojB,mBAAmBtiB,KAAxBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKqjB,gBAA4BrjB,EAAKqjB,gBAAgBviB,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKa,eAA+Bb,EAAKa,eAAeC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK8C,kBAA+B9C,EAAK8C,kBAAkBhC,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKgD,cAA+BhD,EAAKgD,cAAclC,KAAnBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK0U,gBAA+B1U,EAAK0U,gBAAgB5T,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKnG,WAA+BmG,EAAKnG,WAAWiH,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKgB,WAA+BhB,EAAKgB,WAAWF,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK2F,YAA+B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA/BpBA,8EAkCJiB,EAAMC,EAAgBC,GACjCjB,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV0T,UAAoB,EACpBpU,eAAoBA,EACpBC,eAAoBA,8CAIVF,GACdf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV2T,aAAa,0CAIPtU,GACVf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACV4T,SAAS,4CAIDrX,EAAGnF,GAChBmF,EAAEuD,kBACDxB,KAAK0B,SAAS,CACV6T,WAAW,EACX5C,WAAY7Z,EAAK2b,YACjB/B,YAAa5Z,EAAKyb,kDAIfxT,EAAM1C,GACV2R,OAAOgG,QAAQ,sDACdhW,KAAKH,MAAM/F,iBAAiB,CAACiH,KAAMA,EAAM1C,OAAQA,uCAI9C0C,GACJiP,OAAOgG,QAAQ,4CACdhW,KAAKH,MAAMlG,WAAW,CAACoH,KAAMA,0CAM/Bf,KAAK0B,SAAS,CACXrB,SAAe,EACf0E,MAAe,EACfqQ,UAAe,EACfE,SAAe,EACfD,aAAe,EACfE,WAAe,iDAKrBvV,KAAK0B,SAAS,CACXqhB,YAAe,EACf1D,YAAgBrf,KAAKI,MAAMif,WAC3Ba,OAAe,EACfY,OAAe,EACfxG,QAAe,8CAMlBta,KAAK0B,SAAS,CACX2d,YAAW,EACX0D,YAAa/iB,KAAKI,MAAM2iB,kDAK3B/iB,KAAK0B,SAAS,CACXqD,MAAM,gDAKT/E,KAAK0B,SAAS,CACXqD,MAAM,GACN,6CAKCiC,EAAOC,GAUX,IARA,IAAIC,EAAQ7K,OAASC,OAAO,cACxB6K,EAAM9K,OAAS+K,OAEflB,EAAM,GACNmB,EAAahL,KAAO6K,EAAM,IAAIF,EAAO,mBAAmBI,OACxDE,EAAajL,KAAO6K,EAAM,IAAID,EAAK,mBAAmBG,OACtD2X,EAAO,GACPE,EAAK,GACD1X,EAAEF,EAAYE,EAAED,EAAYC,GAN1B,KAOPwX,EAAKvX,KAAK,CACP4P,MAAS/a,KAAS,IAAFkL,GAAQjL,OAAO,WAC/BhB,MAASe,KAAS,IAAFkL,GAAQjL,OAAO,cAElC2iB,EAAGzX,KAAK,CACL4P,MAAS/a,KAAe,KAAPkL,EAZb,OAY0BjL,OAAO,WACrChB,MAASe,KAAe,KAAPkL,EAbb,OAa0BjL,OAAO,cAErC6K,GAAOI,GAAKJ,GAAOI,EAff,OAgBJrB,EAAM7J,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAhB/C,OAgB4DjL,OAAO,YAG7E,MAAO,CAACyiB,KAAKA,EAAME,GAAGA,EAAI/Y,IAAKA,+CAGd,IAAArE,EAAA7B,KACbqX,EAAcrX,KAAKH,MAAMujB,WAE7B,GAAIhhB,kBAAQiV,IAAWA,EAAOwG,YAAc7d,KAAKH,MAAMie,SASpD,CACN,IAAI/kB,EAAuC,UAAxBiH,KAAKH,MAAMie,SAAwB,UAAY9d,KAAKH,MAAMie,SAC7E9d,KAAK0B,SAAS,CACb3I,KAAOA,GACL,WACM8I,EAAK2gB,qBACL3gB,EAAKxH,wBAbd2F,KAAK0B,SAAS,CACb0gB,WAAe/K,EAAO+K,WACtBrpB,KAAese,EAAOte,MACpB,WAEM8I,EAAKxH,mBAYX2F,KAAK8F,QAAU9F,KAAK+F,OAAO/F,KAAKH,MAAMwF,aAAaW,WAAYhG,KAAKH,MAAMwF,aAAaY,UACvF5E,SAASC,iBAAiB,QAAStB,KAAKka,aAAa,4CAyJvCnhB,GAAM,IAAAwY,EAAAvR,KACpBA,KAAK0B,SAAS,CACjB3I,KAAMA,GACJ,WACFwY,EAAKiR,8DAiBUvkB,GACZ,IAAM0K,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvB0E,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GAAiBgN,EAAOrN,GAAS,gEAIVuE,GAAO,IAAAwjB,EAAArjB,KAC9B,GAAI6F,kBAAQ7F,KAAKH,MAAMujB,WAAYvjB,EAAMujB,YAsBtCpjB,KAAK0B,SAAS,CAEX+T,aAAc5V,EAAM4V,mBAxB4B,CACnD,IAAI4B,EAAcxX,EAAMujB,WACxB,GAAIhhB,kBAAQiV,IAAWA,EAAOwG,YAAche,EAAMie,SAU3C,CACJ,IAAI/kB,EAAkC,UAAnB8G,EAAMie,SAAwB,UAAYje,EAAMie,SACnE9d,KAAK0B,SAAS,CACX3I,KAAOA,EACP0c,aAAc5V,EAAM4V,cACpB,WACA4N,EAAKb,4BAdRxiB,KAAK0B,SAAS,CACX0gB,WAAe/K,EAAO+K,WACtBrpB,KAAese,EAAOte,KACtB0c,aAAc5V,EAAM4V,cACpB,8DAuBTpU,SAASO,oBAAoB,QAAS5B,KAAKka,aAC3C4H,cAAc9hB,KAAK6hB,2CAKb,IAAAyB,EAAAC,EAAAvjB,KAKFghB,GAF0BhhB,KAAKH,MAAM8Z,OACX3Z,KAAKH,MAAMqF,UACXlF,KAAKH,MAAMmhB,OAAS,IAQ9CR,GAP0BJ,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAC1B9U,IAAI,SAACmJ,GACnD,MAAO,CACJwC,MAAOxC,EAAKtZ,MACZA,MAAOsZ,EAAKvZ,MAGA,IACd6lB,EAAkB,GACtBlhB,KAAKI,MAAMgiB,WAAWC,MAAMlL,QAAQ,SAAC/W,GAClCogB,EAAYhZ,KAAKpH,EAAMgX,OACvB8J,EAAgB1Z,KAAKpH,EAAM9E,SAEb0E,KAAKI,MAAMgiB,WAAWG,KAAK9W,IAAI,SAAA+L,GAAI,OAAIA,EAAKlc,QAC3C0E,KAAKI,MAAMgiB,WAAWE,MAAM7W,IAAI,SAAAwL,GAAK,OAAIA,EAAMG,QAClD8J,EAAgBzV,IAAI,SAAArL,GAChC,MAAO,CAAEA,MAAOA,EAAO4gB,MAAOA,EAAM5gB,MAEvC,OACGiC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM4gB,EAAKC,iBAAiB,YAAY/gB,UAAgC,YAApBzC,KAAKI,MAAMrH,KAAsB,UAAY,IAAhH,WACAsJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM4gB,EAAKC,iBAAiB,aAAa/gB,UAAgC,aAApBzC,KAAKI,MAAMrH,KAAuB,UAAY,IAAlH,QAGNsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAM2iB,WAAa,aAAa,GAAxD,KAA+DpgB,QAAS3C,KAAKmjB,iBAAiB9gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAlJ,WACAphB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA0f,GAAiB,OAAIqB,EAAKrB,kBAAoBA,GAAmBzf,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAMif,WAAa,YAAY,GAAvD,KAA8D1c,QAAS3C,KAAKkjB,oBAAoB7gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAA1N,YAEHphB,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,MAAMvY,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAM2iB,WAAa,gBAAgB,KACjH1gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,eACAJ,EAAAC,EAAAC,cAACmhB,GAAD,CACGlD,YAAaA,EACb5lB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BzC,kBAAmB5f,KAAK4f,kBACxBa,mBAAoBzgB,KAAKygB,qBAE5Bpe,EAAAC,EAAAC,cAACohB,GAAD,CACGnM,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B3nB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BrB,MAAOhhB,KAAKH,MAAMmhB,MAClBE,gBAAiBA,EACjBP,iBAAkB3gB,KAAK2gB,iBACvBF,mBAAoBzgB,KAAKygB,qBAE5Bpe,EAAAC,EAAAC,cAACqhB,GAAD,CACG3M,MAAOjX,KAAKI,MAAMgiB,WAAWE,MAC7B9K,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B5I,OAAQ3Z,KAAKH,MAAM8Z,OACnBsB,kBAAmBjb,KAAKib,kBACxBwF,mBAAoBzgB,KAAKygB,sBAIlCpe,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyf,GAAc,OAAIsB,EAAKtB,eAAiBA,GAAgBxf,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAMif,WAAa,YAAY,GAAvD,KAA8D1c,QAAS3C,KAAKkjB,oBAAoB7gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAjN,WACAphB,EAAAC,EAAAC,cAAA,UAAQxJ,KAAK,SAAS4J,QAAS3C,KAAKgjB,WAAYvgB,UAAU,gBAA1D,eAAqFJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,mBAAmBkU,IAAI,QAIzF,KAA9BzjB,KAAKH,MAAMgkB,eAAyBxhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAczC,KAAKH,MAAMgkB,eAAxC,IAA0D7jB,KAAKH,MAAMgkB,gBAAkB,EAAK,aAAe,eAAuB,KAGhL7jB,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EAClH+E,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAEZzC,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,EACnC0C,KAAKI,MAAMgiB,WAAWC,MAAM5W,IAAI,SAAC4L,EAAQrC,GACtC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOslB,EAAK9C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,KAGPzjB,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,EAClC0C,KAAKI,MAAMgiB,WAAWG,KAAK9W,IAAI,SAAC4L,EAAQrC,GACrC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOslB,EAAK9C,mBAAmBxiB,EAAG,OAAQ+W,KACnD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,KAGPzjB,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACnC0C,KAAKI,MAAMgiB,WAAWE,MAAM7W,IAAI,SAAC4L,EAAQrC,GACtC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOslB,EAAK9C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,MAEH,KAEXphB,EAAAC,EAAAC,cAAA,OACGC,IAAK,SAAAwf,GAAU,OAAIuB,EAAKvB,WAAaA,IACrC3f,EAAAC,EAAAC,cAACuhB,IAADR,EAAA,CACG7N,aAAyBzV,KAAKI,MAAMqV,aACpCpQ,aAAyBrF,KAAKH,MAAMwF,aACpCS,QAAyB9F,KAAK8F,QAC9B8X,aAAyB5d,KAAKH,MAAM+d,aACpC3jB,YAAyB+F,KAAKH,MAAM5F,YACpColB,WAAyBrf,KAAKI,MAAMif,WACpC7lB,eAAyBwG,KAAKH,MAAMrG,eACpC2M,YAAyBnG,KAAKH,MAAMsG,YACpCxM,WAAyBqG,KAAKH,MAAMlG,WACpCG,iBAAyBkG,KAAKH,MAAM/F,iBACpCV,SAAyB4G,KAAKH,MAAMzG,SACpCG,gBAAyByG,KAAKH,MAAMtG,gBACpCoH,eAAyBX,KAAKW,eAC9BiC,kBAAyB5C,KAAK4C,kBAC9BE,cAAyB9C,KAAK8C,eAfjCnH,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,aAgB4BtjB,KAAKrG,YAhBjCgC,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,aAiB4BtjB,KAAKc,YAjBjCnF,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,kBAkB4BtjB,KAAKwU,iBAlBjC7Y,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,UAmB2B,aAnB3B3nB,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,WAoB4BtjB,KAAKI,MAAMrH,MApBvCuqB,KAuBHjhB,EAAAC,EAAAC,cAACwhB,GAAD,CACGhrB,KAAyBiH,KAAKI,MAAMrH,KACpCgM,KAAM/E,KAAKI,MAAM2E,KACjBU,YAAazF,KAAKyF,YAClB5M,aAAcmH,KAAKH,MAAMhH,aACzB6gB,SAAU1Z,KAAKH,MAAM6Z,SACrBC,OAAQ3Z,KAAKH,MAAM8Z,OACnBzU,UAAWlF,KAAKH,MAAMqF,UACtB0U,SAAU5Z,KAAKH,MAAM+Z,SACrB9T,QAAS9F,KAAKH,MAAMiG,QACpByW,SAAUvc,KAAKH,MAAM0c,SACrBlX,aAAcrF,KAAKH,MAAMwF,aACzB+X,WAAYpd,KAAKH,MAAMud,WACvBX,iBAAyBzc,KAAKH,MAAM4c,mBAGjCzc,KAAKI,MAAMgV,SACd/S,EAAAC,EAAAC,cAACkX,GAAD,CACGtT,YAAyBnG,KAAKH,MAAMsG,YACpCpB,KAAyB/E,KAAKI,MAAMgV,SACpCtP,QAAyB9F,KAAKH,MAAMiG,QACpCT,aAAyBrF,KAAKH,MAAMwF,aACpCjM,SAAyB4G,KAAKH,MAAMzG,SACpC4H,eAAyBhB,KAAKI,MAAMY,eACpCC,eAAyBjB,KAAKI,MAAMa,eACpCwE,YAAyBzF,KAAKyF,cAC5B,KAILpD,EAAAC,EAAAC,cAACsX,GAAD,CACG9U,KAAyB/E,KAAKI,MAAMmV,UACpC5C,WAAyB3S,KAAKI,MAAMuS,WACpCD,YAAyB1S,KAAKI,MAAMsS,YACpCjN,YAAyBzF,KAAKyF,cAI9BzF,KAAKI,MAAMiV,YACdhT,EAAAC,EAAAC,cAACuX,GAAD,CACG/U,KAAyB/E,KAAKI,MAAMiV,YACpClP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC5B,KAGFzF,KAAKI,MAAMkV,QACdjT,EAAAC,EAAAC,cAACwX,GAAD,CACGhV,KAAyB/E,KAAKI,MAAMkV,QACpCnP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC5B,aAlkBC1C,aAwkBNihB,eAAWrC,IC/kBpBsC,eASH,SAAAA,EAAYpkB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAikB,IAChBnkB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAsoB,GAAA9jB,KAAAH,KAAMH,KAsHTijB,aAAe,SAAChqB,GACbgH,EAAK4B,SAAS,CACX0hB,WAAWznB,OAAAC,EAAA,EAAAD,CAAA,GAAK7C,KAEnBgH,EAAKD,MAAMijB,aAAXnnB,OAAAC,EAAA,EAAAD,CAAA,GAA4B7C,KA3HZgH,EA6HnBsZ,iBAAmB,SAACH,GACjBnZ,EAAK4B,SAAS,CACXmiB,eAAqB5K,KA/HRnZ,EAmInBzF,eAAiB,WACd,IAAI+oB,EAAiBtjB,EAAKM,MAAMgjB,YAAc,GAC1ChB,EAAiBgB,EAAWhB,YAAc,GAC1CrpB,EAA0C,UAAxB+G,EAAKD,MAAMie,SAAwB,UAAYhe,EAAKD,MAAMie,SAC5EhlB,EAAU,GACd,IAAIsJ,kBAAQggB,GAAa,CACtB,GAA+B,IAA5BA,EAAWE,MAAMhlB,QAA2C,IAA3B8kB,EAAWG,KAAKjlB,QAAgB8kB,EAAWC,MAAM/kB,OAAS,EAAG,CAC3F,IAAI1C,GAAqBwnB,EAAWC,OAAS,IAAI5W,IAAI,SAAAmJ,GAErD,OAAOA,EAAKtZ,QAEZV,EAAO0C,OAAS,IACbxE,EAAS,CACNC,KAAQ,QACRqH,MAASxF,IAOrB,GAA+B,IAA5BwnB,EAAWE,MAAMhlB,QAAgB8kB,EAAWG,KAAKjlB,OAAS,EAAG,CAC7D,IAAI0jB,EAAmB,IACtBoB,EAAWG,MAAQ,IAAI9W,IAAI,SAACmJ,GAC1B,IAAII,EAASgM,EAAMpG,UAAU,SAACsJ,GAAD,OAAOA,EAAE9jB,QAAUwU,EAAKxU,QAElD4U,GAAS,EACTgM,EAAMhM,GAAO0M,QAAQla,KAAKoN,EAAKvZ,IAE/B2lB,EAAMxZ,KAAK,CACRpH,MAAOwU,EAAKxU,MACZshB,QAAU,CAAC9M,EAAKvZ,QAKtB2lB,EAAM1jB,OAAS,IACfxE,EAAS,CACNC,KAAQ,QACRorB,MAASnD,IAQlB,GAAGoB,EAAWE,MAAMhlB,OAAS,EAAG,CAC7B,IAAI2Z,EAAoB,IACvBmL,EAAWE,OAAS,IAAInL,QAAQ,SAAAvC,GAC9BqC,EAAMzP,KAAKoN,EAAKrM,SAASuD,cAEzBmL,EAAM3Z,OAAS,IACfxE,EAAS,CACNC,KAAQ,QACRwP,SAAW0O,IAMpBne,EAAK+kB,UAAauF,EAAWrqB,MAAQA,EAC/BD,EAAKC,OACRD,EAAKC,KAAa,WAErB+G,EAAKD,MAAMxF,eAAevB,KAlM7BgH,EAAKM,MAA4B,CACGkW,OAAqBxW,EAAKD,MAAM0c,SAAYzc,EAAKD,MAAM0c,SAASjG,OAAS,GAMzEI,UAAkB,GAClBwJ,OAAkB,EAClBve,SAAkB,GAClBkiB,eAAkB,GAClBT,WAAkB,IAEtDtjB,EAAKgG,QAA4B,GAGjChG,EAAK8d,aAA4B9d,EAAK8d,aAAahd,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAlBjBA,4EA6BLskB,GAEXpkB,KAAKH,MAAM3F,OAAXyB,OAAAC,EAAA,EAAAD,CAAA,GACMyoB,gDAqCNpkB,KAAK0B,SAAS,CACX0hB,WAAYpjB,KAAKH,MAAMujB,WAAWiB,WAAa,uDAqB3BxkB,GAEvBG,KAAK0B,SAAS,CACX0hB,WAAYvjB,EAAMujB,WAAWiB,WAAa,sCA6G7C,IAAIC,EAA0BtkB,KAAKH,MAAMqF,WAAa,GAClD0U,IAA6B0K,EAAa1K,UAAY0K,EAAa1K,SACnED,EAA0B2K,EAAa3K,QAAU,GACjDzU,EAA0Bof,EAAapf,WAAa,GACpDwU,EAA0B4K,EAAa5K,UAAY,GACnDsH,EAA0BsD,EAAatD,OAAS,GAChDlD,EAA0B9d,KAAKH,MAAMie,UAAY,GAiBjDsF,EAAapjB,KAAKI,MAAMgjB,WAExBrqB,EAAc,GACdqpB,EAAc,GAMlB,OALIhgB,kBAAQghB,KACTrqB,EAAiCqqB,EAAWrqB,KAC5CqpB,EAAiCgB,EAAWhB,YAI5C/f,EAAAC,EAAAC,cAAA,QAAME,UAAS,iBAAA1D,OAAiC,UAAb+e,EAAwB,WAAa,KAEhE1b,kBAAQpC,KAAKH,MAAMwF,cAkChB,KAjCLhD,EAAAC,EAAAC,cAACgiB,GAAD,CACGV,eAAyB7jB,KAAKI,MAAMyjB,eAEpCT,WAAyBA,EACzBtF,SAAyBA,EACzBnE,OAAyBA,EACzBqH,MAAyBA,EAKzBpD,aAAyB5d,KAAK4d,aAC9B3jB,YAAyB+F,KAAKH,MAAM5F,YAGpCpB,aAAyBmH,KAAKH,MAAMhH,aACpC6gB,SAAyBA,EACzBxU,UAAyBA,EACzB0U,SAAyBA,EACzB9T,QAAyB9F,KAAK8F,QAC9ByW,SAAyBvc,KAAKH,MAAM0c,SACpClX,aAAyBrF,KAAKH,MAAMwF,aACpC+X,WAAyBpd,KAAKH,MAAMud,WACpC3H,aAAyBzV,KAAKH,MAAM4V,aACpCjc,eAAyBwG,KAAKH,MAAMrG,eACpC2M,YAAyBnG,KAAKH,MAAMsG,YACpCxM,WAAyBqG,KAAKH,MAAMlG,WACpCG,iBAAyBkG,KAAKH,MAAM/F,iBACpCV,SAAyB4G,KAAKH,MAAMzG,SACpCG,gBAAyByG,KAAKH,MAAMtG,gBACpCkjB,iBAAyBzc,KAAKH,MAAM4c,iBACpCqG,aAAyB9iB,KAAK8iB,aAC9BzoB,eAAyB2F,KAAK3F,iBAGpCgI,EAAAC,EAAAC,cAAA,WAEQH,kBAAQghB,IAAgBhhB,kBAAQpC,KAAKH,MAAMwF,cAsBrC,KArBLhD,EAAAC,EAAAC,cAACiiB,GAAD,CACGpL,iBAAsBpZ,KAAKoZ,iBAC3BrgB,KAAsBA,EACtBud,OAAsBtW,KAAKI,MAAMkW,OACjCV,YAAsBwM,EAAWC,MACjCxM,WAAsBuM,EAAWG,KACjCzM,YAAsBsM,EAAWE,MACjC5L,UAAsB1W,KAAKI,MAAMsW,UACjCgD,SAAsBA,EACtBC,OAAsBA,EACtBzU,UAAsBA,EACtB0U,SAAsBA,EACtB9T,QAAsB9F,KAAK8F,QAC3BtM,eAAsBwG,KAAKH,MAAMrG,eACjC2M,YAAsBnG,KAAKH,MAAMsG,YACjCxM,WAAsBqG,KAAKH,MAAMlG,WACjCG,iBAAsBkG,KAAKH,MAAM/F,iBACjCV,SAAsB4G,KAAKH,MAAMzG,SACjCiM,aAAsBrF,KAAKH,MAAMwF,aACjC9L,gBAAsByG,KAAKH,MAAMtG,gBACjC2Z,YAAsBlT,KAAKH,MAAMqT,uBAlTxBnQ,aAA3BkhB,GAKIQ,aAAe,CACnBlI,SAAe,IAoTNyH,mBAAWC,ICtNXS,eA9Ba,SAAAhgB,EAAoCigB,GAAa,IAA/CC,EAA+ClgB,EAA/CkgB,iBAAkBC,EAA6BngB,EAA7BmgB,cAE5C,MAAQ,CACAtI,SAAUoI,EAASpI,SACnBE,iBAAkBmI,EAAiBnI,iBACnCvX,UAAW0f,EAAiB1f,UAC5B4Y,SAAU+G,EAAc/G,SACxBzY,aAAcwf,EAAcxf,aAC5Bc,YAAaye,EAAiBze,YAC9BsP,aAAcmP,EAAiBnP,aAC/B2N,WAAYyB,EAAczB,WAC1B0B,eAAgBD,EAAcC,eAC9B5R,YAAa0R,EAAiB1R,cAKf,SAAA6R,GAAQ,MAAK,CACtCjC,aAAc,SAAChqB,GAAD,OAAUisB,EzByEE,SAACjsB,GAAD,MAAW,CACrCC,KAAMH,EACNE,QyB3EiCksB,CAAqBlsB,KACtDgB,iBAAkB,SAAChB,GAAD,OAAUisB,EAASC,EAAyBlsB,KAC9Da,WAAY,SAACb,GAAD,OAAUisB,EAASC,EAAmBlsB,KAClDD,aAAc,SAACC,GAAD,OAAUisB,EAASC,EAAqBlsB,KACtDskB,WAAY,SAACtkB,GAAD,OAAUisB,EzBxDE,SAACjsB,GAAD,MAAW,CACnCC,KAAMX,EACNU,QyBsD+BksB,CAAmBlsB,KAClDM,SAAU,SAACN,GAAD,OAAUisB,EAASC,EAAiBlsB,KAC9CU,eAAgB,SAACV,GAAD,OAAUisB,EAASC,EAAuBlsB,KAC1DS,gBAAiB,SAACT,GAAD,OAAUisB,EAASC,EAAwBlsB,KAC5DoB,OAAQ,SAACpB,GAAD,OAAUisB,EAASC,EAAelsB,KAC1CmB,YAAa,SAACnB,GAAD,OAAUisB,EAASC,EAAoBlsB,KACpDuB,eAAgB,SAACvB,GAAD,OAAUisB,EAASC,EAAuBlsB,OAE7C4rB,CAA6CV,YAvGxC,SAAA/f,GAsBV,IArBcsY,EAqBdtY,EArBcsY,SACA1jB,EAoBdoL,EApBcpL,aACAqM,EAmBdjB,EAnBciB,UACAG,EAkBdpB,EAlBcoB,aACAyY,EAiBd7Z,EAjBc6Z,SACAV,EAgBdnZ,EAhBcmZ,WACA5jB,EAedyK,EAfczK,eACA2M,EAcdlC,EAdckC,YACAxM,EAadsK,EAbctK,WACAP,EAYd6K,EAZc7K,SACAU,EAWdmK,EAXcnK,iBACAP,EAUd0K,EAVc1K,gBACAW,EASd+J,EATc/J,OACAD,EAQdgK,EARchK,YACAwb,EAOdxR,EAPcwR,aACAgH,EAMdxY,EANcwY,iBACAqG,EAKd7e,EALc6e,aACAM,EAIdnf,EAJcmf,WACA0B,EAGd7gB,EAHc6gB,eACAzqB,EAEd4J,EAFc5J,eACA6Y,EACdjP,EADciP,YAEpB,OACE7Q,EAAAC,EAAAC,cAAC8hB,GAAD,CACE9H,SAAUA,EACV1jB,aAAcA,EACdqM,UAAWA,EACXG,aAAcA,EACdyY,SAAUA,EACVV,WAAYA,EACZ5jB,eAAgBA,EAChB2M,YAAaA,EACbxM,WAAYA,EACZP,SAAUA,EACVU,iBAAkBA,EAClBP,gBAAiBA,EACjBW,OAAQA,EACRD,YAAaA,EACbwb,aAAcA,EACdgH,iBAAkBA,EAClBqG,aAAcA,EACdM,WAAYA,EACZ0B,eAAgBA,EAChBzqB,eAAgBA,EAChB6Y,YAAaA,OChDf+R,eACJ,SAAAA,EAAYplB,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAilB,GAAAtpB,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAspB,GAAA9kB,KAAAH,KACZH,0EAIN,OACEwC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC2iB,GAAD,CAAe3I,SAAUvc,KAAKH,MAAM0c,mBARpBxZ,aAcTihB,eAAWiB,ICjBbE,GAAc,cAIdC,GAAe,eAIfC,GAAkB,kBAIlBC,GAAQ,QCURC,GAA0B,SAACzsB,GAAD,MAAW,CAChDC,KDtBiC,sBCuBjCD,SAGW0sB,GAAwB,SAAC1sB,GAAD,MAAW,CAC9CC,KD1B+B,oBC2B/BD,SAQW2sB,GAA2B,SAAC3sB,GAAD,MAAW,CACjDC,KDjCkC,uBCkClCD,SAGW4sB,GAAyB,SAAC5sB,GAAD,MAAW,CAC/CC,KDrCgC,qBCsChCD,SAQW6sB,GAA8B,SAAC7sB,GAAD,MAAW,CACpDC,KD5CqC,0BC6CrCD,SAGW8sB,GAA4B,SAAC9sB,GAAD,MAAW,CAClDC,KDhDmC,wBCiDnCD,SAQW+sB,GAAe,SAAC/sB,GAAD,MAAW,CACrCC,KDvD2B,gBCwD3BD,SAGWgtB,GAAa,SAAChtB,GAAD,MAAW,CACnCC,KD3DyB,cC4DzBD,6BCvEWitB,GAAM,WAAmC,IAAlCpd,EAAkCqd,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAA3B,wBAKxB,MAJ4B,oCAA3BE,GAAOvrB,OAAOS,WAChBuN,EAAO,OAAOA,GAGNwd,KAAQC,QAAQzd,IAGb0d,GAAM,SAACvtB,GAAwC,IAAlC6P,EAAkCqd,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAA3B,wBACF,oCAA3BE,GAAOvrB,OAAOS,WAChBuN,EAAO,OAAOA,GAEVud,GAAOvrB,OAAOQ,OAClBgrB,KAAQE,IAAI1d,EAAM7P,EAAM,CAACqC,OAAQ+qB,GAAOvrB,OAAOQ,SAE/CgrB,KAAQE,IAAI1d,EAAM7P,IAGPwtB,GAAS,WAAmC,IAAlC3d,EAAkCqd,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAA3B,wBACC,oCAA3BE,GAAOvrB,OAAOS,WAChBuN,EAAO,OAAOA,GAGVud,GAAOvrB,OAAOQ,OAClBgrB,KAAQG,OAAO3d,EAAM,CAACxN,OAAQ+qB,GAAOvrB,OAAOQ,SAE5CgrB,KAAQG,OAAO3d,IAGJ4d,GAAY,SAACztB,EAAM6P,GAC7Bwd,KAAQE,IAAI1d,EAAM7P,IAGR0tB,GAAoB,SAAC1tB,EAAM6P,GACvCwd,KAAQE,IAAI1d,EAAM7P,EAAM,CAAE2tB,QAAS,OAIvBC,GAAe,SAAC/d,GAC1Bwd,KAAQG,OAAO3d,IAGLge,GAAY,SAAChe,GACvB,OAAOwd,KAAQC,QAAQzd,IC2HXie,eAjKb,SAAAA,EAAY/mB,GAAO,IAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA4mB,GAGb,IAAIhK,GAFJ9c,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAirB,GAAAzmB,KAAAH,KAAMH,KAEYA,MAAMsG,aAAerG,EAAKD,MAAMsG,YAAYyW,MAAO9c,EAAKD,MAAMsG,YAAYyW,MAAM,GAHrF,OAKb9c,EAAKM,MAAQ,CACTymB,OAAQ,CACJ5H,GAAIrC,EACJrd,QAAS,IAEb+D,OAAQ,CACJ2b,GAAI,GACJ1f,QAAS,IAEtBunB,gBAAgB,GAGXhnB,EAAKinB,YAAcjnB,EAAKinB,YAAYnmB,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACnBA,EAAKyD,aAAezD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpBA,EAAKknB,iBAAmBlnB,EAAKknB,iBAAiBpmB,KAAtBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAnBXA,kFAuBb,IAAI2I,GAAU,EACVoe,EAAS7mB,KAAKI,MAAMymB,OACpBvjB,EAAStD,KAAKI,MAAMkD,OAGxB,GAAMujB,EAAO5H,IAGN,GAAG4H,EAAM,GAAQ,CACV,8DACFrpB,KAAKqpB,EAAO5H,MAChBxW,GAAU,EACVnF,EAAO2b,GAAK,6CANhBxW,GAAU,EACVnF,EAAO2b,GAAK,qBAgBjB,OANO4H,EAAOtnB,UACTkJ,GAAU,EACVnF,EAAO/D,QAAU,wBAGtBS,KAAK0B,SAAS,CAAE4B,OAAQA,IACjBmF,uCAGGxK,GAAE,IAAAgpB,EACahpB,EAAE2K,OAAlBD,EADGse,EACHte,KAAMrN,EADH2rB,EACG3rB,MACVurB,EAAS7mB,KAAKI,MAAMymB,OACxBA,EAAOle,GAAQrN,EAEf,IAAIgI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAOqE,KAAKI,MAAMkD,QAC5BA,EAAOqF,GAAQ,GAEf3I,KAAK0B,SAAS,CAACmlB,SAAQvjB,OAAQA,wCAGvBrF,GAIR,GAHAA,EAAE4J,iBACY7H,KAAKgnB,mBAGf,OAAO,EAGP,IAAIE,EAAUvrB,OAAAC,EAAA,EAAAD,CAAA,GAAOqE,KAAKI,MAAMymB,QAC5B1gB,EAAcnG,KAAKH,MAAMsG,aAAe,GACxCoW,EAAWoK,GAAU,sBAAwB,GAEjDO,EAAU,KAAW3K,EAAS4K,UAC9BD,EAAU,UAAgB/gB,EAAYihB,eACtCF,EAAU,QAAc/gB,EAAYkhB,cAAchsB,GAClD6rB,EAAU,iBAAuB/gB,EAAYwJ,QAC7CuX,EAAU,WAAiB/gB,EAAYmhB,gBACvCJ,EAAU,aAAmB/gB,EAAYohB,gBACzCL,EAAU,QAAc,oCAAoC/gB,EAAYohB,gBACxEL,EAAU,eAAqB7qB,KAAOI,GAAuD,IAApDoC,SAASsH,EAAYkhB,cAAc5oB,eAAuB0H,EAAYkhB,cAAc1oB,WAAWrC,OAAO,sBAE/I0D,KAAKH,MAAM2nB,MAAMN,qDAIFrnB,GACnBG,KAAK0B,SAAS,CAAEolB,eAAgBjnB,EAAMinB,kDAItC,IAAIW,EAAU,GACVC,GAAgB,EAFlBC,EAGmC3nB,KAAKI,MAAxCymB,EAHAc,EAGAd,OAAQvjB,EAHRqkB,EAGQrkB,OAAQwjB,EAHhBa,EAGgBb,eACd3gB,EAAcnG,KAAKH,MAAMsG,aAAe,GACxCyhB,EAAQzhB,GAAeA,EAAY0hB,OAAQhpB,SAASsH,EAAY0hB,QAAQ,EACxEC,EAAe3hB,EAAYmhB,gBAAgB,IAAInhB,EAAYihB,eAE5DhlB,kBAAQkB,EAAO2b,KAAO7c,kBAAQkB,EAAO/D,WAAa6C,kBAAQykB,EAAO5H,MAAQ7c,kBAAQykB,EAAOtnB,WACvFmoB,GAAgB,GAGpB,IAAK,IAAIngB,EAAI,EAAGA,EAAIqgB,EAAMrgB,IAAK,CAC3B,IAAIrB,EAAM,WAAWqB,EACrBkgB,EAAQjgB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAKA,EAAKqJ,IAAI,yBAG1C,OACClN,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,yBAAyBsC,KAAM+hB,EAAgBrc,OAAQzK,KAAKH,MAAMkoB,kBACnF1lB,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,2BAGD6G,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMtC,aAAa,MAAMpQ,SAAW5K,KAAK+mB,aACjD1kB,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACgBxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,QAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,eAAeS,UAAU,EAAMrK,MAAO,CAACkH,WAAY,QAASnH,UAAU,QAAQkG,KAAK,eAAeqf,aAAc7hB,EAAYohB,mBAE/JllB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,gBAAf,iBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,gBAAgBS,UAAU,EAAMrK,MAAO,CAACkH,WAAY,QAASnH,UAAU,QAAQkG,KAAK,gBAAgBqf,aAAcF,KAErJzlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,kBACC3M,GAAkB2H,EAAYkhB,cAAc5oB,cAAe0H,EAAYkhB,cAAc3oB,eAAgByH,EAAYkhB,cAAc1oB,YAEpI0D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,gBAAf,mBACA9I,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYglB,KAGpCplB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAI4D,EAAYwJ,WAGxBtN,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,gBAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,gBAAf,MACA9I,EAAAC,EAAAC,cAAA,QAAA5G,OAAAqO,GAAA,EAAArO,CAAA,CAAO5C,KAAK,OAAOuT,YAAY,QAAQ7J,UAAU,QAAQkG,KAAK,KAAK2C,SAAUtL,KAAKuD,aAAcjI,MAAOurB,EAAO5H,IAA9G,YAA+H3b,EAAO2b,GAAM,cAAgB,WAEhK5c,EAAAC,EAAAC,cAAA,YAAUoG,KAAK,UAAU2D,YAAY,aAAa2b,KAAK,IAAI3c,SAAUtL,KAAKuD,aAAa3C,KAAKZ,MAAOyC,UAAaa,EAAO/D,QAAW,gBAAkB,UAAYyoB,aAAcnB,EAAOtnB,cAKrM8C,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAASiU,QAAQ,UAAUvK,UAAYilB,EAAgB,SAAW,IAA/E,IAAuF1nB,KAAKH,MAAMqoB,WAAa,eAAiB,oBA1J/HnlB,wBCJnBolB,GAAkB,SAACpJ,EAAME,GAI3B,IAJgD,IAAjBmJ,EAAiBpC,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAV,EAClCze,EAAgBwX,EACdoJ,EAAc,GAEb5gB,GAAK0X,GACRkJ,EAAM3gB,KAAKD,GACXA,GAAK6gB,EAET,OAAOD,GA4II1sB,eAlIX,SAAAA,EAAYoE,GAAO,IAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAvE,IACfqE,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAF,GAAA0E,KAAAH,KAAMH,KAwCVwoB,SAAW,SAAAC,GAAQ,IAAAC,EAC2BzoB,EAAKD,MAAvC2oB,qBADO,IAAAD,EACS,SAAAE,GAAC,OAAIA,GADdF,EAETG,EAAoC7rB,KAAKuQ,IAAI,EAAGvQ,KAAKwQ,IAAIib,EAAMxoB,EAAKM,MAAMuoB,aAE1EC,EAAiB,CACnBF,cACAC,WAAoB7oB,EAAKM,MAAMuoB,WAC/BE,UAAoB/oB,EAAKM,MAAMyoB,UAC/BC,aAAoBhpB,EAAKM,MAAM0oB,cAEnChpB,EAAK4B,SAAS,CAAEgnB,eAAe,kBAAMF,EAAcI,KACnD5Y,OAAO+Y,SAAS,EAAG,IApDJjpB,EAuDnBoa,YAAc,SAAAoO,GAAI,OAAI,SAAAU,GACpBA,EAAInhB,iBACJ/H,EAAKuoB,SAASC,KAzDGxoB,EA4DnBmpB,eAAiB,SAAAD,GACfA,EAAInhB,iBACD/H,EAAKM,MAAMsoB,YAAY,GACxB5oB,EAAKuoB,SAASvoB,EAAKM,MAAMsoB,YAAc,IA/DxB5oB,EAkEnBopB,gBAAkB,SAAAF,GAChBA,EAAInhB,iBACD/H,EAAKM,MAAMsoB,YAAY5oB,EAAKM,MAAMuoB,YACnC7oB,EAAKuoB,SAASvoB,EAAKM,MAAMsoB,YAAc,IArExB5oB,EAwEnBqpB,iBAAmB,WACf,IAAMR,EAAsB7oB,EAAKM,MAAMuoB,WACjCD,EAAsB5oB,EAAKM,MAAMsoB,YACjCU,EAAsBtpB,EAAKM,MAAMgpB,eAGvC,GAAGT,EAAW,EAAE,CACZ,IAAIU,EAAwBxsB,KAAKuQ,IAAI,EAAGsb,EAAcU,GAClDE,EAAwBD,EAAU,EACnCC,EAAQX,IACPU,EAAwBV,EAAW,EACnCW,EAAwBX,GAE5B,IAAIY,EAAwBpB,GAAMkB,EAAWC,GAC7C,OAAO3tB,OAAA0a,GAAA,EAAA1a,CAAI4tB,GAGX,IADA,IAAIA,EAAwB,GACpBhiB,EAAE,EAAGA,GAAGohB,EAAYphB,IACxBgiB,EAAM/hB,KAAKD,GAEf,SAAAxI,OAAWwqB,IA5FA,IAAAC,EAEiG3pB,EAAxGipB,oBAFO,IAAAU,EAEQ,KAFRA,EAAAC,EAEiG5pB,EAAnFgpB,iBAFd,IAAAY,EAE0BluB,GAAOE,WAAWC,aAF5C+tB,EAAAC,EAEiG7pB,EAAvCupB,sBAF1D,IAAAM,EAE2E,EAF3EA,EAAAC,EAEiG9pB,EAAnB+pB,iBAF9E,IAAAD,EAE0F,GAF1FA,EAAA,OAIf7pB,EAAK+oB,UAA4C,kBAAdA,EAAyBA,EAAYttB,GAAOE,WAAWC,aAC1FoE,EAAKgpB,aAA+C,kBAAjBA,EAA4BA,EAAe,EAC9EhpB,EAAKspB,eAAiD,kBAAnBA,EACLvsB,KAAKuQ,IAAI,EAAGvQ,KAAKwQ,IAAI+b,EAAgB,IACrC,EAE9BtpB,EAAK6oB,WAAuB9rB,KAAKgtB,KAAK/pB,EAAKgpB,aAAehpB,EAAK+oB,WAC/D/oB,EAAKM,MAAuB,CACxBsoB,YAAoB,EACpBG,UAAoB/oB,EAAK+oB,UACzBC,aAAoBhpB,EAAKgpB,aACzBM,eAAoBtpB,EAAKspB,eACzBT,WAAoB7oB,EAAK6oB,WACzBiB,UAAoBA,GAjBT9pB,mFAsBfE,KAAKqoB,SAAS,qDAGQyB,GACtB,IAAInB,EAAuB9rB,KAAKgtB,KAAKC,EAAUhB,aAAegB,EAAUjB,WACrE7oB,KAAKH,QAAUiqB,IACd9pB,KAAK0B,SAAS,CACVmnB,UAAoBiB,EAAUjB,UAC9BC,aAAoBgB,EAAUhB,aAC9BM,eAAoBU,EAAUV,eAC9BT,WAAoBA,IAErBmB,EAAUhB,eAAiB9oB,KAAKH,MAAMipB,cAErC9oB,KAAKqoB,SAAS,qCA4DlB,IAAAxmB,EAAA7B,KAEJ,IAAKA,KAAKI,MAAM0oB,cAA0C,IAA1B9oB,KAAKI,MAAMuoB,WAAkB,OAAO,KACpE,IAAMD,EAA0B1oB,KAAKI,MAAMsoB,YACrCa,EAA0BvpB,KAAKmpB,mBACrC,OACMnpB,KAAKH,MAAMyF,aAwBX,KAvBFjD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,yBAENzC,KAAKI,MAAMuoB,WAAa,EACxBtmB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYE,QAAS3C,KAAKipB,gBAA5C,SACE,KAGNM,EAAM9d,IAAI,SAAC6c,EAAMtT,GACb,OACI3S,EAAAC,EAAAC,cAAA,MAAI2D,IAAK8O,EAAOvS,UAAS,YAAA1D,OAAe2pB,IAAgBJ,EAAO,UAAY,KACvEjmB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYE,QAAUd,EAAKqY,YAAYoO,IAAUA,MAM/EtoB,KAAKI,MAAMuoB,WAAa,EACxBtmB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYE,QAAS3C,KAAKkpB,iBAA5C,SACE,aAlIDnmB,aCoRVgnB,eA1Rb,SAAAA,EAAYlqB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA+pB,IACbjqB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAouB,GAAA5pB,KAAAH,KAAMH,KACDO,MAAQ,CAClB4pB,uBAAuB,GAHLlqB,yFAOMD,GACnBG,KAAK0B,SAAS,CAAEsoB,sBAAuBnqB,EAAMmqB,yDAG3C,IACAA,EAA0BhqB,KAAKI,MAA/B4pB,sBACEC,EAAoBjqB,KAAKH,MAAMsG,aAAenG,KAAKH,MAAMsG,YAAYwJ,QAAS3P,KAAKH,MAAMsG,YAAYwJ,QAAQ,GAC7GxJ,EAAenG,KAAKH,MAAMsG,aAAenG,KAAKH,MAAMsG,YAAYkhB,cAAernB,KAAKH,MAAMsG,YAAYkhB,cAAc,GACpH6C,EAAsB/jB,EAAYqhB,MAAOrhB,EAAYqhB,MAAMjoB,QAAQ,KAGnEoO,GADoBxH,EAAYyH,mBAAqB,IAC1BD,QAAU,GAErCE,EAAcF,EAAOG,mBAAqB,GAC9CD,EAAiBA,EAAeA,EAAY9F,MAAM,KAAO,GAEzD,IAAIgG,EAAcJ,EAAOK,mBAAqB,GAC9CD,EAAiBA,EAAcA,EAAYhG,MAAM,KAAO,GAExD,IAAIkG,EAAaN,EAAOO,kBAAoB,GACxCC,EAAaR,EAAOS,kBAAoB,GACxCC,EAAO,yCAkBjB,OACChM,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,mBAAmBsC,KAAMilB,EAAuBvf,OAAQzK,KAAKH,MAAMkoB,kBACpF1lB,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,sBAGb6G,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACgBxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA4B4D,EAAY9K,IACxCgH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAAH,IAAgChE,GAAc4H,EAAYC,YAC1D/D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAH,IAAoC/D,GAAkB2H,EAAY1H,cAAe0H,EAAYzH,eAAgByH,EAAYxH,YACzH0D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAAH,IAAiC4D,EAAYmI,eAGrDjM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,2BACG4D,EAAYQ,SACXtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAAwBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAASgC,MAApD,MACAtG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAAS4H,QACpDlM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAuBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYQ,SAASzJ,QAAQS,OAApC,KAA8CwI,EAAYQ,SAASzJ,QAAQU,OAA3E,KAAqFuI,EAAYQ,SAASzJ,QAAQoL,WAAlH,KAAgInC,EAAYQ,SAASzJ,QAAQW,KAA7J,KAAqKsI,EAAYQ,SAASzJ,QAAQkD,MAAlM,KAA2M+F,EAAYQ,SAASzJ,QAAQY,UAClQuE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,YAAQ4D,EAAYQ,SAASG,MAA7B,OACrB,OAInBzE,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,4BACG4D,EAAYQ,SACftE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAAwBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW+B,OACtDtG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW2H,QAEhDpI,EAAYqI,aACfnM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYqI,eAA2B,KAE3EnM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAuBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAW1J,QAAQS,OAAtC,KAAgDwI,EAAYS,WAAW1J,QAAQU,OAA/E,KAAyFuI,EAAYS,WAAW1J,QAAQoL,WAAxH,KAAsInC,EAAYS,WAAW1J,QAAQW,KAArK,KAA6KsI,EAAYS,WAAW1J,QAAQkD,MAA5M,KAAqN+F,EAAYS,WAAW1J,QAAQY,UAC9QuE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA2BF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYnB,UAC9C3C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAoBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYX,MAC1CnD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAAyBF,EAAAC,EAAAC,cAAA,YAAO4D,EAAYS,WAAWE,SACpD,QAMnBzE,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,iBAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,4BACIF,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAAH,IAAgC4D,EAAYsI,gBAKxDpM,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAERkL,EAAOe,2BACVrM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,kCACChG,GAAiD,IAApCoR,EAAOe,2BAAoCvI,EAAYwI,SAAU,uBAC5E,KAGJhB,EAAOiB,gBACVvM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,6BACChG,GAAsC,IAAzBoR,EAAOiB,gBAAyBzI,EAAYwI,SAAU,uBACjE,KAGJhB,EAAOkB,eACVxM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,uBACChG,GAAqC,IAAxBoR,EAAOkB,eAAwB1I,EAAYwI,SAAU,uBAChE,KAGJhB,EAAOmB,aACVzM,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,2BACChG,GAAmC,IAAtBoR,EAAOmB,aAAsB3I,EAAYwI,SAAU,uBAC9D,KAGJhB,EAAOoB,iBACV1M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,yBACChG,GAAuC,IAA1BoR,EAAOoB,iBAA0B5I,EAAYwI,SAAU,uBAClE,KAGJhB,EAAOqB,kBACV3M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACChG,GAAwC,IAA3BoR,EAAOqB,kBAA2B7I,EAAYwI,SAAU,uBACnE,KAGJhB,EAAOsB,qBACV5M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACCoL,EAAOsB,sBACL,OAIf5M,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAERkL,EAAOuB,gBACV7M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,uBACChG,GAAsC,IAAzBoR,EAAOuB,gBAAyB/I,EAAYwI,SAAU,uBACjE,KAGJhB,EAAOwB,cACV9M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,2BACChG,GAAoC,IAAvBoR,EAAOwB,cAAuBhJ,EAAYwI,SAAU,uBAC/D,KAGJhB,EAAOyB,kBACV/M,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,yBACChG,GAAwC,IAA3BoR,EAAOyB,kBAA2BjJ,EAAYwI,SAAU,uBACnE,KAGJhB,EAAO0B,mBACVhN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACChG,GAAyC,IAA5BoR,EAAO0B,mBAA4BlJ,EAAYwI,SAAU,uBACpE,KAGJhB,EAAO2B,sBACVjN,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BACCoL,EAAO2B,uBACL,WAS/BjN,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,EAACtI,UAAU,eACrBJ,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAA,+BAEO4L,GAAgBF,EACnB5L,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,gCACK4L,EAAc9L,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAYoP,EAAZ,eAAwC9L,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,qBAGvEJ,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,UAC1BJ,EAAAC,EAAAC,cAAA,iCACK0L,EAAc5L,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAYkP,EAAZ,eAAwC5L,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,sBAEpEJ,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,sBAKnBJ,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKzI,UAAU,SAC1BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACXJ,EAAAC,EAAAC,cAAA,4BAGKwL,EAAYzQ,OAAS,GAAKuQ,EAAc,EACzCxL,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,CAAU2K,WA9MnB,CACfC,kBAAmB,CAEfC,WAAY,CAAEC,IAAK,IAAMC,IAAK,KAC9BC,MAAO,GACRC,QAAS,CACRJ,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,GACRE,OAAQ,CACPL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,GACTG,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,MAmMsBO,GAAe,IAAIpC,IAAI,SAACgE,EAAKlI,GAC1B,OACIlF,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,eAAAnH,OAAiBwI,GAAK9E,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAY0Q,EAAZ,iBAF/D,CAMC1B,GAAe,IAAItC,IAAI,SAACgE,EAAKlI,GAC1B,OACIlF,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,eAAAnH,OAAiBwI,GAAK9E,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKsP,GAALtP,OAAY0Q,EAAZ,mBAI1DpN,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,uBAM7BJ,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,iBAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI0nB,IAER5nB,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACX7I,EAAAC,EAAAC,cAAA,mCAEI2nB,EACA7nB,EAAAC,EAAAC,cAAA,SAAI2nB,GACJ7nB,EAAAC,EAAAC,cAAA,KAAIE,UAAU,WAAd,kCA9QbM,aC8NhBonB,eA5Nb,SAAAA,EAAYtqB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAmqB,IACbrqB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAwuB,GAAAhqB,KAAAH,KAAMH,KACDO,MAAQ,CACZ+F,YAAY,GACZikB,WAAY,GAClBtD,gBAAgB,EACVuD,qBAAsB,GAC5BL,uBAAuB,GAPLlqB,kFAYnBE,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAOkD,uBAAuB,4CAG/C/rB,EAAGlF,EAAMuxB,GACxBrsB,EAAEuD,kBAEU,UAATzI,EACFiH,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAM3gB,YAAamkB,IACjC,iBAATvxB,GACTiH,KAAK0B,SAAS,CAAEsoB,uBAAuB,EAAM7jB,YAAamkB,sDAIlCzqB,GACzB,GAAGA,EAAM0qB,aAAe1qB,EAAM0qB,cAAgBvqB,KAAKH,MAAM0qB,YAAY,CACpE,IAAIH,EAAapqB,KAAKI,MAAMgqB,YAAc,GACjCA,EAAW5iB,KAAK3H,EAAM0qB,YAAYC,SAE3CxqB,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAOkD,uBAAuB,EAAOI,WAAYA,IAGlFpqB,KAAK0B,SAAS,CAAE2oB,qBAAsBxqB,EAAMwqB,wDAGpC,IAAAxoB,EAAA7B,KAAA2nB,EACyF3nB,KAAKI,MAA9F0mB,EADAa,EACAb,eAAgBkD,EADhBrC,EACgBqC,sBAAuB7jB,EADvCwhB,EACuCxhB,YAAaikB,EADpDzC,EACoDyC,WAAYC,EADhE1C,EACgE0C,qBACpEI,EAAiBzqB,KAAKH,MAAM6qB,qBAAuB1qB,KAAKH,MAAM6qB,oBAAoBC,eAAgB3qB,KAAKH,MAAM6qB,oBAAoBC,eAAe,EAChJC,EAAmB5qB,KAAKH,MAAM6qB,qBAAuB1qB,KAAKH,MAAM6qB,oBAAoBzC,KAAMjoB,KAAKH,MAAM6qB,oBAAoBzC,KAAK,GAI9Ha,EAAe9oB,KAAKH,MAAMgrB,eAAiB,EAE3CC,EAAY,EACZC,EAAc,EACdC,EAAmB,EAEvBJ,EAAgBnf,IAAI,SAACwf,EAAIjW,GACxBgW,GAAqB3a,WAAW4a,EAAGC,YACnCH,GAAgB1a,WAAW4a,EAAGpD,QAAUxX,WAAW4a,EAAGC,cASvD,IAJA,IAAIC,EAAa,GACbC,EAAc,GACdC,E9BlCC,SAA6BzD,GAClC,IAAI0D,EAAM,EACNC,EAAQ1uB,KAAK2uB,MAAM5D,GACnB6D,EAAY7D,EAAO2D,EAEpBE,EAAW,IACZH,EAAI,EACKG,GAAY,KAAOA,EAAW,IACvCH,EAAI,GACKG,GAAY,MACrBH,EAAI,GAGN,IAAII,EAAKH,EAAQD,EAGbK,EAAW9uB,KAAK2uB,MAAME,GAG1B,MAAO,CACLD,SAHFA,EAAYC,EAAIC,EAIdA,SAAUA,G8BaOC,CAJnBd,EAAYza,WAAW0a,EAAcC,IAM7Ba,EAAE,EAAGA,GAAGR,EAAaM,SAAUE,IAAI,CAC1C,IAAI3lB,EAAM,QAAQ2lB,EAClBV,EAAW3jB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAKA,EAAKqJ,IAAI,sBAGV,IAAvB8b,EAAaI,UACfN,EAAW3jB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAI,SAASqJ,IAAI,wBAGvC,IAAI,IAAIsc,EAAE,EAAGA,GAAM,EAAIV,EAAW7tB,OAASuuB,IAAI,CAC9C,IAAI3lB,EAAM,UAAU2lB,EACpBT,EAAY5jB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAKA,EAAKqJ,IAAI,wBAKrC,OACClN,EAAAC,EAAAC,cAAA,WAEqBvC,KAAKH,MAAM2V,UAsIfnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eArIAJ,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAAA,WAASE,UAAU,iBAClBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAd,qBAGEmoB,EAAgBttB,OAAS,EAC1B+E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,UAAMuoB,EAAY,EAAGA,EAAUgB,QAAQ,GAAG,GAC1CzpB,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAY0oB,EAAYC,IAGzC/oB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,YAAsCgoB,EAAtC,aAKDpoB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEbmoB,EAAgBnf,IAAI,SAACwf,EAAIjW,GACxB,OACC3S,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,QAAAnH,OAAUiW,GAASvS,UAAU,QACpCJ,EAAAC,EAAAC,cAAA,aAAQ0oB,EAAGpD,OAAX,UACAxlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAMJ,EAAAC,EAAAC,cAACwpB,GAAA,EAAD,CAAa5kB,IAAK8jB,EAAGC,cAC1C7oB,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUwoB,EAAGe,eAA7B,eAMC,KAGR3pB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAhB,cACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAS1d,KAAKH,MAAMqsB,WAAYnzB,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,MAAMmH,UAAU,UADnJ,IAC8JJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,gBAG9JJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAU1d,KAAKH,MAAMssB,cAAcxT,SAAS,KAAO5f,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,IAAImH,UAAU,UADpK,IAC+KJ,EAAAC,EAAAC,cAAA,wBAG/KF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAU1d,KAAKH,MAAMssB,cAAcxT,SAAS,KAAO5f,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,IAAImH,UAAU,UADpK,IAC+KJ,EAAAC,EAAAC,cAAA,wBAG/KF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAU1d,KAAKH,MAAMssB,cAAcxT,SAAS,KAAO5f,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,IAAImH,UAAU,UADpK,IAC+KJ,EAAAC,EAAAC,cAAA,wBAG/KF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAU1d,KAAKH,MAAMssB,cAAcxT,SAAS,KAAO5f,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,IAAImH,UAAU,UADpK,IAC+KJ,EAAAC,EAAAC,cAAA,wBAG/KF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,SAAO+I,SAAUtL,KAAKH,MAAMosB,qBAAsBvO,QAAU1d,KAAKH,MAAMssB,cAAcxT,SAAS,KAAO5f,KAAK,WAAWsC,GAAG,SAASsN,KAAK,SAASrN,MAAM,IAAImH,UAAU,UADpK,IAC+KJ,EAAAC,EAAAC,cAAA,yBAIhLF,EAAAC,EAAAC,cAAA,OAAKE,UAAS,gCAAA1D,OAAkCiB,KAAKH,MAAMusB,YAAc,aAAa,GAAxE,MACb/pB,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,0BAKEH,kBAAQioB,IAAyBA,EAAqB/sB,OAAS,EAClE+E,EAAAC,EAAAC,cAAA,aAEG8nB,EAAqB/sB,OAAS,GAAM+sB,EAAqB5e,IAAI,SAACwf,EAAIjW,GAIlE,IAHA,IAAIyS,EAAU,GACVG,EAAQqD,EAAGpD,OAAQhpB,SAASosB,EAAGpD,QAAQ,EAElCtgB,EAAI,EAAGA,EAAIqgB,EAAMrgB,IACzBkgB,EAAQjgB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,WAAAnH,OAAawI,GAAKgI,IAAI,yBAI5C,OACClN,EAAAC,EAAAC,cAAA,MAAI2D,IAAG,iBAAAnH,OAAmBiW,IACzB3S,EAAAC,EAAAC,cAAA,UAAK0oB,EAAG1D,gBAAR,IAAyBllB,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYE,QAAS,SAAC1E,GAAD,OAAQ4D,EAAKwqB,gBAAgBpuB,EAAG,eAAgBgtB,KAAK5oB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAC5HlN,EAAAC,EAAAC,cAAA,UAAK0oB,EAAG3D,gBAAR,IAA0B2D,EAAG7D,gBAC7B/kB,EAAAC,EAAAC,cAAA,UAAK0oB,EAAGqB,YACRjqB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaglB,IAC/BplB,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SACvBJ,EAAAC,EAAAC,cAAA,aAAQ0oB,EAAGtb,SAETsb,EAAGtb,QACJtN,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQwoB,EAAGtb,SAAgB,MAG9CtN,EAAAC,EAAAC,cAAA,UAEgB,SAAb0oB,EAAGzD,OAAqB4C,EAAWhtB,QAAQ6tB,EAAG5D,cAAchsB,KAAO,EACpEgH,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUC,MAAO,CAACgK,OAAQ,YAAYrK,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,iCAE/DlN,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUE,QAAS,SAAC1E,GAAD,OAAQ4D,EAAKwqB,gBAAgBpuB,EAAG,QAASgtB,KAA5E,cAQN5oB,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAaJ,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,KAAZ,kBAMlCoT,EACHzkB,EAAAC,EAAAC,cAACgqB,GAAD,CAAY/E,MAAOxnB,KAAKH,MAAM2nB,MAAOU,WAAYloB,KAAKH,MAAMqoB,WAAYpB,eAAgBA,EAAgBiB,iBAAkB/nB,KAAK+nB,iBAAiBnnB,KAAKZ,MAAOmG,YAAaA,IAAkB,KAIxL6jB,EACH3nB,EAAAC,EAAAC,cAACiqB,GAAD,CAAkBtE,WAAYloB,KAAKH,MAAMqoB,WAAY8B,sBAAuBA,EAAuBjC,iBAAkB/nB,KAAK+nB,iBAAiBnnB,KAAKZ,MAAOmG,YAAaA,IAAkB,MAKvL2iB,GAxKc,IAyKdzmB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAiBJ,EAAAC,EAAAC,cAACkqB,GAAD,CAAY3D,aAAcA,EAAcD,UAzK1D,IAyKmFO,eAAgB,EAAGZ,cAAexoB,KAAKH,MAAM6sB,cAAqB,cApNvJ3pB,aCHE4pB,uBAClB,SAAAA,EAAY9sB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2sB,IAChB7sB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgxB,GAAAxsB,KAAAH,KAAMH,KA0JT+F,eAAiB,SAAC3H,GACf,IAAM0K,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvBwE,EAAK4B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GAAiBgN,EAAOrN,GAAS,eA5JjCwE,EAAKM,MAAwC,CAC1CsG,MAA6B,GAC7BD,KAA6B,GAC7B1B,MAAqB,EACrB6nB,SAAqB,IAExB9sB,EAAK+sB,UAAuB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC3I/sB,EAAKgtB,YAAsB,GAC3BhtB,EAAKitB,aAAsBjtB,EAAKitB,aAAansB,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKktB,UAAsBltB,EAAKktB,UAAUpsB,KAAfjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKmtB,UAAsBntB,EAAKmtB,UAAUrsB,KAAfjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKotB,WAAsBptB,EAAKotB,WAAWtsB,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKoa,YAAsBpa,EAAKoa,YAAYtZ,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKqtB,gBAAsBrtB,EAAKqtB,gBAAgBvsB,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKstB,WAAsBttB,EAAKstB,WAAWxsB,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAhBXA,mFAoBhB,IAAI1D,EAAuB,IAAIgJ,KAC3BsB,EAAuBtK,EAAKixB,WAC5B5mB,EAAuBrK,EAAKkxB,cAC5BC,EAAuBvtB,KAAK+sB,aAAarmB,EAAOD,GACpDzG,KAAK0B,SAAS,CACXgF,MAAkBA,EAClBD,KAAkBA,EAClB8mB,SAAkBA,GAClB,cAGHlsB,SAASC,iBAAiB,QAAStB,KAAKotB,+CAGhCnvB,GACRA,EAAEuD,kBACGxB,KAAKI,MAAM2E,OAAS/E,KAAKwtB,KAAKpT,SAASnc,EAAE2K,SAA6C,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAC5Era,KAAK0B,SAAS,CACXqD,MAAM,0CAMZ/E,KAAK0B,SAAS,CACXqD,MAAO/E,KAAKI,MAAM2E,+CAIR0oB,EAAM10B,GACnB,IAAI20B,EAAoBrxB,OACpB8I,EAAoB9I,OAASsxB,SAAUF,EAAO,EAAI,QAEtDztB,KAAKH,MAAM+tB,YAAY,CACpBzoB,UAAeA,EAAU7I,OAAO,cAChCoxB,QAAeA,EAAQpxB,OAAO,cAC9BswB,SAAyB,WAAT7zB,EAAqB00B,EAAO,wCAIvCrxB,EAAMsK,EAAOmnB,GACrB,IAAIpnB,EAAiBzG,KAAKI,MAAMqG,KAC5BD,EAAiBnK,KAAM,GAAA0C,OAAI0H,EAAJ,KAAA1H,OAAa2H,EAAQ,EAArB,KAAA3H,OAA2B3C,IAAQE,OAAO,cAErE0D,KAAKH,MAAMoD,aAAauD,wCAIdE,EAAOD,GAWjB,IAXoC,IAAbqnB,EAAa9H,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAH,GAC7B+H,EAAoB,IAAI3oB,KAAKqB,EAAMC,EAAO,GAC1CsnB,EAAoBD,EAAUE,SAE9B7xB,EADoB,IAAIgJ,KAAK2oB,EAAUG,QAAQH,EAAUI,UAAUH,IAEnEI,EAAoB,IAAIhpB,KAAKqB,EAAMC,EAAQ,EAAG,GAC9C2nB,EAAoBD,EAASH,SAC7BK,EAAoB,IAAIlpB,KAAKgpB,EAASF,QAAQE,EAASD,WAAW,EAAEE,KACpEZ,EAAoB,GACpBvmB,EAAoB,IAAI9B,KAErBhJ,EAAKmyB,WAAaD,EAAaC,WAAW,CAC7C,IAAIC,GAAuB,EACxBpyB,EAAK+xB,YAAc,IAAI/oB,KAAKhJ,EAAKmyB,WAAWJ,UAAUriB,YAClD5E,EAAMmmB,aAAe,IAAIjoB,KAAKhJ,EAAKmyB,WAAWlB,YAC9CnmB,EAAMomB,gBAAkB,IAAIloB,KAAKhJ,EAAKmyB,WAAWjB,gBAEpDkB,GAAuB,GAE3Bf,EAAKjmB,KAAK,CACNpL,KAAgBA,EAAK+xB,UACrBznB,MAAgBtK,EAAKixB,WACrB5mB,KAAgBrK,EAAKkxB,cACrBmB,IAAgBzuB,KAAK8sB,YAAY1wB,EAAK6xB,UACtCznB,SAAgBnK,KAAOD,EAAKmyB,WAAWjyB,OAAO,cAC9CoyB,YAAgBF,IAGpBpyB,EAAK8xB,QAAQ9xB,EAAK+xB,UAAY,GAGlC,IAAI5mB,EAAEonB,EACFC,EAAoB,GACxB,IAAKrnB,EAAE,EAAEonB,EAAElB,EAAKnwB,OAAQiK,EAAEonB,EAAGpnB,GAFL,EAEe,CACnC,IAAIsnB,EAAgBpB,EAAKqB,MAAMvnB,EAAEA,EAHb,GAIpBqnB,EAAYpnB,KAAKqnB,GAGrB,IAAIE,EAAoB,EAUxB,MATe,KAAZjB,EACCc,EAAYzX,QAAQ,SAAC6X,EAASrjB,GACvBqjB,EAAQC,KAAK,SAAA7yB,GAAI,OAAIA,EAAKA,OAAS8K,EAAMinB,WAAa/xB,EAAKsK,QAAUQ,EAAMmmB,eAC1E0B,EAAoBpjB,KAG5BojB,EAAoBjB,EAGjB,CAACoB,QAASN,EAAaloB,MAAO1G,KAAK6sB,UAAUnmB,GAAQD,KAAMA,EAAMsoB,YAAaA,uCAGpE,IAAVlB,EAAU7H,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAH,GACVtf,EAA6B1G,KAAKI,MAAMsG,MACxCD,EAA6BzG,KAAKI,MAAMqG,KACpB,IAArBzG,KAAKI,MAAMsG,OACXA,EAA8B,GAC9BD,GAAsC,IAEtCC,GAAuC,EACvCD,EAA8BA,GAEjC,IAAI8mB,EAA6BvtB,KAAK+sB,aAAarmB,EAAOD,EAAMonB,GAChE7tB,KAAK0B,SAAS,CACXgF,MAA+BA,EAC/BD,KAA+BA,EAC/B8mB,SAA8BA,wCAIhB,IAAVM,EAAU7H,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAH,GACVtf,EAA6B1G,KAAKI,MAAMsG,MACxCD,EAA6BzG,KAAKI,MAAMqG,KAC/B,KAAVC,GACAA,EAA8B,EAC9BD,GAAsC,IAEtCC,GAAuC,EACvCD,EAA8BA,GAEjC,IAAI8mB,EAA6BvtB,KAAK+sB,aAAarmB,EAAOD,EAAMonB,GAChE7tB,KAAK0B,SAAS,CACXgF,MAA+BA,EAC/BD,KAA+BA,EAC/B8mB,SAA8BA,sDAWV1tB,GACvB,GAAGG,KAAKH,MAAMqtB,aAAertB,EAAMqtB,WAAY,CAC5C,IAAI9wB,EAAuB,IAAIgJ,KAAKvF,EAAMqtB,YACtCxmB,EAAuBtK,EAAKixB,WAC5B5mB,EAAuBrK,EAAKkxB,cAC5BC,EAAuBvtB,KAAK+sB,aAAarmB,EAAOD,GACpDzG,KAAK0B,SAAS,CACXgF,MAAkBA,EAClBD,KAAkBA,EAClB8mB,SAAkBA,GAClB,cAIHvtB,KAAKI,MAAMwsB,WAAa/sB,EAAM+sB,UAC9B5sB,KAAK0B,SAAS,CACXkrB,SAAW/sB,EAAM+sB,0DASvBvrB,SAASO,oBAAoB,QAAS5B,KAAKotB,6CAGrC,IAAAvrB,EAAA7B,KACFutB,EAAoBvtB,KAAKI,MAAMmtB,UAAY,GAC3CL,EAAoBltB,KAAKH,MAAMqtB,YAAc,GAC7C/nB,EAAoBnF,KAAKH,MAAMsF,WAAa,GAC5CgqB,EAAuBhqB,EAAa9I,KAAO8I,GAAW7I,OAAO,KAAO,GACpEoxB,EAAoB1tB,KAAKH,MAAM6tB,SAAW,GAC1C0B,EAAuB1B,EAAWrxB,KAAOqxB,GAASpxB,OAAO,KAAO,GAChE+yB,EAAoBrvB,KAAKH,MAAMwvB,UAAY,GAC3CC,EAAuBD,EAAYhzB,KAAOgzB,GAAU/yB,OAAO,KAAO,GAClEswB,EAAoB5sB,KAAKH,MAAM+sB,UAAY,GAC/C,OACGvqB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAgrB,GAAI,OAAI3rB,EAAK2rB,KAAOA,GAAM/qB,UAAYzC,KAAKI,MAAM2E,KAAW,SAAJ,IAE/D1C,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAWzC,KAAKH,MAAM4C,UAAW6J,YAAatM,KAAKH,MAAMyM,YAAahR,MAAO4xB,EAAYzN,UAAQ,EAAC9c,QAAS3C,KAAKka,YAAanN,WAAY/M,KAAKH,MAAMkN,WAEvK1K,EAAAC,EAAAC,cAAA,OAAKE,UAAYzC,KAAKI,MAAM2E,KAAwB,YAAjB,iBAChC1C,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,KAAK6Z,EAAS7mB,MAA1B,IAAkC6mB,EAAS9mB,MAC3CpE,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,KACTrR,EAAAC,EAAAC,cAAA,QAAME,UAAU,WACbJ,EAAAC,EAAAC,cAAA,KAAGI,QAAS3C,KAAKgtB,WAAW3qB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,4BAA4BkU,IAAI,gBADxE,OAGGphB,EAAAC,EAAAC,cAAA,KAAGI,QAAS3C,KAAKitB,WAAW5qB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,4BAA4BkU,IAAI,qBAK9EphB,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,MACAhH,EAAAC,EAAAC,cAAA,MAAI8G,MAAM,WAAV,OAGGkkB,EAAS2B,SAAW3B,EAAS2B,QAAQ5xB,OAAS,EACjDiwB,EAAS2B,QAAQzjB,IAAI,SAACoiB,EAAMliB,GACzB,OACGtJ,EAAAC,EAAAC,cAAA,MAAI2D,IAAKyF,GAENkiB,EAAKpiB,IAAI,SAACgiB,EAAMlmB,GACb,IAAI/K,EAAoBH,KAAOoxB,EAAKjnB,UAAUlK,OAAO,KACjDgC,EAAoB,GAQxB,OANG6wB,GAAiB3yB,IACjB8B,EAAqB,gBACnB8wB,GAAgB5yB,EAAY4yB,GAAgBD,EAAgB3yB,IAC9D8B,EAAqB,gBACnB8wB,GAAgB5yB,GAAa4yB,GAAgBD,EAAgB3yB,IAC/D8B,EAAqB,cAElBgxB,GAAiBA,EAAgB9yB,EACpC6F,EAAAC,EAAAC,cAAA,MAAI2D,IAAKqB,EAAGmN,MAAM,SAASjS,UAAU,YACjCgrB,EAAKrxB,MACDiG,EAAAC,EAAAC,cAAA,MAAI2D,IAAKqB,EAAGmN,MAAM,SAASjS,UAAWnE,EAASqE,QAAS,kBAAQd,EAAKqrB,WAAWO,EAAKrxB,KAAMqxB,EAAK/mB,MAAOiF,KAC7G8hB,EAAKrxB,WAQjB,OAIXiG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKsrB,gBAAgB,EAAG,MAA3C,eACA9qB,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKsrB,gBAAgB,GAAI,MAA5C,gBACA9qB,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKsrB,gBAAgB,GAAI,MAA5C,gBACA9qB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,QACQJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyR,KAAK,KAAKlP,MAAO0E,KAAKI,MAAMwsB,SAAUjkB,KAAK,WAAW2C,SAAUtL,KAAK4F,iBADhG,QAGS5F,KAAKI,MAAMwsB,UAAY5sB,KAAKI,MAAMwsB,WAAaA,EAClDvqB,EAAAC,EAAAC,cAAA,KAAGzJ,KAAK,qBAAqB6J,QAAS,kBAAMd,EAAKsrB,gBAAgBtrB,EAAKzB,MAAMwsB,SAAU,YACnFvqB,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqByW,IAAI,6BAA6BkU,IAAI,WAEpEmJ,GAAc5sB,KAAKI,MAAMwsB,SAC5BvqB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,6BAA6B9M,UAAU,aAAaghB,IAAI,UAC/D,iBAtRS1gB,cC2NvBwsB,eAzNd,SAAAA,EAAY1vB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAuvB,IAClBzvB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA4zB,GAAApvB,KAAAH,KAAMH,KACDO,MAAQ,CACZ6d,UAAU,EACDoB,YAAY,EACrBnlB,OAAQ,CACK+E,KAAwB,GACxBoE,iBAAwB,GACxBG,kBAAwB,GACxBwC,WAAwB,GACxBC,SAAwB,GACxBlN,KAAwB,eACxBy2B,MAAuB,eACvBpY,MAAwB,gBAE5BgT,WAAY,GACZtD,gBAAgB,EAChBkD,uBAAuB,GAGjClqB,EAAKue,SAAWve,EAAKue,SAASzd,KAAdjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChBA,EAAK7F,YAAc6F,EAAK7F,YAAY2G,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACbA,EAAKse,aAAete,EAAKse,aAAaxd,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC1BA,EAAK2a,gBAAkB3a,EAAK2a,gBAAgB7Z,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAvBLA,wEA0BV/G,GACFiH,KAAK0B,SAAS,CAAEuc,UAAU,4CAGjBU,GACT3e,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GAAiBgjB,GAAO3e,KAAKI,MAAMue,2CAInC3e,KAAK0B,SAAS,CACVxH,OAAQ,CACJ+E,KAAuB,GACvBoE,iBAAuB,GACvBG,kBAAuB,GACvB+B,cAAuB,GACvBqZ,WAAuB,GACvBC,SAAuB,GACvB9lB,KAAuB,eACvBy2B,MAAuB,eACvBpY,MAAuB,gBAE3BqY,iBAA8B,8CAIrB32B,GACbkH,KAAK0B,SAAS,CAAExH,OAAQ,CAAEnB,KAAMD,EAAKC,KAAMqe,MAAOte,EAAKse,MAAOoY,MAAO12B,EAAK02B,MAAOvwB,KAAM,2CAG9EhB,GACT,IAAI3C,EAAQ2C,EAAE2K,OAAOtN,MACrB0E,KAAK0B,SAAS,CACVxH,OAAOyB,OAAAC,EAAA,EAAAD,CAAA,GAAMqE,KAAKI,MAAMlG,OAAlB,CAA0B+E,KAAMhB,EAAE2K,OAAOtN,SAChD,WACsB,IAAAo0B,EAAjBp0B,EAAMgC,OAAS,EACf0C,KAAKH,MAAM+d,cAAX8R,EAAA,CACI32B,KAAMiH,KAAKI,MAAMlG,OAAOnB,MAD5B4C,OAAAqO,GAAA,EAAArO,CAAA+zB,EAEK1vB,KAAKI,MAAMlG,OAAOs1B,MAAQl0B,GAF/BK,OAAAqO,GAAA,EAAArO,CAAA+zB,EAAA,YAGe1vB,KAAKH,MAAM9G,MAH1B22B,IAMA1vB,KAAK0B,SAAS,CACV+tB,iBAAkB,kDAO9BzvB,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAOkD,uBAAuB,4CAGlD/rB,EAAGlF,EAAMuxB,GACrBrsB,EAAEuD,kBAEU,UAATzI,EACCiH,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAM3gB,YAAamkB,IACpC,iBAATvxB,GACNiH,KAAK0B,SAAS,CAAEsoB,uBAAuB,EAAM7jB,YAAamkB,sDAIxCzqB,GACtB,GAAGA,EAAM0qB,aAAe1qB,EAAM0qB,cAAgBvqB,KAAKH,MAAM0qB,YAAY,CACjE,IAAIH,EAAapqB,KAAKI,MAAMgqB,YAAc,GAC1CA,EAAW5iB,KAAK3H,EAAM0qB,YAAYC,SAElCxqB,KAAK0B,SAAS,CAAEolB,gBAAgB,EAAOkD,uBAAuB,EAAOI,WAAYA,IAGrFpqB,KAAK0B,SAAS,CAAEiuB,YAAa9vB,EAAM8vB,YAAaF,iBAAkB5vB,EAAM4vB,iBAAkBpQ,WAAYxf,EAAMwf,8CAG1G,IAAAxd,EAAA7B,KAAA2nB,EAC8G3nB,KAAKI,MAAtGqvB,GADb9H,EACAgI,YADAhI,EACa8H,kBAAkB3I,EAD/Ba,EAC+Bb,eAAgBzH,EAD/CsI,EAC+CtI,WAAY2K,EAD3DrC,EAC2DqC,sBAAuBI,EADlFzC,EACkFyC,WAAYjkB,EAD9FwhB,EAC8FxhB,YAGtG,OACC9D,EAAAC,EAAAC,cAAA,OAAKE,UAAS,gBAAA1D,OAAqBsgB,EAAc,GAAK,UACrDhd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACHJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,OACzC3Y,EAAAC,EAAAC,cAAA,OAAKE,UAAS,cAAA1D,OAAgBiB,KAAKI,MAAM6d,SAAW,SAAW,KAAOuB,OAAQ,kBAAM3d,EAAKwc,SAAS,cACjGhc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWE,QAAS,kBAAMd,EAAK4Y,gBAAgB,cACnDpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOiiB,aAAa,MAAM1f,MAAO0E,KAAKI,MAAMlG,OAAOkd,MAAO9L,SAAU,kBAAMzJ,EAAK4Y,gBAAgB,aAAa9R,KAAK,gBAEnJtG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKqc,iBAAiB,CACbnlB,KAAM,eACNy2B,MAAO,eACPpY,MAAO,mBAHnC,gBAKA/U,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKqc,iBAAiB,CACbnlB,KAAM,OACNy2B,MAAO,OACPpY,MAAO,oBAHnC,iBAKA/U,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAKqc,iBAAiB,CACbnlB,KAAM,QACNy2B,MAAO,QACPpY,MAAO,qBAHnC,oBAQa/U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAMiiB,aAAa,MAAM1O,YAAY,SAAS3D,KAAK,YAAYrN,MAAO0E,KAAKI,MAAMlG,OAAO+E,KAAMqM,SAAUtL,KAAKoe,gBAG1H/b,EAAAC,EAAAC,cAAA,UAAQI,QAAS3C,KAAK/F,YAAawI,UAAU,YAAY1J,KAAK,SAA9D,aAMAqJ,kBAAQqtB,IAAqBA,EAAiBnyB,OAAS,EACzD+E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yBAIRF,EAAAC,EAAAC,cAAA,aAESktB,EAAiBnyB,OAAS,GAAMmyB,EAAiBhkB,IAAI,SAACwf,EAAIjW,GAIvD,IAHA,IAAIyS,EAAU,GACVG,EAAQqD,EAAGpD,OAAQhpB,SAASosB,EAAGpD,QAAQ,EAElCtgB,EAAI,EAAGA,EAAIqgB,EAAMrgB,IACtBkgB,EAAQjgB,KAAKnF,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,WAAAnH,OAAawI,GAAKgI,IAAI,yBAI/C,OACIlN,EAAAC,EAAAC,cAAA,MAAI2D,IAAG,iBAAAnH,OAAmBiW,IACtB3S,EAAAC,EAAAC,cAAA,UAAK0oB,EAAG1D,gBAAR,IAAyBllB,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYE,QAAS,SAAC1E,GAAD,OAAQ4D,EAAKwqB,gBAAgBpuB,EAAG,eAAgBgtB,EAAG5D,iBAAgBhlB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAC1IlN,EAAAC,EAAAC,cAAA,UAAK0oB,EAAG3D,gBAAR,IAA0B2D,EAAG7D,gBAC7B/kB,EAAAC,EAAAC,cAAA,UAAK0oB,EAAGqB,YACRjqB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaglB,IAChCplB,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SACpBJ,EAAAC,EAAAC,cAAA,aAAQ0oB,EAAGtb,SAENsb,EAAGtb,QACJtN,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQwoB,EAAGtb,SAAgB,MAInDtN,EAAAC,EAAAC,cAAA,UAEsB,SAAb0oB,EAAGzD,OAAqB4C,EAAWhtB,QAAQ6tB,EAAG5D,cAAchsB,KAAO,EACpEgH,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUC,MAAO,CAACgK,OAAQ,YAAYrK,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,iCAE/DlN,EAAAC,EAAAC,cAAA,QAAME,UAAU,UAAUE,QAAS,SAAC1E,GAAD,OAAQ4D,EAAKwqB,gBAAgBpuB,EAAG,QAASgtB,KAA5E,gBAWpC5oB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAegtB,EAAiBnyB,OAA/C,qBACA+E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACVJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAf,mDAINqkB,EACHzkB,EAAAC,EAAAC,cAACgqB,GAAD,CAAY/E,MAAOxnB,KAAKH,MAAM2nB,MAAOU,WAAYloB,KAAKH,MAAMqoB,WAAYpB,eAAgBA,EAAgBiB,iBAAkB/nB,KAAK+nB,iBAAiBnnB,KAAKZ,MAAOmG,YAAaA,IAAkB,KAIxL6jB,EACH3nB,EAAAC,EAAAC,cAACiqB,GAAD,CAAkBtE,WAAYloB,KAAKH,MAAMqoB,WAAY8B,sBAAuBA,EAAuBjC,iBAAkB/nB,KAAK+nB,iBAAiBnnB,KAAKZ,MAAOmG,YAAaA,IAAkB,aAnNtK1F,IAAMsC,WCiuB3B6sB,eA9tBd,SAAAA,EAAY/vB,GAAO,IAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA4vB,IAClB9vB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAi0B,GAAAzvB,KAAAH,KAAMH,KAwCPgwB,sBAAwB,WACvB,IAAI/R,EAAWhe,EAAKM,MAAMrH,KACtB+2B,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAM0vB,sBACtCC,EAAajwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWG,MAAS,GACrEyN,EAAclwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWC,OAAU,GACvE4N,EAAcnwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWE,OAAU,GAK3E,UAHOwN,EAAqB3L,aACrB2L,EAAqBvnB,SAC5BunB,EAAqBjS,UAAYC,EAC9BkS,EAAW1yB,OAAS,GAAKyyB,EAAUzyB,OAAS,GAAK2yB,EAAW3yB,OAAS,EACvE,GAAiC,UAA9BwyB,EAAqB/2B,KAAkB,CACzC,IAAIm3B,EAAW,GACfD,EAAW9Y,QAAQ,SAASgZ,GAC3BD,EAAS1oB,KAAK2oB,EAAK5nB,YAGpBunB,EAAqBvnB,SAAW2nB,OAC1B,GAAiC,UAA9BJ,EAAqB/2B,KAAkB,CAChD,IAAIq3B,EAAW,GACfJ,EAAW7Y,QAAQ,SAASgZ,GAC3B,IAAIE,EAAU,GACdN,EAAU5Y,QAAQ,SAASmZ,GACvBA,EAAKlwB,QAAU+vB,EAAK70B,OACtB+0B,EAAQ7oB,KAAK8oB,EAAKC,WAIpBH,EAAS5oB,KAAK,CACbka,QAAS2O,EACTjwB,MAAO+vB,EAAK70B,UAIdw0B,EAAqB3L,MAAQiM,EAK/BtwB,EAAK4B,SAAS,CAAEouB,qBAAsBA,GAAwB,WAC7DhwB,EAAKD,MAAM2wB,WAAWV,MAjFLhwB,EAqFnB2wB,mBAAqB,SAACrN,GACrB,IAAItF,EAAWhe,EAAKM,MAAMrH,KACtB23B,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMswB,uBACvCX,EAAajwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWG,MAAS,GACrEyN,EAAclwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWC,OAAU,GACvE4N,EAAcnwB,EAAKM,MAAMgiB,YAActiB,EAAKM,MAAMgiB,WAAWE,OAAU,GAK3E,UAHOoO,EAAsBvM,aACtBuM,EAAsBnoB,SAC7BmoB,EAAsB7S,UAAYC,EAC/BkS,EAAW1yB,OAAS,GAAKyyB,EAAUzyB,OAAS,GAAK2yB,EAAW3yB,OAAS,EACvE,GAAkC,UAA/BozB,EAAsB33B,KAAkB,CAC1C,IAAIm3B,EAAW,GACfD,EAAW9Y,QAAQ,SAASgZ,GAC3BD,EAAS1oB,KAAK2oB,EAAK5nB,YAGpBmoB,EAAsBnoB,SAAW2nB,OAC3B,GAAkC,UAA/BQ,EAAsB33B,KAAkB,CACjD,IAAIq3B,EAAW,GACfJ,EAAW7Y,QAAQ,SAASgZ,GAC3B,IAAIE,EAAU,GACdN,EAAU5Y,QAAQ,SAASmZ,GACvBA,EAAKlwB,QAAU+vB,EAAK70B,OACtB+0B,EAAQ7oB,KAAK8oB,EAAKC,WAIpBH,EAAS5oB,KAAK,CACbka,QAAS2O,EACTjwB,MAAO+vB,EAAK70B,UAIdo1B,EAAsBvM,MAAQiM,EAKhCtwB,EAAK4B,SAAS,CAAEgvB,sBAAuBA,GAAyB,WAE/D,IAAI53B,EAAI6C,OAAAC,EAAA,EAAAD,CAAA,GACJ+0B,EADI,CAEPrZ,OAAQ+L,IAETtjB,EAAKD,MAAM8wB,YAAY73B,MAlINgH,EAsInB0iB,mBAAqB,WACpB1iB,EAAK+vB,wBACL/vB,EAAK2wB,mBAAmB,CACvBC,sBAAuB5wB,EAAKM,MAAMswB,sBAClCZ,qBAAsBhwB,EAAKM,MAAM0vB,qBACjCjS,UAAU/d,EAAKD,MAAMie,SACrB/kB,KAAM+G,EAAKM,MAAMrH,KACjBqpB,WAAYtiB,EAAKM,MAAMgiB,aAExBlkB,QAAQC,IAAI,4BAA6B,CACxCuyB,sBAAuB5wB,EAAKM,MAAMswB,sBAClCZ,qBAAsBhwB,EAAKM,MAAM0vB,qBACjCjS,UAAU/d,EAAKD,MAAMie,SACrB/kB,KAAM+G,EAAKM,MAAMrH,KACjBqpB,WAAYtiB,EAAKM,MAAMgiB,cApJNtiB,EA6KnB8f,kBAAoB,SAAC3hB,EAAGkkB,GACvBlkB,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,GACtC0N,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,wBAM3B,IAJFtO,EAAWC,MAAMzH,UAAU,SAAChG,GAC1C,OAAOA,EAAKtZ,QAAU6mB,EAAc7mB,SAIpC8mB,EAAWC,MAAM7a,KAAK,CACrB4P,MAAO+K,EAAc/K,MACrB9b,MAAO6mB,EAAc7mB,QAIvBw0B,EAAqB/2B,KAAO,QAC5B23B,EAAsB33B,KAAO,QAC7B+G,EAAK4B,SAAS,CACbme,SAAgB,GAChBuC,WAAYA,EACZ0N,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK8wB,mBAAmB7Q,QAAQC,QAChClgB,EAAK0iB,wBAvMY1iB,EA6MnB6gB,iBAAmB,SAAC1iB,EAAGwkB,GACtBxkB,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,GACtC0N,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,wBAM3B,IAJFtO,EAAWG,KAAK3H,UAAU,SAAChG,GACzC,OAAOA,EAAKtZ,QAAUmnB,EAAapB,sBAInCe,EAAWG,KAAK/a,KAAK,CACpB+oB,QAAS9N,EAAapnB,GACtB+E,MAAOqiB,EAAariB,MACpB9E,MAAOmnB,EAAapB,mBACpBjK,MAAK,GAAArY,OAAK0jB,EAAapB,mBAAlB,MAAAtiB,OAAyC0jB,EAAariB,MAAtD,OAIP0vB,EAAqB/2B,KAAO,QAC5B23B,EAAsB33B,KAAO,QAC7B+G,EAAK4B,SAAS,CACbkf,QAAe,GACfwB,WAAYA,EACZ0N,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK+wB,kBAAkB9Q,QAAQC,QAC/BlgB,EAAK0iB,wBAzOY1iB,EA+OnBmb,kBAAoB,SAAChd,EAAG4c,GACvB5c,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,GACtC0N,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,wBAM3B,IAJFtO,EAAWE,MAAM1H,UAAU,SAAChG,GAC1C,OAAOA,EAAKtZ,QAAUuf,EAAczD,SAIpCgL,EAAWE,MAAM9a,KAAK,CACrB4P,MAAOyD,EAAczD,MACrB9b,MAAOuf,EAAczD,MACrB7O,SAAUsS,EAAc/hB,KAAKyP,WAI/BunB,EAAqB/2B,KAAO,QAC5B23B,EAAsB33B,KAAO,QAC7B+G,EAAK4B,SAAS,CACb6Y,SAAgB,GAChB6H,WAAYA,EACZ0N,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAKgxB,mBAAmB/Q,QAAQC,QAChClgB,EAAK0iB,wBA1QY1iB,EAgRnB2gB,mBAAqB,SAACxiB,EAAGlF,EAAMic,GAC9B/W,EAAEuD,kBACF,IAAIkhB,EAAU5iB,EAAKM,MAAMgiB,YAAc,GACnC0N,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,uBAE5ChO,EAAQ3pB,GAAM8pB,OAAO7N,EAAO,GAChB,UAATjc,GAA6C,IAAzB2pB,EAAQ3pB,GAAMuE,SACpColB,EAAQH,KAAO,GACfG,EAAQJ,MAAQ,IAGL,SAATvpB,GAA4C,IAAzB2pB,EAAQ3pB,GAAMuE,SACnColB,EAAQJ,MAAQ,IAGjB,IAAIG,EAAyB,SAAT1pB,EAAmB+G,EAAKM,MAAMqiB,aAAe,KAC7DN,EAA0B,UAATppB,EAAoB+G,EAAKM,MAAM+hB,cAAgB,KAChEtH,EAA0B,UAAT9hB,EAAoB+G,EAAKM,MAAMya,cAAgB,KAEpEiV,EAAqB/2B,KAAQ+G,EAAKM,MAAMgiB,WAAWC,MAAM/kB,OAAS,EAAG,QAAQ,OAC7EozB,EAAsB33B,KAAQ+G,EAAKM,MAAMgiB,WAAWC,MAAM/kB,OAAS,EAAG,QAAQ,OAE9EwC,EAAK4B,SAAS,CACb0gB,WAAaM,EACbD,aAAcA,EACdN,cAAeA,EACftH,cAAeA,EACfiV,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK0iB,wBA/SY1iB,EAqTnBixB,kBAAoB,SAAC30B,GACpB,IAAI+I,EAAY9I,KAAOD,GAAME,OAAO,KAChCwzB,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,uBAE5C,GAAGvrB,EADW9I,KAAOyD,EAAKM,MAAMstB,SAASpxB,OAAO,KAG/C,OADAiI,GAAY,CAAChF,QAAS,8CACf,EAGRuwB,EAAqB9oB,MAAQ5K,EAC7Bs0B,EAAsB1pB,MAAQ5K,EAC9B0D,EAAK4B,SAAS,CACbyD,UAAW/I,EACX0zB,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK0iB,wBAtUY1iB,EA0UnBkxB,gBAAkB,SAAC50B,GAClB,IAAIsxB,EAAUrxB,KAAOD,GAAME,OAAO,KAC9BwzB,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM0vB,sBACvCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,uBAG5C,GAAGhD,EAFYrxB,KAAOyD,EAAKM,MAAM+E,WAAW7I,OAAO,KAIlD,OADAiI,GAAY,CAAChF,QAAS,gDACf,EAGRuwB,EAAqB7oB,IAAM7K,EAC3Bs0B,EAAsBzpB,IAAM7K,EAC5B0D,EAAK4B,SAAS,CACbgsB,QAAStxB,EACT0zB,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK0iB,wBA5VY1iB,EAgWnB8tB,YAAc,SAACxxB,GACd,IAAI0zB,EAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAM0vB,sBACtCY,EAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAMswB,uBAE5CZ,EAAqB7oB,IAAM7K,EAAKsxB,QAChCgD,EAAsBzpB,IAAM7K,EAAKsxB,QAEjCoC,EAAqB9oB,MAAQ5K,EAAK+I,UAClCurB,EAAsB1pB,MAAQ5K,EAAK+I,UACnCrF,EAAK4B,SAAS,CACbyD,UAAW/I,EAAK+I,UAChBuoB,QAAStxB,EAAKsxB,QACdd,SAAUxwB,EAAKwwB,SACfkD,qBAAsBA,EACtBY,sBAAuBA,GACrB,WACF5wB,EAAK0iB,wBAhXY1iB,EA8ZnBmxB,yBAA2B,SAAChzB,GAC3BA,EAAEuD,kBAEC1B,EAAKmgB,UAAU7F,SAASnc,EAAE2K,SACK,6BAAlC3K,EAAE2K,OAAOyR,aAAa,SACtBva,EAAK+gB,SAASzG,SAASnc,EAAE2K,SACS,4BAAlC3K,EAAE2K,OAAOyR,aAAa,SACtBva,EAAKqa,UAAUC,SAASnc,EAAE2K,SACQ,6BAAlC3K,EAAE2K,OAAOyR,aAAa,SACtBva,EAAKkiB,WAAW5H,SAASnc,EAAE2K,SAC3B9I,EAAKmiB,eAAe7H,SAASnc,EAAE2K,SAC/B9I,EAAKoiB,kBAAkB9H,SAASnc,EAAE2K,SACA,gBAAlC3K,EAAE2K,OAAOyR,aAAa,SACe,uBAAlCpc,EAAE2K,OAAOyR,aAAa,SACpBpc,EAAE2K,OAAOyR,aAAa,iBAItBva,EAAKM,MAAM8f,OAAWpgB,EAAKM,MAAM0gB,OAAWhhB,EAAKM,MAAMka,QAAYxa,EAAKM,MAAMif,aAClFvf,EAAK4B,SAAS,CAAEwe,OAAO,EAAOY,OAAO,EAAOxG,QAAQ,EAAO+E,YAAY,EAAOQ,SAAS,GAAIe,QAAS,GAAIrG,SAAU,MA/anH,IAAImT,EAAUrxB,OAASC,OAAO,cAC1B6I,EAAY9I,OAASsxB,SAAS,EAAG,QAAQrxB,OAAO,cAHlC,OAIlBwD,EAAKM,MAAQ,CACZoX,KAAM,GACNmC,OAAQ,GACRkG,SAAU,GACTe,QAAS,GACTrG,SAAU,GACX2F,OAAO,EACPY,OAAO,EACPxG,QAAQ,EACP+E,YAAY,EACN0D,YAAY,EACnBtN,aAAc,GACd1c,KAAM,UACNqpB,WAAY,CAACC,MAAM,GAAIE,KAAM,GAAID,MAAO,IACxCwN,qBAAsB,CACrB/2B,KAAM,OACNkO,IAAKymB,EACL1mB,MAAO7B,GAERurB,sBAAuB,CACtBpI,KAAM,EACNvvB,KAAM,OACNkO,IAAKymB,EACL1mB,MAAO7B,EACP+rB,iBAAkB,GAClBC,SAAU,aAEXzD,QAASA,EACTvoB,UAAWA,EACXynB,SAAU,IAGX9sB,EAAK+wB,kBAAoBpwB,IAAMC,YAC/BZ,EAAK8wB,mBAAqBnwB,IAAMC,YAChCZ,EAAKgxB,mBAAqBrwB,IAAMC,YAtCdZ,gFAwJF/G,GAAM,IAAA8I,EAAA7B,KAElB0wB,GADoB/0B,OAAAC,EAAA,EAAAD,CAAA,GAAQqE,KAAKI,MAAM0vB,sBAClBn0B,OAAAC,EAAA,EAAAD,CAAA,GAAQqE,KAAKI,MAAMswB,wBAE5CA,EAAsBpI,KAAO,EAC7BtoB,KAAK0B,SAAS,CACb3I,KAAMA,EACNmzB,YAAY,EACZC,cAAe,GACfuE,sBAAuBA,GACrB,WACF7uB,EAAK2gB,qBAEDpgB,kBAAQP,EAAKzB,MAAMgxB,gBACtBvvB,EAAKhC,MAAMwxB,eAAX11B,OAAAC,EAAA,EAAAD,CAAA,GAA+BkG,EAAKzB,MAAMgxB,cAA1C,CAAyDvT,UAAW9kB,+CA8MvDA,GACF,SAATA,GAA0D,IAAvCiH,KAAKI,MAAMgiB,WAAWC,MAAM/kB,QAEtC,UAATvE,GAA0D,IAAtCiH,KAAKI,MAAMgiB,WAAWG,KAAKjlB,SAGvC,SAATvE,GACFiH,KAAK0B,SAAS,CACbwe,OAAO,EACP5F,QAAQ,EACRwG,OAAQ9gB,KAAKI,MAAM0gB,MACnBzB,YAAW,EACX0D,YAAY,IAIF,UAAThqB,GACFiH,KAAK0B,SAAS,CACbof,OAAO,EACPxG,QAAQ,EACR4F,OAAQlgB,KAAKI,MAAM8f,MACnBb,YAAW,EACX0D,YAAY,IAIF,UAAThqB,GACFiH,KAAK0B,SAAS,CACbwe,OAAO,EACPY,OAAO,EACPxG,QAASta,KAAKI,MAAMka,OACpB+E,YAAW,EACX0D,YAAY,4CAKA9kB,GAAG,IAAAgpB,EACOhpB,EAAE2K,OAAlBD,EADSse,EACTte,KAAMrN,EADG2rB,EACH3rB,MACd0E,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GAAiBgN,EAAOrN,GAAS,2DA2BjC0E,KAAK0B,SAAS,CACbwe,OAAO,EACPY,OAAO,EACPxG,QAAQ,EACRyI,YAAY,EACZ1D,YAAarf,KAAKI,MAAMif,uDAKzBrf,KAAK0B,SAAS,CAAE2d,YAAW,EAAO0D,YAAa/iB,KAAKI,MAAM2iB,+DAGjCljB,GACzBG,KAAK0B,SAAS,CACb8V,KAAM3X,EAAM2X,MAAQ,GACpBmC,OAAQ9Z,EAAM8Z,QAAU,GAExBlE,aAAc5V,EAAM4V,2DAQF,IAAAlE,EAAAvR,KACfqX,EAAcrX,KAAKH,MAAMyxB,iBAAmB,GAChD,GAAIlvB,kBAAQiV,IAAWA,EAAOwG,YAAc7d,KAAKH,MAAMie,SAiBhD,CACN,IAAI/kB,EAAuC,UAAxBiH,KAAKH,MAAMie,SAAwB,UAAY9d,KAAKH,MAAMie,SAC7E9d,KAAK0B,SAAS,CACb3I,KAAOA,GACL,WACFwY,EAAKiR,4BArBNxiB,KAAK0B,SAAS,CACb0gB,WAAe/K,EAAO+K,WACtBsO,sBAAqB/0B,OAAAC,EAAA,EAAAD,CAAA,GACjB0b,EAAOqZ,sBADU,CAEpB1pB,MAAOhH,KAAKI,MAAM+E,UAClB8B,IAAKjH,KAAKI,MAAMstB,UAEjBoC,qBAAoBn0B,OAAAC,EAAA,EAAAD,CAAA,GAChB0b,EAAOyY,qBADS,CAEnB9oB,MAAOhH,KAAKI,MAAM+E,UAClB8B,IAAKjH,KAAKI,MAAMstB,UAEjB30B,KAAese,EAAOte,MACpB,WACFwY,EAAKiR,uBAULnhB,SAASC,iBAAiB,QAAStB,KAAKixB,yEAI1C5vB,SAASO,oBAAoB,QAAS5B,KAAKixB,2DAGnC,IAAA5N,EAAArjB,KAAA2nB,EACgG3nB,KAAKI,MAArGgiB,EADAuF,EACAvF,WAAY5K,EADZmQ,EACYnQ,KAAM0I,EADlByH,EACkBzH,MAAOY,EADzB6G,EACyB7G,MAAOxG,EADhCqN,EACgCrN,OAAQuF,EADxC8H,EACwC9H,SAAUe,EADlD+G,EACkD/G,QAASrG,EAD3DoN,EAC2DpN,SAAU8E,EADrEsI,EACqEtI,WAAY0D,EADjF4E,EACiF5E,WAGrFnoB,EADsBwlB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MACvC9U,IAAI,SAACmJ,GACpC,MAAO,CAAEwC,MAAOxC,EAAKtZ,MAAOA,MAAOsZ,EAAKvZ,MAEzCT,EAAS22B,IAAOC,QAAQ52B,EAAQ,CAAC,SAAAwF,GAAK,OAAIA,EAAM9E,MAAMsc,gBAAgB,CAAC,QAEvE,IAAIsJ,EAAkB,GACtBkB,EAAWC,MAAMlL,QAAQ,SAAC/W,GACzB8gB,EAAgB1Z,KAAKpH,EAAM9E,SAG5B,IAAI6lB,EAAWD,EAAgBzV,IAAI,SAAArL,GAClC,MAAO,CAAEA,MAAOA,EAAO4gB,MAAOxJ,EAAKpX,MAGhCqxB,EAAY,GAChBrP,EAAWG,KAAKpL,QAAQ,SAACK,GACxB6L,EAAKjjB,MAAMuZ,OAAOxC,QAAQ,SAACua,GACtBA,EAAK54B,KAAKsH,QAAUoX,EAAKpX,OAAWsxB,EAAK54B,KAAK4oB,UAAYlK,EAAK+Y,SAClEkB,EAAUjqB,KAAKkqB,OAKlB,IAAI/X,EAAS4X,IAAOC,QAAQC,EAAW,CAAC,SAAAxa,GAAK,OAAIA,EAAMG,MAAMQ,gBAAgB,CAAC,QAE9E,OACCvV,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAClBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,YAAY/gB,UAAgC,YAApBzC,KAAKI,MAAMrH,KAAsB,UAAY,IAAhH,WACAsJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,aAAa/gB,UAAgC,aAApBzC,KAAKI,MAAMrH,KAAuB,UAAY,IAAlH,QAGFsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACIJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA1D,OAAmBgkB,EAAa,aAAa,GAA7C,KAAoDpgB,QAAS3C,KAAKmjB,gBAAgBviB,KAAKZ,OAAOqC,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAlJ,WACAphB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA0f,GAAiB,OAAImB,EAAKnB,kBAAoBA,GAAmBzf,UAAS,iBAAA1D,OAAmBsgB,EAAa,YAAY,GAA5C,KAAmD1c,QAAS3C,KAAKkjB,mBAAmBtiB,KAAKZ,OAAOqC,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAA1N,YAGnBphB,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,MAAMvY,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAM2iB,WAAa,gBAAgB,KACnH1gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,eAEAJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyd,GAAS,OAAIoD,EAAKpD,UAAYA,GAAWxd,UAAS,aAAA1D,OAAemhB,EAAQ,SAAW,MACjF7d,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWE,QAAS,kBAAM0gB,EAAK5I,gBAAgB,WAC7DpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK4wB,mBAAoB5V,aAAa,MAAM1O,YAAY,QAAQ3D,KAAK,WAAWrN,MAAOukB,EAAUvU,SAAUtL,KAAK4F,eAAehF,KAAKZ,SAE7JqC,EAAAC,EAAAC,cAAA,MAAIE,UAAY2f,EAAWC,MAAM/kB,OAAS,EAAK,WAAa,KAErE1C,GAAU,IAAI6Q,IAAI,SAACrL,EAAOmH,GAC1B,IAAIoqB,EAAWvP,EAAWC,MAAMzH,UAAU,SAACgX,GAC1C,OAAQxxB,EAAM9E,QAAUs2B,EAAUt2B,QAGnC,OACE8E,EAAMgX,MAAMQ,cAAce,SAASkH,EAASjI,eAC7CvV,EAAAC,EAAAC,cAAA,MAAI2D,IAAG,WAAAnH,OAAawI,GAAKzO,KAAK,2BAA2B6J,QAAS,SAAC1E,GACjE0zB,GAAY,EACbtO,EAAK5C,mBAAmBxiB,EAAG,QAAS0zB,GAEpCtO,EAAKzD,kBAAkB3hB,EAAvBtC,OAAAC,EAAA,EAAAD,CAAA,GAA+ByE,KAC7BqC,UAAYkvB,GAAY,EAAG,WAAW,IAAKvxB,EAAMgX,OACnD,SAON/U,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAqe,GAAQ,OAAIwC,EAAKxC,SAAWA,GAAUpe,UAAS,aAAA1D,OAAe+hB,EAAQ,SAAW,MAC1Fze,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAA2C,IAA5BqjB,EAAWC,MAAM/kB,OAAgB,MAAM,KAAOqF,QAAS,kBAAM0gB,EAAK5I,gBAAgB,UAC9GpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK6wB,kBAAmB7V,aAAa,MAAMjO,SAAuC,IAA5BqV,EAAWC,MAAM/kB,OAA8BgP,YAAY,OAAO3D,KAAK,UAAUrN,MAAOslB,EAAStV,SAAUtL,KAAK4F,eAAehF,KAAKZ,SAGnNqC,EAAAC,EAAAC,cAAA,MAAIE,UAAY2f,EAAWG,KAAKjlB,OAAS,EAAK,WAAa,KAExD6jB,GAAY,IAAI1V,IAAI,SAACmJ,EAAMrN,GAG3B,OAFYgqB,IAAOC,QAAQ5c,EAAKoM,MAAO,CAAC,SAAAI,GAAI,OAAIA,EAAKC,mBAAmBzJ,gBAAgB,CAAC,SAG9E,IAAInM,IAAI,SAAC2V,EAAMpM,GACxB,IAAI2c,EAAWvP,EAAWG,KAAK3H,UAAU,SAACiX,GACzC,OAAQA,EAASzxB,QAAUwU,EAAKxU,OAAWyxB,EAAStB,UAAYnP,EAAK/lB,KAGtE,OACE+lB,EAAKC,mBAAmBzJ,cAAce,SAASiI,EAAQhJ,eACxDvV,EAAAC,EAAAC,cAAA,MAAI2D,IAAG,UAAAnH,OAAYiW,GAASlc,KAAK,0BAA0B6J,QAAS,SAAC1E,GACnE0zB,GAAY,EACbtO,EAAK5C,mBAAmBxiB,EAAG,OAAQ0zB,GAEnCtO,EAAK1C,iBAAiB1iB,EAAtBtC,OAAAC,EAAA,EAAAD,CAAA,GAA8BylB,EAA9B,CAAoChhB,MAAOwU,EAAKxU,UAC9CqC,UAAYkvB,GAAY,EAAG,WAAW,IAAKvQ,EAAKC,mBALnD,KAKyEzM,EAAKxU,MAL9E,KAMC,WASRiC,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA2X,GAAS,OAAIkJ,EAAKlJ,UAAYA,GAAW1X,UAAS,aAAA1D,OAAeub,EAAS,SAAW,MAC9FjY,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAA0C,IAA3BqjB,EAAWG,KAAKjlB,OAAgB,MAAM,KAAOqF,QAAS,kBAAM0gB,EAAK5I,gBAAgB,WAC7GpY,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOyJ,IAAKxC,KAAK8wB,mBAAoB9V,aAAa,MAAMjO,SAAsC,IAA3BqV,EAAWG,KAAKjlB,OAA8BgP,YAAY,QAAQ3D,KAAK,WAAWrN,MAAOif,EAAUjP,SAAUtL,KAAK4F,eAAehF,KAAKZ,SAGtNqC,EAAAC,EAAAC,cAAA,MAAIE,UAAY2f,EAAWE,MAAMhlB,OAAS,EAAK,WAAa,KAEzDqc,GAAU,IAAIlO,IAAI,SAACwL,EAAO1P,GAC1B,IAAIoqB,EAAWvP,EAAWE,MAAM1H,UAAU,SAACkX,GAC1C,OAAQA,EAAUvpB,WAAa0O,EAAMne,KAAKyP,WAG3C,OACE0O,EAAMG,MAAMQ,cAAce,SAAS4B,EAAS3C,eAC5CvV,EAAAC,EAAAC,cAAA,MAAI2D,IAAG,WAAAnH,OAAawI,GAAKzO,KAAK,2BAA2B6J,QAAS,SAAC1E,GACjE0zB,GAAY,EACbtO,EAAK5C,mBAAmBxiB,EAAG,QAAS0zB,GAEpCtO,EAAKpI,kBAAkBhd,EAAvBtC,OAAAC,EAAA,EAAAD,CAAA,GAA+Bsb,KAC7BxU,UAAYkvB,GAAY,EAAG,WAAW,IAAK1a,EAAMG,OAAc,UAQzE/U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyf,GAAc,OAAIoB,EAAKpB,eAAiBA,GAAgBxf,UAAS,iBAAA1D,OAAmBsgB,EAAa,YAAc,GAA9C,KAAqD1c,QAAS3C,KAAKkjB,mBAAmBtiB,KAAKZ,OAAOqC,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAnN,aAGFphB,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAClBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdJ,EAAAC,EAAAC,cAACwvB,GAAD,CACC7E,WAAYltB,KAAKI,MAAM+E,UACvBA,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBE,YAAa5tB,KAAK4tB,YAClB3qB,aAAcjD,KAAK+wB,kBACnBnE,SAAU5sB,KAAKI,MAAMwsB,SACrBnqB,UAAU,QACV6J,YAAY,gBAGb,IAEDjK,EAAAC,EAAAC,cAAA,QAAME,UAAU,MAAhB,MAfD,IAeiC,IAEhCJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdJ,EAAAC,EAAAC,cAACwvB,GAAD,CACC7E,WAAYltB,KAAKI,MAAMstB,QACvBvoB,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBzqB,aAAcjD,KAAKgxB,gBACnBpD,YAAa5tB,KAAK4tB,YAClBhB,SAAU5sB,KAAKI,MAAMwsB,SACrBnqB,UAAU,QACV6J,YAAY,iBAOjBjK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAczC,KAAKH,MAAMgrB,cAAxC,WAGE7qB,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACzH+E,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAEhBzC,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,EACrC0C,KAAKI,MAAMgiB,WAAWC,MAAM5W,IAAI,SAAC4L,EAAQrC,GACxC,OACC3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,aAAAnH,OAAeiW,GAASvS,UAAU,SAAS4U,EAAOD,MAC1D/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACtD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAIrC,KAILzjB,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,EACpC0C,KAAKI,MAAMgiB,WAAWG,KAAK9W,IAAI,SAAC4L,EAAQrC,GACvC,OACC3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,YAAAnH,OAAciW,GAASvS,UAAU,SAAS4U,EAAOD,MACzD/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,OAAQ+W,KACrD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAIrC,KAILzjB,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACrC0C,KAAKI,MAAMgiB,WAAWE,MAAM7W,IAAI,SAAC4L,EAAQrC,GACxC,OACC3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,aAAAnH,OAAeiW,GAASvS,UAAU,SAAS4U,EAAOD,MAC1D/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACtD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAIrC,MAGP,KAGFphB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAwf,GAAU,OAAIqB,EAAKrB,WAAaA,IACzC3f,EAAAC,EAAAC,cAACyvB,GAAD,CACC3S,WAAYA,EACZmI,MAAOxnB,KAAKH,MAAM2nB,MAClBU,WAAYloB,KAAKH,MAAMqoB,WACvBqC,YAAavqB,KAAKH,MAAM0qB,YACxBoF,YAAa3vB,KAAKH,MAAM8vB,YACxB52B,KAAMiH,KAAKI,MAAMrH,KACjB6kB,aAAc5d,KAAKH,MAAM+d,aACzB6R,iBAAkBzvB,KAAKH,MAAM4vB,4BAvtBNhvB,IAAMsC,WCE7BkvB,eA0BL,SAAAA,EAAYpyB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAiyB,IAClBnyB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAs2B,GAAA9xB,KAAAH,KAAMH,KAKDO,MAAQ,CACZ8f,OAAO,EACPY,OAAO,EACPxG,QAAQ,EAER4R,YAAY,EAEJC,cAAe,GACfiF,cAAe,GACvB/R,YAAY,EAKZgL,qBAAsB,IAKvBvqB,EAAK8d,aAAe9d,EAAK8d,aAAahd,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAzBFA,4EAmDLskB,GAAY,IAAAviB,EAAA7B,KACzBA,KAAK0B,SAAS,CAAE0vB,cAAehN,GAAc,WAE5CviB,EAAKhC,MAAMwxB,eAAX11B,OAAAC,EAAA,EAAAD,CAAA,GAA+ByoB,mDAIZ7iB,EAAOxI,GAAK,IAAAwY,EAAAvR,KAGhC,GAFAuB,EAAM2wB,UAEH3wB,EAAMqH,OAAO8U,SAAmC,QAAvBnc,EAAMqH,OAAOtN,MACxC0E,KAAK0B,SAAS,CAAEwqB,YAAY,EAAMC,cAAe,GAAI9B,qBAAsBrqB,KAAKH,MAAMsyB,oBAItF,GAFAnyB,KAAK0B,SAAS,CAAEwqB,YAAY,IAEF,QAAvB3qB,EAAMqH,OAAOtN,MAAiB,CAChC,IAAI6wB,EAAgBnsB,KAAKI,MAAM+rB,eAAiB,GAC5CwF,EAAWxF,EAAcvR,UAAU,SAAChG,GACvC,OAAOA,IAASrT,EAAMqH,OAAOtN,SAGb,IAAdq2B,EACFxF,EAAc3kB,KAAKjG,EAAMqH,OAAOtN,OAEhC6wB,EAActJ,OAAO8O,EAAU,GAGhC3xB,KAAK0B,SAAS,CAAEyqB,cAAeA,GAAiB,WAC/C,IAAIiG,EAAcb,IAAOla,OAAQ9F,EAAK1R,MAAMsyB,aAAc5gB,EAAK1R,MAAMsyB,aAAa,GAAI,SAACzmB,GAAD,OAAO6lB,IAAO5Y,SAASwT,EAAezgB,EAAEmc,UAE9HtW,EAAK7P,SAAS,CAAE2oB,qBAAsB+H,WAGvCpyB,KAAK0B,SAAS,CAAEyqB,cAAe,GAAI9B,qBAAsBrqB,KAAKH,MAAMsyB,eAI/B,IAApCnyB,KAAKI,MAAM+rB,cAAc7uB,QAC3B0C,KAAK0B,SAAS,CAAEwqB,YAAY,EAAMC,cAAe,GAAI9B,qBAAsB,IAAK,WAC/E9Y,EAAK7P,SAAS,CAAE2oB,qBAAsB9Y,EAAK1R,MAAMsyB,oDAKzCr5B,GAAK,IACP4vB,EAAgB5vB,EAAhB4vB,YACJ4I,EAAe31B,OAAAC,EAAA,EAAAD,CAAA,GAASqE,KAAKH,MAAMyxB,iBACnCZ,EAAwBY,EAAgBZ,sBAE5C,GAAGA,EAAsBpI,OAASI,EAAa,CAC9CgI,EAAsBpI,KAAOI,EAC7B,IAAI5vB,EAAI6C,OAAAC,EAAA,EAAAD,CAAA,GACJ+0B,EADI,CAEPrZ,OAAQia,IAETtxB,KAAKH,MAAM8wB,YAAY73B,sDAOC+G,GAoBzBG,KAAK0B,SAAS,CAAE2oB,qBAAsBxqB,EAAMsyB,aAActH,cAAehrB,EAAMgrB,6DAI/E7qB,KAAKH,MAAMhH,6FAyBH,IAAA8uB,EACkI3nB,KAAKI,MAAvIrH,EADA4uB,EACA5uB,KAAiCoM,GADjCwiB,EACM0K,cADN1K,EACqBvF,WADrBuF,EACiCxiB,WAAWuoB,EAD5C/F,EAC4C+F,QAAmBxB,GAD/DvE,EACqDiF,SADrDjF,EAC+DuE,YAAYC,EAD3ExE,EAC2EwE,cAAe9B,EAD1F1C,EAC0F0C,qBAAsBQ,EADhHlD,EACgHkD,cACnHvG,EAAetkB,KAAKH,MAAMqF,WAAa,GACvCyU,EAAS2K,EAAa3K,QAAU,GACjCqH,EAAQsD,EAAatD,OAAS,GAC9BlD,EAAW9d,KAAKH,MAAMie,UAAY,GACnB9d,KAAKH,MAAMwF,aAE9B,OACChD,EAAAC,EAAAC,cAAA,QAAME,UAAS,uBAAA1D,OAAuC,UAAb+e,EAAwB,WAAa,KAE3E9d,KAAKH,MAAMilB,iBAAmB1iB,kBAAQpC,KAAKH,MAAMqF,WAClD7C,EAAAC,EAAAC,cAAC+vB,GAAD,CACCxU,SAAU9d,KAAKH,MAAMie,SAErBtG,KAAMwJ,EACNrH,OAAQA,EAKR6N,MAAOxnB,KAAKH,MAAM2nB,MAClBqD,cAAeA,EACfjN,aAAc5d,KAAK4d,aACnBsK,WAAYloB,KAAKH,MAAMqoB,WACvBqC,YAAavqB,KAAKH,MAAM0qB,YACxBoF,YAAa3vB,KAAKH,MAAM8vB,YACxBla,aAAczV,KAAKH,MAAM4V,aACzBkb,YAAa3wB,KAAKH,MAAM8wB,YACxBH,WAAYxwB,KAAKH,MAAM2wB,WACvBc,gBAAiBtxB,KAAKH,MAAMyxB,gBAI5B7B,iBAAkBzvB,KAAKH,MAAM4vB,kBAAoB,KAM7C,KAIGptB,EAAAC,EAAAC,cAACgwB,GAAD,CACCx5B,KAAMA,EACN20B,QAASA,EAClBvoB,UAAWA,EACX+mB,WAAYA,EACZ1E,MAAOxnB,KAAKH,MAAM2nB,MAClB2E,cAAeA,EACNtB,cAAeA,EACfrV,UAAWxV,KAAKH,MAAM2V,UAC/B0S,WAAYloB,KAAKH,MAAMqoB,WACvBqC,YAAavqB,KAAKH,MAAM0qB,YACf6B,YAAapsB,KAAKH,MAAMusB,YACjCM,WAAc1sB,KAAK0sB,WAAW9rB,KAAKZ,MAC1BqqB,qBAAsBA,GAAwB,GAC9CK,oBAAqB1qB,KAAKH,MAAM6qB,qBAAuB,GAChEuB,qBAAwBjsB,KAAKisB,qBAAqBrrB,KAAKZ,gBAvP5BS,IAAMsC,WAAhCkvB,GAkBExN,aAAe,CACrB0N,aAAc,GACdtH,cAAe,EACfN,YAAa,GACbkF,iBAAmB,GACnB/E,oBAAsB,IAuOT1G,mBAAWiO,ICxQbO,GAA+C,eAG/CC,GAA+C,eCM/CC,GAAc,SAAC55B,GAAD,MAAW,CACtCC,KAAMy5B,GACN15B,SAGa65B,GAAwB,SAAC75B,GAAD,MAAW,CAChDC,KDd4D,uBCe5DD,SAGa85B,GAAsB,SAAC95B,GAAD,MAAW,CAC9CC,KDlB4D,qBCmB5DD,SAQa+5B,GAA4B,SAAC/5B,GAAD,MAAW,CAClDC,KD1B0D,uBC2B1DD,SAGWg6B,GAA0B,SAACh6B,GAAD,MAAW,CAChDC,KD9B0D,qBC+B1DD,SAGWi6B,GAAa,SAACj6B,GAAD,MAAW,CACnCC,KDlC0D,cCmC1DD,SCmDa4rB,eAlCY,SAAAhgB,GAAwD,IAAtDkgB,EAAsDlgB,EAAtDkgB,iBAAkBoO,EAAoCtuB,EAApCsuB,gBAAiBnO,EAAmBngB,EAAnBmgB,cAC3DoO,EAAgBD,EAAgBb,cAAgBa,EAAgBb,aAAalK,KAAM+K,EAAgBb,aAAalK,KAAK,GACrHwH,EAAoBuD,EAAgBvD,kBAAoBuD,EAAgBvD,iBAAiBxH,KAAM+K,EAAgBvD,iBAAiBxH,KAAK,GAKzI,MAAQ,CACPkK,aAAcc,EACdpI,cANoBmI,EAAgBb,cAAgBa,EAAgBb,aAAalZ,MAAO+Z,EAAgBb,aAAalZ,MAAM,EAO1H6E,SAAU+G,EAAc/G,SACzB2R,iBAAkBA,EAClBja,UAAWwd,EAAgBxd,UAC3BtQ,UAAW0f,EAAiB1f,UAC5BknB,YAAa4G,EAAgB5G,YAC7B/mB,aAAcwf,EAAcxf,aAC5BsqB,YAAaqD,EAAgBrD,YAC7BzH,WAAY8K,EAAgB9K,WAC5BqC,YAAayI,EAAgBzI,YAC7BG,oBAAqBsI,EAAgBtI,oBACrC4G,gBAAkBzM,EAAczB,YAAcyB,EAAczB,WAAW1T,SAAUmV,EAAczB,WAAW1T,SAAS,GACnHoV,eAAgBD,EAAcC,iBAIL,SAAAC,GAAQ,MAAK,CACvCyC,MAAO,SAAC1uB,GAAD,OAAUisB,EZtBG,SAACjsB,GAAD,MAAW,CAC9BC,KAAMusB,GACNxsB,QYoByBksB,CAAclsB,KACxC03B,WAAY,SAAC13B,GAAD,OAAUisB,EZpEG,SAACjsB,GAAD,MAAW,CACnCC,KAAMosB,GACNrsB,QYkE8BksB,CAAmBlsB,KAClD63B,YAAa,SAAC73B,GAAD,OAAUisB,EZtDG,SAACjsB,GAAD,MAAW,CACpCC,KAAMqsB,GACNtsB,QYoD+BksB,CAAoBlsB,KACnDu4B,eAAgB,SAACv4B,GAAD,OAAUisB,EZxCE,SAACjsB,GAAD,MAAW,CACvCC,KAAMssB,GACNvsB,QYsCmCksB,CAAuBlsB,KAC3D45B,YAAa,SAAC55B,GAAD,OAAUisB,EAASmO,GAA0Bp6B,KAC1DD,aAAc,SAACC,GAAD,OAAUisB,EAASoO,EAA8Br6B,OAGjD4rB,CAA6CV,YApFzC,SAAA/f,GAqBb,IApBLujB,EAoBKvjB,EApBLujB,MACAhS,EAmBKvR,EAnBLuR,UACA0S,EAkBKjkB,EAlBLikB,WACAqC,EAiBKtmB,EAjBLsmB,YACArlB,EAgBKjB,EAhBLiB,UACA4Y,EAeK7Z,EAfL6Z,SACAzY,EAcKpB,EAdLoB,aACAqtB,EAaKzuB,EAbLyuB,YACAlC,EAYKvsB,EAZLusB,WACAG,EAWK1sB,EAXL0sB,YACAvE,EAUKnoB,EAVLmoB,YACAuD,EASK1rB,EATL0rB,YACA92B,EAQKoL,EARLpL,aACAs5B,EAOKluB,EAPLkuB,aACAtH,EAMK5mB,EANL4mB,cACCwG,EAKIptB,EALJotB,eACAC,EAIIrtB,EAJJqtB,gBACD7B,EAGKxrB,EAHLwrB,iBACA/E,EAEKzmB,EAFLymB,oBACA5F,EACK7gB,EADL6gB,eAEA,OACCziB,EAAAC,EAAAC,cAACmN,GAAD,CAAmB8X,MAAOA,EAAOU,WAAYA,EAAYqC,YAAaA,EAAamI,YAAaA,EAAalC,WAAYA,EAAYG,YAAaA,EAAaU,eAAgBA,EAAgBvT,SAAUA,EAAUzY,aAAcA,EAAcisB,gBAAiBA,EAAiBz4B,aAAcA,EAAcs5B,aAAcA,EAActH,cAAeA,EAAeH,oBAAqBA,EAAqB+E,iBAAkBA,EAAkBvqB,UAAWA,EAAWsQ,UAAWA,EAAW4W,YAAaA,EAAauD,YAAaA,EAAa7K,eAAgBA,OC5BjiBsO,oLAEJ,OACC/wB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAAC8wB,GAAD,cAJmBtwB,aAURihB,eAAWoP,ICbbE,GAA+B,WAK/BC,GAA+B,aAK/BC,GAA+B,iBAK/BC,GAA+B,cAK/BC,GAA+B,eAK/BC,GAA+B,aAK/BC,GAA+B,eAK/BC,GAA+B,WAK/BC,GAA+B,WAK/BC,GAA+B,YAK/BC,GAA+B,cAK/BC,GAA+B,eCZ/BC,GAAqB,SAACp7B,GAAD,MAAW,CAC3CC,KD3C0C,iBC4C1CD,SAGWq7B,GAAuB,SAACr7B,GAAD,MAAW,CAC7CC,KD/C0C,mBCgD1CD,SAGWs7B,GAAY,SAACt7B,GAAD,MAAW,CAClCC,KAAMw6B,GACNz6B,SAGWu7B,GAAoB,SAACv7B,GAAD,MAAW,CAC1CC,KDrD0C,mBCsD1CD,SAGWw7B,GAAsB,SAACx7B,GAAD,MAAW,CAC5CC,KDzD0C,qBC0D1CD,SAQWy7B,GAA2B,SAACz7B,GAAD,MAAW,CACjDC,KD/D0C,uBCgE1CD,SAGW07B,GAA6B,SAAC17B,GAAD,MAAW,CACnDC,KDnE0C,yBCoE1CD,SAQW27B,GAA4B,SAAC37B,GAAD,MAAW,CAClDC,KDzE0C,oBC0E1CD,SAGW47B,GAA8B,SAAC57B,GAAD,MAAW,CACpDC,KD7E0C,sBC8E1CD,SAQW67B,GAAyB,SAAC77B,GAAD,MAAW,CAC/CC,KDnF0C,qBCoF1CD,SAGW87B,GAA2B,SAAC97B,GAAD,MAAW,CACjDC,KDvF0C,uBCwF1CD,SAQW+7B,GAAuB,SAAC/7B,GAAD,MAAW,CAC7CC,KD7F0C,mBC8F1CD,SAGWg8B,GAAyB,SAACh8B,GAAD,MAAW,CAC/CC,KDjG0C,qBCkG1CD,SAQWi8B,GAAyB,SAACj8B,GAAD,MAAW,CAC/CC,KDvG0C,qBCwG1CD,SAGWk8B,GAA2B,SAACl8B,GAAD,MAAW,CACjDC,KD3G0C,uBC4G1CD,SAQWm8B,GAAsB,SAACn8B,GAAD,MAAW,CAC5CC,KDjH0C,iBCkH1CD,SAGWo8B,GAAuB,SAACp8B,GAAD,MAAW,CAC7CC,KDrH0C,mBCsH1CD,SAQWq8B,GAAsB,SAACr8B,GAAD,MAAW,CAC5CC,KD3H0C,iBC4H1CD,SAGWs8B,GAAuB,SAACt8B,GAAD,MAAW,CAC7CC,KD/H0C,mBCgI1CD,SAQWu8B,GAAuB,SAACv8B,GAAD,MAAW,CAC7CC,KDrI0C,kBCsI1CD,SAGWw8B,GAAwB,SAACx8B,GAAD,MAAW,CAC9CC,KDzI0C,oBC0I1CD,SAQWy8B,GAAyB,SAACz8B,GAAD,MAAW,CAC/CC,KD/I0C,oBCgJ1CD,SAGW08B,GAA0B,SAAC18B,GAAD,MAAW,CAChDC,KDnJ0C,sBCoJ1CD,SAQW28B,GAA0B,SAAC38B,GAAD,MAAW,CAChDC,KDzJ0C,qBC0J1CD,SAGW48B,GAA2B,SAAC58B,GAAD,MAAW,CACjDC,KD7J0C,uBC8J1CD,SCtNmB68B,eACjB,SAAAA,EAAY91B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA21B,IACrB71B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAg6B,GAAAx1B,KAAAH,KAAMH,KAmCP+1B,oBAAsB,SAAC33B,GACtBA,EAAE4J,iBACF,IAAI3E,EAAWvH,OAAAC,EAAA,EAAAD,CAAA,GAAImE,EAAKM,MAAM8C,WAAa,UACpCA,EAAS2yB,YACD/1B,EAAKud,WACP5U,SACZ3I,EAAKD,MAAMi2B,cAAc5yB,IA1CLpD,EA6CtBi2B,aAAe,SAAC93B,GACT,IAAM0K,EAAO1K,EAAE2K,OAAOD,KACtBrN,EAAQ2C,EAAE2K,OAAOtN,MACjBwE,EAAK4B,SAAS,CACnBwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACLmE,EAAKM,MAAM8C,SADPvH,OAAAqO,GAAA,EAAArO,CAAA,GAENgN,EAAOrN,OAnDWwE,EAwDtBud,SAAW,WACV,IAAIna,EAAWpD,EAAKM,MAAM8C,UAAY,GAElCI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAASmE,EAAKk2B,cACpBvtB,GAAW,EAaf,OAZMvF,EAAS+yB,aACd3yB,EAAO2yB,YAAa,EACpBxtB,GAAa,GAERvF,EAAS+Y,YACd3Y,EAAO2Y,WAAY,EACnBxT,GAAa,GAERvF,EAAS0Z,QACdtZ,EAAOsZ,OAAS,EAChBnU,GAAa,GAEP,CAACA,QAASA,EAASnF,OAAQA,IAvElCxD,EAAKk2B,aAAe,CACnBC,YAAa,EACbha,WAAY,EACZW,OAAS,GAEJ9c,EAAKM,MAAe,CACzB8C,SAAW,CACV+yB,WAAa,GACbha,UAAY,GACZW,MAAS,KAXU9c,mFAuBrBE,KAAKH,MAAMq2B,4DAGcr2B,GAGrBuC,kBAAQvC,EAAMs2B,cAAiBtwB,kBAAQhG,EAAMs2B,YAAan2B,KAAKH,MAAMs2B,cACxEn2B,KAAK0B,SAAS,CACbwB,SAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAOkE,EAAMs2B,gDA8CvB,IAAIjzB,EAAYlD,KAAKI,MAAM8C,UAAY,GACnCma,EAAYrd,KAAKqd,WACjB/Z,EAAW+Z,EAAS/Z,QAAU,GAC9B4F,EAAcmU,EAAS5U,QAIrB,OACIpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAK41B,qBACjBvzB,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,cACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOiiB,aAAa,MAAM1O,YAAY,mBAAmB7J,UAAS,QAAA1D,OAAauE,EAAO2yB,WAAc,SAAW,IAAMttB,KAAK,aAAarN,MAAO4H,EAAS+yB,WAAY3qB,SAAUtL,KAAK+1B,gBAElM1zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,aACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOiiB,aAAa,MAAM1O,YAAY,kBAAkB7J,UAAS,QAAA1D,OAAauE,EAAO2Y,UAAa,SAAW,IAAMtT,KAAK,YAAYrN,MAAO4H,EAAS+Y,UAAW3Q,SAAUtL,KAAK+1B,gBAE9L1zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,QAAQiiB,aAAa,MAAM1O,YAAY,cAAc7J,UAAS,QAAA1D,OAAauE,EAAOsZ,MAAS,SAAW,IAAMjU,KAAK,QAAQrN,MAAO4H,EAAS0Z,MAAOtR,SAAUtL,KAAK+1B,gBAE/K1zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,UAAQxJ,KAAK,SAASgU,SAAU7D,GAAclJ,KAAKH,MAAMyF,aAAc0H,QAAQ,UAAUvK,UAAS,oBAAA1D,OAAwBmK,GAAelJ,KAAKH,MAAMyF,aAA2B,GAAX,YAAqBtF,KAAKH,MAAMyF,aAAgB,aAAe,oBAtGtNvC,aCAhBqzB,eACjB,SAAAA,EAAYv2B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAo2B,IACrBt2B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAy6B,GAAAj2B,KAAAH,KAAMH,KAwBPw2B,aAAe,SAACp4B,GACfA,EAAE4J,iBACF,IAAI3E,EAAWvH,OAAAC,EAAA,EAAAD,CAAA,GAAImE,EAAKM,MAAM8C,WAAa,UACpCA,EAASozB,cACDx2B,EAAKud,WACP5U,SACZ3I,EAAKD,MAAM02B,eAAerzB,IA/BNpD,EAkCtBi2B,aAAe,SAAC93B,GACT,IAAM0K,EAAO1K,EAAE2K,OAAOD,KACtBrN,EAAQ2C,EAAE2K,OAAOtN,MACjBwE,EAAK4B,SAAS,CACnBwB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GACLmE,EAAKM,MAAM8C,SADPvH,OAAAqO,GAAA,EAAArO,CAAA,GAENgN,EAAOrN,OAxCWwE,EA6CtBud,SAAW,WACV,IAAIna,EAAWpD,EAAKM,MAAM8C,UAAY,GAClCI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKk2B,cACnBvtB,GAAW,EAaf,OAZMvF,EAASszB,WACdlzB,EAAOkzB,UAAY,EACnB/tB,GAAa,GAERvF,EAASozB,gBACdhzB,EAAOgzB,eAAe,EACtB7tB,GAAa,GAETvF,EAASszB,UAActzB,EAASozB,eAAiBpzB,EAASszB,WAAatzB,EAASozB,gBACpFhzB,EAAOgzB,eAAe,EACtB7tB,GAAa,GAEP,CAACA,QAASA,EAASnF,OAAQA,IA3DlCxD,EAAKk2B,aAAe,CACnBQ,UAAW,EACXC,UAAW,GAEN32B,EAAKM,MAAe,CACzB8C,SAAW,CACVszB,SAAY,GACZF,cAAgB,KATGx2B,yFAcID,GACpBG,KAAKH,MAAMyF,eAAiBzF,EAAMyF,cACtCtF,KAAK0B,SAAS,CACbwB,SAAW,CACVszB,SAAY,GACZF,cAAgB,uCA8CnB,IAAIpzB,EAAYlD,KAAKI,MAAM8C,UAAY,GACnCma,EAAYrd,KAAKqd,WACjB/Z,EAAW+Z,EAAS/Z,OACpB4F,EAAcmU,EAAS5U,QACrB,OACLpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,sBACYF,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAKq2B,cAChCh0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,WAAWiiB,aAAa,MAAM1O,YAAY,qBAAqB7J,UAAS,QAAA1D,OAAauE,EAAOkzB,SAAY,SAAW,IAAM7tB,KAAK,WAAWrN,MAAO4H,EAASszB,SAAUlrB,SAAUtL,KAAK+1B,gBAE/L1zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,wBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,WAAWiiB,aAAa,MAAM1O,YAAY,wBAAwB7J,UAAS,QAAA1D,OAAauE,EAAOgzB,cAAiB,SAAW,IAAM3tB,KAAK,gBAAgBrN,MAAO4H,EAASozB,cAAehrB,SAAUtL,KAAK+1B,gBAEjN1zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,UAAQxJ,KAAK,SAASgU,SAAU7D,GAAclJ,KAAKH,MAAMyF,aAAc0H,QAAQ,UAAUvK,UAAS,oBAAA1D,OAAwBmK,GAAelJ,KAAKH,MAAMyF,aAA2B,GAAX,YAAqBtF,KAAKH,MAAMyF,aAAgB,aAAe,oBAnF5LvC,aC4D7BnD,eAzDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAJ,IACfE,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAiE,GAAAO,KAAAH,KAAMH,KACDO,MAAe,CAChBC,SAAgB,EAChBC,EAAgB,EAChBC,EAAgB,GAEpBT,EAAKU,WAAaC,IAAMC,YAPTZ,mFAWf,IAAIsB,EAAoBpB,KACxBqB,SAASC,iBAAiB,QAAS,SAASC,GACxCA,EAAMC,kBACNJ,EAAKvB,MAAM4B,sEAIO5B,GAEtBG,KAAK0B,SAAS,CACVrB,QAAgBR,EAAMQ,QACtBC,EAAgBT,EAAMS,EACtBC,EAAgBV,EAAMU,EACtB0W,MAAgBpX,EAAMoX,uDAK1B5V,SAASO,oBAAoB,QAAS,+CAKjC,IAAAC,EAAA7B,KAED8B,EAAgB,CAChBC,SAAgB,WAChBC,IAAA,GAAAjD,OAAmBiB,KAAKI,MAAMG,EAA9B,MACA0B,KAAA,GAAAlD,OAAmBiB,KAAKI,MAAME,EAAE,EAAhC,OAEA2W,EAAoBjX,KAAKH,MAAMoX,OAAS,GAC5C,OACM7U,kBAAQpC,KAAKH,MAAMoX,OAUZ,KATT5U,EAAAC,EAAAC,cAAA,OAAKlH,GAAG,QAAQmH,IAAKxC,KAAKQ,YAElBR,KAAKI,MAAMC,QACXgC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBpH,GAAG,OAAOqH,MAAOZ,GAC7CO,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAM62B,KAAKzf,KAA9F,QACA5U,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAM82B,OAAO1f,EAAM5b,MAAtG,WAEF,aApDM0H,aCiYb6zB,eAvXX,SAAAA,EAAY/2B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA42B,IACf92B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAi7B,GAAAz2B,KAAAH,KAAMH,KA+BVg3B,oBAAsB,SAAA35B,GAElB4C,EAAK4B,SAAS,CAKVo1B,gBAAkB55B,EAClBgG,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQA,IAC3CmL,SAAU,MAzCCvI,EA6CnBi3B,oBAAsB,SAAA75B,GAClB,IAAIV,EAAYH,OAAS+K,OAErBhG,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACPkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAEb0G,4BAAiB1G,GAChB2G,KAAK,SAACC,GAIH,OAFAhL,EAAKoE,QAAe4G,EAAQ,GAAGC,mBAAqB,GACpDjL,EAAKk+B,SAAelzB,EAAQ,GAAGkzB,SACxBhzB,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAI,GAAkB,IAAfC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,IAENwK,EAAgB,GACpBsoB,MAAK,+DAAAl4B,OAAgEmF,EAAhE,KAAAnF,OAAuEoF,EAAvE,eAAApF,OAAwFvC,EAAxF,iDACJqH,KAAK,SAAAqzB,GAAQ,OAAIA,EAASC,SAC1BtzB,KAAK,SAAAuzB,GAEFzoB,EAAgByoB,EAAIC,WAEpB,GADe,wCACH75B,KAAK1E,EAAKoE,SAAS,CACV4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,UAEpCkF,kBAAQiC,IAAiBA,EAAa3G,WACtC5E,EAAK4K,SAAWQ,EAChBpL,EAAK6K,UAAYQ,EACjBrL,EAAKoE,QAAUmH,EAAanH,QAC5BpE,EAAKkF,QAAUqG,EAAarG,QAC5BlF,EAAKiF,WAAasG,EAAatG,WAC/BjF,EAAK+E,KAAOwG,EAAaxG,KACzB/E,EAAKgF,QAAUuG,EAAavG,QAC5BhF,EAAK6E,OAAS0G,EAAa1G,OAC3B7E,EAAK8E,OAASyG,EAAazG,OAC3B9E,EAAK6V,SAAeA,EAIpBvN,EAAKM,SAAS,CAKVo1B,gBAAe,EACfzuB,SAAUvP,EACVoK,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKyF,EAAKhB,MAAM8C,SAAjB,CAA2BhG,QAAQpE,EAAKoE,cAGpDqH,GAAY,oEACZnD,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,aAKnDqH,GAAY,oEACZnD,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,WAK1DsH,MAAM,SAAA9E,GACH0B,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,UAtIpC4C,EAoLnB8F,eAAiB,SAAC3H,GACNtC,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IAAR,IACIoD,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAyBmE,EAAKM,MAAM8C,UAC1CyF,EAA0B1K,EAAE2K,OAAOD,KACnCrN,EAAuB2C,EAAE2K,OAAOtN,MACtC4H,EAASyF,GAAuBrN,EAChCwE,EAAK4B,SAAS,CAAEwB,SAAUA,KA1LXpD,EA6LnBw3B,gBAAuB,SAACr5B,GACpBA,EAAE4J,iBACF,IAAIQ,EAAQ1M,OAAAC,EAAA,EAAAD,CAAA,GAAgBmE,EAAKM,MAAMiI,UACnCnF,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAgBmE,EAAKM,MAAM8C,UACnCq0B,EAAQ57B,OAAAC,EAAA,EAAAD,CAAA,GAAgBmE,EAAKD,MAAM03B,UACnCz+B,EAAgB,CAChBoE,QAAQmL,EAASnL,QACjBS,OAAO0K,EAAS1K,OAChBC,OAAOyK,EAASzK,OAChBC,KAAKwK,EAASxK,KACduC,MAAMiI,EAAStK,WACfD,QAAQuK,EAASvK,QACjBwK,WAAWD,EAASrK,QACpB0F,SAAS2E,EAAS3E,SAClBC,UAAU0E,EAAS1E,UACnBmE,SAASO,EAASsG,SAClBJ,MAAMrL,EAASqL,MACf0I,MAAM/T,EAAS+T,MACf4E,KAAK3Y,EAAS2Y,KACdmb,SAAS3uB,EAAS2uB,SAClBzuB,SAASrF,EAASqF,SAClBwU,IAAKwa,EAASxa,IACd1hB,GAAGk8B,EAASl8B,IAGhByE,EAAKD,MAAM23B,UAAU1+B,IApNrBgH,EAAKwD,OAAa,CACd2T,OAAqB,EACrB/Z,SAAqB,EACrBqR,OAAqB,EACrBhG,UAAqB,EACrBsT,MAAqB,EACrBib,gBAAqB,GAEzBh3B,EAAKM,MAAuB,CASzB8C,SAAa,CACRqL,MAAoB,GACpB0I,MAAoB,GACpB4E,KAAoB,GACpBtT,SAAoB,GACpBrL,QAAoB,IAEzBmL,SAAe,IAElBvI,EAAK2F,YAA2B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK+2B,oBAA2B/2B,EAAK+2B,oBAAoBj2B,KAAzBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA7BjBA,yFA4IOD,GAItB,GAHAG,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,QAEZc,kBAAQhG,EAAM03B,SAAUv3B,KAAKH,MAAM03B,UAAW,CAE9C,IAAItgB,EAAgBpX,EAAM03B,UAAY,GACtCv3B,KAAK0B,SAAS,CACVwB,SAAa,CACTqL,MAAoB0I,EAAM1I,MAC1B0I,MAAoBA,EAAMA,MAC1B4E,KAAoB5E,EAAM4E,KAC1BtT,SAAoB0O,EAAM1O,SAC1BrL,QAAoB+Z,EAAM/Z,SAE9BmL,SAAe,CACX1E,UAAYsT,EAAMtT,UAClBD,SAAUuT,EAAMvT,SAChBxG,QAAU+Z,EAAM/Z,QAChBc,QAAUiZ,EAAM3O,WAChBvK,WAAakZ,EAAM7W,MACnBvC,KAAOoZ,EAAMpZ,KACbC,QAAUmZ,EAAMnZ,QAChBH,OAASsZ,EAAMtZ,OACfC,OAASqZ,EAAMrZ,OACf+Q,SAAUsI,EAAMnP,YAKtBjI,EAAMyF,cAAgBzF,EAAMyF,eAAiBtF,KAAKH,MAAMyF,cAC1DtF,KAAKH,MAAM4F,oDAKfzF,KAAK0B,SAAS,CAACqD,MAAM,IACrB/E,KAAKH,MAAM4F,qDAyCX,IAAIvC,EAAoBlD,KAAKI,MAAM8C,UAAY,GAC3CI,EAAoB,CACpB2T,OAAqB,EACrB/Z,SAAqB,EACrBqR,OAAqB,EACrBhG,UAAqB,EACrBsT,MAAqB,GAGrBpT,GAAoB,EAyBxB,OAxBMvF,EAAS+T,QACX3T,EAAO2T,OAAiB,EACxBxO,GAAwB,GAEtBvF,EAASqF,WACXjF,EAAOiF,UAAoB,EAC3BE,GAAwB,GAEtBvF,EAAShG,UAAWkF,kBAAQpC,KAAKI,MAAMiI,YACzC/E,EAAOpG,SAAmB,EAC1BuL,GAAwB,GAEtBvF,EAASqL,QACXjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAEvBvF,EAASqL,QAAoC,KAA1BrL,EAASqL,MAAMjR,QAAiBoL,MAAMxF,EAASqL,UACnEjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAEvBvF,EAASqL,OAASrL,EAASqL,MAAQ,IACpCjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAErB,CAACA,QAASA,EAASnF,OAAQA,oCAIlC,IAAIyB,EAA4B/E,KAAKH,MAAMkF,OAAQ,EAC/C7B,EAA4BlD,KAAKI,MAAM8C,UAAY,GACnDma,EAA4Brd,KAAK2F,eACjCuD,EAA4BmU,EAAS5U,QACrCnF,EAA4B+Z,EAAS/Z,QAAU,GAE7C6F,EAAe,CACjBC,MAAO,CACHC,MAAO,QACPC,QAAS,oBACTC,MAAO,OACPC,OAAO,KAEXC,sBAAuB,CACnBC,aAAc,cACdC,OAAQ,MACRC,WAAY,iEACZ7H,SAAU,WACV8H,OAAQ,oBACRC,UAAU,mCAEdC,iBAAiBpO,OAAAqO,GAAA,EAAArO,CAAA,CACbsO,UAAW,OACXC,SAAU,OACVZ,QAAS,mBACTa,WAAW,OACXZ,MAAO,OACPK,WAAY,gBACZJ,OAAQ,IACRY,UAAU,OACVC,aAAc,kBATF,aAUA,mEAEhBC,uBAAwB,CAAEf,MAAO,YAIrC,OACIlH,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAU3J,KAAK,qBAAqBiM,KAAMA,EAAM0F,OAAQzK,KAAKH,MAAM4F,aAC1FpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,uBAEJ6G,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAKs3B,iBACjBj1B,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,cAAc7J,UAAS,QAAA1D,OAAauE,EAAO2T,MAAS,SAAW,IAAMtO,KAAK,QAAQ2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS+T,SAEpK5U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,WACA9I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACIhH,MAAO4H,EAAShG,QAChBoO,SAAUtL,KAAK62B,oBACf9qB,SAAU/L,KAAK+2B,oBACf/qB,OAAQ7C,GAGJ,SAAAzE,GAAA,IAAGwH,EAAHxH,EAAGwH,cAAeC,EAAlBzH,EAAkByH,YAAaC,EAA/B1H,EAA+B0H,uBAAwBC,EAAvD3H,EAAuD2H,QAAvD,OACAhK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI2J,EAAc,CACdI,YAAa,gBACb7J,UAAS,QAAA1D,OAAcuE,EAAOpG,QAAW,SAAW,OAGxDmF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OAC3B,0BACA,kBAEI9J,EAAQ6J,EAAWC,OACvB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WACxC,OACArK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,YAAOgK,EAAWI,qBAU1CtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,iBAAiB7J,UAAS,QAAA1D,OAAauE,EAAOiL,MAAS,SAAW,IAAM5F,KAAK,QAAQ2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqL,SAEvKlM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,YACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAS,QAAA1D,OAAauE,EAAOiF,SAAY,SAAW,IAAMI,KAAK,WAAW2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqF,YAEhJlG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,OAAO2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS2Y,WAKhHxZ,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAASgU,SAAU7D,KAAgBlJ,KAAKH,MAAMyF,aAAc7C,UAAazC,KAAKH,MAAMyF,cAAiB4D,EAAyB,GAAX,SAAe8D,QAAQ,WAC/IhN,KAAKH,MAAMyF,aAAgB,eAAiB,oBAhXjDvC,aCVN00B,eACjB,SAAAA,EAAY53B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAy3B,IACrB33B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA87B,GAAAt3B,KAAAH,KAAMH,KAcPuU,kBAAoB,SAACnW,EAAG2W,GACvB3W,EAAE4J,iBACI,IAAMoO,EAAwBhY,EAAEiY,QAC1BC,EAAwBlY,EAAEmY,MAChCtW,EAAK4B,SAAS,CACVrB,SAAe,EACfC,EAAe2V,EACf1V,EAAe4V,EACfc,MAAarC,KAvBF9U,EA2BtB2B,gBAAkB,WACX3B,EAAK4B,SAAS,CACVrB,SAAY,EACZC,EAAY,EACrBC,EAAY,EACZ0W,MAAQ,MAhCYnX,EA0CtB03B,UAAY,SAACvgB,GAEZnX,EAAK4B,SAAS,CACbqD,MAAQ,EACRwyB,SAAWtgB,KA9CSnX,EAkDtB43B,YAAc,SAACr8B,GACX2U,OAAOgG,QAAQ,6CACjBlW,EAAKD,MAAM63B,YAAYr8B,IApDHyE,EAwDtB2F,YAAc,WACb3F,EAAK4B,SAAS,CACbqD,MAAM,KAxDPjF,EAAKM,MAAS,CACbC,SAAoB,EACpBC,EAAoB,GACpBC,EAAoB,GACpB0W,MAAU,GACVsgB,SAAY,IAPQz3B,mFAYrBE,KAAKH,MAAMu0B,6CAkDA,IAAAvyB,EAAA7B,KACP2Z,EAAW3Z,KAAKH,MAAM83B,YAAc,GAClC,OACLt1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEXzC,KAAKH,MAAM2V,UAmCXnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAlCFJ,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UAECF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WACzBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,iBAAyCkX,EAAOrc,YAKnD+E,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBAGCoX,EAAOrc,OAAS,EACjBqc,EAAOlO,IAAI,SAACmJ,EAAMrN,GACjB,OACClF,EAAAC,EAAAC,cAAA,MAAI2D,IAAKqB,EAAG4M,cAAe,SAAClW,GAAD,OAAO4D,EAAKuS,kBAAkBnW,EAAG2W,KAC3DvS,EAAAC,EAAAC,cAAA,UAAKqS,EAAKqC,OACV5U,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,aAAQqS,EAAK1X,SAAgBmF,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQmS,EAAK1X,UAChFmF,EAAAC,EAAAC,cAAA,UAAKqS,EAAKrG,OACVlM,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAAd,IAAyBmS,EAAKiH,KAAQxZ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQmS,EAAKiH,MAAe,GAAlF,IAAsFxZ,EAAAC,EAAAC,cAAA,aAAQqS,EAAKiH,UAIpGxZ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAaJ,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACuH,UAAU,UAAWyJ,QAAQ,KAAzC,kBAOjCrR,EAAAC,EAAAC,cAACq1B,GAAD,CACgBv3B,QAAyBL,KAAKI,MAAMC,QACpCC,EAAyBN,KAAKI,MAAME,EACpCC,EAAyBP,KAAKI,MAAMG,EACpC0W,MAAuBjX,KAAKI,MAAM6W,MAClCyf,KAAa12B,KAAKw3B,UAClBb,OAAe32B,KAAK03B,YACpBj2B,gBAAyBzB,KAAKyB,kBAE9CY,EAAAC,EAAAC,cAACs1B,GAAD,CACC9yB,KAAU/E,KAAKI,MAAM2E,KACrBU,YAAgBzF,KAAKyF,YACrBH,aAAgBtF,KAAKH,MAAMyF,aAC3BkyB,UAAcx3B,KAAKH,MAAM23B,UACzBD,SAAav3B,KAAKI,MAAMm3B,mBAzHOx0B,aCsXrB+0B,eA3WX,SAAAA,EAAYj4B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA83B,IACfh4B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAm8B,GAAA33B,KAAAH,KAAMH,KA+BVg3B,oBAAsB,SAAA35B,GAElB4C,EAAK4B,SAAS,CAKVo1B,gBAAkB55B,EAClBgG,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQA,IAC3CmL,SAAU,MAzCCvI,EA6CnBi3B,oBAAsB,SAAA75B,GAClB,IAAIV,EAAYH,OAAS+K,OACrBhG,EAAIzF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IACJhH,EAAO,CACPkF,QAAS,GACTD,WAAY,GACZ2F,SAAU,GACVC,UAAW,GACXzG,QAAS,IAEb0G,4BAAiB1G,GAChB2G,KAAK,SAACC,GAIH,OAFAhL,EAAKoE,QAAe4G,EAAQ,GAAGC,mBAAqB,GACpDjL,EAAKk+B,SAAelzB,EAAQ,GAAGkzB,SACxBhzB,qBAAUF,EAAQ,MAE5BD,KAAK,SAAAI,GAAkB,IAAfC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,IAENwK,EAAgB,GACpBsoB,MAAK,+DAAAl4B,OAAgEmF,EAAhE,KAAAnF,OAAuEoF,EAAvE,eAAApF,OAAwFvC,EAAxF,iDACJqH,KAAK,SAAAqzB,GAAQ,OAAIA,EAASC,SAC1BtzB,KAAK,SAAAuzB,GAEFzoB,EAAgByoB,EAAIC,WAEpB,GADe,wCACH75B,KAAK1E,EAAKoE,SAAS,CACV4C,EAAKD,MAAMuE,gBAA5B,IACIC,EAAetH,GAAgBjE,EAAKoE,UAEpCkF,kBAAQiC,IAAiBA,EAAa3G,WACtC5E,EAAK4K,SAAWQ,EAChBpL,EAAK6K,UAAYQ,EACjBrL,EAAKoE,QAAUmH,EAAanH,QAC5BpE,EAAKkF,QAAUqG,EAAarG,QAC5BlF,EAAKiF,WAAasG,EAAatG,WAC/BjF,EAAK+E,KAAOwG,EAAaxG,KACzB/E,EAAKgF,QAAUuG,EAAavG,QAC5BhF,EAAK6E,OAAS0G,EAAa1G,OAC3B7E,EAAK8E,OAASyG,EAAazG,OAC3B9E,EAAK6V,SAAeA,EAIpBvN,EAAKM,SAAS,CAKVo1B,gBAAe,EACfzuB,SAAUvP,EACVoK,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKyF,EAAKhB,MAAM8C,SAAjB,CAA2BhG,QAAQpE,EAAKoE,cAGpDqH,GAAY,oEACZnD,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,aAKnDqH,GAAY,oEACZnD,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,WAK1DsH,MAAM,SAAA9E,GACH0B,EAAKM,SAAS,CAKV2G,SAAU,GACVyuB,gBAAe,EACf5zB,SAASvH,OAAAC,EAAA,EAAAD,CAAA,GAAKmE,EAAKM,MAAM8C,SAAjB,CAA2BhG,QAAQ,UArIpC4C,EA6KnB8F,eAAiB,SAAC3H,GACNtC,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,IAAR,IACIoD,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAyBmE,EAAKM,MAAM8C,UAC1CyF,EAA0B1K,EAAE2K,OAAOD,KACnCrN,EAAuB2C,EAAE2K,OAAOtN,MACtC4H,EAASyF,GAAuBrN,EAChCwE,EAAK4B,SAAS,CAAEwB,SAAUA,KAnLXpD,EAsLnBi4B,qBAA4B,SAAC95B,GACzBA,EAAE4J,iBACF,IAAIQ,EAAQ1M,OAAAC,EAAA,EAAAD,CAAA,GAAgBmE,EAAKM,MAAMiI,UACnCnF,EAAQvH,OAAAC,EAAA,EAAAD,CAAA,GAAgBmE,EAAKM,MAAM8C,UACnCpK,EAAgB,CAChBoE,QAAQmL,EAASnL,QACjBS,OAAO0K,EAAS1K,OAChBC,OAAOyK,EAASzK,OAChBC,KAAKwK,EAASxK,KACduC,MAAMiI,EAAStK,WACfD,QAAQuK,EAASvK,QACjBwK,WAAWD,EAASrK,QACpB0F,SAAS2E,EAAS3E,SAClBC,UAAU0E,EAAS1E,UACnBmE,SAASO,EAASsG,SAClBJ,MAAMrL,EAASqL,MACf0I,MAAM/T,EAAS+T,MACf4E,KAAK3Y,EAAS2Y,KACdmb,SAAS3uB,EAAS2uB,SAClBzuB,SAASrF,EAASqF,UAEtBzI,EAAKD,MAAMm4B,YAAYl/B,IAzMvBgH,EAAKwD,OAAa,CACd2T,OAAqB,EACrB/Z,SAAqB,EACrBqR,OAAqB,EACrBhG,UAAqB,EACrBsT,MAAqB,EACrBib,gBAAqB,GAEzBh3B,EAAKM,MAAuB,CASzB8C,SAAa,CACRqL,MAAoB,GACpB0I,MAAoB,GACpB4E,KAAoB,GACpBtT,SAAoB,GACpBrL,QAAoB,IAEzBmL,SAAe,IAElBvI,EAAK2F,YAA2B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK+2B,oBAA2B/2B,EAAK+2B,oBAAoBj2B,KAAzBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA7BjBA,yFA2IOD,GACtBG,KAAK0B,SAAS,CACVqD,KAAMlF,EAAMkF,OAGVlF,EAAMyF,cAAgBzF,EAAMyF,eAAiBtF,KAAKH,MAAMyF,cAC1DtF,KAAKyF,oDAKTzF,KAAKsD,OAAa,CACd2T,OAAqB,EACrB/Z,SAAqB,EACrBqR,OAAqB,EACrBhG,UAAqB,EACrBsT,MAAqB,EACrBib,gBAAqB,GAGzB92B,KAAK0B,SAAS,CACVqD,MAAM,EACN7B,SAAa,CACTqL,MAAoB,GACpB0I,MAAoB,GACpB4E,KAAoB,GACpBtT,SAAoB,GACpBrL,QAAoB,IAEzBmL,SAAe,KAElBrI,KAAKH,MAAM4F,qDAqCX,IAAIvC,EAAoBlD,KAAKI,MAAM8C,UAAY,GAC3CI,EAAoB,CACpB2T,OAAqB,EACrB/Z,SAAqB,EACrBqR,OAAqB,EACrBhG,UAAqB,EACrBsT,MAAqB,GAGrBpT,GAAoB,EAyBxB,OAxBMvF,EAAS+T,QACX3T,EAAO2T,OAAiB,EACxBxO,GAAwB,GAEtBvF,EAASqF,WACXjF,EAAOiF,UAAoB,EAC3BE,GAAwB,GAEtBvF,EAAShG,UAAWkF,kBAAQpC,KAAKI,MAAMiI,YACzC/E,EAAOpG,SAAmB,EAC1BuL,GAAwB,GAEtBvF,EAASqL,QACXjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAEvBvF,EAASqL,QAAoC,KAA1BrL,EAASqL,MAAMjR,QAAiBoL,MAAMxF,EAASqL,UACnEjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAEvBvF,EAASqL,OAASrL,EAASqL,MAAQ,IACpCjL,EAAOiL,OAAiB,EACxB9F,GAAwB,GAErB,CAACA,QAASA,EAASnF,OAAQA,oCAIlC,IAAIyB,EAA4B/E,KAAKH,MAAMkF,OAAQ,EAC/C7B,EAA4BlD,KAAKI,MAAM8C,UAAY,GACnDma,EAA4Brd,KAAK2F,eACjCuD,EAA4BmU,EAAS5U,QACrCnF,EAA4B+Z,EAAS/Z,QAAU,GAC7C6F,EAAe,CACjBC,MAAO,CACHC,MAAO,QACPC,QAAS,oBACTC,MAAO,OACPC,OAAO,KAEXC,sBAAuB,CACnBC,aAAc,cACdC,OAAQ,MACRC,WAAY,iEACZ7H,SAAU,WACV8H,OAAQ,oBACRC,UAAU,mCAEdC,iBAAiBpO,OAAAqO,GAAA,EAAArO,CAAA,CACbsO,UAAW,OACXC,SAAU,OACVZ,QAAS,mBACTa,WAAW,OACXZ,MAAO,OACPK,WAAY,gBACZJ,OAAQ,IACRY,UAAU,OACVC,aAAc,kBATF,aAUA,mEAEhBC,uBAAwB,CAAEf,MAAO,YAIrC,OACIlH,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAU3J,KAAK,qBAAqBiM,KAAMA,EAAM0F,OAAQzK,KAAKyF,aACpFpD,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,mBAEJ6G,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAK+3B,sBACjB11B,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,cAAc7J,UAAS,QAAA1D,OAAauE,EAAO2T,MAAS,SAAW,IAAMtO,KAAK,QAAQ2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS+T,SAEpK5U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,WAAf,WACA9I,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,CACIhH,MAAO4H,EAAShG,QAChBoO,SAAUtL,KAAK62B,oBACf9qB,SAAU/L,KAAK+2B,oBACf/qB,OAAQ7C,GAGJ,SAAAzE,GAAA,IAAGwH,EAAHxH,EAAGwH,cAAeC,EAAlBzH,EAAkByH,YAAaC,EAA/B1H,EAA+B0H,uBAAwBC,EAAvD3H,EAAuD2H,QAAvD,OACAhK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACI2J,EAAc,CACdI,YAAa,gBACb7J,UAAS,QAAA1D,OAAcuE,EAAOpG,QAAW,SAAW,OAGxDmF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mCACd4J,GAAWhK,EAAAC,EAAAC,cAAA,yBACX4J,EAAYV,IAAI,SAAAc,GACb,IAAM9J,EAAY8J,EAAWC,OAC3B,0BACA,kBAEI9J,EAAQ6J,EAAWC,OACvB,CAAEC,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WACxC,OACArK,EAAAC,EAAAC,cAAA,MACQ6J,EAAuBG,EAAY,CACvC9J,YACAC,UAGAL,EAAAC,EAAAC,cAAA,YAAOgK,EAAWI,qBAU1CtK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,iBAAiB7J,UAAS,QAAA1D,OAAauE,EAAOiL,MAAS,SAAW,IAAM5F,KAAK,QAAQ2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqL,SAEvKlM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,YACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAS,QAAA1D,OAAauE,EAAOiF,SAAY,SAAW,IAAMI,KAAK,WAAW2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAASqF,YAEhJlG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,gBACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAO0J,UAAU,QAAQkG,KAAK,OAAO2C,SAAUtL,KAAK4F,eAAgBtK,MAAO4H,EAAS2Y,WAKhHxZ,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAASgU,SAAU7D,KAAgBlJ,KAAKH,MAAMyF,aAAc7C,UAAazC,KAAKH,MAAMyF,cAAiB4D,EAAyB,GAAX,SAAe8D,QAAQ,WAC/IhN,KAAKH,MAAMyF,aAAgB,eAAiB,oBApWlDvC,aCoDXnD,eA5DX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAJ,IACfE,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAiE,GAAAO,KAAAH,KAAMH,KACDO,MAAe,CAChBC,SAAgB,EAChBC,EAAgB,EAChBC,EAAgB,GAGpBT,EAAKU,WAAaC,IAAMC,YARTZ,mFAYf,IAAIsB,EAAoBpB,KACxBqB,SAASC,iBAAiB,QAAS,SAASC,GACxCA,EAAMC,kBACNJ,EAAKvB,MAAM4B,sEAIO5B,GACtBG,KAAK0B,SAAS,CACVrB,QAAgBR,EAAMQ,QACtBC,EAAgBT,EAAMS,EACtBC,EAAgBV,EAAMU,EACtB03B,QAAep4B,EAAMo4B,yDAKzB52B,SAASO,oBAAoB,QAAS,+CAGjC,IAAAC,EAAA7B,KACD8B,EAAU,CACVC,SAAgB,WAChBC,IAAA,GAAAjD,OAAmBiB,KAAKI,MAAMG,EAA9B,MACA0B,KAAA,GAAAlD,OAAmBiB,KAAKI,MAAME,EAAE,EAAhC,OAGJ,OACM8B,kBAAQpC,KAAKI,MAAM63B,SAgBZ,KAfT51B,EAAAC,EAAAC,cAAA,OAAKlH,GAAG,QAAQmH,IAAKxC,KAAKQ,YAElBR,KAAKI,MAAMC,QACXgC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBpH,GAAG,OAAOqH,MAAOZ,GAC7CO,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAMq4B,oBAAoB,OAAQr2B,EAAKzB,MAAM63B,QAAQ58B,MAAxI,aACAgH,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAMq4B,oBAAoB,SAAUr2B,EAAKzB,MAAM63B,QAAQ58B,MAA1I,eAGmC,SAA9B2E,KAAKI,MAAM63B,QAAQzrB,OACpBnK,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBE,QAAS,kBAAMd,EAAKhC,MAAMq4B,oBAAoB,UAAWr2B,EAAKzB,MAAM63B,QAAQ58B,MAA3I,kBACCgH,EAAAC,EAAAC,cAAA,OAAKzJ,KAAK,qBAAqB2J,UAAU,sBAAsBC,MAAO,CAAC6G,MAAO,YAA9E,mBAGP,aAvDMxG,aCAPo1B,eACjB,SAAAA,EAAYt4B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAm4B,IACfr4B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAw8B,GAAAh4B,KAAAH,KAAMH,KAwBb4B,gBAAkB,WACjB3B,EAAK4B,SAAS,CACbrB,SAAe,EACfC,EAAE,EACFC,EAAE,KA3BGT,EAAKM,MAAQ,CAClBE,EAAG,GACHC,EAAG,GACH03B,QAAS,KACT53B,SAAS,GAGVP,EAAKsU,kBAAoBtU,EAAKsU,kBAAkBxT,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KATJA,iFAYJyB,EAAO02B,GAExB12B,EAAMsG,iBACN,IAAMoO,EAAU1U,EAAM2U,QAChBC,EAAU5U,EAAM6U,MAHXpW,KAIN0B,SAAS,CACbrB,SAAe,EACfC,EAAe2V,EACf1V,EAAe4V,EACf8hB,QAAeA,qCAYL,IAAAp2B,EAAA7B,KACJo4B,EAAUp4B,KAAKH,MAAMw4B,WAAa,GAClCC,EAAYF,EAAQnf,OAAS,EAC7Bsf,EAAkBH,EAAQI,cAAgB,EAC1CC,EAAoBL,EAAQM,gBAAkB,EAC9CC,EAASP,GAAWA,EAAQO,OAAU,GAEvC,OACLt2B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAACq2B,GAAD,CACCv4B,QAAyBL,KAAKI,MAAMC,QACpCC,EAAyBN,KAAKI,MAAME,EACpCC,EAAyBP,KAAKI,MAAMG,EACpC03B,QAAyBj4B,KAAKI,MAAM63B,QACpCx2B,gBAAyBzB,KAAKyB,gBAC9By2B,oBAAyBl4B,KAAKH,MAAMq4B,sBAGrC71B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEZzC,KAAKH,MAAM2V,UA8CXnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eA7CFJ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WACzBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,gBAAwC61B,GACxCj2B,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,iBAAyC81B,GACzCl2B,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,oBAA4Cg2B,OAM/Cp2B,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACuH,UAAW,SAAvB,yBACA5H,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBAICo2B,EAAMr7B,OAAS,EACfq7B,EAAMltB,IAAI,SAACmJ,EAAMI,GAChB,IAAI5Y,EAAOC,KAAOuY,EAAKiD,YAAYvb,OAAO,kBAE1C,OACC+F,EAAAC,EAAAC,cAAA,MAAI2D,IAAK8O,EAAOvS,UAA4B,UAAhBmS,EAAKpI,OAAsB,MAAQ,GAAI2H,cAAe,SAAClW,GAAD,OAAO4D,EAAKuS,kBAAkBnW,EAAG2W,KAClHvS,EAAAC,EAAAC,cAAA,UAAKqS,EAAKqhB,YACV5zB,EAAAC,EAAAC,cAAA,UAAKqS,EAAKqH,WACV5Z,EAAAC,EAAAC,cAAA,UAAKqS,EAAKgI,OACVva,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACuH,UAAW,SAAU7N,GACjCiG,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACm2B,cAAe,eAAgBjkB,EAAKiJ,WAChDxb,EAAAC,EAAAC,cAAA,UAAsB,SAAhBqS,EAAKpI,OAAqB,QAAU,WAI5CnK,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAaJ,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACuH,UAAU,UAAWyJ,QAAQ,KAAzC,2BA/FH3Q,wBCiLpB+1B,eA9KX,SAAAA,EAAYj5B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA84B,IACfh5B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAm9B,GAAA34B,KAAAH,KAAMH,KACDO,MAAQ,CACT24B,OAAQ,GACRz1B,OAAQ,IAGZxD,EAAKu2B,aAAev2B,EAAKu2B,aAAaz1B,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpBA,EAAKyD,aAAezD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpBA,EAAKk5B,cAAgBl5B,EAAKk5B,cAAcp4B,KAAnBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACrBA,EAAKknB,iBAAmBlnB,EAAKknB,iBAAiBpmB,KAAtBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAVTA,kFAcf,IAAI2I,GAAU,EACVswB,EAAS/4B,KAAKI,MAAM24B,OACpBz1B,EAAStD,KAAKI,MAAMkD,OAexB,GAZOy1B,EAAO9C,aACVxtB,GAAU,EACVnF,EAAO2yB,WAAa,2BAIjB8C,EAAO9c,YACVxT,GAAU,EACVnF,EAAO2Y,UAAY,0BAIjB8c,EAAOnc,OAGN,GAAGmc,EAAOnc,MAAO,CACV,8DACFpf,KAAKu7B,EAAOnc,SAChBnU,GAAU,EACVnF,EAAOsZ,MAAQ,6CANnBnU,GAAU,EACVnF,EAAOsZ,MAAQ,qBAgBpB,OANOmc,EAAOlb,YACTpV,GAAU,EACVnF,EAAOua,UAAY,0BAGxB7d,KAAK0B,SAAS,CAAE4B,OAAQA,IACjBmF,uCAGGxK,GAAE,IAAAgpB,EACahpB,EAAE2K,OAAlBD,EADGse,EACHte,KAAMrN,EADH2rB,EACG3rB,MACVy9B,EAAS/4B,KAAKI,MAAM24B,OACxBA,EAAOpwB,GAAQrN,EAEf,IAAIgI,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAOqE,KAAKI,MAAMkD,QAC5BA,EAAOqF,GAAQ,GAEf3I,KAAK0B,SAAS,CAACq3B,SAAQz1B,OAAQA,0CAGrBrF,GAAG,IAAAg7B,EACah7B,EAAE2K,OAApBD,EADKswB,EACLtwB,KAAM+U,EADDub,EACCvb,QACVqb,EAAS/4B,KAAKI,MAAM24B,OACxBA,EAAOpwB,GAAQ+U,EAEf1d,KAAK0B,SAAS,CAACq3B,gDAGN96B,GACTA,EAAE4J,iBACF,IAAIxM,EAAK2E,KAAKI,MAAM24B,OAAO19B,IAAM,KAGjC,GAFc2E,KAAKgnB,mBAGf,OAAO,EAGP,IAAIkS,EAAQv9B,OAAAC,EAAA,EAAAD,CAAA,GAAOqE,KAAKI,MAAM24B,QAI9B,GAHAG,EAAQ,OAAaA,EAAS1sB,OAAOV,WACrCotB,EAAQ,YAAkBA,EAASrD,YAAY/pB,WAE1CzQ,EAQD2E,KAAKH,MAAMs5B,eAAeD,OARrB,CACL,IAAI3c,EAAWoK,GAAU,sBAAwB,GAEjDuS,EAAQ,OAAa3c,EAASjG,OAC9B4iB,EAAQ,SAAe3c,EAASC,SAChC0c,EAAQ,eAAqB3c,EAAS4K,UACtCnnB,KAAKH,MAAMu5B,YAAYF,sDAOTr5B,GACtBG,KAAK0B,SAAS,CAAEq3B,OAAQl5B,EAAMw5B,YAAa/1B,OAAQzD,EAAMy5B,wDAGpD,IAAAz3B,EAAA7B,KACD0nB,GAAgB,EADfC,EAEsB3nB,KAAKI,MAAxBkD,EAFHqkB,EAEGrkB,OAAQy1B,EAFXpR,EAEWoR,OAMhB,QAJG32B,kBAAQkB,EAAO2yB,aAAe7zB,kBAAQkB,EAAO2Y,YAAc7Z,kBAAQkB,EAAOsZ,QAAUxa,kBAAQkB,EAAOua,aAAezb,kBAAQ22B,EAAO9C,aAAgB7zB,kBAAQ22B,EAAO9c,YAAe7Z,kBAAQ22B,EAAOnc,QAAWxa,kBAAQ22B,EAAOlb,aACvN6J,GAAgB,GAIhBrlB,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,UAAU3J,KAAK,qBAAqBiM,KAAM/E,KAAKH,MAAMkF,KAAM0F,OAAQ,WAAQ5I,EAAKhC,MAAMq4B,oBAAoB,WACjI71B,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,KAAqC,SAAtBwE,KAAKH,MAAM0f,OAAmB,YAAY,aAG7Dld,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMtC,aAAa,MAAMpQ,SAAW5K,KAAKq2B,cACrCh0B,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACIxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,cAAf,cACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,mBAAmB7J,UAAaa,EAAO2yB,WAAc,cAAgB,QAAUttB,KAAK,aAAa2C,SAAUtL,KAAKuD,aAAcjI,MAAOy9B,EAAO9C,aAE1K3yB,EAAO2yB,YAAgB5zB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAc72B,MAAO,CAAC82B,QAAS,UAA/B,IAA2Cl2B,EAAO2yB,aAG9E5zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,aAAf,aACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,OAAOuT,YAAY,kBAAkB7J,UAAaa,EAAO2Y,UAAa,cAAgB,QAAUtT,KAAK,YAAY2C,SAAUtL,KAAKuD,aAAcjI,MAAOy9B,EAAO9c,YAEvK3Y,EAAO2Y,WAAe5Z,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAc72B,MAAO,CAAC82B,QAAS,UAA/B,IAA2Cl2B,EAAO2Y,YAG7E5Z,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,SAAf,SACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,QAAQuT,YAAY,cAAc7J,UAAaa,EAAOsZ,MAAS,cAAgB,QAAUjU,KAAK,QAAQ2C,SAAUtL,KAAKuD,aAAcjI,MAAOy9B,EAAOnc,QAE5JtZ,EAAOsZ,OAAWva,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAc72B,MAAO,CAAC82B,QAAS,UAA/B,IAA2Cl2B,EAAOsZ,QAGzEva,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACXJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,aAAf,aACA9I,EAAAC,EAAAC,cAAA,UAAQE,UAAaa,EAAOua,UAAa,cAAgB,QAAUlV,KAAK,YAAY2C,SAAUtL,KAAKuD,aAAcjI,MAAOy9B,EAAOlb,WAC3Hxb,EAAAC,EAAAC,cAAA,UAAQjH,MAAM,IAAd,0BACA+G,EAAAC,EAAAC,cAAA,UAAQ2D,IAAK,EAAG5K,MAAM,WAAtB,WACA+G,EAAAC,EAAAC,cAAA,UAAQ2D,IAAK,EAAG5K,MAAM,YAAtB,YACA+G,EAAAC,EAAAC,cAAA,UAAQ2D,IAAK,EAAG5K,MAAM,SAAtB,UAGHgI,EAAOua,WAAexb,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAc72B,MAAO,CAAC82B,QAAS,UAA/B,IAA2Cl2B,EAAOua,YAIxEkb,EAAOlb,WAAkC,UAArBkb,EAAOlb,UAC5Bxb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBACZJ,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,eAAf,eACA9I,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,WAAWsC,GAAG,cAAcsN,KAAK,cAAclG,UAAU,QAAQ6I,SAAUtL,KAAKg5B,cAAetb,QAASqb,EAAOlD,gBAE5H,QAMvBxzB,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAAS0J,UAAYilB,EAAgB,SAAW,GAAK1a,QAAQ,UAAUD,WAAY/M,KAAKH,MAAM45B,gBAAkBz5B,KAAKH,MAAM45B,eAAiB,eAAiB,qBAvKvK12B,uBCOrB22B,uBA0BL,SAAAA,EAAY75B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA05B,IAClB55B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+9B,GAAAv5B,KAAAH,KAAMH,KAyBP85B,mBAAqB,WACpB75B,EAAK4B,SAAS,CACbqD,MAAM,KA5BWjF,EAqInB85B,OAAS,SAACt+B,GACTwE,EAAK4B,SAAS,CAAE3I,KAAOuC,GAAS,WAClB,UAAVA,GACFwE,EAAKD,MAAMg6B,cAxIK/5B,EA6InB2F,YAAc,WACb3F,EAAK4B,SAAS,CACbqD,MAAM,KA7IPjF,EAAKM,MAAQ,CACZrH,KAAQ,UACRgM,MAAQ,EACR+0B,eAAgB,EAChBC,WAAY,KACZT,qBAAsB,CACrBrD,WAAY,GACAha,UAAW,GACXW,MAAO,GACPiB,UAAW,IAExBmc,gBAAiB,CAChB/D,WAAY,GACAha,UAAW,GACXW,MAAO,GACPiB,UAAW,UACXrR,QAAQ,EACRqpB,aAAa,IAI3B/1B,EAAKo4B,oBAAsBp4B,EAAKo4B,oBAAoBt3B,KAAzBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAvBTA,mFAgCCyf,EAAQlkB,GAAI,IAAAwG,EAAA7B,KAI/B,GAHA3E,EAAKA,GAAM,KAGI,SAFfkkB,EAASA,GAAU,MAGlBvf,KAAK0B,SAAS,CACbq4B,WAAYxa,EACZua,eAAe,EACfR,qBAAsB,CACrBrD,WAAY,GACAha,UAAW,GACXW,MAAO,GACPiB,UAAW,IAExBmc,gBAAiB,CAChB/D,WAAY,GACAha,UAAW,GACXW,MAAO,GACPiB,UAAW,UACXrR,QAAQ,EACRqpB,aAAa,UAGrB,GAAe,SAAXtW,EAAmB,CAC7B,IAAI6Y,EAAUp4B,KAAKH,MAAMw4B,WAAa,GAClCM,EAASP,GAAWA,EAAQO,OAAU,GACtCsB,EAAO1I,IAAO2I,KAAKvB,EAAO,CAAEt9B,GAAIA,IACpC,GAAoB,kBAAT4+B,EAAmB,CAC7B,IAAIZ,EAAc9H,IAAO4I,KAAKF,EAAM,CAAC,KAAM,aAAc,YAAa,QAAS,YAAa,SAAU,gBAEtGZ,EAAY7sB,OAAiC,SAAvB6sB,EAAY7sB,OAClC6sB,EAAYxD,YAA2C,SAA5BwD,EAAYxD,YAEvC71B,KAAK0B,SAAS,CACbq4B,WAAYxa,EACZua,eAAe,EACfE,gBAAiBX,EACjBC,qBAAsB,CACrBrD,WAAY,GACAha,UAAW,GACXW,MAAO,GACPiB,UAAW,WAIzB3f,QAAQC,IAAI,8BAEQ,YAAXohB,EACV6a,wBAAa,CACZC,MAAO,+BACP96B,QAAS,wFACT+6B,qBAAqB,EACrBC,QAAS,CACR,CACCnjB,MAAO,SACPzU,QAAS,kBAAMzE,QAAQC,IAAI,cAE5B,CACCiZ,MAAO,UACPzU,QAAS,WACR,IAAIy1B,EAAUv2B,EAAKhC,MAAMw4B,WAAa,GAClCM,EAASP,GAAWA,EAAQO,OAAU,GACtCsB,EAAO1I,IAAO2I,KAAKvB,EAAO,CAAEt9B,GAAIA,IACpC,GAAoB,kBAAT4+B,EAAmB,CAC7B,IAAIZ,EAAc9H,IAAO4I,KAAKF,EAAM,CAAC,KAAM,aAAc,YAAa,QAAS,YAAa,gBAE5FZ,EAAY7sB,OAAS,QACrB3K,EAAKhC,MAAM26B,YAAYnB,QAEvBn7B,QAAQC,IAAI,+BAMI,WAAXohB,EACV6a,wBAAa,CACZC,MAAO,8BACP96B,QAAS,sEACT+6B,qBAAqB,EACrBC,QAAS,CACR,CACCnjB,MAAO,SACPzU,QAAS,kBAAMzE,QAAQC,IAAI,cAE5B,CACCiZ,MAAO,SACPzU,QAAS,WACRd,EAAKhC,MAAM46B,WAAWp/B,QAKL,UAAXkkB,GACVvf,KAAK0B,SAAS,CACbq4B,WAAYxa,EACZua,eAAe,sDAmBQj6B,GAChBA,EAAM45B,gBAAkB55B,EAAM45B,iBAAmBz5B,KAAKH,MAAM45B,gBAC7Dz5B,KAAKk4B,oBAAoB,0CAIzB,IAAA3mB,EAAAvR,KACA8d,EAAa9d,KAAKH,MAAlBie,SADA6J,EAE2E3nB,KAAKI,MAAhFrH,EAFA4uB,EAEA5uB,KAAM+gC,EAFNnS,EAEMmS,cAAeC,EAFrBpS,EAEqBoS,WAAYC,EAFjCrS,EAEiCqS,gBAAiBV,EAFlD3R,EAEkD2R,qBAC1D,OACCj3B,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BACdJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAEhBqb,GAAyB,UAAbA,EACbzb,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAqB,YAAT1J,EAAsB,SAAW,GAAI4J,QAAS,kBAAM4O,EAAKqoB,OAAO,aAAYv3B,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,0BAA0BkU,IAAI,WAAnI,YACAphB,EAAAC,EAAAC,cAAA,MAAIE,UAAqB,UAAT1J,EAAoB,SAAW,GAAI4J,QAAS,kBAAM4O,EAAKqoB,OAAO,WAAUv3B,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,WAA9H,UACAphB,EAAAC,EAAAC,cAAA,MAAIE,UAAqB,WAAT1J,EAAqB,SAAW,GAAI4J,QAAS,kBAAM4O,EAAKqoB,OAAO,YAAWv3B,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,WAAhI,YAGDphB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAqB,YAAT1J,EAAsB,SAAW,GAAI4J,QAAS,kBAAM4O,EAAKqoB,OAAO,aAAYv3B,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,0BAA0BkU,IAAI,WAAnI,aAKqB,WAApBzjB,KAAKI,MAAMrH,KACbsJ,EAAAC,EAAAC,cAAA,UAAQI,QAAS3C,KAAK25B,mBAAoB5gC,KAAK,SAAS0J,UAAU,wBAAlE,aAAmGJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,mBAAmBkU,IAAI,MACjI,KAGmB,UAApBzjB,KAAKI,MAAMrH,KACZsJ,EAAAC,EAAAC,cAAA,UAAQI,QAAS,WAAM4O,EAAK2mB,oBAAoB,QAAUn/B,KAAK,SAAS0J,UAAU,wBAAlF,YAAkHJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,mBAAmBkU,IAAI,MAChJ,KAGHphB,EAAAC,EAAAC,cAACm4B,GAAD,CACC31B,KAAU/E,KAAKI,MAAM2E,KACrBU,YAAgBzF,KAAKyF,YACrBH,aAAgBtF,KAAKH,MAAM86B,gBAC3B3C,YAAgBh4B,KAAKH,MAAMm4B,cAG5B31B,EAAAC,EAAAC,cAACq4B,GAAD,CAAcrb,OAAQwa,EAAYN,eAAgBz5B,KAAKH,MAAM45B,eAAgBL,YAAap5B,KAAKH,MAAMg7B,QAAS1B,eAAgBn5B,KAAKH,MAAMi7B,SAAU/1B,KAAM+0B,EAAe5B,oBAAqBl4B,KAAKk4B,oBAAqBmB,YAAaW,EAAiBV,qBAAsBA,KAE5Qj3B,EAAAC,EAAAC,cAAA,WAASE,UAAU,gBAEI,YAApBzC,KAAKI,MAAMrH,KACZsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAACw4B,GAAD,CACC5E,YAAiBn2B,KAAKH,MAAMs2B,YAC5B7wB,aAAiBtF,KAAKH,MAAMyF,aAC5BwwB,cAAkB91B,KAAKH,MAAMi2B,cAC7BI,QAAcl2B,KAAKH,MAAMq2B,UAE1B7zB,EAAAC,EAAAC,cAACy4B,GAAD,CACC11B,aAAiBtF,KAAKH,MAAMo7B,iBAC5B1E,eAAmBv2B,KAAKH,MAAM02B,kBAG9B,KAGmB,UAApBv2B,KAAKI,MAAMrH,KACZsJ,EAAAC,EAAAC,cAAC24B,GAAD,CAAO3b,OAAQwa,EAAYvkB,UAAWxV,KAAKH,MAAMs7B,cAAe9C,UAAWr4B,KAAKH,MAAMw4B,UAAWH,oBAAqBl4B,KAAKk4B,sBACzH,KAGmB,WAApBl4B,KAAKI,MAAMrH,KACZsJ,EAAAC,EAAAC,cAAC64B,GAAD,CACC5lB,UAAcxV,KAAKH,MAAMw7B,eACzB/1B,aAAgBtF,KAAKH,MAAMy7B,kBAC3B3D,WAAe33B,KAAKH,MAAM83B,WAC1BvD,UAAcp0B,KAAKH,MAAMu0B,UACzBoD,UAAcx3B,KAAKH,MAAM23B,UACzBE,YAAgB13B,KAAKH,MAAM63B,cAE1B,cA1PuBj3B,IAAMsC,YAA/B22B,GAcEjV,aAAe,CACrB4T,UAAW,GACXlC,YAAa,GACZ0E,QAAS,aACTC,SAAU,aACVjB,SAAU,aACVW,YAAa,aACbC,WAAY,aACZU,eAAe,EACf1B,gBAAgB,GA2OJzV,mBAAW0V,IC5JXhV,eAhCW,SAAAhgB,GAAqC,IAAnC62B,EAAmC72B,EAAnC62B,eAAgB1W,EAAmBngB,EAAnBmgB,cAC3C,MAAQ,CACPwW,eAAkBE,EAAeF,eACjCC,kBAAoBC,EAAeD,kBACnC9lB,UAAc+lB,EAAe/lB,UAC7BylB,iBAAmBM,EAAeN,iBAClC31B,aAAgBi2B,EAAej2B,aAC/B6wB,YAAgBoF,EAAepF,YAC/BwB,WAAe4D,EAAe5D,WAC9BgD,gBAAmBY,EAAeZ,gBAClCtC,UAAiBkD,EAAelD,UAChCva,SAAwB+G,EAAc/G,SACtCqd,cAAiBI,EAAeJ,cAChC1B,eAAqB8B,EAAe9B,iBAIX,SAAA1U,GAAQ,MAAK,CACvCmR,QAAY,SAACp9B,GAAD,OAAUisB,EX9DA,SAACjsB,GAAD,MAAW,CAChCC,KAAMu6B,GACNx6B,QW4D8BksB,CAAgBlsB,KAC/Cs7B,UAAa,SAACt7B,GAAD,OAAUisB,EAASC,GAAkBlsB,KAClD+gC,SAAY,SAAC/gC,GAAD,OAAUisB,EXyCC,SAACjsB,GAAD,MAAW,CACjCC,KAAM86B,GACN/6B,QW3C8BksB,CAAiBlsB,KAChD+hC,QAAe,SAAC/hC,GAAD,OAAUisB,EXuDH,SAACjsB,GAAD,MAAW,CAChCC,KAAM+6B,GACNh7B,QWzDiCksB,CAAgBlsB,KAClDgiC,SAAY,SAAChiC,GAAD,OAAUisB,EXqEC,SAACjsB,GAAD,MAAW,CACjCC,KAAMg7B,GACNj7B,QWvE8BksB,CAAiBlsB,KAChD0hC,YAAe,SAAC1hC,GAAD,OAAUisB,EXkGC,SAACjsB,GAAD,MAAW,CACpCC,KAAMk7B,GACNn7B,QWpGiCksB,CAAoBlsB,KACtD2hC,WAAc,SAAC3hC,GAAD,OAAUisB,EXkFC,SAACjsB,GAAD,MAAW,CACnCC,KAAMi7B,GACNl7B,QWpFgCksB,CAAmBlsB,KACpDg9B,cAAgB,SAACh9B,GAAD,OAAUisB,EXvCE,SAACjsB,GAAD,MAAW,CACtCC,KAAMy6B,GACN16B,QWqCkCksB,CAAsBlsB,KACzDy9B,eAAiB,SAACz9B,GAAD,OAAUisB,EXzBE,SAACjsB,GAAD,MAAW,CACvCC,KAAM06B,GACN36B,QWuBmCksB,CAAuBlsB,KAC3Dk/B,YAAe,SAACl/B,GAAD,OAAUisB,EXXC,SAACjsB,GAAD,MAAW,CACpCC,KAAM26B,GACN56B,QWSiCksB,CAAoBlsB,KACtD0+B,UAAa,SAAC1+B,GAAD,OAAUisB,EXGC,SAACjsB,GAAD,MAAW,CAClCC,KAAM46B,GACN76B,QWL+BksB,CAAkBlsB,KAClD4+B,YAAe,SAAC5+B,GAAD,OAAUisB,EXiBC,SAACjsB,GAAD,MAAW,CACpCC,KAAM66B,GACN96B,QWnBiCksB,CAAoBlsB,OAGxC4rB,CAA6CV,YA5G1C,SAAA/f,GAyBZ,IAxBLuR,EAwBKvR,EAxBLuR,UACA6lB,EAuBKp3B,EAvBLo3B,eACAC,EAsBKr3B,EAtBLq3B,kBACAL,EAqBKh3B,EArBLg3B,iBACA31B,EAoBKrB,EApBLqB,aACA6wB,EAmBKlyB,EAnBLkyB,YACAD,EAkBKjyB,EAlBLiyB,QACApY,EAiBK7Z,EAjBL6Z,SACAsW,EAgBKnwB,EAhBLmwB,UACAuD,EAeK1zB,EAfL0zB,WACAH,EAcKvzB,EAdLuzB,UACAE,EAaKzzB,EAbLyzB,YACA5B,EAYK7xB,EAZL6xB,cACAS,EAWKtyB,EAXLsyB,eACAyB,EAUK/zB,EAVL+zB,YACA2C,EASK12B,EATL02B,gBACAE,EAQK52B,EARL42B,QACAC,EAOK72B,EAPL62B,SACAjB,EAMK51B,EANL41B,SACAW,EAKKv2B,EALLu2B,YACAC,EAIKx2B,EAJLw2B,WACApC,EAGKp0B,EAHLo0B,UACA8C,EAEKl3B,EAFLk3B,cACA1B,EACKx1B,EADLw1B,eAEA,OACCp3B,EAAAC,EAAAC,cAACi5B,GAAD,CACChmB,UAAeA,EACf6lB,eAAmBA,EACnBC,kBAAqBA,EACrBL,iBAAoBA,EACpB31B,aAAiBA,EACjB6wB,YAAiBA,EACjBD,QAAcA,EACdpY,SAAeA,EACfsW,UAAeA,EACfuD,WAAgBA,EAChBH,UAAkBA,EAClBE,YAAoBA,EACpB5B,cAAkBA,EAClBS,eAAmBA,EACnByB,YAAiBA,EACjB2C,gBAAoBA,EACpBE,QAAoBA,EACpBC,SAAiBA,EACjBjB,SAAiBA,EACjBY,WAAmBA,EACnBD,YAAoBA,EACpBnC,UAAkBA,EAClB8C,cAAkBA,EAClB1B,eAAmBA,OCtDhBgC,oLAEJ,OACCp5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAACm5B,GAAD,cAJkB34B,aAUPihB,eAAWyX,ICbbE,GAA+B,aAK/BC,GAA+B,YAK/BC,GAA+B,iBAC/BC,GAA+B,mBCM/BC,GAAuB,SAACjjC,GAAD,MAAW,CAC7CC,KDjB0C,mBCkB1CD,SAGWkjC,GAAyB,SAACljC,GAAD,MAAW,CAC/CC,KDrB0C,qBCsB1CD,SAQWmjC,GAAsB,SAACnjC,GAAD,MAAW,CAC5CC,KD3B0C,kBC4B1CD,SAGWojC,GAAwB,SAACpjC,GAAD,MAAW,CAC9CC,KD/B0C,oBCgC1CD,SAQWqjC,GAAiB,SAACrjC,GAAD,MAAW,CACvCC,KAAM+iC,GACNhjC,SAGWsjC,GAAmB,SAACtjC,GAAD,MAAW,CACzCC,KDzC0C,wBC0C1CD,SAGWujC,GAA0B,SAACvjC,GAAD,MAAW,CAChDC,KD7C0C,yBC8C1CD,SCsaa6oB,eAvdd,SAAAA,EAAY9hB,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2hB,IAClB7hB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgmB,GAAAxhB,KAAAH,KAAMH,KAwBP+f,kBAAoB,SAAC3hB,EAAGkkB,GACvBlkB,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,IAKzB,IAJFA,EAAWC,MAAMzH,UAAU,SAAChG,GAC1C,OAAOA,EAAKtZ,QAAU6mB,EAAc7mB,SAIpC8mB,EAAWC,MAAM7a,KAAK,CACrB4P,MAAQ+K,EAAc/K,MACtB9b,MAAQ6mB,EAAc7mB,QAIxB8mB,EAAWC,MAAQtH,iBAAQqH,EAAWC,MAAO,SAC7CviB,EAAK4B,SAAS,CACb0gB,WAAYA,GACV,WAEFtiB,EAAK0iB,wBA5CY1iB,EAgDnB6gB,iBAAmB,SAAC1iB,EAAGwkB,GACtBxkB,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,IAKzB,IAJFA,EAAWG,KAAK3H,UAAU,SAAChG,GACzC,OAAOA,EAAKtZ,QAAUmnB,EAAapB,sBAInCe,EAAWG,KAAK/a,KAAK,CACpBnM,GAAKonB,EAAapnB,GAClB+E,MAAQqiB,EAAariB,MACrB9E,MAAQmnB,EAAapB,mBACrBjK,MAAK,GAAArY,OAAM0jB,EAAapB,mBAAnB,MAAAtiB,OAA0C0jB,EAAariB,MAAvD,OAIPgiB,EAAWG,KAAOxH,iBAAQqH,EAAWG,KAAM,SAC3CziB,EAAK4B,SAAS,CACb0gB,WAAYA,GACV,WACFtiB,EAAK0iB,wBApEY1iB,EAwEnBmb,kBAAoB,SAAChd,EAAG4c,GACvB5c,EAAEuD,kBACF,IAAI4gB,EAAatiB,EAAKM,MAAMgiB,YAAc,IAKzB,IAJFA,EAAWE,MAAM1H,UAAU,SAAChG,GAC1C,OAAOA,EAAKtZ,QAAUuf,EAAczD,SAIpCgL,EAAWE,MAAM9a,KAAK,CACrBnM,GAAIwf,EAAc/hB,KAAKuC,GACvBkN,SAAWsS,EAAc/hB,KAAKyP,SAC9B6O,MAAOyD,EAAczD,MACrB9b,MAAOuf,EAAczD,QAIvBgL,EAAWE,MAAQvH,iBAAQqH,EAAWE,MAAO,SAC7CxiB,EAAK4B,SAAS,CACb0gB,WAAYA,GACV,WACFtiB,EAAK0iB,wBA5FY1iB,EA2HnBixB,kBAAoB,SAAC30B,GAGpB,OAFgBC,KAAOD,GAAME,OAAO,KACtBD,KAAOyD,EAAKM,MAAMstB,SAASpxB,OAAO,MAE/CiI,GAAY,CAAChF,QAAS,8CACf,GAGOlD,KAAOyD,EAAKM,MAAMstB,SAAS4O,KAAKjgC,KAAOD,GAAO,QAC/C,KACbmI,GAAY,CAAChF,QAAS,kDACf,QAGRO,EAAK4B,SAAS,CACbyD,UAAe/I,GACb,WACF0D,EAAK0iB,wBA5IY1iB,EAgJnBkxB,gBAAkB,SAAC50B,GAClB,IAAI+I,EAAY9I,KAAOyD,EAAKM,MAAM+E,WAAW7I,OAAO,KAChDoxB,EAAUrxB,KAAOD,GAAME,OAAO,KAClC,OAAMwD,EAAKM,MAAM+E,UAKF9I,KAAOD,GAAMkgC,KAAKx8B,EAAKM,MAAM+E,UAAW,QACzC,KACbZ,GAAY,CAAChF,QAAS,kDACf,GAGLmuB,EAAUvoB,GACZZ,GAAY,CAAChF,QAAS,gDACf,QAGRO,EAAK4B,SAAS,CACbgsB,QAAUtxB,GACR,WACF0D,EAAK0iB,wBAlBLje,GAAY,CAAChF,QAAS,oCACf,IArJUO,EA0KnB8tB,YAAc,SAACxxB,GAEd,GADeC,KAAOD,EAAKsxB,SAAS4O,KAAKjgC,KAAOD,EAAK+I,WAAY,QACnD,IAEb,OADAZ,GAAY,CAAChF,QAAS,kDACf,EAGRO,EAAK4B,SAAS,CACbyD,UAAW/I,EAAK+I,UAChBuoB,QAAStxB,EAAKsxB,SACZ,WACF5tB,EAAK0iB,wBArLY1iB,EAuSnB0jB,iBAAmB,SAACzqB,GACnB+G,EAAK4B,SAAS,CACb3I,KAAMA,GACJ,WACF+G,EAAK0iB,wBAzSN1iB,EAAKuvB,SAAYhzB,OAASC,OAAO,cACjCwD,EAAKM,MAAQ,CACZ8f,OAAO,EACPY,OAAO,EACPxG,QAAQ,EACPyI,YAAY,EACX1D,YAAY,EACZ+C,WAAY,CAACC,MAAM,GAAIE,KAAM,GAAID,MAAO,IACnCoL,QAAUrxB,OAASC,OAAO,cAC/B6I,UAAY9I,OAASsxB,SAAS,EAAG,UAAUrxB,OAAO,eAGrDwD,EAAKqjB,gBAAkBrjB,EAAKqjB,gBAAgBviB,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpBA,EAAK2gB,mBAAqB3gB,EAAK2gB,mBAAmB7f,KAAxBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAfXA,iFAmBlBE,KAAK0B,SAAS,CACb2d,YAAW,EACX0D,YAAa/iB,KAAKI,MAAM2iB,wDA2EP9kB,EAAGlF,EAAMic,GAAO,IAAAnT,EAAA7B,KAClC/B,EAAEuD,kBACF,IAAIkhB,EAAU1iB,KAAKI,MAAMgiB,YAAc,GACvCM,EAAQ3pB,GAAM8pB,OAAO7N,EAAO,GAChB,UAATjc,GAA6C,IAAzB2pB,EAAQ3pB,GAAMuE,SACpColB,EAAQH,KAAO,GACfG,EAAQJ,MAAQ,IAGL,SAATvpB,GAA4C,IAAzB2pB,EAAQ3pB,GAAMuE,SACnColB,EAAQJ,MAAQ,IAGjB,IAAIH,EAA0B,UAATppB,EAAoBiH,KAAKI,MAAM+hB,cAAgB,KAChEM,EAAyB,SAAT1pB,EAAmBiH,KAAKI,MAAMqiB,aAAe,KAC7D5H,EAA0B,UAAT9hB,EAAoBiH,KAAKI,MAAMya,cAAgB,KAEpE7a,KAAK0B,SAAS,CACb0gB,WAAaM,EACbD,aAAcA,EACdN,cAAeA,EACftH,cAAeA,GACb,WACFhZ,EAAK2gB,oEAmEN,IAAIJ,EAAcpiB,KAAKI,MAAMgiB,YAAc,GAGvClL,EAAoB,GACpBpe,EAAU,GAEd,GAA+B,IAA5BspB,EAAWE,MAAMhlB,QAA2C,IAA3B8kB,EAAWG,KAAKjlB,QAAgB8kB,EAAWC,MAAM/kB,OAAS,EAAG,CAC7F,IAAI1C,GAAqBwnB,EAAWC,OAAS,IAAI5W,IAAI,SAAAmJ,GACrD,MAAO,CAACxU,MAAOwU,EAAKtZ,MAAOomB,QAAS,MAEpC9mB,EAAO0C,OAAS,IACjBxE,EAAS,CACRC,KAAQ,QACRorB,MAASvpB,IAOb,GAA+B,IAA5BwnB,EAAWE,MAAMhlB,QAAgB8kB,EAAWG,KAAKjlB,OAAS,EAAG,CAC/D,IAAI0jB,EAAmB,IACtBoB,EAAWG,MAAQ,IAAI9W,IAAI,SAACmJ,GAC5B,IAAII,EAASgM,EAAMpG,UAAU,SAACsJ,GAAD,OAAOA,EAAE9jB,QAAUwU,EAAKxU,QAElD4U,GAAS,EACXgM,EAAMhM,GAAO0M,QAAQla,KAAKoN,EAAKvZ,IAE/B2lB,EAAMxZ,KAAK,CACVpH,MAAOwU,EAAKxU,MACZshB,QAAU,CAAC9M,EAAKvZ,QAKhB2lB,EAAM1jB,OAAS,IACjBxE,EAAS,CACRC,KAAQ,QACRorB,MAASnD,IAQZ,GAAGoB,EAAWE,MAAMhlB,OAAS,EAAG,CAC/B,IAAI2Z,EAAoB,IACvBmL,EAAWE,OAAS,IAAInL,QAAQ,SAAAvC,GAChCqC,EAAMzP,KAAKoN,EAAKrM,SAASuD,YACzBoL,EAAUtC,EAAKrM,UAAcqM,EAAKwC,QAEhCH,EAAM3Z,OAAS,IACjBxE,EAAS,CACRC,KAAQ,QACRwP,SAAW0O,IAOd,IAAI9R,EAAuBnF,KAAKI,MAAM+E,UAClCuoB,EAAuB1tB,KAAKI,MAAMstB,QACjCvoB,GAAeuoB,GACnBvoB,EAAuBA,EACvBuoB,EAAuBA,IAEjBvoB,GAAgBuoB,IACrBvoB,EAAwB9I,OAASsxB,SAAS,EAAG,UAAUrxB,OAAO,cAC9DoxB,EAAsBrxB,OAASC,OAAO,eAElC6I,IAAgBuoB,IAEpBA,EADAvoB,EAAqBA,GAGjBuoB,IAAcvoB,IAClBA,EAAqBuoB,EACrBA,EAAmBA,GAEpB1tB,KAAK0B,SAAS,CACbyD,UAhFsB,GAiFtBuoB,QAhFsB,MAoFxB50B,EAAKkO,MAAU7B,EACfrM,EAAKmO,IAAQymB,EACb50B,EAAK+kB,UAAa7d,KAAKI,MAAMrH,KACvBD,EAAKC,OACPD,EAAKC,KAAW,QAUpBiH,KAAKH,MAAM08B,UAAUzjC,EAAM,CAC1B+kB,UAAe7d,KAAKH,MAAMie,SAC1B/kB,KAAeiH,KAAKI,MAAMrH,KAC1BoM,UAAeA,EACfuoB,QAAeA,EACftL,WAAeA,gDAmBG,IAAA7Q,EAAAvR,KACfqX,EAAcrX,KAAKH,MAAMujB,WAG7B,GAAIhhB,kBAAQiV,IAAWA,EAAOwG,YAAc7d,KAAKH,MAAMie,SAehD,CACN,IAAI/kB,EAAuC,UAAxBiH,KAAKH,MAAMie,SAAwB,UAAY9d,KAAKH,MAAMie,SAC7E9d,KAAK0B,SAAS,CACb3I,KAAOA,GACL,WACFwY,EAAKiR,2BApB0D,CAEhE,IAAIJ,EAAe/K,EAAO+K,WAGtBoa,EAAex8B,KAAKI,MAAM+E,UAC1Bs3B,EAAez8B,KAAKI,MAAMstB,QAC9B1tB,KAAK0B,SAAS,CACb0gB,WAAeA,EACfjd,UAAeq3B,EACf9O,QAAe+O,EACf1jC,KAAese,EAAOte,MACpB,WACFwY,EAAKiR,yDAYC,IAAAa,EAAArjB,KAAA2nB,EAC2B3nB,KAAKI,MAAhC2iB,EADA4E,EACA5E,WAEJvC,GAHImH,EACYtI,WAEF,IACd6B,EAAkB,GAMtB,OALAlhB,KAAKI,MAAMgiB,WAAWC,MAAMlL,QAAQ,SAAC/W,GACpCogB,EAAYhZ,KAAKpH,EAAMgX,OACvB8J,EAAgB1Z,KAAKpH,EAAM9E,SAI3B+G,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAClBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,YAAY/gB,UAAgC,YAApBzC,KAAKI,MAAMrH,KAAsB,UAAY,IAAhH,WACAsJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,aAAa/gB,UAAgC,aAApBzC,KAAKI,MAAMrH,KAAuB,UAAY,IAAlH,QAINsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA1D,OAAmBgkB,EAAa,aAAe,GAA/C,KAAsDpgB,QAAS3C,KAAKmjB,iBAAiB9gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAzI,YAGHphB,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,MAAMvY,UAAS,iBAAA1D,OAAmBgkB,EAAa,gBAAgB,KACtG1gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,eACAJ,EAAAC,EAAAC,cAACmhB,GAAD,CACDlD,YAAaA,EACb5lB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BzC,kBAAmB5f,KAAK4f,kBACxBa,mBAAoBzgB,KAAKygB,qBAE1Bpe,EAAAC,EAAAC,cAACohB,GAAD,CACCnM,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B3nB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BrB,MAAOhhB,KAAKH,MAAMmhB,MAClBE,gBAAiBA,EACjBP,iBAAkB3gB,KAAK2gB,iBACvBF,mBAAoBzgB,KAAKygB,qBAE1Bpe,EAAAC,EAAAC,cAACqhB,GAAD,CACC3M,MAAOjX,KAAKI,MAAMgiB,WAAWE,MAC7B9K,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B5I,OAAQ3Z,KAAKH,MAAM8Z,OACnBsB,kBAAmBjb,KAAKib,kBACxBwF,mBAAoBzgB,KAAKygB,uBAI5Bpe,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBACNJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZJ,EAAAC,EAAAC,cAACwvB,GAAD,CACf7E,WAAYltB,KAAKI,MAAM+E,UACvBA,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBzqB,aAAcjD,KAAK+wB,kBACnBnD,YAAa5tB,KAAK4tB,YAClBnrB,UAAU,QACV6J,YAAY,aACZ+iB,SAAUrvB,KAAKqvB,YAGF,IACDhtB,EAAAC,EAAAC,cAAA,QAAME,UAAU,MAAhB,MAdH,IAcmC,IAChCJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZJ,EAAAC,EAAAC,cAACwvB,GAAD,CACjB7E,WAAYltB,KAAKI,MAAMstB,QACvBvoB,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBzqB,aAAcjD,KAAKgxB,gBACnBpD,YAAa5tB,KAAK4tB,YAClBnrB,UAAU,QACV6J,YAAY,WACZS,UAAa/M,KAAKI,MAAM+E,UACxBkqB,SAAUrvB,KAAKqvB,eAQTrvB,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACzH+E,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAEXzC,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,EACpC0C,KAAKI,MAAMgiB,WAAWC,MAAM5W,IAAI,SAAC4L,EAAQrC,GACtC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,aAAAnH,OAAeiW,GAASvS,UAAU,SAAS4U,EAAOD,MACvD/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI9C,KAINzjB,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,EACnC0C,KAAKI,MAAMgiB,WAAWG,KAAK9W,IAAI,SAAC4L,EAAQrC,GACrC,OACI3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,YAAAnH,OAAciW,GAASvS,UAAU,SAAS4U,EAAOD,MACvD/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,OAAQ+W,KACnD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI9C,KAINzjB,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACpC0C,KAAKI,MAAMgiB,WAAWE,MAAM7W,IAAI,SAAC4L,EAAQrC,GACtC,OACI3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAG,aAAAnH,OAAeiW,GAASvS,UAAU,SAAS4U,EAAOD,MACxD/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI9C,MAEH,aAjdJ1gB,4CC8DN25B,eAnEd,SAAAA,EAAY78B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA08B,IAClB58B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+gC,GAAAv8B,KAAAH,KAAMH,KACDO,MAAQ,GAFKN,wEAKTnE,OAAAghC,GAAA,EAAAhhC,CACGqE,KAAKI,OADT,IAGJw8B,EADmB58B,KAAKH,MAApBg9B,WACmBD,WAAa,GACpCE,EAAcF,EAAUG,OAAS,GACjCC,EAAwBJ,EAAUK,0BAA4B,EAElE,OACC56B,EAAAC,EAAAC,cAAC26B,GAAA,EAAD,CAAKjyB,GAAG,IAAIC,GAAG,KAAKzI,UAAU,QAC7BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,UACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAKq6B,EAAUO,aAAe,GAC9B96B,EAAAC,EAAAC,cAAA,SAEGy6B,EAAwB,EACzB36B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,IAAwBu6B,EAAsBlR,QAAQ,GAAtD,KAAkE,KAIjEkR,EAAwB,EACzB36B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASu6B,EAAsBlR,QAAQ,GAAvD,KAAmE,KAIxC,IAA1BkR,EACD36B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,OAAiC,KAbnC,sBAkBDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,YACAJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,WAGDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdJ,EAAAC,EAAAC,cAAC66B,GAAA,WAAD,MAGGN,GAAe,IAAIrxB,IAAI,SAACmJ,EAAMI,GAC9B,OACmB3S,EAAAC,EAAAC,cAAA,OAAK2D,IAAG,aAAAnH,OAAeiW,GAASvS,UAAU,SAC3DJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASmS,EAAKyoB,WAA9B,KAA4CzoB,EAAKrM,UACjDlG,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASmS,EAAK0oB,6BArDtBv6B,aCgMNw6B,eA7Ld,SAAAA,EAAY19B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAu9B,IAClBz9B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA4hC,GAAAp9B,KAAAH,KAAMH,KACDO,MAAQ,GACbN,EAAK09B,UAAa,EAHA19B,mFAMC,IAAA29B,EAGWz9B,KAAKH,MAA7Bg9B,EAHaY,EAGbZ,WAAYa,EAHCD,EAGDC,OACdC,EAAmBd,EAAcA,EAAWc,WAAa,GAC7D39B,KAAK49B,iBAAiBD,EAAYD,qDAGT79B,GAEzB,GAAGA,EAAM69B,SAAW19B,KAAKH,MAAM69B,SAAW73B,kBAAQhG,EAAMg9B,WAAY78B,KAAKH,MAAMg9B,YAAY,KACpFA,EAAwBh9B,EAAxBg9B,WAAYa,EAAY79B,EAAZ69B,OACdC,EAAmBd,EAAcA,EAAWc,WAAa,GAC7D39B,KAAK49B,iBAAiBD,EAAYD,6CAUnBC,EAAYD,GAE5B,GAAKC,GAAgBA,EAAW3qB,OAAQ,CACvC,IAAID,EAAa4qB,EAAW3qB,QAAU,GAClCwqB,EAAax9B,KAAKw9B,UAEtBA,EAAc3gC,KAAKuQ,IAALywB,MAAAhhC,KAAIlB,OAAA0a,GAAA,EAAA1a,CAAQoX,EAAUtH,IAAI,SAAAmJ,GAAI,OAAIA,EAAK0oB,gBACrDE,EAAqC,EAAvB3gC,KAAKgtB,KAAK2T,EAAU,GAGlC,IAAIM,EAAY,GACF,SAAXJ,IACFI,EAAc/qB,EAAUtH,IAAI,SAACmJ,GAC5B,IAAImpB,EAAmBnpB,EAAKopB,EAAK3hC,KAAOuY,EAAKopB,EAAG,YAAY1hC,OAAO,UAAY,GAC/E,OAAOX,OAAAC,EAAA,EAAAD,CAAA,GACHiZ,EADJ,CAECwC,MAAO2mB,EACP7S,WAAgC,IAAnBtW,EAAK0oB,YAAmBE,OAI1B,UAAXE,IACFI,EAAc/qB,EAAUtH,IAAI,SAACmJ,GAC5B,IAAIqpB,GAAarpB,EAAK1X,SAAW,IAAI6K,MAAM,KAC3Ck2B,EAAQpb,OAAOob,EAAQ3gC,OAAS,EAAG,GACnC,IAAIJ,EAAY+gC,EAAQC,KAAK,MAE7B,OAAOviC,OAAAC,EAAA,EAAAD,CAAA,GACHiZ,EADJ,CAECwC,MAAOla,EACPguB,WAAgC,IAAnBtW,EAAK0oB,YAAmBE,OAOxC,IAHA,IAAIW,EAASX,EAAY,EAAIA,EAAU,EAAI,EACvCY,EAAW,GACXnlB,EAAS,EACL1R,EAAE,EAAGA,GAAG,EAAGA,IAClB62B,EAAQ52B,KAAKyR,GACbA,GAAiBpa,SAASs/B,GAE3Bn+B,KAAK0B,SAAS,CACbo8B,SAAWA,EACXM,QAAUA,sCAKJ,IAAAzW,EACsB3nB,KAAKI,MAA3B09B,EADAnW,EACAmW,SAAUM,EADVzW,EACUyW,QAElB,OACC/7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAA+B,SAAtBzC,KAAKH,MAAM69B,OAAqB,OAAS,UACjEr7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAf,UAEDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEVq7B,GAAYA,EAASxgC,OAAS,EACjC+E,EAAAC,EAAAC,cAAC66B,GAAA,WAAD,KAEEU,EAASryB,IAAI,SAACmJ,EAAMjJ,GACnB,OACCtJ,EAAAC,EAAAC,cAAA,OAAK2D,IAAKyF,EAAGlJ,UAAU,aACtBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQmS,EAAKwC,OAC5B/U,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAOJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAOC,MAAO,CAAC2G,MAAK,GAAAtK,OAAK6V,EAAKsW,WAAV,SAC1D7oB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQmS,EAAK0oB,iBA6D/B,MAIJj7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAEV27B,GAAWA,EAAQ9gC,OAAS,EAC/B+E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAEb27B,EAAQ3yB,IAAI,SAACmJ,EAAMrN,GAClB,OACAlF,EAAAC,EAAAC,cAAA,QAAM2D,IAAKqB,GAAIqN,MAUT,eArLQ7R,aCuETs7B,eAzEd,SAAAA,EAAYx+B,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAq+B,IAClBv+B,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA0iC,GAAAl+B,KAAAH,KAAMH,KACDO,MAAQ,GAFKN,wEAKTnE,OAAAghC,GAAA,EAAAhhC,CACGqE,KAAKI,OADT,IAGJk+B,EADmBt+B,KAAKH,MAApBg9B,WACqByB,aAAe,GACxCC,EAAuBD,EAAYE,yBAA2B,EAC9DC,EAA0BH,EAAYI,4BAA8B,EAExE,OACCr8B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAK+7B,EAAY/qB,cACjBlR,EAAAC,EAAAC,cAAA,SAEGg8B,EAAuB,EACxBl8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,IAAwB87B,EAAqBzS,QAAQ,GAArD,KAAiE,KAIhEyS,EAAuB,EACxBl8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAS87B,EAAqBzS,QAAQ,GAAtD,KAAkE,KAIxC,IAAzByS,EACDl8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,OAAiC,KAbnC,sBA8BDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAM+7B,EAAY7qB,sBAAwB,EAAG6qB,EAAY7qB,sBAAsBqY,QAAQ,GAAG,EAA1F,KACAzpB,EAAAC,EAAAC,cAAA,SAEGk8B,EAA0B,EAC3Bp8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,IAAwBg8B,EAAwB3S,QAAQ,GAAxD,KAAoE,KAInE2S,EAA0B,EAC3Bp8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASg8B,EAAwB3S,QAAQ,GAAzD,KAAqE,KAIxC,IAA5B2S,EACDp8B,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,OAAiC,KAbnC,8BAnDoBM,gCC6EV47B,uBArEd,SAAAA,EAAY9+B,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2+B,GAAAhjC,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgjC,GAAAx+B,KAAAH,KACbH,0EAGE,IACAg9B,EAAe78B,KAAKH,MAApBg9B,WACJc,EAAcd,EAAWc,YAAcd,EAAWc,WAAW3qB,OAAQ6pB,EAAWc,WAAW3qB,OAAO,GAGlG4rB,EAAiB,GACjBC,EAAyB,GAEzBC,EAAkBC,kBAASpB,EAAY,SAASz7B,GAAS,OAAO7F,KAAO6F,EAAM87B,GAAG1hC,OAAO,aAC3FX,OAAOgZ,KAAKmqB,GAAiB3nB,QAAQ,SAASjR,GAC7C,IAAI84B,EAAWF,EAAgB54B,IAAQ,GAEvC04B,EAAep3B,KAAKtB,GAEpB,IAAI+4B,EAAe,EACnBD,EAASvzB,IAAI,SAAAvJ,GACEmO,WAAWnO,EAAMo7B,aAC/B2B,GAAgB5uB,WAAWnO,EAAMo7B,eAGlCuB,EAAuBr3B,KAAKy3B,KAG7B,IAAM/Y,EAAS,CACdntB,KAAM,OACNmmC,OAAQ,CACPC,MAAS,CACRC,aAAc,WAGhBC,OAAQ,CACPC,aAAc,GACdC,OAAQX,GAETY,KAAM,CACLC,QAAS,CACRC,cAAe,kBACfC,YAAa,OACbC,cAAe,OACfC,cAAe,MACf5gC,KAAQ,2IACR6gC,aAAc,SACdC,gBAAiB,EACjBz2B,QAAW,WACX02B,mBAAoB,OACpBz2B,MAAS,UACT02B,aAAc,iCACdp2B,OAAS,oBACTq2B,SAAW,IAGbC,OAAQ,CAAC,CACRpH,OAAQ8F,EACRuB,YAAaxB,KAIf,OACCv8B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAC89B,GAAA,EAAD,CAAWvnC,KAAMotB,YAhEKnjB,cCkMXu9B,eApMX,SAAAA,EAAYzgC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAsgC,IACfxgC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA2kC,GAAAngC,KAAAH,KAAMH,KAOV+C,kBAAoB,SAAC7B,GACvBjB,EAAKD,MAAMrG,eAAe,CAACuH,KAAMA,IACjCjB,EAAK4B,SAAS,CACJ6+B,aAAa,KAXFzgC,EAenB0gC,WAAa,WACf1gC,EAAK4B,SAAS,CACJ6+B,aAAa,KAjBFzgC,EAqBnB4sB,WAAa,SAAC5zB,GAAS,IACX4vB,EAAgB5vB,EAAhB4vB,YAEH5oB,EAAKD,MAAM4gC,YAAcr+B,kBAAQtC,EAAKD,MAAM4gC,YAAc/X,IAAgB5oB,EAAKD,MAAM4gC,UAAUC,QAChG5gC,EAAKD,MAAM8gC,qBAAqB,CAC5BrY,KAAMI,EACNyI,SAAWrxB,EAAKD,MAAM4gC,UAAUG,OAChCtkC,OAAUwD,EAAKD,MAAM4gC,UAAUnkC,UA5BxBwD,EAkCnB8gC,OAAS,SAACtlC,GAEN,IAAIgB,EAAY,MACbwD,EAAKD,MAAM4gC,UAAUG,SAAWtlC,IAC/BgB,EAA6C,SAAhCwD,EAAKD,MAAM4gC,UAAUnkC,OAAqB,MAAQ,QACnEwD,EAAKD,MAAMs8B,eAAe,CACtB7T,KAAMxoB,EAAKD,MAAM4gC,UAAUC,OAC3BvP,SAAW71B,EACXgB,OAASA,KAxCbwD,EAAKM,MAAQ,CACTygC,oBAAoB,EACpBN,aAAa,GAJFzgC,wEA+CV,IAAA+B,EAAA7B,KAED8gC,EAAwB9gC,KAAKH,MAAM4gC,WAAa,GAChDM,EAAwBD,EAAWF,QAAU,kBAC7CtkC,EAAwBwkC,EAAWxkC,QAAU,kBAC7CwW,EAAwBguB,EAAWhuB,OAAS,GAC5ClY,EAAwBwlB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAGrEuI,EAAwBgY,EAAW7nB,OAAS,EAC5C9S,EAAwBnG,KAAKH,MAAMsG,aAAe,GACtD,OACKnG,KAAKI,MAAMmgC,YACZl+B,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,gBAAgBsC,KAAM/E,KAAKI,MAAMmgC,YAAa91B,OAAQzK,KAAKH,MAAMkoB,kBACxF1lB,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,qBAEJ6G,EAAAC,EAAAC,cAAA,KAAGI,QAAS3C,KAAKwgC,WAAY/9B,UAAU,aAAaJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,2BAA7D,YACC7B,GAAWvH,IAGhB9D,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,oBAAoBsC,KAAM/E,KAAKH,MAAMghC,mBAAoBp2B,OAAQzK,KAAKH,MAAMkoB,kBACnG1lB,EAAAC,EAAAC,cAACgI,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtI,EAAAC,EAAAC,cAACgI,GAAA,EAAM/O,MAAP,qBAEJ6G,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KAEM7K,KAAKH,MAAM2V,UA2GPnT,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACZ1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,iBA5GRJ,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GAEmB,kBAAxB+1B,EAAWprB,SACRrT,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcq+B,EAAW7nB,MAAxC,YACA5W,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WACtBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmCqQ,EAAMa,OACzCtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,cAAuCqQ,EAAMkuB,GAC7C3+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,cAAwCqQ,EAAMmuB,GAC9C5+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,YAAoCqQ,EAAMouB,OAK1D7+B,EAAAC,EAAAC,cAAC4+B,GAAD,CAAcpuB,UAAWD,EAAME,OAAQpQ,kBAAmB5C,KAAK4C,kBAAmBg+B,OAAQ5gC,KAAK4gC,OAAQG,YAAaA,EAAazkC,OAAQA,OAIvJ,KAIuB,cAAxBwkC,EAAWprB,SACRrT,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcq+B,EAAW7nB,MAAxC,YAEItd,OAAOgZ,KAAK7B,GAAS,IAAIrH,IAAI,SAACmJ,EAAMrN,GAChC,IAAIsN,EAAgB/B,EAAM8B,IAAS,GACnC,OACIvS,EAAAC,EAAAC,cAAA,OAAK2D,IAAKqB,EAAG9E,UAAU,aACnBJ,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASoS,EAAKlM,MAC9DtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmCoS,EAAKlB,OACxCtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,cAAuCoS,EAAKmsB,GAC5C3+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,cAAwCoS,EAAKosB,GAC7C5+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,YAAoCoS,EAAKqsB,OAMzD7+B,EAAAC,EAAAC,cAAC4+B,GAAD,CAAcpuB,UAAW8B,EAAK7B,OAAQpQ,kBAAmBf,EAAKe,kBAAmBg+B,OAAQ/+B,EAAK++B,OAAQG,YAAaA,EAAazkC,OAAQA,SAOlK,KAIuB,aAAxBwkC,EAAWprB,SAEZrT,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcq+B,EAAW7nB,MAAxC,YAEItd,OAAOgZ,KAAKmsB,EAAWhuB,OAAS,IAAIrH,IAAI,SAACmJ,EAAMrN,GAC3C,IAAI6Z,EAAY0f,EAAWhuB,MAAM8B,IAAS,GACtCxU,EAAaxF,EAAOs/B,KAAK,SAAArO,GACzB,OAAOA,EAAExwB,KAAOuZ,IAEpB,OACIvS,EAAAC,EAAAC,cAAA,OAAK2D,IAAKqB,GACNlF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASrC,EAAM9E,OAASsZ,GACtCvS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEf2e,EAAK3V,IAAI,SAACyY,EAAGlP,GACT,IAAIjC,EAAcmR,EAAElR,QAAU,GAC9B,OACI3Q,EAAAC,EAAAC,cAAA,SAAO2D,IAAK8O,GACR3S,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASyhB,EAAEvb,KAA3B,KAAmCiM,EAAnC,KAChCvS,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,UAAmCyhB,EAAEvQ,OACrCtR,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAhB,cAAuCyhB,EAAE8c,GACzC3+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,cAAwCyhB,EAAE+c,GAC1C5+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,WAAhB,YAAoCyhB,EAAEgd,OAMtD7+B,EAAAC,EAAAC,cAAC4+B,GAAD,CAAcpuB,UAAWA,EAAWnQ,kBAAmBf,EAAKe,kBAAmBg+B,OAAQ/+B,EAAK++B,OAAQG,YAAaA,EAAazkC,OAAQA,YAWpK,OAUR8F,kBAAQ0Q,IAAUgW,GArIR,IAsIZzmB,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAC82B,QAAUx5B,KAAKH,MAAM2V,UAAa,OAAS,IAAK/S,UAAU,kBAAiBJ,EAAAC,EAAAC,cAACkqB,GAAD,CAAY3D,aAAcA,EAAcD,UAtIpH,IAsI6IO,eAAgB,EAAGZ,cAAexoB,KAAK0sB,WAAYpnB,aAActF,KAAKH,MAAMyF,gBAAsB,cA9LrPvC,aAuM9B,SAASo+B,GAAathC,GAClB,IAAIkT,EAAgBlT,EAAMkT,WAAa,GACnC6tB,EAAgB/gC,EAAMkhC,YACtBzkC,EAAgBuD,EAAMvD,OAC1B,OACI+F,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,iBAAXm+B,EAAD,UAAA7hC,OAAwCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,kBAAjG,gBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,cAAXm+B,EAAD,UAAA7hC,OAAqCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,eAA9F,iBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,UAAXm+B,EAAD,UAAA7hC,OAAiCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,WAA1F,SACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,cAAXm+B,EAAD,UAAA7hC,OAAqCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,eAA9F,iBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,eAAXm+B,EAAD,UAAA7hC,OAAsCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,gBAA/F,cACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,mBAAXm+B,GAA0C,oBAAXA,EAAhC,UAAA7hC,OAA0EzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,qBAAnI,mBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,2BAAXm+B,EAAD,UAAA7hC,OAAkDzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,4BAA3G,uBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,kBAAXm+B,EAAD,UAAA7hC,OAAyCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,mBAAlG,iBACAv+B,EAAAC,EAAAC,cAAA,MAAIE,UAAuB,gBAAXm+B,EAAD,UAAA7hC,OAAuCzC,GAAU,GAAIqG,QAAS,kBAAM9C,EAAM+gC,OAAO,iBAAhG,gBAGC7tB,EAAUzV,OAAS,GACnByV,GAAa,IAAItH,IAAI,SAACvJ,EAAO6R,GAC1B,OACI1R,EAAAC,EAAAC,cAAA,MAAI2D,IAAK6N,GACL1R,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MACLjS,EAAAC,EAAAC,cAAA,QAAME,UAAS,SAAA1D,OAAWmD,EAAMk/B,aAAqBl/B,EAAMC,aAD/D,OAGIE,EAAAC,EAAAC,cAAA,QAAM83B,MAAM,eAAe13B,QAAS,kBAAM9C,EAAM+C,kBAAkBV,EAAMnB,OAAO0B,UAAU,aAAYJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAElHlN,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAOpS,EAAMm/B,UAAY,EAAKn/B,EAAMm/B,UAAY,GACzDh/B,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAM+U,OACrB5U,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMo/B,eACrBj/B,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAASJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAM2V,YAA/D,IAAkFxV,EAAAC,EAAAC,cAAA,aAAQL,EAAM2V,aAChGxV,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAASJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMkG,iBAA/D,IAAuF/F,EAAAC,EAAAC,cAAA,aAAQL,EAAMkG,kBACrG/F,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAASJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMq/B,wBAA/D,IAA8Fl/B,EAAAC,EAAAC,cAAA,aAAQL,EAAMq/B,yBAC5Gl/B,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,KAAK7R,UAAU,SAASJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQP,EAAMqD,eAA/D,IAAqFlD,EAAAC,EAAAC,cAAA,aAAQL,EAAMqD,gBACnGlD,EAAAC,EAAAC,cAAA,MAAI+R,KAAK,MAAMpS,EAAMs/B,gBAG5Bn/B,EAAAC,EAAAC,cAAA,UACDF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,KAAZ,sBCtIL+tB,eAxGd,SAAAA,EAAY5hC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAyhC,IAClB3hC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA8lC,GAAAthC,KAAAH,KAAMH,KAkBPwsB,gBAAkB,SAACpuB,GAClBA,EAAEuD,kBACF1B,EAAK4B,SAAS,CAAEm/B,oBAAoB,IACpC/gC,EAAKD,MAAM6hC,iBApBX5hC,EAAKM,MAAQ,CACZygC,oBAAoB,GAHH/gC,kFAgBlBE,KAAK0B,SAAS,CAAEm/B,oBAAoB,qCAS5B,IAAAh/B,EAAA7B,KACA6gC,EAAuB7gC,KAAKI,MAA5BygC,mBADApD,EAEmCz9B,KAAKH,MAAxCg9B,EAFAY,EAEAZ,WACJyB,GAHIb,EAEYt4B,UAFZs4B,EAEuB/P,QACbmP,EAAWyB,aAAe,IAC5C,OACCj8B,EAAAC,EAAAC,cAAC26B,GAAA,EAAD,CAAKjyB,GAAG,IAAIC,GAAG,KAAKzI,UAAU,QAC7BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,kBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAK+7B,EAAY/qB,cAEjBlR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,uBAA1B,IAAgD+7B,EAAYqD,mBAA5D,KACAt/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAW67B,EAAY/qB,aAAe+qB,EAAYsD,YAAjE,eAGDv/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,oBAA1B,KAA8C+7B,EAAYuD,gBAA1D,KACAx/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAW67B,EAAYsD,YAAtC,gBAIFv/B,EAAAC,EAAAC,cAAA,KAAGE,UAAU,UAAUC,MAAO,CAACgK,OAAQ,WAAY/J,QAAW,SAAC1E,GAAD,OAAK4D,EAAKwqB,gBAAgBpuB,KAAxF,qBAGDoE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKu/B,QAAQ,YAAYr/B,UAAU,2BAClCJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAChBy+B,EAAE,sFAIF7+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAChBs/B,gBAAe,GAAAhjC,OAAKu/B,EAAYqD,mBAAjB,MAAA5iC,OAAwCu/B,EAAYuD,iBACnEX,EAAE,uFAMH7+B,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAS67B,EAAYqD,mBAArC,IAAyDt/B,EAAAC,EAAAC,cAAA,4BAOzDs+B,EACHx+B,EAAAC,EAAAC,cAACy/B,GAAD,CACCnB,mBAAoBA,EACpB9Y,iBAAkB/nB,KAAK+nB,iBAAiBnnB,KAAKZ,MAC7CygC,UAAWzgC,KAAKH,MAAM4gC,UACtBiB,cAAe1hC,KAAKH,MAAM6hC,cAC1BloC,eAAgBwG,KAAKH,MAAMrG,eAC3B2M,YAAanG,KAAKH,MAAMsG,YACxBg2B,eAAgBn8B,KAAKH,MAAMs8B,eAC3B3mB,UAAWxV,KAAKH,MAAM2V,UACtBmrB,qBAAsB3gC,KAAKH,MAAM8gC,uBAC7B,aAxFiB59B,wBC8JZk/B,eArJd,SAAAA,EAAYpiC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAiiC,IAClBniC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAsmC,GAAA9hC,KAAAH,KAAMH,KASP+5B,OAAS,SAACt+B,GACTwE,EAAK4B,SAAS,CAAE3I,KAAOuC,GAAS,WAC/B0E,KAAKkiC,cAZYpiC,EAgCnBqiC,mBAAqB,SAAClkC,GACrBA,EAAEuD,kBAEC1B,EAAKmgB,UAAU7F,SAASnc,EAAE2K,SAA6C,uBAAlC3K,EAAE2K,OAAOyR,aAAa,SAIzDva,EAAKM,MAAMgiC,SACftiC,EAAK4B,SAAS,CAAE0gC,SAAS,KAxCRtiC,EAkEnBoiC,SAAW,WACV,IAAIxE,EAAS,GAEZA,EADsB,YAApB59B,EAAKM,MAAMrH,KACJ,QAEA+G,EAAKM,MAAMs9B,OAErB59B,EAAKD,MAAMqiC,SAASxE,IAvEpB59B,EAAKM,MAAQ,CACZrH,KAAM,QACNqpC,SAAS,EACT1E,OAAQ,OACR2E,UAAW,gBANMviC,8EAgBJ7B,GACL,SAANA,EACF+B,KAAK0B,SAAS,CAAEg8B,OAAQz/B,EAAGokC,UAAW,eAAgBD,SAAUpiC,KAAKI,MAAMgiC,SAAW,WACrFpiC,KAAKkiC,aAGNliC,KAAK0B,SAAS,CAAEg8B,OAAQz/B,EAAGokC,UAAW,gBAAiBD,SAAUpiC,KAAKI,MAAMgiC,SAAW,WACtFpiC,KAAKkiC,qDAKQnpC,GACfiH,KAAK0B,SAAS,CAAE0gC,SAAUpiC,KAAKI,MAAMgiC,sDAgBrC,IAAI1E,EAAU19B,KAAKH,MAAM69B,OACrB2E,EAAYriC,KAAKI,MAAMiiC,UACvBtpC,EAAoB,UAAX2kC,EAAsB,UAAY,QACjC,UAAXA,GACFA,EAAU,OACV2E,EAAY,gBAEZA,EAAwB,SAAX3E,EAAqB,eAAiB,gBAEpD19B,KAAK0B,SAAS,CACb3I,KAAQA,EACR2kC,OAAUA,EACV2E,UAAYA,IAEXhhC,SAASC,iBAAiB,QAAStB,KAAKmiC,mEAI1C9gC,SAASO,oBAAoB,QAAS5B,KAAKmiC,qDAanC,IAAAtgC,EAAA7B,KAAA2nB,EACqC3nB,KAAKI,MAA1CrH,EADA4uB,EACA5uB,KAAMqpC,EADNza,EACMya,QAAS1E,EADf/V,EACe+V,OAAQ2E,EADvB1a,EACuB0a,UAE/B,OACChgC,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAClBJ,EAAAC,EAAAC,cAAC+/B,GAAD,CAAYzF,WAAY78B,KAAKH,MAAMg9B,aAEnCx6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAf,UACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAMd,EAAK+3B,OAAO,UAAUn3B,UAAqB,UAAT1J,EAAoB,SAAW,IAAtF,cACAsJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAMd,EAAK+3B,OAAO,YAAYn3B,UAAqB,YAAT1J,EAAsB,SAAW,IAA1F,iBAIU,YAATA,EACDsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyd,GAAS,OAAIpe,EAAKoe,UAAYA,GAAWxd,UAAU,SAA7D,mBAGDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyd,GAAS,OAAIpe,EAAKoe,UAAYA,GAAWxd,UAAS,aAAA1D,OAAeqjC,EAAU,SAAW,MAC/F//B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWE,QAAS,kBAAMd,EAAK4Y,gBAAgB1hB,KAC7DsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QAAQ4/B,IAGxBhgC,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAK+D,eAAe,SAAS9M,KAAK,qBAAqB2J,UAAuB,SAAXi7B,EAAqB,SAAW,IAAtH,gBACAr7B,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMd,EAAK+D,eAAe,UAAU9M,KAAK,qBAAqB2J,UAAuB,UAAXi7B,EAAsB,SAAW,IAAxH,qBAOF19B,KAAKH,MAAM0iC,eAWJlgC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAVxBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAA0B,UAAX2+B,EAAsB,WAAY,KAEnD,UAAT3kC,EACDsJ,EAAAC,EAAAC,cAACigC,GAAD,CAAW3F,WAAY78B,KAAKH,MAAMg9B,WAAYa,OAAQA,IAAU,KAItD,YAAT3kC,EACDsJ,EAAAC,EAAAC,cAACkgC,GAAD,CAAa5F,WAAY78B,KAAKH,MAAMg9B,aAAe,QAOxDx6B,EAAAC,EAAAC,cAACmgC,GAAA,EAAD,CAAK33B,WAAS,GACJ1I,EAAAC,EAAAC,cAACogC,GAAD,CAAQ9F,WAAY78B,KAAKH,MAAMg9B,aAC/Bx6B,EAAAC,EAAAC,cAACqgC,GAAD,CACRz9B,UAAWnF,KAAKH,MAAMsF,UACtBuoB,QAAS1tB,KAAKH,MAAM6tB,QACpBmP,WAAY78B,KAAKH,MAAMg9B,WACvBrnB,UAAWxV,KAAKH,MAAMgjC,mBACtBnB,cAAe1hC,KAAKH,MAAM6hC,cAC1BjB,UAAWzgC,KAAKH,MAAM4gC,UACtBjnC,eAAgBwG,KAAKH,MAAMrG,eAC3B2M,YAAanG,KAAKH,MAAMsG,YACxBg2B,eAAgBn8B,KAAKH,MAAMs8B,eAC3BwE,qBAAsB3gC,KAAKH,MAAM8gC,gCA9Id59B,aCHnB+/B,eAgBL,SAAAA,EAAYjjC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA8iC,IAClBhjC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAmnC,GAAA3iC,KAAAH,KAAMH,KAiDP08B,UAAY,SAACzjC,EAAMiqC,GAClB,IAAI3f,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMgjB,YAC5BgB,EAAUzoB,OAAAC,EAAA,EAAAD,CAAA,GACV7C,EADU,CAEbkqC,QAAS5f,EAAW4f,UAIrBljC,EAAK4B,SAAS,CACb0hB,WAAYgB,GACV,WACFA,EAAW/M,OAAU,CAACnR,IAAK,UAAW5K,MAAO8kB,KAAK6iB,UAAUF,IAC5DjjC,EAAKD,MAAM08B,UAAUnY,MA9DJtkB,EAkEnBoiC,SAAW,SAACxE,GACX,IAAIta,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMgjB,YAChCA,EAAW4f,QAAUtF,EACrB59B,EAAK4B,SAAS,CACb0hB,WAAWznB,OAAAC,EAAA,EAAAD,CAAA,GAAKynB,IACd,WACFtjB,EAAKD,MAAMqiC,SAAS9e,MAxEHtjB,EA6EnB4hC,cAAgB,WACf,IAAIte,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMgjB,mBACzBA,EAAW4f,QAClB5f,EAAW/L,OAAUvX,EAAKD,MAAMujB,WAAW8f,QAC3C9f,EAAWkF,KAAS,EACpBlF,EAAW+N,SAAY,iBACvB/N,EAAW9mB,OAAU,OAErBwD,EAAKD,MAAM6hC,cAActe,IArFPtjB,EAwFnB6gC,qBAAuB,SAACwC,GACvB,IAAI/f,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMgjB,mBACzBA,EAAW4f,QAClB5f,EAAW/L,OAAUvX,EAAKD,MAAMujB,WAAW8f,QAE3C,IAAIpqC,EAAI6C,OAAAC,EAAA,EAAAD,CAAA,GACJynB,EACA+f,GAIJrjC,EAAKD,MAAM6hC,cAAc5oC,IAnGPgH,EAsGnBq8B,eAAiB,SAACyE,GACjB,IAAIxd,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAOmE,EAAKM,MAAMgjB,mBACzBA,EAAW4f,QAClB5f,EAAW/L,OAAUvX,EAAKD,MAAMujB,WAAW8f,QAE3C,IAAIpqC,EAAQ,CACXsrB,WAAWzoB,OAAAC,EAAA,EAAAD,CAAA,GACPynB,EACAwd,GAEJwC,mBAAqBtjC,EAAKD,MAAMujC,mBAChCnqB,MAAQnZ,EAAKD,MAAM4gC,UAAUxnB,OAG9BnZ,EAAKD,MAAMs8B,eAAerjC,IAjH1BgH,EAAKM,MAAQ,CACZrH,KAAK,UAILqqB,WAAY,CAAC4f,QAAS,QACftV,QAAUrxB,OAASC,OAAO,cACjC6I,UAAY9I,OAASsxB,SAAS,EAAG,UAAUrxB,OAAO,eAVjCwD,yFAyBOD,gDAkBzBG,KAAKH,MAAMhH,gDA4EH,IAAA8uB,EACuB3nB,KAAKI,MAA5B+E,EADAwiB,EACAxiB,UAAWuoB,EADX/F,EACW+F,QACf5P,EAAW9d,KAAKH,MAAMie,UAAY,GAClCwG,EAAetkB,KAAKH,MAAMqF,WAAa,GAEvC8b,EAAQsD,EAAatD,OAAS,GAC9BrH,EAAS2K,EAAa3K,QAAU,GAChCD,EAAW4K,EAAa5K,UAAY,GACpCxU,EAAYof,EAAapf,WAAa,GACtCke,EAAapjB,KAAKH,MAAMujB,WAAW8f,SAAW,GAElD,OACEljC,KAAKH,MAAMilB,eACR9kB,KAAKH,MAAMwjC,YAAwC,SAA1BrjC,KAAKH,MAAMwjC,WACvChhC,EAAAC,EAAAC,cAAA,QAAME,UAAS,yBAAA1D,OAAyC,UAAb+e,EAAwB,WAAa,KAE3EsF,EACH/gB,EAAAC,EAAAC,cAAC+gC,GAAD,CAECtiB,MAAOA,EACPrH,OAAQA,EACRD,SAAUA,EACVxU,UAAWA,EACXq3B,UAAWv8B,KAAKu8B,UAChB/Y,iBAAkBxjB,KAAKwjB,iBACvB1F,SAAU9d,KAAKH,MAAMie,SACrBsF,WAAYA,IACR,KAGFpjB,KAAKH,MAAM2V,UAiBdnT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAhBAJ,EAAAC,EAAAC,cAACghC,GAAD,CACCp+B,UAAWA,EACXuoB,QAASA,EACTmP,WAAY78B,KAAKH,MAAMg9B,WACvBqF,SAAUliC,KAAKkiC,SACfxE,OAAQ19B,KAAKI,MAAMgjB,WAAW4f,QAC9BT,eAAgBviC,KAAKH,MAAM0iC,eAC3BM,mBAAoB7iC,KAAKH,MAAMgjC,mBAC/BnB,cAAe1hC,KAAK0hC,cACpBjB,UAAWzgC,KAAKH,MAAM4gC,UACtBjnC,eAAgBwG,KAAKH,MAAMrG,eAC3B2M,YAAanG,KAAKH,MAAMsG,YACxBg2B,eAAgBn8B,KAAKm8B,eACrBwE,qBAAsB3gC,KAAK2gC,wBAKpBt+B,EAAAC,EAAAC,cAAA,QAAME,UAAS,iCAAmCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAf,kBAC3DJ,EAAAC,EAAAC,cAAA,QAAME,UAAS,yBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,uBA1L0BhC,IAAMsC,WAA9B+/B,GASEre,aAAe,CACrBjP,WAAW,EACX+mB,UAAW,aACX1jC,aAAc,aACdwM,aAAc,cAmLD2e,mBAAW8e,IC9FXpe,eA9BY,SAAAhgB,GAAsD,IAApDkgB,EAAoDlgB,EAApDkgB,iBAAkB4e,EAAkC9+B,EAAlC8+B,cAAe3e,EAAmBngB,EAAnBmgB,cAG7D,MAAQ,CACN/G,SAAU+G,EAAc/G,SACzBtI,UAAWguB,EAAchuB,UACzB+sB,eAAgBiB,EAAcjB,eAC9B1F,WAAY2G,EAAc3G,WAC1B33B,UAAW0f,EAAiB1f,UAC5BG,aAAcwf,EAAcxf,aAC5Bg+B,WAAYxe,EAAcwe,WAC1BR,mBAAoBW,EAAcX,mBAClCpC,UAAW+C,EAAc/C,UACzB2C,mBAAoBI,EAAcJ,mBAClChgB,WAAYyB,EAAczB,WAC1B0B,eAAgBD,EAAcC,eAC9B3e,YAAgBye,EAAiBze,cAIR,SAAA4e,GAAQ,MAAK,CACvCwX,UAAW,SAACzjC,GAAD,OAAUisB,EVtFG,SAACjsB,GAAD,MAAW,CAClCC,KAAM4iC,GACN7iC,QUoF6BksB,CAAkBlsB,KAChDopC,SAAU,SAACppC,GAAD,OAAUisB,EVxEG,SAACjsB,GAAD,MAAW,CACjCC,KAAM6iC,GACN9iC,QUsE4BksB,CAAiBlsB,KAC9CD,aAAc,SAACC,GAAD,OAAUisB,EAASoO,EAA8Br6B,KAE/D4oC,cAAe,SAAC5oC,GAAD,OAAUisB,EV5DG,SAACjsB,GAAD,MAAW,CACtCC,KAAM8iC,GACN/iC,QU0DiCksB,CAAsBlsB,KACxDqjC,eAAgB,SAACrjC,GAAD,OAAUisB,EAASC,GAAuBlsB,KAC1DU,eAAsB,SAACV,GAAD,OAAUisB,EAASoO,EAAgCr6B,OAG3D4rB,CAA8CV,YAnG5C,SAAA/f,GAqBX,IApBL6Z,EAoBK7Z,EApBL6Z,SACAtI,EAmBKvR,EAnBLuR,UACA+sB,EAkBKt+B,EAlBLs+B,eACAr9B,EAiBKjB,EAjBLiB,UACAq3B,EAgBKt4B,EAhBLs4B,UACA2F,EAeKj+B,EAfLi+B,SACArF,EAcK54B,EAdL44B,WACAx3B,EAaKpB,EAbLoB,aACAxM,EAYKoL,EAZLpL,aACAwqC,EAWKp/B,EAXLo/B,WACAR,EAUK5+B,EAVL4+B,mBACAnB,EASKz9B,EATLy9B,cACAjB,EAQKx8B,EARLw8B,UACA2C,EAOKn/B,EAPLm/B,mBACAjH,EAMKl4B,EANLk4B,eAEA/Y,EAIKnf,EAJLmf,WACA0B,EAGK7gB,EAHL6gB,eACA3e,EAEKlC,EAFLkC,YACA3M,EACKyK,EADLzK,eAEA,OACC6I,EAAAC,EAAAC,cAACkhC,GAAD,CACCjuB,UAAWA,EACX+sB,eAAgBA,EAChBzkB,SAAUA,EACVye,UAAWA,EACX2F,SAAUA,EACVrpC,aAAcA,EACdgkC,WAAYA,EACZ33B,UAAWA,EACXG,aAAcA,EACdg+B,WAAYA,EACZR,mBAAoBA,EACpBnB,cAAeA,EACfjB,UAAWA,EACX2C,mBAAoBA,EACpBjH,eAAgBA,EAEhB/Y,WAAYA,EACZ0B,eAAgBA,EAChB3e,YAAaA,EACb3M,eAAgBA,OChDbkqC,oLAEJ,OACCrhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAACohC,GAAD,cAJkB5gC,aAUPihB,eAAW0f,ICbbE,GAA2C,WCU3CC,GAAqB,SAAC/qC,GAAD,MAAW,CAC3CC,KDVsD,mBCWtDD,SAGWgrC,GAAmB,SAAChrC,GAAD,MAAW,CACzCC,KDdsD,iBCetDD,kBCZIirC,eAmBH,SAAAA,EAAYlkC,GAAM,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA+jC,IACfjkC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAooC,GAAA5jC,KAAAH,KAAMH,KA4CTw2B,aAAe,SAACp4B,GACbA,EAAE4J,iBAGF,IAIM/O,EAAkB,CACG8jB,MALH9c,EAAK8c,MAAMthB,MAMRk7B,SALH12B,EAAK02B,SAASl7B,MAMX0oC,SALAlkC,EAAKM,MAAM4jC,UAQrC3mB,EAAWvd,EAAKud,SAASvkB,GACxBC,EAAOkF,EAAElF,KAEVskB,EAAS/Z,OAAOkzB,UAAanZ,EAAS/Z,OAAOsZ,OAAiB,UAAR7jB,GAC1D+G,EAAKD,MAAMokC,QAAQnrC,IA/DDgH,EAsElBud,SAAW,SAACvkB,GACb,IAAIoK,EAAWpK,GAAQ,GACnBwK,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM41B,cACzBvtB,GAAW,EA8Bf,OA7BMvF,EAASszB,SAIHtzB,EAASszB,SAASl5B,OAAO,GAAK4F,EAASszB,SAASl5B,OAAO,GAC5DgG,EAAOkzB,UAAY,EACzB/tB,GAAa,IAGPnF,EAAOkzB,UAAY,EACzB/tB,GAAa,IATbnF,EAAOkzB,UAAY,EACnB/tB,GAAa,GAURvF,EAAS0Z,OAIF9c,EAAKokC,cAAchhC,EAAS0Z,QAKlCtZ,EAAOsZ,OAAO,EACpBnU,GAAa,IATbnF,EAAOsZ,OAAO,EACdnU,GAAa,GAYV3I,EAAK4B,SAAS,CACXs0B,aAAc1yB,IAEd,CAACmF,QAASA,EAASnF,OAAQA,IAvGfxD,EA2GlBokC,cAAe,SAACtnB,GAEb,MADW,0JACDpf,KAAK2mC,OAAOvnB,KA1GtB9c,EAAKM,MAAmB,CACrBgkC,IAAoB,GACpBJ,UAAU,EACVK,SAAU,WACVrO,aAAa,CACVQ,UAAW,EACX5Z,OAAQ,IAId9c,EAAKwkC,UAAsBxkC,EAAKwkC,UAAU1jC,KAAfjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKykC,eAAkBzkC,EAAKykC,eAAe3jC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAdRA,oFAqBf,IAAI4xB,EAEJA,EADoB/K,GAAU,sBAAwB,IACjB,GAEjCvkB,kBAAQsvB,KACT1hB,OAAO3H,SAASm8B,KAAK,gDAIjBvmC,GACUA,EAAE2K,OACnB5I,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GACKsC,EAAE2K,OAAOD,MAAQ3I,KAAKI,MAAMnC,EAAE2K,OAAOD,iDAO1C3I,KAAK0B,SAAS,CACX2iC,SAAkC,aAAxBrkC,KAAKI,MAAMikC,SAA0B,OAAS,+DAuEpCxkC,GAElBA,EAAM4kC,YACRz0B,OAAO3H,SAASm8B,KAAK,+CAInB,IAAA3iC,EAAA7B,KACDsD,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQqE,KAAKI,MAAM41B,cAE7B,OACG3zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAKq2B,cAClBh0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,SAAOE,UAAS,iBAAA1D,OAAsBuE,EAAOsZ,MAAS,SAAW,IAAM7jB,KAAK,OAAOyJ,IAAK,SAAC4G,GAAD,OAAWvH,EAAK+a,MAAQxT,GAAOkC,SAAU,SAACrN,GAAD,OAAK4D,EAAKw0B,aAAap4B,EAAE,SAASqO,YAAY,mBAElLjK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAYJ,EAAAC,EAAAC,cAAA,SAAOE,UAAS,gBAAA1D,OAAqBuE,EAAOkzB,SAAY,SAAW,IAAKz9B,KAAMiH,KAAKI,MAAMikC,SAAU7hC,IAAK,SAAC4G,GAAD,OAAWvH,EAAK20B,SAAWptB,GAAOkC,SAAU,SAACrN,GAAD,OAAK4D,EAAKw0B,aAAap4B,EAAE,SAASqO,YAAY,aAC9NjK,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAM/hC,QAAS3C,KAAKukC,eAAgB9hC,UAAmC,SAAxBzC,KAAKI,MAAMikC,SAAsB,WAAW,IAAIhiC,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,kBAAkBkU,IAAI,eAEjIphB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBAAeJ,EAAAC,EAAAC,cAAA,SAAOxJ,KAAK,WAAWsC,GAAG,WAAWsN,KAAK,WAAWlG,UAAU,QAAQib,QAAS1d,KAAKI,MAAM4jC,SAAU14B,SAAU,SAACrN,GAAD,OAAK4D,EAAKyiC,UAAUrmC,MAAlK,IAAwKoE,EAAAC,EAAAC,cAAA,SAAO4I,QAAQ,YAAf,gBAD3K,IACgO9I,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMjiC,UAAU,oBAAoBwc,GAAG,oBAAvC,0BAEhO5c,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOsK,WAAY/M,KAAKH,MAAMyF,cAAkBtF,KAAKH,MAAMyF,aAAgB,iBAAmB,YAG7GtF,KAAKH,MAAM4I,QACdpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAAgD,0CAAjCiB,KAAKH,MAAM8kC,UAAUplC,QAAuD,GAAK,UAA9G,+DAIA8C,EAAAC,EAAAC,cAAA,OAAKE,UAAS,YAAA1D,OAAgD,8CAAjCiB,KAAKH,MAAM8kC,UAAUplC,QAA2D,GAAK,UAAlH,gEAKM,OAIlB8C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,uBAjL7B1gB,aAAlBghC,GAUEtf,aAAe,CACrBmgB,YAAwB,EACxBt/B,cAAwB,EACxBmD,SAAwB,EACxBg8B,WAAwB,EACxB7pC,OAAwB,GACxBqpC,QAAwB,cAuKXjgB,mBAAW+f,IC/IXrf,eAba,SAAAhgB,GAAoB,IAAlBmgC,EAAkBngC,EAAlBmgC,aAC3B,MAAQ,CACLv/B,aAAcu/B,EAAav/B,aAC3BmD,QAASo8B,EAAap8B,QACtBg8B,UAAWI,EAAaJ,UACxBE,UAAWE,EAAaF,YAKH,SAAA5f,GAAQ,MAAK,CACtCkf,QAAS,SAACnrC,GAAD,OAAUisB,EFtCE,SAACjsB,GAAD,MAAW,CAChCC,KAAM6qC,GACN9qC,QEoC4BksB,CAAgBlsB,OAE/B4rB,CAA6CV,YAvC9C,SAAA/f,GAMN,IALcqB,EAKdrB,EALcqB,aACAmD,EAIdxE,EAJcwE,QACAg8B,EAGdxgC,EAHcwgC,UACAR,EAEdhgC,EAFcggC,QACAU,EACd1gC,EADc0gC,UAElB,OACEtiC,EAAAC,EAAAC,cAACuiC,GAAD,CACEx/B,aAAcA,EACdmD,QAASA,EACTg8B,UAAWA,EACXR,QAASA,EACTU,UAAWA,OChBbI,oLAEF,OACE1iC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACyiC,GAAD,cAJYjiC,aAULihB,eAAW+gB,ICbbE,GAAkD,kBCkBlDC,GAA8B,SAACpsC,GAAD,MAAW,CACpDC,KDlB6D,0BCmB7DD,SAGWqsC,GAA4B,SAACrsC,GAAD,MAAW,CAClDC,KDtB6D,wBCuB7DD,SCrBIssC,eAkBH,SAAAA,EAAYvlC,GAAM,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAolC,IACftlC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAypC,GAAAjlC,KAAAH,KAAMH,KAWTw2B,aAAe,SAACp4B,GACbA,EAAE4J,iBACF,IACM/O,EAAkB,CACG8jB,MAFH9c,EAAK8c,MAAMthB,OAKtBwE,EAAKud,SAASvkB,GACjBwK,OAAOsZ,OAAiB,UAAR3e,EAAElF,MAC5B+G,EAAKD,MAAMwlC,eAAevsC,IArBXgH,EAyBlBud,SAAW,SAACvkB,GACb,IAAIoK,EAAWpK,GAAQ,GACnBwK,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM41B,cACzBvtB,GAAW,EAmBf,OAjBMvF,EAAS0Z,OAIF9c,EAAKokC,cAAchhC,EAAS0Z,QAKlCtZ,EAAOsZ,OAAO,EACpBnU,GAAa,IATbnF,EAAOsZ,OAAO,EACdnU,GAAa,GAWVvK,QAAQC,IAAI,SAASmF,GACrBxD,EAAK4B,SAAS,CACXs0B,aAAc1yB,IAEd,CAACmF,QAASA,EAASnF,OAAQA,IA/CfxD,EAkDlBokC,cAAe,SAACtnB,GAEb,MADW,0JACDpf,KAAK2mC,OAAOvnB,KAlDtB9c,EAAKM,MAAmB,CACrBgkC,IAAoB,GACpBpO,aAAa,CACVpZ,OAAQ,GAEX6nB,UAAU,MAEb3kC,EAAKu2B,aAAyBv2B,EAAKu2B,aAAaz1B,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KATfA,mFAuDdE,KAAKH,MAAMylC,wEAGUzlC,GACnB3B,QAAQC,IAAI,SAAS0B,oCAGnB,IAAAgC,EAAA7B,KACDsD,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQqE,KAAKI,MAAM41B,cAC7B,OACG3zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAEZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAEFzC,KAAKH,MAAM4kC,UAcfpiC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAAA,WAA7B,wCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMjiC,UAAU,OAAOwc,GAAG,UAA1B,mBAjBN5c,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,8CAAqCF,EAAAC,EAAAC,cAAA,WAArC,sBACAF,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAKq2B,cAClBh0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,SAAOE,UAAS,iBAAA1D,OAAsBuE,EAAOsZ,MAAS,SAAW,IAAM7jB,KAAK,OAAOyJ,IAAK,SAAC4G,GAAD,OAAWvH,EAAK+a,MAAQxT,GAAOkC,SAAU,SAACrN,GAAD,OAAK4D,EAAKw0B,aAAap4B,IAAKqO,YAAY,kBACvKtM,KAAKH,MAAM4I,QAAWpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAezC,KAAKH,MAAM0lC,mBAAmBhmC,SAAgB,IAEvG8C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOsK,WAAY/M,KAAKH,MAAMyF,gBAAmBhC,EAAOsZ,OAAY5c,KAAKH,MAAMyF,aAAgB,iBAAmB,2BActJjD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACZJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,qBAAqBkU,IAAI,uBAhHhB1gB,aAA3BqiC,GASE3gB,aAAe,CACrBmgB,YAAwB,EACxBt/B,cAAwB,EACxBmD,SAAwB,EACxBg8B,WAAwB,EACxB7pC,OAAwB,GACxByqC,eAAwB,cAuGXrhB,mBAAWohB,ICzEX1gB,eAda,SAAAhgB,GAA6B,IAA3B8gC,EAA2B9gC,EAA3B8gC,sBAC3B,MAAQ,CACLlgC,aAAckgC,EAAsBlgC,aACpCmD,QAAS+8B,EAAsB/8B,QAC/Bg8B,UAAWe,EAAsBf,UACjCc,mBAAoBC,EAAsBD,qBAKrB,SAAAxgB,GAAQ,MAAK,CACtCsgB,eAAgB,SAACvsC,GAAD,OAAUisB,EFxCE,SAACjsB,GAAD,MAAW,CACvCC,KAAMksC,GACNnsC,QEsCmCksB,CAAuBlsB,KAC1DwsC,oBAAqB,kBAAMvgB,EFnCa,CAE1ChsB,KDX6D,6BG8C9C2rB,CAA6CV,YA3CrC,SAAA/f,GAOf,IANcqB,EAMdrB,EANcqB,aACAmD,EAKdxE,EALcwE,QACAg8B,EAIdxgC,EAJcwgC,UACAY,EAGdphC,EAHcohC,eACAE,EAEdthC,EAFcshC,mBACAD,EACdrhC,EADcqhC,oBAElB,OACEjjC,EAAAC,EAAAC,cAACkjC,GAAD,CACEngC,aAAcA,EACdmD,QAASA,EACTg8B,UAAWA,EACXY,eAAgBA,EAChBE,mBAAoBA,EACpBD,oBAAsBA,OClBxBI,oLAEF,OACErjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACojC,GAAD,cAJqB5iC,aAUdihB,eAAW0hB,ICbbE,GAAiD,iBCWjDC,GAA6B,SAAC/sC,GAAD,MAAW,CACnDC,KDX4D,yBCY5DD,SAGWgtC,GAA2B,SAAChtC,GAAD,MAAW,CACjDC,KDf4D,uBCgB5DD,SCdIitC,eAkBH,SAAAA,EAAYlmC,GAAM,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA+lC,IACfjmC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAoqC,GAAA5lC,KAAAH,KAAMH,KAqBTw2B,aAAe,SAACp4B,GAGb,GAFAA,EAAE4J,iBAEC/H,EAAK02B,SAASl7B,OAASwE,EAAKkmC,gBAAgB1qC,OAAiB,UAAR2C,EAAElF,KAA1D,CAMA,IAAMy9B,EAAqB12B,EAAK02B,SAASl7B,MACnC0qC,EAA4BlmC,EAAKkmC,gBAAgB1qC,MAEjDxC,EAAkB,CACE09B,WACAtwB,IAHGpG,EAAKM,MAAM8F,KAKhCpG,EAAKud,SAAS,CAACmZ,WAASwP,oBAAkB1iC,OAAOkzB,UAAa12B,EAAKud,SAAS,CAACmZ,WAASwP,oBAAkB1iC,OAAO2iC,aAAuB,UAARhoC,EAAElF,MACxI+G,EAAKD,MAAMqmC,cAAcptC,QAZnBgH,EAAKD,MAAMsmC,oBA3BFrmC,EA0ClBud,SAAW,SAACvkB,GACb,IAAIoK,EAAWpK,GAAQ,GACnBwK,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQmE,EAAKM,MAAM41B,cACzBvtB,GAAW,EAyBf,OAxBMvF,EAASszB,UAMRlzB,EAAOkzB,UAAY,EACzB/tB,GAAa,IANbnF,EAAOkzB,UAAY,EACnB/tB,GAAa,GAQRvF,EAAS8iC,iBAMR1iC,EAAO2iC,aAAa,EAC1Bx9B,GAAa,IANbnF,EAAO2iC,aAAa,EACpBx9B,GAAa,GAQVvK,QAAQC,IAAI,SAASmF,GACrBxD,EAAK4B,SAAS,CACXs0B,aAAc1yB,IAEd,CAACmF,QAASA,EAASnF,OAAQA,IApE9BxD,EAAKM,MAAmB,CACrBgkC,IAAoB,GACpBl+B,IAAiB,GACjB/I,OAAkB,EAClB64B,aAAa,CACVQ,UAAW,EACXyP,aAAc,IAGpBnmC,EAAKu2B,aAAyBv2B,EAAKu2B,aAAaz1B,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAXfA,mFAef5B,QAAQC,IAAI6B,KAAKH,OAClBG,KAAK0B,SAAS,CACbwE,IAAK8J,OAAO3H,SAASm8B,KAAKz8B,MAAM,KAAK+mB,OAAO,GAAG,uDAwDvBjvB,GACxB3B,QAAQC,IAAI,SAAS0B,oCAGhB,IAAAgC,EAAA7B,KACDsD,EAAM3H,OAAAC,EAAA,EAAAD,CAAA,GAAQqE,KAAKI,MAAM41B,cAC7B,OACG3zB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAEFzC,KAAKH,MAAM4kC,UA4BfpiC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMjiC,UAAU,OAAOwc,GAAG,UAA1B,mBA9BN5c,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,QAAMqI,SAAU5K,KAAKq2B,cAClBh0B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,SAAOE,UAAS,gBAAA1D,OAAqBuE,EAAOkzB,SAAY,SAAW,IAAKz9B,KAAK,WAAWyJ,IAAK,SAAC4G,GAAD,OAAWvH,EAAK20B,SAAWptB,GAAOkC,SAAU,SAACrN,GAAD,OAAK4D,EAAKw0B,aAAap4B,IAAIqO,YAAY,kBAEnLjK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,SAAOE,UAAS,gBAAA1D,OAAqBuE,EAAO2iC,YAAe,SAAW,IAAMltC,KAAK,WAAWyJ,IAAK,SAAC4G,GAAD,OAAWvH,EAAKmkC,gBAAkB58B,GAAOkC,SAAU,SAACrN,GAAD,OAAK4D,EAAKw0B,aAAap4B,IAAIqO,YAAY,sBAE9LjK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAAOsK,WAAY/M,KAAKH,MAAMyF,cAAkBtF,KAAKH,MAAMyF,aAAgB,iBAAmB,sBAElHtF,KAAKH,MAAM4I,QAAWpG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEjCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAChBzC,KAAKH,MAAMumC,aAMF,MAa5B/jC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACZJ,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,qBAAqBkU,IAAI,uBA1IlB1gB,aAAzBgjC,GASEthB,aAAe,CACrBmgB,YAAwB,EACxBt/B,cAAwB,EACxBmD,SAAwB,EACxBg8B,WAAwB,EACxB7pC,OAAwB,GACxByqC,eAAwB,cAiIXrhB,mBAAW+hB,IC9FXrhB,eAhBa,SAAAhgB,GAA4B,IAA1B2hC,EAA0B3hC,EAA1B2hC,qBAE3B,OADAnoC,QAAQC,IAAIkoC,GACJ,CACL/gC,aAAc+gC,EAAqB/gC,aACnCmD,QAAS49B,EAAqB59B,QAC9Bg8B,UAAW4B,EAAqB5B,UAChCc,mBAAoBc,EAAqBC,kBACzCF,WAAYC,EAAqBD,aAKZ,SAAArhB,GAAQ,MAAK,CACtCmhB,cAAe,SAACptC,GAAD,OAAUisB,EF7CE,SAACjsB,GAAD,MAAW,CACtCC,KAAM6sC,GACN9sC,QE2CkCksB,CAAsBlsB,KACxDqtC,iBAAkB,kBAAOphB,EFhCgB,CACzChsB,KDlB+D,0BCmB/DD,SAF8B,IAACA,KEkClB4rB,CAA6CV,YAhDtC,SAAA/f,GAQd,IAPcqB,EAOdrB,EAPcqB,aACAmD,EAMdxE,EANcwE,QACAg8B,EAKdxgC,EALcwgC,UACAyB,EAIdjiC,EAJciiC,cACAC,EAGdliC,EAHckiC,iBACAG,EAEdriC,EAFcqiC,kBACAF,EACdniC,EADcmiC,WAElB,OACE/jC,EAAAC,EAAAC,cAACgkC,GAAD,CACEjhC,aAAcA,EACdmD,QAASA,EACTg8B,UAAWA,EACXyB,cAAeA,EACfC,iBAAoBA,EACpBG,kBAAmBA,EACnBF,WAAcA,OCLPpiB,IAfcjhB,YAedihB,YAAWwiB,KCbpBC,+LAEF,IAAI/U,EAEJA,EADoB/K,GAAU,sBAAwB,IACjB,GACjCvkB,kBAAQsvB,GAGR1hB,OAAO3H,SAASm8B,KAAK,SAFvBx0B,OAAO3H,SAASm8B,KAAK,8CAevB,OACEniC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAf,sBAtBaM,aA6BJihB,eAAWyiB,eCxBpBC,eAyBH,SAAAA,EAAY7mC,GAAM,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA0mC,IACf5mC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+qC,GAAAvmC,KAAAH,KAAMH,KACDO,MAAmB,CACrBmc,SAAkBzc,EAAKD,MAAM0c,SAC7BoqB,aAAc,GAJF7mC,oFAUf,IAAI4oB,EAAoB1oB,KAAKH,MAAM6oB,aAAe,GAC9CnM,EAAoBvc,KAAKI,MAAMmc,UAAY,GAE3Cna,kBAAQma,KACTlb,SAASg5B,MAAT,GAAAt7B,OAAwBwd,EAASC,SAAjC,eAECpa,kBAAQma,IAA8B,qBAAhBmM,GAAsD,WAAhBA,GAC7D1oB,KAAKH,MAAM+mC,aAAa,CAACC,MAAOtqB,EAASsqB,QAEzB,MAAhBne,GAAuC,qBAAhBA,GAAsD,WAAhBA,IAC7D1oB,KAAKH,MAAM6yB,cACX1yB,KAAK0B,SAAS,CACXilC,aAAY,uDAwBK9mC,KAElBuC,kBAAQvC,EAAMinC,oBAAuD,IAAlCjnC,EAAMinC,iBAAiBzoC,QAAuBwB,EAAMknC,uBACzFzmB,aAAa0mB,WAAW,QACxB1mB,aAAa0mB,WAAW,UAExBC,KACAvgB,GAAa,qBACb1W,OAAO3H,SAASm8B,KAAK,2CAMHxkC,KAAKI,MAAMmc,SAAhC,IACImM,EAAiB1oB,KAAKH,MAAM6oB,aAAe,GAC3CpM,EAAiB,GAYrB,MAXmB,MAAhBoM,GAAuC,qBAAhBA,GAAsD,WAAhBA,IAClC,UAAxB1oB,KAAKH,MAAMie,WACXxB,EAAkB,cACM,YAAxBtc,KAAKH,MAAMie,WACXxB,EAAkB,gBACM,aAAxBtc,KAAKH,MAAMie,WACXxB,EAAkB,kBAMrBja,EAAAC,EAAAC,cAAA,UAAQE,UAAWzC,KAAKI,MAAMumC,YAAY,GAAG,aAC1CtkC,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAAWC,OAAK,EAAC1kC,UAAU,OACxBJ,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACX1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKo8B,GAAG,IAAIn8B,GAAG,IAAIC,GAAG,IAAIzI,UAAU,oBAE9BzC,KAAKI,MAAMumC,YACR3mC,KAAKH,MAAMwnC,MAAUrnC,KAAKH,MAAMwnC,KAAKC,MACxCjlC,EAAAC,EAAAC,cAAA,OAAKgN,IAAG,GAAAxQ,OAAKiB,KAAKH,MAAMwnC,KAAKh5B,MAArBtP,OAA4BiB,KAAKH,MAAMwnC,KAAKC,OAAU7kC,UAAU,YAAYghB,IAAI,SACvFphB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,qBAAqB9M,UAAU,aAAaghB,IAAI,SAC3DphB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,uBAAuB9M,UAAU,aAAaghB,IAAI,UAIhEphB,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKo8B,GAAG,IAAIn8B,GAAG,IAAIC,GAAG,IAAIzI,UAAU,sBAChC6Z,aAlHQvZ,aAAxB2jC,GAaEjiB,aAAe,CACrBmgB,YAAwB,EACxBt/B,cAAwB,EACxBmD,SAAwB,EACxBg8B,WAAwB,EACpBp/B,aAAwB,GACxByY,SAAwB,GACxBgpB,iBAAwB,GACxBvqB,SAAwB,GAC5BmW,YAAwB,cAoGX1O,mBAAW0iB,IC3DXhiB,eApBa,SAAAhgB,EAAkBigB,GAAa,IAA7BE,EAA6BngB,EAA7BmgB,cAC3B,MAAQ,CACLvf,aAAcuf,EAAcvf,aAC5BmD,QAASoc,EAAcpc,QACvBg8B,UAAW5f,EAAc4f,UACzBsC,oBAAqBliB,EAAckiB,oBACnC1hC,aAAcwf,EAAcxf,aAC5BgiC,KAAMxiB,EAAcwiB,KACpBvpB,SAAU+G,EAAc/G,SACxBgpB,iBAAkBjiB,EAAciiB,iBAChCvqB,SAAUoI,EAASpI,SACnBmM,YAAa/D,EAAS+D,cAKD,SAAA3D,GAAQ,MAAK,CACtC2N,YAAa,SAAC55B,GAAD,OAAUisB,EAASC,GAAoBlsB,KACpD8tC,aAAc,SAAC9tC,GAAD,OAAUisB,E/C/CE,SAACjsB,GAAD,MAAW,CACrCC,KAAM05B,GACN35B,Q+C6CiCksB,CAAqBlsB,OAEzC4rB,CAA6CV,YAnE7C,SAAA/f,GAaP,IAZcqB,EAYdrB,EAZcqB,aACAmD,EAWdxE,EAXcwE,QACAg8B,EAUdxgC,EAVcwgC,UACAsC,EASd9iC,EATc8iC,oBACArU,EAQdzuB,EARcyuB,YACArtB,EAOdpB,EAPcoB,aACAyY,EAMd7Z,EANc6Z,SACA8oB,EAKd3iC,EALc2iC,aACAE,EAId7iC,EAJc6iC,iBACAvqB,EAGdtY,EAHcsY,SACAmM,EAEdzkB,EAFcykB,YACA2e,EACdpjC,EADcojC,KAElB,OACEhlC,EAAAC,EAAAC,cAACglC,GAAD,CACEjiC,aAAcA,EACdmD,QAASA,EACTg8B,UAAWA,EACXsC,oBAAqBA,EACrBrU,YAAaA,EACbrtB,aAAcA,EACdyY,SAAUA,EACV8oB,aAAcA,EACdE,iBAAkBA,EAClBvqB,SAAUA,EACVmM,YAAaA,EACb2e,KAAMA,OCpBC38B,eATX,SAAAA,EAAY7K,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA0K,GAAA/O,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+O,GAAAvK,KAAAH,KACVH,0EAGN,OACIwC,EAAAC,EAAAC,cAACilC,GAAD,CAAiBjrB,SAAUvc,KAAKH,MAAM6xB,KAAMhJ,YAAa1oB,KAAKH,MAAM6oB,qBAN3D3lB,aC6CN0kC,eA5Cb,SAAAA,EAAY5nC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAynC,IACb3nC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA8rC,GAAAtnC,KAAAH,KAAMH,KACDO,MAAQ,CAClBsnC,gBAAgB,GAHE5nC,kFAOnBE,KAAK0B,SAAS,CAAEgmC,gBAAgB,sDAEP7nC,GACnBG,KAAK0B,SAAS,CAAEgmC,eAAgB7nC,EAAM6nC,kDAGpC,IAAA7lC,EAAA7B,KACA0nC,EAAmB1nC,KAAKI,MAAxBsnC,eACEvhC,EAAcnG,KAAKH,MAAMsG,aAAe,GAIlD,OAFMjI,QAAQC,IAAI,cAAegI,GAGhC9D,EAAAC,EAAAC,cAACgI,GAAA,EAAD,CAAOC,KAAK,KAAK/H,UAAU,aAAasC,KAAM2iC,EAAgBj9B,OAAQzK,KAAKH,MAAMkoB,kBACvE1lB,EAAAC,EAAAC,cAACgI,GAAA,EAAMM,KAAP,KACOxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAKC,WAAS,GACV1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKzI,UAAU,IAC3BJ,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,iIACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAAsBkU,IAAI,QAAvC,0CACAphB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,4BAA4BkU,IAAI,QAA7C,+DACAphB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,6BAA6BkU,IAAI,QAA9C,mEAKhBphB,EAAAC,EAAAC,cAACgI,GAAA,EAAMsC,OAAP,KACIxK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAQ/T,KAAK,SAAS0J,UAAU,OAAOuK,QAAQ,UAAUrK,QAAS,SAAC1E,GAAD,OAAQ4D,EAAKkmB,qBAA/E,kBApCKhlB,aCInB4kC,eACF,SAAAA,EAAY9nC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2nC,IACf7nC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgsC,GAAAxnC,KAAAH,KAAMH,KAOVkoB,iBAAmB,WACdjoB,EAAK4B,SAAS,CAAEgmC,gBAAgB,KATlB5nC,EAYlBusB,gBAAkB,WACfvsB,EAAK4B,SAAS,CAAEgmC,gBAAgB,KAXhC5nC,EAAKM,MAAuB,CACxBmc,SAAU,GACVmrB,gBAAgB,GAJL5nC,8EAgBJyH,GACGlG,SAASumC,cAAc,iBAC7BC,UAAUC,OAAO,yDAGjB93B,OAAO+3B,WACV,MACa1mC,SAASumC,cAAc,iBAC7BC,UAAUG,IAAI,oDAI1B1nB,aAAa0mB,WAAW,QACxB1mB,aAAa0mB,WAAW,UACxBtgB,GAAa,qBACbugB,KACAj3B,OAAO3H,SAASm8B,KAAY,0CAGvB,IAAA3iC,EAAA7B,KACG0nC,EAAkB1nC,KAAKI,MAAvBsnC,eADHjK,EAEsCz9B,KAAKH,MAAzC0c,EAFFkhB,EAEElhB,SAAoBmM,GAFtB+U,EAEY3f,SAFZ2f,EAEsB/U,aAC3B,OACIrmB,EAAAC,EAAAC,cAAA,SAAOlH,GAAG,UAAUoH,UAAU,YAC1BJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASE,QAAS,kBAAMd,EAAKomC,oBAC7C5lC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,QACSJ,EAAAC,EAAAC,cAAA,YAAOga,EAAS0Z,WAAhB,IAA6B1Z,EAASN,aAGnD5Z,EAAAC,EAAAC,cAAA,MAAIE,UAAU,OACVJ,EAAAC,EAAAC,cAAA,MAAIE,UAA4B,eAAhBimB,EAAgC,SAAW,IAAIrmB,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMzlB,GAAG,cAAa5c,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,0BAA/B,oBAC/DlN,EAAAC,EAAAC,cAAA,MAAIE,UAA4B,kBAAhBimB,EAAmC,SAAW,IAAIrmB,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMzlB,GAAG,iBAAgB5c,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAAlC,eAClElN,EAAAC,EAAAC,cAAA,MAAIE,UAA4B,cAAhBimB,EAA+B,SAAW,IAAIrmB,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMzlB,GAAG,aAAY5c,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAA9B,cAEvDvP,KAAKH,MAAMwjC,YAAwC,SAA1BrjC,KAAKH,MAAMwjC,WACvChhC,EAAAC,EAAAC,cAAA,MAAIE,UAA4B,aAAhBimB,EAA8B,SAAW,IAAIrmB,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMzlB,GAAG,YAAW5c,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,sBAA7B,aAAwE,KAGzIlN,EAAAC,EAAAC,cAAA,MAAIE,UAA4B,cAAhBimB,EAA+B,SAAW,IAAIrmB,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,CAAMzlB,GAAG,aAAY5c,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAA9B,iBAIlElN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAEXJ,EAAAC,EAAAC,cAAA,KAAGI,QAAS3C,KAAKkoC,aAAczlC,UAAU,cAAzC,YACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,2BAIVm4B,EACHrlC,EAAAC,EAAAC,cAAC4lC,GAAD,CAAYT,eAAgBA,EAAgB3f,iBAAkB/nB,KAAK+nB,mBAAuB,MAG9F1lB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASE,QAAS,kBAAMd,EAAKomC,4BA7EtCllC,aAyGP2hB,eATS,SAAAhgB,EAAoBigB,GAAa,IAA9BE,EAA8BngB,EAA9BmgB,cACvB,MAAO,CACHtI,SAAUoI,EAAS+M,KACnBhJ,YAAa/D,EAAS+D,YACtB5K,SAAU+G,EAAc/G,SACxBulB,WAAYxe,EAAcwe,aAInB3e,CAtBQ,SAAAzgB,GAAqD,IAAlDsY,EAAkDtY,EAAlDsY,SAAUuB,EAAwC7Z,EAAxC6Z,SAAU4K,EAA8BzkB,EAA9BykB,YAAa2a,EAAiBp/B,EAAjBo/B,WACvD,OACIhhC,EAAAC,EAAAC,cAAC6lC,GAAD,CAAS7rB,SAAUA,EAAUuB,SAAUA,EAAU4K,YAAaA,EAAa2a,WAAYA,MC5FlFgF,GAAuC,cAKvCC,GAAuC,0BCWvCC,GAAuB,SAACzvC,GAAD,MAAW,CAC7CC,KDhBkD,sBCiBlDD,SAGW0vC,GAAqB,SAAC1vC,GAAD,MAAW,CAC3CC,KDpBkD,oBCqBlDD,SAWW2vC,GAA6B,SAAC3vC,GAAD,MAAW,CACnDC,KD7BkD,kCC8BlDD,SAGW4vC,GAA2B,SAAC5vC,GAAD,MAAW,CACjDC,KDjCkD,gCCkClDD,SCqqBa6oB,eA9rBZ,SAAAA,EAAY9hB,GAAO,IAAA8nB,EAAA7nB,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA2hB,IAChB7hB,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAgmB,GAAAxhB,KAAAH,KAAMH,KA+CTkxB,kBAAoB,SAAC30B,GAIlB,GAHwBC,KAAOD,GAAME,OAAO,KACpBD,KAAOyD,EAAKM,MAAMstB,SAASpxB,OAAO,KAIvD,OADAiI,GAAY,CAAChF,QAAS,8CACf,EAEVO,EAAK4B,SAAS,CACXyD,UAAe/I,GACf,WACA0D,EAAK6oC,sBA3DQ7oC,EA+DnBkxB,gBAAkB,SAAC50B,GAChB,IAAI+I,EAAoB9I,KAAOyD,EAAKM,MAAM+E,WAAW7I,OAAO,KACxDoxB,EAAoBrxB,KAAOD,GAAME,OAAO,KAE5C,OAAMwD,EAAKM,MAAM+E,UAIduoB,EAAUvoB,GACVZ,GAAY,CAAChF,QAAS,gDACf,QAEVO,EAAK4B,SAAS,CACXgsB,QAAatxB,GACb,WACA0D,EAAK6oC,sBAVLpkC,GAAY,CAAChF,QAAS,oCACf,IArEMO,EAmFnB8tB,YAAc,SAACxxB,GACZ0D,EAAK4B,SAAS,CACXyD,UAAe/I,EAAK+I,UACpBuoB,QAAetxB,EAAKsxB,QACpBd,SAAexwB,EAAKwwB,UACpB,WACA9sB,EAAK6oC,sBAzFQ7oC,EAyLnB8f,kBAAoB,SAAC3hB,EAAGkkB,GACrBlkB,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWC,MAAMzH,UAAU,SAAChG,GACpD,OAAOA,EAAKtZ,QAAU6mB,EAAc7mB,SAGpC8mB,EAAWC,MAAM7a,KAAK,CACnB4P,MAAY+K,EAAc/K,MAC1B9b,MAAY6mB,EAAc7mB,QAGhC8mB,EAAWC,MAAatH,iBAAQqH,EAAWC,MAAO,SAClDviB,EAAK4B,SAAS,CACX0gB,WAAYA,GACZ,WACGtiB,EAAK6oC,sBAzMK7oC,EA6MnB6gB,iBAA8B,SAAC1iB,EAAGwkB,GAC/BxkB,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWG,KAAK3H,UAAU,SAAChG,GACnD,OAAOA,EAAKtZ,QAAUmnB,EAAapB,sBAGnCe,EAAWG,KAAK/a,KAAK,CAClB4P,MAAK,GAAArY,OAAU0jB,EAAapB,mBAAvB,MAAAtiB,OAA8C0jB,EAAariB,MAA3D,KACL9E,MAAYmnB,EAAapB,mBACzBjhB,MAAYqiB,EAAariB,MACzB/E,GAAYonB,EAAapnB,KAG/B+mB,EAAWG,KAAYxH,iBAAQqH,EAAWG,KAAM,SAChDziB,EAAK4B,SAAS,CAEX0gB,WAAYA,GACZ,WACGtiB,EAAK6oC,sBAhOK7oC,EAoOnBmb,kBAA8B,SAAChd,EAAG4c,GAC/B5c,EAAEuD,kBACF,IAAI4gB,EAAuBtiB,EAAKM,MAAMgiB,YAAc,IAInC,IAHUA,EAAWE,MAAM1H,UAAU,SAAChG,GACpD,OAAOA,EAAKtZ,QAAUuf,EAAczD,SAGpCgL,EAAWE,MAAM9a,KAAK,CACnBe,SAAYsS,EAAc/hB,KAAKyP,SAC/BlN,GAAYwf,EAAc/hB,KAAKuC,GAC/B+b,MAAYyD,EAAczD,MAC1B9b,MAAYuf,EAAczD,QAGhCgL,EAAWE,MAAavH,iBAAQqH,EAAWE,MAAO,SAClDxiB,EAAK4B,SAAS,CAEX0gB,WAAYA,GACZ,WACGtiB,EAAK6oC,sBAvPK7oC,EAgYnByD,aAAe,SAAAe,GACZxE,EAAK4B,SAAS,CAAE4C,wBAjYAxE,EAoanBoa,YAAc,SAACjc,GACZA,EAAEuD,kBACC1B,EAAKkiB,WAAW5H,SAASnc,EAAE2K,SACxB9I,EAAKmiB,eAAe7H,SAASnc,EAAE2K,SAC/B9I,EAAKoiB,kBAAkB9H,SAASnc,EAAE2K,SACA,gBAAlC3K,EAAE2K,OAAOyR,aAAa,SACY,uBAAlCpc,EAAE2K,OAAOyR,aAAa,SACpBpc,EAAE2K,OAAOyR,aAAa,gBAIzBva,EAAKM,MAAMif,YACbvf,EAAK4B,SAAS,CACX2d,YAAe,KAjbLvf,EAwenB0jB,iBAAmB,SAACzqB,GACjB+G,EAAK4B,SAAS,CACX3I,KAAMA,GACN,WACA+G,EAAK6oC,sBA1eR7oC,EAAKM,OAALunB,EAAA,CACGxiB,UAAgB,IAAIC,KACpB2Z,UAAekH,EACfhH,QAAegH,EACf7Q,UAAoB,EACpBC,aAAoB,EACpBC,SAAoB,EACpBC,WAAoB,EACpBlV,SAAoB,EACpB0E,MAAwB,EACxBod,cAAwB,KACxBM,aAAwB,KACxB5H,cAAwB,KACxBuH,WAAwB,CAACC,MAAM,GAAIE,KAAM,GAAID,MAAO,IACpD/H,SAAU,GACVD,QAAQ,EACR+E,YAAY,EACZ0D,YAAY,EACZtN,aAAc,IAlBjB9Z,OAAAqO,GAAA,EAAArO,CAAAgsB,EAAA,YAmBqBtrB,OAASsxB,SAAS,EAAG,UAAUrxB,OAAO,eAnB3DX,OAAAqO,GAAA,EAAArO,CAAAgsB,EAAA,UAoBqBtrB,OAASC,OAAO,eApBrCX,OAAAqO,GAAA,EAAArO,CAAAgsB,EAAA,SAqBqB,GArBrBhsB,OAAAqO,GAAA,EAAArO,CAAAgsB,EAAA,WAsBqB,IAtBrBhsB,OAAAqO,GAAA,EAAArO,CAAAgsB,EAAA,OAuBqB,IAvBrBA,GA2BA7nB,EAAKyD,aAAsBzD,EAAKyD,aAAa3C,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAK8oC,iBAAsB9oC,EAAK8oC,iBAAiBhoC,KAAtBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAK+oC,eAAsB/oC,EAAK+oC,eAAejoC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAC3BA,EAAKgG,QAA4B,GACjChG,EAAKgpC,oBAA4BhpC,EAAKgpC,oBAAoBloC,KAAzBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKmjB,kBAA4BnjB,EAAKmjB,kBAAkBriB,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAK2gB,mBAA4B3gB,EAAK2gB,mBAAmB7f,KAAxBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAK8F,eAA4B9F,EAAK8F,eAAehF,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKojB,mBAA4BpjB,EAAKojB,mBAAmBtiB,KAAxBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKqjB,gBAA4BrjB,EAAKqjB,gBAAgBviB,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACjCA,EAAKa,eAA+Bb,EAAKa,eAAeC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK8C,kBAA+B9C,EAAK8C,kBAAkBhC,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKgD,cAA+BhD,EAAKgD,cAAclC,KAAnBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK0U,gBAA+B1U,EAAK0U,gBAAgB5T,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKnG,WAA+BmG,EAAKnG,WAAWiH,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAKgB,WAA+BhB,EAAKgB,WAAWF,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KACpCA,EAAK2F,YAA+B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KA7CpBA,kFA8FhB,IAAIsiB,EAAoBpiB,KAAKI,MAAMgiB,YAAc,GAC7C2mB,EAAoB,GACpBC,EAAoB,GACpB9xB,EAAoB,GAExB,GAA+B,IAA5BkL,EAAWE,MAAMhlB,QAA2C,IAA3B8kB,EAAWG,KAAKjlB,QAAgB8kB,EAAWC,MAAM/kB,OAAS,EAAG,CAC9F,IAAI1C,GAAqBwnB,EAAWC,OAAS,IAAI5W,IAAI,SAAAmJ,GAAI,OAAIA,EAAKtZ,QAC/DV,EAAO0C,OAAS,IAChByrC,EAAqB,QACrBC,EAAqBpuC,GAI3B,GAA+B,IAA5BwnB,EAAWE,MAAMhlB,QAAgB8kB,EAAWG,KAAKjlB,OAAS,EAAG,CAC7D,IAAI0jB,EAAmB,IACtBoB,EAAWG,MAAQ,IAAI9W,IAAI,SAACmJ,GACrBoM,EAAMpM,EAAKxU,OACb4gB,EAAMpM,EAAKxU,OAAOshB,QAAQla,KAAKoN,EAAKvZ,IAEpC2lB,EAAMxZ,KAAK,CACRpH,MAAOwU,EAAKxU,MACZshB,QAAU,CAAC9M,EAAKvZ,QAMtB2lB,EAAM1jB,OAAS,IACfyrC,EAAqB,OACrBC,EAAqBhoB,GAI3B,GAAGoB,EAAWE,MAAMhlB,OAAS,EAAG,CAC7B,IAAI2Z,EAAoB,IACvBmL,EAAWE,OAAS,IAAInL,QAAQ,SAAAvC,GAC9BqC,EAAMzP,KAAKoN,EAAKrM,SAASuD,YACzBoL,EAAUtC,EAAKrM,UAAcqM,EAAKwC,QAElCH,EAAM3Z,OAAS,IACfyrC,EAAqB,WACrBC,EAAqB/xB,GAI3B,IAAI9R,EAAuBnF,KAAKI,MAAM+E,UAClCuoB,EAAuB1tB,KAAKI,MAAMstB,QACjCvoB,GAAeuoB,GACjBvoB,EAAwBA,EACxBuoB,EAAsBA,IAEhBvoB,GAAgBuoB,IACnBvoB,EAAwB9I,OAASsxB,SAAS,EAAG,UAAUrxB,OAAO,cAC9DoxB,EAAsBrxB,OAASC,OAAO,eAEpC6I,IAAgBuoB,IAElBA,EADAvoB,EAAqBA,GAGnBuoB,IAAcvoB,IAChBA,EAAqBuoB,EACrBA,EAAmBA,GAEtB1tB,KAAK0B,SAAS,CACXyD,UAAkB4jC,EAClBrb,QAAkBsb,KAIxB,IAAIlwC,EAAoB,CACrBkO,MAAe7B,EACf8B,IAAeymB,EACfqb,UAAkBA,GAAyB,OAC3CC,UAAeA,EACftI,OAAe,EACf3nC,KAAeiH,KAAKI,MAAMrH,MAEZ,aAAdgwC,IACAjwC,EAAKoe,UAAgBA,GAGxBlX,KAAKH,MAAMopC,WAAWnwC,EAAM,CACzB+kB,UAAe7d,KAAKH,MAAMie,SAC1B/kB,KAAeiH,KAAKI,MAAMrH,KAC1BoM,UAAeA,EACfuoB,QAAeA,EACftL,WAAeA,EACfse,OAAe,2CAsEN3/B,EAAMC,EAAgBC,GAClCjB,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX0T,UAAoB,EACpBpU,eAAoBA,EACpBC,eAAoBA,8CAIRF,GACff,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX2T,aAAa,0CAILtU,GACXf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX4T,SAAS,4CAICrX,EAAGnF,GAChBmF,EAAEuD,kBACFxB,KAAK0B,SAAS,CACX6T,WAAW,EACX5C,WAAY7Z,EAAK2b,YACjB/B,YAAa5Z,EAAKyb,kDAIbxT,EAAM1C,GACX2R,OAAOgG,QAAQ,sDACfhW,KAAKH,MAAM/F,iBAAiB,CAACiH,KAAMA,EAAM1C,OAAQA,uCAI5C0C,GACLiP,OAAOgG,QAAQ,4CACfhW,KAAKH,MAAMlG,WAAW,CAACoH,KAAMA,0CAM7Bf,KAAK0B,SAAS,CACXrB,SAAe,EACf0E,MAAe,EACfqQ,UAAe,EACfE,SAAe,EACfD,aAAe,EACfE,WAAe,iDAKrBvV,KAAK0B,SAAS,CACXqhB,YAAe,EACf1D,YAAgBrf,KAAKI,MAAMif,WAC3Ba,OAAe,EACfY,OAAe,EACfxG,QAAe,8CAMlBta,KAAK0B,SAAS,CACX2d,YAAW,EACX0D,YAAa/iB,KAAKI,MAAM2iB,2DAK3B/iB,KAAKH,MAAMqpC,cAAclpC,KAAKH,MAAMujB,wDAIpCpjB,KAAK0B,SAAS,CACXqD,MAAM,GACN,6CAKCiC,EAAOC,GAUX,IARA,IAAIC,EAAQ7K,OAASC,OAAO,cACxB6K,EAAM9K,OAAS+K,OAEflB,EAAM,GACNmB,EAAahL,KAAO6K,EAAM,IAAIF,EAAO,mBAAmBI,OACxDE,EAAajL,KAAO6K,EAAM,IAAID,EAAK,mBAAmBG,OACtD2X,EAAO,GACPE,EAAK,GACD1X,EAAEF,EAAYE,EAAED,EAAYC,GAN1B,KAOPwX,EAAKvX,KAAK,CACP4P,MAAS/a,KAAS,IAAFkL,GAAQjL,OAAO,WAC/BhB,MAASe,KAAS,IAAFkL,GAAQjL,OAAO,cAElC2iB,EAAGzX,KAAK,CACL4P,MAAS/a,KAAe,KAAPkL,EAZb,OAY0BjL,OAAO,WACrChB,MAASe,KAAe,KAAPkL,EAbb,OAa0BjL,OAAO,cAErC6K,GAAOI,GAAKJ,GAAOI,EAff,OAgBJrB,EAAM7J,KAAS,IAAFkL,GAAQjL,OAAO,WAAW,IAAID,KAAe,KAAPkL,EAhB/C,OAgB4DjL,OAAO,YAG7E,MAAO,CAACyiB,KAAKA,EAAME,GAAGA,EAAI/Y,IAAKA,2CAGlB,IAAAijC,EACQnpC,KAAKI,MAAlB2e,EADKoqB,EACLpqB,KAAME,EADDkqB,EACClqB,GACTF,GAGD1iB,KAAO4iB,GAAIqd,KAAKjgC,KAAO0iB,GAAO,UAAY,GAC9C/e,KAAKif,GAAGmqB,eAAeC,UAAUtqB,4CAInBA,GAEd/e,KAAK0B,SAAS,CAAEqd,gDAGJE,GACZjf,KAAK0B,SAAS,CAAEud,MAAMjf,KAAKspC,2DASV,IAAAznC,EAAA7B,KAEjBA,KAAK8F,QAAmB9F,KAAK+F,OAAO/F,KAAKH,MAAMwF,aAAaW,WAAYhG,KAAKH,MAAMwF,aAAaY,UAChG,IAAIu2B,EAAoBx8B,KAAKI,MAAM+E,UAC/Bs3B,EAAoBz8B,KAAKI,MAAMstB,QAGnCrW,GAFwBrX,KAAKI,MAAMsgC,OACjB1gC,KAAKI,MAAMgiB,WACfpiB,KAAKH,MAAMyxB,iBAEzB,GAAIlvB,kBAAQiV,IAAWA,EAAOwG,YAAc7d,KAAKH,MAAMie,SAYhD,CACJ,IAAI/kB,EAAuC,UAAxBiH,KAAKH,MAAMie,SAAwB,UAAY9d,KAAKH,MAAMie,SAC7E9d,KAAK0B,SAAS,CACX3I,KAAOA,GACP,WACA8I,EAAK8mC,0BAhBOtxB,EAAO+K,WAGtBpiB,KAAK0B,SAAS,CACX0gB,WAAe/K,EAAO+K,WACtBjd,UAAeq3B,EACf9O,QAAe+O,EACf1jC,KAAese,EAAOte,MACtB,WACA8I,EAAK8mC,qBAUXtnC,SAASC,iBAAiB,QAAStB,KAAKka,wDAqBxBjc,EAAGlF,EAAMic,GAAO,IAAAzD,EAAAvR,KAEhC/B,EAAEuD,kBACF,IAAIkhB,EAAoB1iB,KAAKI,MAAMgiB,YAAc,GACjD,GAAY,UAATrpB,EAAkB,CAClB,IAAI4pB,EAAiBD,EAAQ3pB,GAAMic,GAAO1Z,MAC1CsnB,iBAAQF,EAAQH,KAAM,SAAU/K,GAC7B,OAAOA,EAAKpX,QAAUuiB,IAG5BD,EAAQ3pB,GAAM8pB,OAAO7N,EAAO,GAChB,UAATjc,GAA6C,IAAzB2pB,EAAQ3pB,GAAMuE,SAClColB,EAAQH,KAAa,GACrBG,EAAQJ,MAAa,IAEZ,SAATvpB,GAA4C,IAAzB2pB,EAAQ3pB,GAAMuE,SACjColB,EAAQJ,MAAa,IAExB,IAAIH,EAA8B,UAATppB,EAAoBiH,KAAKI,MAAM+hB,cAAgB,KACpEM,EAA8B,SAAT1pB,EAAmBiH,KAAKI,MAAMqiB,aAAe,KAClE5H,EAA8B,UAAT9hB,EAAoBiH,KAAKI,MAAMya,cAAgB,KACxE7a,KAAK0B,SAAS,CACX0gB,WAAaM,EACbP,cAAeA,EACfM,aAAcA,EACd5H,cAAeA,GACf,WACAtJ,EAAKo3B,4DAKI1qC,GACZ,IAAM0K,EAAO1K,EAAE2K,OAAOD,KAChBrN,EAAQ2C,EAAE2K,OAAOtN,MACvB0E,KAAK0B,SAAL/F,OAAAqO,GAAA,EAAArO,CAAA,GAAiBgN,EAAOrN,GAAS,gEAIVuE,GACpBA,EAAM0pC,QAAU1pC,EAAM0pC,SAAWvpC,KAAKH,MAAM0pC,QAC5Cv5B,OAAOw5B,KAAK3pC,EAAM0pC,OAAOE,SAASC,UAErC1pC,KAAK0B,SAAS,CAAE+T,aAAc5V,EAAM4V,8DAIpCpU,SAASO,oBAAoB,QAAS5B,KAAKka,8CAWtC,IAAAoJ,EAAAD,EAAArjB,KAED2pC,EAAwB3pC,KAAKH,MAAM8pC,aAAe,GAClDC,EAAwB,EACvBxnC,kBAAQunC,KACVC,EAAyBD,EAAY5xB,YAAc,GALjD,IAAA8xB,EAOmB7pC,KAAKI,MAGzBogB,GAVCqpB,EAOG9qB,KAPH8qB,EAOS5qB,GAEgBjf,KAAKH,MAAMqF,UACvB,IACdgc,EAAkB,GAKtB,OAJAlhB,KAAKI,MAAMgiB,WAAWC,MAAMlL,QAAQ,SAAC/W,GAClCogB,EAAYhZ,KAAKpH,EAAMgX,OACvB8J,EAAgB1Z,KAAKpH,EAAM9E,SAG3B+G,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,YAAY/gB,UAAgC,YAApBzC,KAAKI,MAAMrH,KAAsB,UAAY,IAAhH,WACAsJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAM0gB,EAAKG,iBAAiB,aAAa/gB,UAAgC,aAApBzC,KAAKI,MAAMrH,KAAuB,UAAY,IAAlH,QAGNsJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAM2iB,WAAa,aAAe,GAA1D,KAAiEpgB,QAAS3C,KAAKmjB,iBAAiB9gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAApJ,WACAphB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAA0f,GAAiB,OAAImB,EAAKnB,kBAAoBA,GAAmBzf,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAMif,WAAa,YAAc,GAAzD,KAAgE1c,QAAS3C,KAAKkjB,oBAAoB7gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAA5N,YAEHphB,EAAAC,EAAAC,cAAC+a,GAAA,EAAD,CAAMgC,OAAO,MAAMC,OAAO,GAAGvE,aAAa,MAAMvY,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAM2iB,WAAa,gBAAgB,KACjH1gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,eACAJ,EAAAC,EAAAC,cAACmhB,GAAD,CACGlD,YAAaA,EACb5lB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BzC,kBAAmB5f,KAAK4f,kBACxBa,mBAAoBzgB,KAAKygB,qBAE5Bpe,EAAAC,EAAAC,cAACohB,GAAD,CACGnM,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B3nB,OAAQoF,KAAKI,MAAMgiB,WAAWC,MAC9BrB,MAAOhhB,KAAKH,MAAMmhB,MAClBE,gBAAiBA,EACjBP,iBAAkB3gB,KAAK2gB,iBACvBF,mBAAoBzgB,KAAKygB,qBAE5Bpe,EAAAC,EAAAC,cAACqhB,GAAD,CACG3M,MAAOjX,KAAKI,MAAMgiB,WAAWE,MAC7B9K,KAAMxX,KAAKI,MAAMgiB,WAAWG,KAC5B5I,OAAQ3Z,KAAKH,MAAM8Z,OACnBsB,kBAAmBjb,KAAKib,kBACxBwF,mBAAoBzgB,KAAKygB,sBAG/Bpe,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZJ,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAyf,GAAc,OAAIoB,EAAKpB,eAAiBA,GAAgBxf,UAAS,iBAAA1D,OAAmBiB,KAAKI,MAAMif,WAAa,YAAc,GAAzD,KAAgE1c,QAAS3C,KAAKkjB,oBAAoB7gB,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,eAAnN,WAEGzjB,KAAKH,MAAMiqC,mBACXznC,EAAAC,EAAAC,cAAA,UAAQxJ,KAAK,SAAS0J,UAAU,gCAAhC,gBAAqFJ,EAAAC,EAAAC,cAAA,UAAQxJ,KAAK,SAAS4J,QAAS3C,KAAK8oC,oBAAqBrmC,UAAU,gCAAnE,gBAK9FJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZJ,EAAAC,EAAAC,cAACwvB,GAAD,CACG7E,WAAYltB,KAAKI,MAAM+E,UACvBA,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBd,SAAU5sB,KAAKI,MAAMwsB,SACrB3pB,aAAcjD,KAAK+wB,kBACnBnD,YAAa5tB,KAAK4tB,YAClBnrB,UAAU,QACV6J,YAAY,gBAGjB,IACDjK,EAAAC,EAAAC,cAAA,QAAME,UAAU,MAAhB,MAdH,IAcmC,IAChCJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZJ,EAAAC,EAAAC,cAACwvB,GAAD,CACG7E,WAAYltB,KAAKI,MAAMstB,QACvBvoB,UAAWnF,KAAKI,MAAM+E,UACtBuoB,QAAS1tB,KAAKI,MAAMstB,QACpBd,SAAU5sB,KAAKI,MAAMwsB,SACrB3pB,aAAcjD,KAAKgxB,gBACnBpD,YAAa5tB,KAAK4tB,YAClBnrB,UAAU,QACV6J,YAAY,WACZS,UAAa/M,KAAKI,MAAM+E,gBAOnCykC,EAAY,EAAKvnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcmnC,EAA7B,UAAsD,KAG1E5pC,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,GAAK0C,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACzH+E,EAAAC,EAAAC,cAAA,WAASE,UAAU,sBAEZzC,KAAKI,MAAMgiB,WAAWC,MAAM/kB,OAAS,EACnC0C,KAAKI,MAAMgiB,WAAWC,MAAM5W,IAAI,SAAC4L,EAAQrC,GACtC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,KAGPzjB,KAAKI,MAAMgiB,WAAWG,KAAKjlB,OAAS,EAClC0C,KAAKI,MAAMgiB,WAAWG,KAAK9W,IAAI,SAAC4L,EAAQrC,GACrC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,OAAQ+W,KACnD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,KAGPzjB,KAAKI,MAAMgiB,WAAWE,MAAMhlB,OAAS,EACnC0C,KAAKI,MAAMgiB,WAAWE,MAAM7W,IAAI,SAAC4L,EAAQrC,GACtC,OACG3S,EAAAC,EAAAC,cAAA,QAAM2D,IAAK8O,EAAOvS,UAAU,SAAS4U,EAAOD,MACzC/U,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAOolB,EAAK5C,mBAAmBxiB,EAAG,QAAS+W,KACpD3S,EAAAC,EAAAC,cAAA,OAAKgN,IAAI,yBAAyBkU,IAAI,cAI7C,MAEH,KAEXphB,EAAAC,EAAAC,cAAA,OACGC,IAAK,SAAAwf,GAAU,OAAIqB,EAAKrB,WAAaA,IACrC3f,EAAAC,EAAAC,cAACuhB,IAADR,EAAA,CACG7N,aAAczV,KAAKI,MAAMqV,aACzBpQ,aAAcrF,KAAKH,MAAMwF,aACzBS,QAAS9F,KAAK8F,QACd8X,aAAc5d,KAAKH,MAAM+d,aACzB3jB,YAAa+F,KAAKH,MAAM5F,YACxBolB,WAAYrf,KAAKI,MAAMif,WACvB7lB,eAAgBwG,KAAKH,MAAMrG,eAC3B2M,YAAanG,KAAKH,MAAMsG,YACxBxM,WAAYqG,KAAKH,MAAMlG,WACvBG,iBAAkBkG,KAAKH,MAAM/F,iBAC7BV,SAAU4G,KAAKH,MAAMzG,SACrBG,gBAAiByG,KAAKH,MAAMtG,gBAC5BoH,eAAgBX,KAAKW,eACrBiC,kBAAmB5C,KAAK4C,kBACxBE,cAAe9C,KAAK8C,eAfvBnH,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,aAgBetjB,KAAKrG,YAhBpBgC,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,aAiBetjB,KAAKc,YAjBpBnF,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,kBAkBoBtjB,KAAKwU,iBAlBzB7Y,OAAAqO,GAAA,EAAArO,CAAA2nB,EAAA,UAmBW,aAnBXA,IAsBMtjB,KAAKI,MAAMgV,SACX/S,EAAAC,EAAAC,cAACkX,GAAD,CACGtT,YAAanG,KAAKH,MAAMsG,YACxBpB,KAAM/E,KAAKI,MAAMgV,SACjBtP,QAAS9F,KAAKH,MAAMiG,QACpBT,aAAcrF,KAAKH,MAAMwF,aACzBjM,SAAU4G,KAAKH,MAAMzG,SACrB4H,eAAgBhB,KAAKI,MAAMY,eAC3BC,eAAgBjB,KAAKI,MAAMa,eAC3BwE,YAAazF,KAAKyF,cAChB,KAIRpD,EAAAC,EAAAC,cAACsX,GAAD,CACG9U,KAAM/E,KAAKI,MAAMmV,UACjB5C,WAAY3S,KAAKI,MAAMuS,WACvBD,YAAa1S,KAAKI,MAAMsS,YACxBjN,YAAazF,KAAKyF,cAIlBzF,KAAKI,MAAMiV,YACXhT,EAAAC,EAAAC,cAACuX,GAAD,CACG/U,KAAM/E,KAAKI,MAAMiV,YACjBlP,YAAanG,KAAKH,MAAMsG,YACxBV,YAAazF,KAAKyF,cAChB,KAGLzF,KAAKI,MAAMkV,QACXjT,EAAAC,EAAAC,cAACwX,GAAD,CACGhV,KAAM/E,KAAKI,MAAMkV,QACjBnP,YAAanG,KAAKH,MAAMsG,YACxBV,YAAazF,KAAKyF,cAChB,cAxrBL1C,aCZAgnC,eAClB,SAAAA,EAAYlqC,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA+pC,GAAApuC,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAouC,GAAA5pC,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACFgqC,EAA6BhqC,KAAKH,MAAMmqC,UAAY,GACxD,OACKhqC,KAAKH,MAAMyF,aAuERjD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAtEL9G,OAAOgZ,KAAKq1B,GAAY,IAAIv+B,IAAI,SAACmJ,EAAMrN,GACpC,IAAIwL,EAAYi3B,EAASp1B,GAAM5B,QAAU,GAEzC,OACG3Q,EAAAC,EAAAC,cAAA,OAAK2D,IAAKqB,EAAG9E,UAAU,aACpBJ,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAWmS,KAG3CvS,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGAwQ,EAAUtH,IAAI,SAACvJ,EAAO6R,GAEnB,IAAIzV,EAAUF,GAAe8D,EAAMhB,YAC/BmC,EAAgB,GAAAtE,OAAMmD,EAAMlB,eAAerD,OAA3B,KAAAoB,OAAqCmD,EAAMlB,eAAepD,OAA1D,MAAAmB,OAAqEmD,EAAMlB,eAAenD,MAC1G2F,EAAiB,GAAAzE,OAAMmD,EAAMjB,eAAetD,OAA3B,KAAAoB,OAAqCmD,EAAMjB,eAAerD,OAA1D,MAAAmB,OAAqEmD,EAAMjB,eAAepD,MAC/G,OACGwE,EAAAC,EAAAC,cAAA,MACA2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CAChDkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAWgB,EAAMhB,WACjBF,eAAgBqC,EAChBpC,eAAgBuC,MAEnBnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMC,cACXE,EAAAC,EAAAC,cAAA,UAAKL,EAAMiG,eAAX,MAA8BjG,EAAMkG,iBACpC/F,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQc,GACRhB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQY,IAE9BhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQiB,GACRnB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQe,IAE9BnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuM,aACXpM,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAEvCmB,EAAAC,EAAAC,cAAA,UAESL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC5CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBACrBrS,EAAMqS,cAAoB,qBAnE9BxR,aCAtBknC,eAClB,SAAAA,EAAYpqC,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAiqC,GAAAtuC,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAsuC,GAAA9pC,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACFgqC,EAA6BhqC,KAAKH,MAAMmqC,UAAY,GACxD,OACKhqC,KAAKH,MAAMyF,aAgFRjD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eA/EL9G,OAAOgZ,KAAKq1B,GAAY,IAAIv+B,IAAI,SAACmJ,EAAMrN,GACpC,IAAIwN,EAASi1B,EAASp1B,IAAS,GAC/B,OACGvS,EAAAC,EAAAC,cAAA,OAAK2D,IAAKqB,GACPlF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SAASmS,GAEvBG,EAAOtJ,IAAI,SAAC5N,EAAMmX,GACZ,IAAIjC,EAAYlV,EAAKmV,QAAU,GAC/B,OACG3Q,EAAAC,EAAAC,cAAA,OAAK2D,IAAK8O,EAAOvS,UAAU,aACxBJ,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAAW5E,EAAK8K,QAGhDtG,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGAwQ,EAAUtH,IAAI,SAACvJ,EAAO6R,GAEnB,IAAIzV,EAAUF,GAAe8D,EAAMhB,YAC/BmC,EAAgB,GAAAtE,OAAMmD,EAAMlB,eAAerD,OAA3B,KAAAoB,OAAqCmD,EAAMlB,eAAepD,OAA1D,MAAAmB,OAAqEmD,EAAMlB,eAAenD,MAC1G2F,EAAiB,GAAAzE,OAAMmD,EAAMjB,eAAetD,OAA3B,KAAAoB,OAAqCmD,EAAMjB,eAAerD,OAA1D,MAAAmB,OAAqEmD,EAAMjB,eAAepD,MAC/G,OACGwE,EAAAC,EAAAC,cAAA,MACA2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CAChDkE,aAAcD,EAAMC,aACpBkS,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAWgB,EAAMhB,WACjBF,eAAgBqC,EAChBpC,eAAgBuC,MAEnBnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMC,cACXE,EAAAC,EAAAC,cAAA,UAAKL,EAAMiG,eAAX,MAA8BjG,EAAMkG,iBACpC/F,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQc,GACRhB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQY,IAE9BhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQiB,GACRnB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQe,IAE9BnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuM,aACXpM,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAU4D,EAAMhB,aAEvCmB,EAAAC,EAAAC,cAAA,UAESL,EAAMqS,cAAqC,cAArBrS,EAAMhB,WAC/BmB,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC5CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBACrBrS,EAAMqS,cAAoB,wBAxE3CxR,aCCrB8P,eAClB,SAAAA,EAAYhT,GAAQ,OAAAlE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA6S,GAAAlX,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAkX,GAAA1S,KAAAH,KACXH,0EAGA,IAAAC,EAAAE,KACFgqC,EAA6BhqC,KAAKH,MAAMmqC,UAAY,GACxD,OACKhqC,KAAKH,MAAMyF,aA0EXjD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAzEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACTJ,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,MAAImR,QAAQ,IAAIjR,UAAU,WAA1B,eAGNJ,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAGAynC,EAASv+B,IAAI,SAACvJ,EAAO6R,GAClB,IAAI1V,EAAuBE,GAAc2D,EAAMkE,WAC3C9H,EAAuBF,GAAeC,GACtCgF,EAAgB,GAAAtE,OAAUmD,EAAMyE,SAASzJ,QAAQS,OAAjC,KAAAoB,OAA2CmD,EAAMyE,SAASzJ,QAAQU,OAAlE,MAAAmB,OAA6EmD,EAAMyE,SAASzJ,QAAQW,MACpH2F,EAAiB,GAAAzE,OAASmD,EAAM0E,WAAW1J,QAAQS,OAAlC,KAAAoB,OAA4CmD,EAAM0E,WAAW1J,QAAQU,OAArE,MAAAmB,OAAgFmD,EAAM0E,WAAW1J,QAAQW,MAC1HqsC,EAAuB,GACvBC,EAAuB,GAQ3B,MAPsB,KAAnBjoC,EAAMyM,UACNu7B,EAAgB3tC,GAA4C,IAAhCsC,SAASqD,EAAMzD,eAAuByD,EAAMyM,SAAU,qBAClFw7B,EAAiB5tC,GAA6C,IAAjCsC,SAASqD,EAAMxD,gBAAwBwD,EAAMyM,SAAU,YAEpFu7B,EAAgBxtC,GAA+C,IAAhCmC,SAASqD,EAAMzD,eAAuB,qBACrE0rC,EAAiBztC,GAAgD,IAAjCmC,SAASqD,EAAMxD,gBAAwB,WAG1E2D,EAAAC,EAAAC,cAAA,MACG2D,IAAK6N,EACLI,cAAe,SAAClW,GAAD,OAAO6B,EAAKD,MAAMuU,kBAAkBnW,EAAG,CAChDkE,aAAcD,EAAMoM,YACpB+F,SAAUnS,EAAM7G,GAChBwH,WAAYX,EAAMnB,KAClBG,WAAWgB,EAAMkE,UACjBpF,eAAgBqC,EAChBpC,eAAgBuC,MAEnBnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMoM,aACXjM,EAAAC,EAAAC,cAAA,UAAK2nC,EAAL,MAAuBC,GACvB9nC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQc,GACRhB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQY,IAE9BhB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACRJ,EAAAC,EAAAC,cAAA,aAAQiB,GACRnB,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAQe,IAE9BnB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuM,aACXpM,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,QAAME,UAAWnE,GAAUD,IAEjCgE,EAAAC,EAAAC,cAAA,UAESL,EAAMqS,cAA2B,cAAXlW,EACzBgE,EAAAC,EAAAC,cAAA,KAAGI,QAAS,SAAC1E,GAAD,OAAQ6B,EAAKD,MAAM2U,gBAAgBvW,EAAG,CAC5CwW,YAAavS,EAAMuS,YACnBF,aAAcrS,EAAMqS,iBACrBrS,EAAMqS,cAAoB,mBAxEvBxR,aCQ1BqnC,eAClB,SAAAA,EAAYvqC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAoqC,IAChBtqC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAyuC,GAAAjqC,KAAAH,KAAMH,KAwCT4B,gBAAkB,WACf3B,EAAK4B,SAAS,CACXrB,SAAe,EACfC,EAAE,EACFC,EAAE,KA7CWT,EAwHnB4sB,WAAa,SAAC5zB,GAAS,IAEZ4vB,EAAgB5vB,EAAhB4vB,YAIJtF,EAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAiBmE,EAAKD,MAAMujB,YAC1CA,EAAWsd,OAAgBhY,EACxBA,IAAgB5oB,EAAKD,MAAMujB,WAAWsd,QACtC5gC,EAAKD,MAAMopC,WAAW7lB,EAAYtjB,EAAKD,MAAMyxB,kBA/HhDxxB,EAAKM,MAA2B,CACIgV,UAAsB,EACtBC,aAAsB,EACtBC,SAAsB,EACtBC,WAAsB,EACtBlV,SAAsB,EACtBC,EAAsB,GACtBC,EAAsB,GACtBuS,MAAsB,GACtB0C,WAAsB,EACtBxU,eAAsB,GACtBC,eAAsB,GACtBwU,aAAsB,IAI1D3V,EAAKsU,kBAA2BtU,EAAKsU,kBAAkBxT,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKa,eAA2Bb,EAAKa,eAAeC,KAApBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK8C,kBAA2B9C,EAAK8C,kBAAkBhC,KAAvBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKgD,cAA2BhD,EAAKgD,cAAclC,KAAnBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK0U,gBAA2B1U,EAAK0U,gBAAgB5T,KAArBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKnG,WAA2BmG,EAAKnG,WAAWiH,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAKgB,WAA2BhB,EAAKgB,WAAWF,KAAhBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAChCA,EAAK2F,YAA2B3F,EAAK2F,YAAY7E,KAAjBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAzBhBA,iFA4BDyB,EAAOW,GAErBX,EAAMsG,iBACN,IAAMoO,EAAwB1U,EAAM2U,QAC9BC,EAAwB5U,EAAM6U,MAHNpW,KAIzB0B,SAAS,CACVrB,SAAe,EACfC,EAAe2V,EACf1V,EAAe4V,EACfxU,SAAQhG,OAAAC,EAAA,EAAAD,CAAA,GAAWuG,4CAYZnB,EAAMC,EAAgBC,GAClCjB,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX0T,UAAoB,EACpBpU,eAAoBA,EACpBC,eAAoBA,8CAIRF,GACff,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX2T,aAAa,0CAILtU,GACXf,KAAKH,MAAMrG,eAAe,CAACuH,KAAMA,IACjCf,KAAK0B,SAAS,CACX4T,SAAS,4CAICrX,EAAGnF,GAChBmF,EAAEuD,kBACFxB,KAAK0B,SAAS,CACX6T,WAAW,EACX5C,WAAY7Z,EAAK2b,YACjB/B,YAAa5Z,EAAKyb,kDAIbxT,EAAM1C,GACX2R,OAAOgG,QAAQ,sDACfhW,KAAKH,MAAM/F,iBAAiB,CAACiH,KAAMA,EAAM1C,OAAQA,uCAI5C0C,GACJiP,OAAOgG,QAAQ,4CACdhW,KAAKH,MAAMlG,WAAW,CAACoH,KAAMA,0CAMjCf,KAAK0B,SAAS,CACVrB,SAAgB,EAChB+U,UAAgB,EAChBE,SAAgB,EAChBD,aAAgB,EAChBE,WAAgB,qCAsCrB,IAAIo0B,EAAwB3pC,KAAKH,MAAM8pC,aAAe,GAClDK,EAAwB,GACxBJ,EAAwB,EACxBl0B,EAAuB,GACtBtT,kBAAQunC,KACVK,EAAyBL,EAAY72B,OAAS,GAC9C82B,EAAyBD,EAAY5xB,YAAc,EACnDrC,EAAwBi0B,EAAYU,WAEvC,IACIvhB,EAA2B8gB,EAG/B,OACKxnC,kBAAQpC,KAAKH,MAAM8pC,aAwGnBtnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eAvGFJ,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAC8W,GAAD,CACGhZ,QAAyBL,KAAKI,MAAMC,QACpCC,EAAyBN,KAAKI,MAAME,EACpCC,EAAyBP,KAAKI,MAAMG,EACpCoB,SAAyB3B,KAAKI,MAAMuB,SACpChB,eAAyBX,KAAKW,eAC9BiC,kBAAyB5C,KAAK4C,kBAC9BE,cAAyB9C,KAAK8C,cAC9BnJ,WAAyBqG,KAAKrG,WAC9BmH,WAAyBd,KAAKc,WAC9BW,gBAAyBzB,KAAKyB,kBAG5BW,kBAAQ4nC,GA4CR3nC,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAAUJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,eA3C/BJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,UAAUC,MAAO,CAAC4nC,UAAU,UAG3B,SAAb50B,EACDrT,EAAAC,EAAAC,cAACgoC,GAAD,CACGP,SAAyBA,EACzB51B,kBAAyBpU,KAAKoU,kBAC9BI,gBAAuBxU,KAAKwU,gBAC5BlP,aAAsBtF,KAAKH,MAAMyF,eAC/B,KAGS,UAAboQ,EACDrT,EAAAC,EAAAC,cAACioC,GAAD,CACGR,SAAyBA,EACzB51B,kBAAyBpU,KAAKoU,kBAC9BI,gBAAuBxU,KAAKwU,gBAC5BlP,aAAsBtF,KAAKH,MAAMyF,eAC/B,KAGS,SAAboQ,EACDrT,EAAAC,EAAAC,cAACkoC,GAAD,CACGT,SAAyBA,EACzB51B,kBAAyBpU,KAAKoU,kBAC9BI,gBAAuBxU,KAAKwU,gBAC5BlP,aAAsBtF,KAAKH,MAAMyF,eAC/B,KAGS,aAAboQ,EACDrT,EAAAC,EAAAC,cAACkoC,GAAD,CACGT,SAAyBA,EACzB51B,kBAAyBpU,KAAKoU,kBAC9BI,gBAAuBxU,KAAKwU,gBAC5BlP,aAAsBtF,KAAKH,MAAMyF,eAC/B,KAGnBwjB,GA5D8B,IA6DhBzmB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAiBJ,EAAAC,EAAAC,cAACkqB,GAAD,CAAY3D,aAAcA,EAAcD,UA7DxD,IA6DiFO,eAAgB,EAAGZ,cAAexoB,KAAK0sB,WAAYpnB,aAActF,KAAKH,MAAMyF,gBAAsB,MAMtMtF,KAAKI,MAAMgV,SACd/S,EAAAC,EAAAC,cAACkX,GAAD,CACGtT,YAAyBnG,KAAKH,MAAMsG,YACpCpB,KAAyB/E,KAAKI,MAAMgV,SACpCsE,SAAyB1Z,KAAKH,MAAM6Z,SACpCC,OAAyB3Z,KAAKH,MAAM8Z,OACpCzU,UAAyBlF,KAAKH,MAAMqF,UACpC0U,SAAyB5Z,KAAKH,MAAM+Z,SACpC9T,QAAyB9F,KAAKH,MAAMiG,QACpCT,aAAyBrF,KAAKH,MAAMwF,aACpCjM,SAAyB4G,KAAKH,MAAMzG,SACpC4H,eAAyBhB,KAAKI,MAAMY,eACpCC,eAAyBjB,KAAKI,MAAMa,eACpCwE,YAAyBzF,KAAKyF,cAC5B,KAILpD,EAAAC,EAAAC,cAACsX,GAAD,CACG9U,KAAyB/E,KAAKI,MAAMmV,UACpC5C,WAAyB3S,KAAKI,MAAMuS,WACpCD,YAAyB1S,KAAKI,MAAMsS,YACpCjN,YAAyBzF,KAAKyF,cAI9BzF,KAAKI,MAAMiV,YACdhT,EAAAC,EAAAC,cAACuX,GAAD,CACG/U,KAAyB/E,KAAKI,MAAMiV,YACpClP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC5B,KAGFzF,KAAKI,MAAMkV,QACdjT,EAAAC,EAAAC,cAACwX,GAAD,CACGhV,KAAyB/E,KAAKI,MAAMkV,QACpCnP,YAAyBnG,KAAKH,MAAMsG,YACpCV,YAAyBzF,KAAKyF,cAC5B,aA9PkB1C,aCFhC2nC,eAyBH,SAAAA,EAAY7qC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAA0qC,IAChB5qC,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAA+uC,GAAAvqC,KAAAH,KAAMH,KA8ETopC,WAAa,SAACnwC,EAAMiqC,GACjBjjC,EAAK4B,SAAS,CACX0hB,WAAUznB,OAAAC,EAAA,EAAAD,CAAA,GAAS7C,IACnB,WACAA,EAAKue,OAAU,CAACnR,IAAK,UAAW5K,MAAO8kB,KAAK6iB,UAAUF,IAEtDjjC,EAAKD,MAAMopC,WAAWnwC,MAnFzBgH,EAAKM,MAA4B,CACxBkW,OAAqBxW,EAAKD,MAAM0c,SAAYzc,EAAKD,MAAM0c,SAASjG,OAAS,GACzE6L,cAAkB,KAClBM,aAAkB,KAClB5H,cAAkB,KAClBuH,WAAkB,CAACC,MAAM,GAAIE,KAAM,GAAID,MAAO,IAC9CvpB,KAAkB,UAClB2d,UAAkB,GAClBwJ,OAAkB,EAClBve,SAAkB,GAClByhB,WAAkB,IAE3BtjB,EAAKgG,QAA4B,GAEjChG,EAAK8d,aAA4B9d,EAAK8d,aAAahd,KAAlBjF,OAAAkF,EAAA,EAAAlF,QAAAkF,EAAA,EAAAlF,CAAAmE,KAhBjBA,4EA8BLskB,GACXpkB,KAAKH,MAAM3F,OAAXyB,OAAAC,EAAA,EAAAD,CAAA,GACMyoB,EADN,CAEGvG,UAAW7d,KAAKI,MAAMrH,KACtB4xC,SAAU,6DAIU9qC,gDAmBvBG,KAAKH,MAAMhH,gDAiCX,IAAIyrB,EAA0BtkB,KAAKH,MAAMqF,WAAa,GAClD0U,IAA6B0K,EAAa1K,UAAY0K,EAAa1K,SACnED,EAA0B2K,EAAa3K,QAAU,GACjDzU,EAA0Bof,EAAapf,WAAa,GACpDwU,EAA0B4K,EAAa5K,UAAY,GACnDsH,EAA0BsD,EAAatD,OAAS,GAChDlD,EAA0B9d,KAAKH,MAAMie,UAAY,GACjDsF,EAAyBpjB,KAAKH,MAAMujB,WAAWwnB,SAAW,GAC9D,OACGvoC,EAAAC,EAAAC,cAAA,QAAME,UAAS,wBAAA1D,OAAwC,UAAb+e,EAAwB,WAAa,KAExE9d,KAAKH,MAAMilB,eACZziB,EAAAC,EAAAC,cAACsoC,GAAD,CAEG5B,WAAyBjpC,KAAKipC,WAC9BU,YAAyB3pC,KAAKH,MAAM8pC,YAEpChwB,OAAyBA,EACzBqH,MAAyBA,EACzBpB,kBAAyB5f,KAAK4f,kBAC9Be,iBAAyB3gB,KAAK2gB,iBAC9B1F,kBAAyBjb,KAAKib,kBAC9B2C,aAAyB5d,KAAK4d,aAC9B3jB,YAAyB+F,KAAKH,MAAM5F,YACpCwmB,mBAAyBzgB,KAAKygB,mBAC9B5nB,aAAyBmH,KAAKH,MAAMhH,aACpC6gB,SAAyBA,EACzBxU,UAAyBA,EACzB0U,SAAyBA,EACzB9T,QAAyB9F,KAAK8F,QAC9Bsd,WAAyBpjB,KAAKI,MAAMgjB,WACpC7G,SAAyBvc,KAAKH,MAAM0c,SACpClX,aAAyBrF,KAAKH,MAAMwF,aACpC+X,WAAyBpd,KAAKH,MAAMud,WACpC3H,aAAyBzV,KAAKH,MAAM4V,aACpCjc,eAAyBwG,KAAKH,MAAMrG,eACpC2M,YAAyBnG,KAAKH,MAAMsG,YACpCxM,WAAyBqG,KAAKH,MAAMlG,WACpCG,iBAAyBkG,KAAKH,MAAM/F,iBACpCV,SAAyB4G,KAAKH,MAAMzG,SACpCG,gBAAyByG,KAAKH,MAAMtG,gBACpCkjB,iBAAyBzc,KAAKH,MAAM4c,iBACpCysB,cAAyBlpC,KAAKH,MAAMqpC,cACpCK,OAAyBvpC,KAAKH,MAAM0pC,OACpCO,mBAAyB9pC,KAAKH,MAAMiqC,mBACpChsB,SAAyBA,EACrCwT,gBAAyBlO,IACX,KAGHhhB,kBAAQpC,KAAKI,MAAMgjB,YAsBjB/gB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAf,eArBJJ,EAAAC,EAAAC,cAACuoC,GAAD,CACG7B,WAAsBjpC,KAAKipC,WAC3BU,YAAsB3pC,KAAKH,MAAM8pC,YACjC5wC,KAAsBiH,KAAKI,MAAMrH,KACjCud,OAAsBtW,KAAKI,MAAMkW,OACjCI,UAAsB1W,KAAKI,MAAMsW,UACjCgD,SAAsBA,EACtBC,OAAsBA,EACtBzU,UAAsBA,EACtB0U,SAAsBA,EACtB9T,QAAsB9F,KAAK8F,QAC3BtM,eAAsBwG,KAAKH,MAAMrG,eACjC2M,YAAsBnG,KAAKH,MAAMsG,YACjCxM,WAAsBqG,KAAKH,MAAMlG,WACjCG,iBAAsBkG,KAAKH,MAAM/F,iBACjCV,SAAsB4G,KAAKH,MAAMzG,SACjCiM,aAAsBrF,KAAKH,MAAMwF,aACjC9L,gBAAsByG,KAAKH,MAAMtG,gBACjC6pB,WAAsBpjB,KAAKI,MAAMgjB,WACjC9d,aAAsBtF,KAAKH,MAAMyF,aACjCgsB,gBAAsBtxB,KAAKH,MAAMujB,qBA1LzBrgB,aAApB2nC,GAaIjmB,aAAoB,CACxBlI,SAAkB,GAClBqoB,YAAkB,EAClBt/B,cAAkB,EAClBmD,SAAkB,EAClBg8B,WAAkB,EAClBmG,QAAkB,GAClB3B,WAAkB,aAClBC,cAAkB,aAClBY,oBAAsB,GA2Kb9lB,mBAAW0mB,IC1EXhmB,eAlCc,SAAAhgB,EAAwDigB,GAAa,IAAnEC,EAAmElgB,EAAnEkgB,iBAAkBmmB,EAAiDrmC,EAAjDqmC,mBAAoBlmB,EAA6BngB,EAA7BmgB,cACjE,MAAQ,CACNtI,SAAgBoI,EAASpI,SACzBuB,SAAgB+G,EAAc/G,SAC9B5Y,UAAgB0f,EAAiB1f,UACjCG,aAAgBwf,EAAcxf,aAC9BC,aAAgBylC,EAAmBzlC,aACnCmD,QAAgBsiC,EAAmBtiC,QACnCg8B,UAAgBsG,EAAmBtG,UACnCkF,YAAgBoB,EAAmBpB,YACnCxjC,YAAgBye,EAAiBze,YACjCsP,aAAgBmP,EAAiBnP,aACjC8zB,OAAgBwB,EAAmBxB,OACnCO,mBAAqBiB,EAAmBjB,mBACxC1mB,WAAgByB,EAAczB,WAC9B0B,eAAoBD,EAAcC,eAClCkmB,qBAA0BpmB,EAAiBomB,uBAKrB,SAAAjmB,GAAQ,MAAK,CACvCjrB,iBAAsB,SAAChB,GAAD,OAAUisB,EAASoO,EAAkCr6B,KAC3Ea,WAAsB,SAACb,GAAD,OAAUisB,EAASoO,EAA4Br6B,KACrED,aAAsB,SAACC,GAAD,OAAUisB,EAASoO,EAA8Br6B,KACvEM,SAAsB,SAACN,GAAD,OAAUisB,EAASoO,EAA0Br6B,KACnEU,eAAsB,SAACV,GAAD,OAAUisB,EAASoO,EAAgCr6B,KACzES,gBAAsB,SAACT,GAAD,OAAUisB,EAASoO,EAAiCr6B,KAC1EoB,OAAsB,SAACpB,GAAD,OAAUisB,EAASoO,EAAwBr6B,KACjEmB,YAAsB,SAACnB,GAAD,OAAUisB,EAASoO,EAA6Br6B,KACtE45B,YAAsB,SAAC55B,GAAD,OAAUisB,EAASmO,GAA0Bp6B,KACnEmwC,WAAsB,SAACnwC,GAAD,OAAUisB,EPrHR,SAACjsB,GACzB,MAAQ,CACNC,KAAMsvC,GACNvvC,QOkHuCksB,CAAmBlsB,KAC5DowC,cAAsB,SAACpwC,GAAD,OAAUisB,EPrGL,SAACjsB,GAE5B,MAAQ,CACNC,KAAMuvC,GACNxvC,QOiGuCksB,CAAsBlsB,OAElD4rB,CAA6CV,YAzH/B,SAAA/f,GA2BvB,IA1BJsY,EA0BItY,EA1BJsY,SACA1jB,EAyBIoL,EAzBJpL,aACAqM,EAwBIjB,EAxBJiB,UACAG,EAuBIpB,EAvBJoB,aACAyY,EAsBI7Z,EAtBJ6Z,SACAxY,EAqBIrB,EArBJqB,aACAmD,EAoBIxE,EApBJwE,QACAg8B,EAmBIxgC,EAnBJwgC,UACAwE,EAkBIhlC,EAlBJglC,WACAU,EAiBI1lC,EAjBJ0lC,YACAnwC,EAgBIyK,EAhBJzK,eACA2M,EAeIlC,EAfJkC,YACAxM,EAcIsK,EAdJtK,WACAP,EAaI6K,EAbJ7K,SACAU,EAYImK,EAZJnK,iBACAP,EAWI0K,EAXJ1K,gBACAW,EAUI+J,EAVJ/J,OACAD,EASIgK,EATJhK,YACAwb,EAQIxR,EARJwR,aACAyzB,EAOIjlC,EAPJilC,cACAK,EAMItlC,EANJslC,OACAO,EAKI7lC,EALJ6lC,mBACDpX,EAIKzuB,EAJLyuB,YACCtP,EAGInf,EAHJmf,WACA0B,EAEI7gB,EAFJ6gB,eACAkmB,EACI/mC,EADJ+mC,qBAEA,OACE3oC,EAAAC,EAAAC,cAAC0oC,GAAD,CACE1uB,SAAqBA,EACrB1jB,aAAqBA,EACrBqM,UAAqBA,EACrBG,aAAqBA,EACrByY,SAAqBA,EACrBxY,aAAqBA,EACrBmD,QAAqBA,EACrBg8B,UAAqBA,EACrBwE,WAAqBA,EACrBU,YAAqBA,EACrBnwC,eAAqBA,EACrB2M,YAAqBA,EACrBxM,WAAqBA,EACrBP,SAAqBA,EACrBU,iBAAqBA,EACrBP,gBAAqBA,EACrBW,OAAqBA,EACrBD,YAAqBA,EACrBwb,aAAqBA,EACrByzB,cAAqBA,EACrBK,OAAqBA,EACrBO,mBAAqBA,EACxBpX,YAAqBA,EACrBtP,WAAqBA,EACrB0B,eAAqBA,EACrBkmB,qBAA2BA,OC5DxBN,oLAEF,OACEroC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC2oC,GAAD,cAJkBnoC,aAUXihB,eAAW0mB,ICObt5B,GAAS,CAAC,CACnB/C,KAAM,IACN88B,OAAO,EACPC,UAAW3E,IACV,CACDp4B,KAAM,SACN+8B,UAAWrG,IAGb,CACE12B,KAAM,sBACN+8B,UAAW5E,IAGb,CACEn4B,KAAM,mBACN+8B,UAAW1F,KAIF2F,GAAgB,CAAC,CAC5Bh9B,KAAM,aACN+8B,UAAWnmB,IACV,CACD5W,KAAM,YACN+8B,UAAWE,IACV,CACDj9B,KAAM,WACN+8B,UAAW1H,IACV,CACDr1B,KAAM,YACN+8B,UAAW1P,IACV,CACDrtB,KAAM,gBACN+8B,UAAWV,KAIE,SAASa,KAEtB,IAAI7Z,EAAgB,GACpB,GAAqB,qBAAX1hB,OAAwB,CAChC,IAAIw7B,EAAgBC,MAAqB,GACrCC,EAAgB/kB,GAAU,sBAAwB,GAGtD,GADA+K,EAAoBga,GAAiB,GAClCF,EAAU3E,OAAS6E,EAAc7E,MAIb,IAFHzmB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAErDjjB,QACRgjB,aAAaqrB,QAAQ,SAAUvrB,KAAK6iB,UAAU1nC,GAAOX,QAAU,KAQrE,IACI8tB,EADgBkjB,cACSC,SAE7B,OACExpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwpC,SAAP,KACEzpC,EAAAC,EAAAC,cAACwpC,GAAD,CAAQra,KAAMA,EAAMhJ,YAAaA,IACjCrmB,EAAAC,EAAAC,cAAC2kC,GAAA,EAAD,CAAWC,OAAK,EAAC1kC,UAAU,oBAEN,MAAhBimB,GAAuC,WAAhBA,GAA4C,qBAAhBA,GAAuCA,EAAY/P,SAAS,mBAA0E,KAAnDtW,EAAAC,EAAAC,cAACypC,GAAD,CAASta,KAAMA,EAAMhJ,YAAaA,IAG3KrmB,EAAAC,EAAAC,cAAC0pC,EAAA,EAAD,KACGZ,GAAc5/B,IAAI,SAACmF,GAAD,OACjBvO,EAAAC,EAAAC,cAAC2pC,GAAD,CAAchmC,IAAK0K,EAAMvC,KAAMA,KAAMuC,EAAMvC,KAAM+8B,UAAWx6B,EAAMw6B,UAAW7uB,SAAUmV,MAExFtgB,GAAO3F,IAAI,SAAAmF,GAAK,OACfvO,EAAAC,EAAAC,cAAC0pC,EAAA,EAADtwC,OAAA8hB,OAAA,CAAOvX,IAAG,SAAAnH,OAAW6R,EAAMvC,OAAYuC,SAQnD,SAASs7B,GAATjoC,GAAyD,IAAtBlB,EAAsBkB,EAAjCmnC,UAAyBe,EAAQxwC,OAAAywC,EAAA,EAAAzwC,CAAAsI,EAAA,eACnDjH,EAAGrB,OAAAC,EAAA,EAAAD,CAAA,CAAWyvC,UAAWroC,GAAcopC,GACvCza,EAAY10B,EAAIuf,SAEpB,OAAIna,kBAAQsvB,GAORrvB,EAAAC,EAAAC,cAAC0pC,EAAA,EAAD,CACEhtB,GAAI,CACF4sB,SAAU,YAPdxpC,EAAAC,EAAAC,cAAC0pC,EAAA,EAAD,CAAO/lC,IAAKlJ,EAAIqR,KAAMA,KAAMrR,EAAIqR,KAAM+8B,UAAW,kBAAM/oC,EAAAC,EAAAC,cAACvF,EAAIouC,UAAL,CAAe7uB,SAAUmV,WCvFvE2a,oLATX,OACIhqC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+EACTJ,EAAAC,EAAAC,cAAA,OAAKlH,GAAG,SAASoH,UAAU,WAC3BJ,EAAAC,EAAAC,cAACgpC,GAAD,cALIxoC,aCAEupC,QACW,cAA7Bt8B,OAAO3H,SAASjN,UAEe,UAA7B4U,OAAO3H,SAASjN,UAEhB4U,OAAO3H,SAASjN,SAAS+B,MACvB,wEClBAovC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdq/B,UAAU,IAkBC6H,GAfU,WAAgC,IAA/BpsC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EACrD,OAAO1G,EAAOxmB,MACV,IAAK,WACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,EAAOE,UAAW,KACrF,IAAK,mBAED,OADJzmC,QAAQC,IAAI,aAAcohB,EAAOzmB,MACtB6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAME,UAAUplB,EAAOzmB,OAC1F,IAAK,iBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAOE,UAAUplB,EAAOzmB,OAG1F,QACA,OAAOsH,ICpBTmsC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdigC,mBAAmB,IAoBRkH,GAjBmB,WAAgC,IAA/BrsC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EAC9D,OAAO1G,EAAOxmB,MACV,IAAK,wBACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAOc,mBAAoB,KAC/F,IAAK,kBACD,OAAO5pC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,EAAOc,mBAAoB,KAC9F,IAAK,0BAED,OADJrnC,QAAQC,IAAI,aAAcohB,EAAOzmB,MACtB6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAMc,mBAAmBhmB,EAAOzmB,OACnG,IAAK,wBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAOc,mBAAmBhmB,EAAOzmB,OAGnG,QACA,OAAOsH,ICtBTmsC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdghC,kBAAkB,GAClBF,WAAkB,IA2BPC,GAxBkB,WAAgC,IAA/BjmC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EAE7D,OAAO1G,EAAOxmB,MACV,IAAK,iBACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,EAAO6B,kBAAmB,GACzFF,WAAY,KAChB,IAAK,yBAED,OADJloC,QAAQC,IAAI,aAAcohB,EAAOzmB,MACtB6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAM6B,kBAAkB/mB,EAAOzmB,KAAMstC,WAAY,KACpH,IAAK,uBAED,IAAIhC,EAAM7kB,EAAOzmB,KAAKyG,QACtB,OAAO5D,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAO6B,kBAAkB,GAAIF,WAAYhC,IAEvG,IAAK,0BAGD,OAAOzoC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAO6B,kBAAkB,GAAIF,WAD5E,4BAIvB,QACA,OAAOhmC,IC9BTmsC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdD,aAAa,GACbyY,SAAS,GACTgpB,iBAAkB,GAClBzD,WAAY,QACZjgB,WAAY,GACZ0B,gBAAgB,GA6BL4nB,GA1BS,WAAgC,IAA/BtsC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EACpD,OAAO1G,EAAOxmB,MACV,IAAK,eACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,EAAO3f,gBAAgB,EAAOuiB,KAAK,GAAIjkB,WAAY,KACtH,IAAK,uBACD,OAAOznB,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAM3f,gBAAgB,EAAMuiB,KAAK9nB,EAAOzmB,KAAKuuC,KAAMhiC,aAAaka,EAAOzmB,KAAK6zC,SAAU7uB,SAAUyB,EAAOzmB,KAAKglB,SAAUulB,WAAY9jB,EAAOzmB,KAAKuqC,WAAYjgB,WAAY7D,EAAOzmB,KAAKsqB,aACrP,IAAK,qBACD,OAAOznB,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAO3f,gBAAgB,EAAMuiB,KAAK,GAAIhiC,aAAa,GAAIyY,SAAU,GAAIulB,WAAY,UACnJ,IAAK,eACD,OAAO1nC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB2mC,qBAAoB,IAC3C,IAAK,uBACD,OAAOprC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB2mC,qBAAoB,EAAOD,iBAAiBvnB,EAAOzmB,OACzE,IAAK,qBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB2mC,qBAAoB,EAAMD,iBAAiB,KACjE,IAAK,cACD,IAAI1jB,EAAgBhjB,EAAMgjB,WAG1B,OAFAA,EAAW7D,EAAOzmB,KAAKoN,KAAaqZ,EAAOzmB,KAAKwC,MAEzCK,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBgjB,WAAYA,IAGlC,QACA,OAAOhjB,IClCTmsC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdsnC,aAAa,EACbC,eAAe,EACfpwB,kBAAkB,EAClBqwB,iBAAiB,EACjBC,mBAAmB,EACnB/B,sBAAsB,EACtBgC,gBAAgB,EAChBC,kBAAkB,EAClBC,qBAAqB,EACrBC,eAAe,EACfC,iBAAiB,EACjBC,oBAAoB,EACpBnoC,UAAU,GACViB,YAAY,GACZsP,aAAc,GACdvC,YAAa,CAACE,QAAS,CAACG,aAAc,EAAGC,aAAc,EAAGC,sBAAuB,GAAI1a,KAAM,YA+EhFu0C,GA5Ec,WAAgC,IAA/BltC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EACzD,OAAO1G,EAAOxmB,MAEV,IAAK,gBACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,IACnE,IAAK,wBACD,OAAO9oC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAMv/B,UAAUqa,EAAOzmB,OAC1F,IAAK,sBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAOv/B,UAAU,KAGnF,IAAK,cACD,OAAOvJ,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBqc,kBAAiB,EAAMmwB,aAAY,EAAOC,eAAc,IAC/E,IAAK,sBACD,OAAOlxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBqc,kBAAiB,EAAOmwB,aAAY,EAAOC,eAAc,IAC/E,IAAK,oBACD,OAAOlxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBqc,kBAAiB,EAAOmwB,aAAY,EAAMC,eAAc,IAG9E,IAAK,YACD,OAAOlxC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB4qC,sBAAqB,EAAM8B,iBAAgB,EAAOC,mBAAkB,IAC3F,IAAK,oBACD,OAAOpxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB4qC,sBAAqB,EAAO8B,iBAAgB,EAAOC,mBAAkB,IAC3F,IAAK,kBACD,OAAOpxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB4qC,sBAAqB,EAAO8B,iBAAgB,EAAMC,mBAAkB,IAI1F,IAAK,mBACD,OAAOpxC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB8sC,qBAAoB,EAAMF,gBAAe,EAAOC,kBAAiB,EAAO9mC,YAAa,KAC5G,IAAK,2BACD,OAAOxK,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8sC,qBAAoB,EAAOF,gBAAe,EAAOC,kBAAiB,EAAM9mC,YAAaoZ,EAAOzmB,OAClH,IAAK,yBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8sC,qBAAoB,EAAOF,gBAAe,EAAMC,kBAAiB,EAAO9mC,YAAa,KAG3G,IAAK,cACD,OAAOxK,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBitC,oBAAmB,EAAMF,eAAc,EAAOC,iBAAgB,IACrF,IAAK,sBACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBitC,oBAAmB,EAAOF,eAAc,EAAOC,iBAAgB,IACrF,IAAK,oBACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBitC,oBAAmB,EAAOF,eAAc,EAAMC,iBAAgB,IAGpF,IAAK,qBACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBitC,oBAAmB,EAAMF,eAAc,EAAOC,iBAAgB,IACrF,IAAK,6BACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBitC,oBAAmB,EAAOF,eAAc,EAAOC,iBAAgB,IACrF,IAAK,2BACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBitC,oBAAmB,EAAOF,eAAc,EAAMC,iBAAgB,IAIpF,IAAK,cACD,OAAOzxC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBuvB,aAAY,IACnC,IAAK,oBACD,OAAOh0B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBqV,aAAc,KACpC,IAAK,sBACD,OAAO9Z,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBuvB,aAAY,EAAOla,aAAc8J,EAAOzmB,OAC9D,IAAK,oBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBuvB,aAAY,EAAOla,aAAc,KAIvD,IAAK,kBAEL,IAAK,wBACD,OAAO9Z,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8S,YAAYvX,OAAAC,EAAA,EAAAD,CAAA,GAAK4wC,GAAar5B,eACpD,IAAK,0BACD,OAAOvX,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8S,YAAaqM,EAAOzmB,OAG1C,QACA,OAAOsH,IChGTmsC,GAAe,CACjB3H,YAAY,EACZn8B,SAAS,EACTg8B,WAAW,EACXn/B,cAAc,EACdqkC,YAAY,GACZJ,OAAQ,GACRO,oBAAoB,GAwBTiB,GArBgB,WAAgC,IAA/B3qC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EAC3D,OAAO1G,EAAOxmB,MACV,IAAK,cACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,EAAMmD,SAAQ,EAAOg8B,WAAU,IACnE,IAAK,sBACD,OAAO9oC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAOg8B,WAAU,EAAMkF,YAAYpqB,EAAOzmB,OAC5F,IAAK,oBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,EAAOmD,SAAQ,EAAMg8B,WAAU,EAAOkF,YAAY,KAErF,IAAK,0BACD,OAAOhuC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB0pC,oBAAmB,EAAMrhC,SAAQ,EAAOg8B,WAAU,IACzE,IAAK,kCACD,OAAO9oC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB0pC,oBAAmB,EAAOrhC,SAAQ,EAAOg8B,WAAU,EAAM8E,OAAQhqB,EAAOzmB,OAC9F,IAAK,gCACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB0pC,oBAAmB,EAAOrhC,SAAQ,EAAMg8B,WAAU,EAAO8E,OAAQ,KAGvF,QACA,OAAOnpC,IC5BTmsC,GAAe,CACjBrnC,UAAU,GACVitB,aAAc,GACdjK,YAAY,EACZ1S,WAAW,EACXma,aAAa,EACbvD,aAAa,EACb7B,YAAa,GACbkF,iBAAkB,GAClB/E,oBAAqB,IAuCV6iB,GApCa,WAAgC,IAA/BntC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EACxD,OAAO1G,EAAOxmB,MACV,IAAK,cACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBoV,WAAU,IACjC,IAAK,sBACD,OAAO7Z,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAOkV,oBAAoBnL,EAAOzmB,OAClE,IAAK,oBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAOkV,oBAAoB,KAE3D,IAAK,eACD,OAAO/uB,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBgsB,aAAY,IACnC,IAAK,uBACD,OAAOzwB,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBgsB,aAAY,EAAO+F,aAAa5S,EAAOzmB,OAC7D,IAAK,qBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBgsB,aAAY,EAAO+F,aAAa,KAEtD,IAAK,kBACD,OAAOx2B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBuvB,aAAY,IACnC,IAAK,0BACD,OAAOh0B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBuvB,aAAY,EAAOF,iBAAkBlQ,EAAOzmB,OAClE,IAAK,wBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBuvB,aAAY,EAAOF,iBAAkB,KAE3D,IAAK,QACD,OAAO9zB,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB8nB,YAAW,IAClC,IAAK,gBACD,OAAOvsB,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8nB,YAAW,EAAOqC,YAAahL,EAAOzmB,OAC5D,IAAK,cACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB8nB,YAAW,EAAOqC,YAAa,KAGrD,QACA,OAAOnqB,IC7CTmsC,GAAe,CACjBpW,YAAwB,GACxB3gB,WAAwB,EACxBlQ,cAAwB,EACxB21B,kBAAwB,EACxBI,gBAAwB,EACxBC,mBAAwB,EACxBX,iBAAwB,EACxBQ,eAAwB,EACxB1B,gBAAwB,EACxB9B,WAAwB,GACxBU,UAAwB,IA+FbmV,GA5FQ,WAAgC,IAA/BptC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EACnD,OAAO1G,EAAOxmB,MACV,IAAK,WACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBoV,WAAU,EAAM2gB,YAAY,KACnD,IAAK,iBACD,OAAOx6B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAO2gB,YAAY,KACnD,IAAK,mBACD,OAAOx6B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAO2gB,YAAY5W,EAAOzmB,OAE1D,IAAK,aACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBi7B,gBAAe,IACtC,IAAK,mBACD,OAAO1/B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBi7B,gBAAe,EAAO1D,WAAW,KACvD,IAAK,qBACD,OAAOh8B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBi7B,gBAAe,EAAO1D,WAAWpY,EAAOzmB,OAE9D,IAAK,iBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBkF,cAAa,IACpC,IAAK,uBAEL,IAAK,yBACD,OAAO3J,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBkF,cAAa,IAEnC,IAAK,cACD,OAAO3J,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB66B,kBAAiB,IACxC,IAAK,oBAEL,IAAK,sBACD,OAAOt/B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB66B,kBAAiB,IAEvC,IAAK,eACD,OAAOt/B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBu6B,iBAAgB,IACvC,IAAK,qBAEL,IAAK,uBACD,OAAOh/B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBu6B,iBAAgB,IAEtC,IAAK,aACD,OAAOh/B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBk7B,mBAAkB,IACzC,IAAK,mBAEL,IAAK,qBACD,OAAO3/B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBk7B,mBAAkB,IAEzC,IAAK,eACD,OAAO3/B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,GAChB,IAAK,qBACD,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBu3B,WAAW,KAClC,IAAK,uBACD,OAAOh8B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBu3B,WAAYpY,EAAOzmB,OAE1C,IAAK,WACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmB+6B,eAAc,IACrC,IAAK,iBACD,OAAOx/B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB+6B,eAAc,EAAO9C,UAAU,KACrD,IAAK,mBACD,OAAO18B,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkB+6B,eAAc,EAAO9C,UAAW9Y,EAAOzmB,OAE7D,IAAK,WACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,IACtC,IAAK,iBACD,OAAO99B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAU,KACvD,IAAK,mBACD,OAAO18B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAW9Y,EAAOzmB,OAE/D,IAAK,YACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,IACtC,IAAK,kBACD,OAAO99B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAU,KACvD,IAAK,oBACD,OAAO18B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAW9Y,EAAOzmB,OAE/D,IAAK,cACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,IACtC,IAAK,oBACD,OAAO99B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAU,KACvD,IAAK,sBACD,OAAO18B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAW9Y,EAAOzmB,OAE/D,IAAK,eACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,IACtC,IAAK,qBACD,OAAO99B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAU,KACvD,IAAK,uBACD,OAAO18B,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBq5B,gBAAe,EAAOpB,UAAW9Y,EAAOzmB,OAG/D,QACA,OAAOsH,ICrGTmsC,GAAe,CACjB1P,WAAY,GACZrnB,WAAW,EACX+sB,gBAAgB,EAChBM,oBAAoB,EACpBpC,UAAW,IAmCAgN,GAhCO,WAAgC,IAA/BrtC,EAA+B4lB,UAAA1oB,OAAA,QAAA2oB,IAAAD,UAAA,GAAAA,UAAA,GAAzBumB,GAAchtB,EAAWyG,UAAA1oB,OAAA,EAAA0oB,UAAA,QAAAC,EAClD,OAAO1G,EAAOxmB,MACV,IAAK,aACD,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBoV,WAAU,IACjC,IAAK,mBACD,OAAO7Z,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAOqnB,WAAW,KAClD,IAAK,qBACD,OAAOlhC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBoV,WAAU,EAAOqnB,WAAYtd,EAAOzmB,OAE1D,IAAK,YACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAmBmiC,gBAAgB,IACvC,IAAK,kBACD,OAAO5mC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBmiC,gBAAgB,IACtC,IAAK,oBAED,OAAO5mC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkBmiC,gBAAe,EAAO1F,WAAWlhC,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAMy8B,WAAZ,CAAwBc,WAAYpe,EAAOzmB,SAEjG,IAAK,iBAEL,IAAK,mBACD,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GAAKyE,EAAZ,CAAoByiC,oBAAmB,IAC3C,IAAK,wBACD,OAAOlnC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkByiC,oBAAmB,EAAOO,mBAAoB,GAAI3C,UAAU,KAClF,IAAK,yBACD,OAAO9kC,OAAAC,EAAA,EAAAD,CAAA,GAAIyE,EAAX,CAAkByiC,oBAAmB,EAAOO,mBAAmB7jB,EAAOzmB,KAAKsqC,mBAAoB3C,UAAUlhB,EAAOzmB,KAAK40C,gBAGzH,QACA,OAAOttC,IC1BAutC,gBAAgB,CAC9B9I,gBACAW,yBACAa,wBACAxhB,iBACAkmB,sBACAnmB,oBACAoO,mBACAuI,kBACAiI,8EChBGoK,GAAwBryC,GAAOf,OAC/BqzC,GAAwBtyC,GAAOd,QAE5B,SAASqzC,KACZ,IAAIxuB,EAAM0G,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,GACN+nB,GAAoB/nB,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,GACjCkT,GAAoBlT,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,GACjCzJ,EAAwBoK,GAAU,sBAAwB,GAE1DqnB,EAAoB,CACIC,OAAQ,mBACRC,eAAgB,mBAChBC,8BAA+B,KAEtD5xB,EAASsqB,QACVmH,EAAWI,cAAqB,UAAY7xB,EAASsqB,OAGzD,IAAIwH,EAAWC,KAAMC,OAAO,CACxBC,QAASR,IAGTh9B,EAAoB,GACpBy9B,EAAoB,GACxB,OAAOnvB,GACH,IAAI,OACAmvB,EAAWruB,KAAK6iB,UACZ,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAASU,KAAKnB,GAAWG,EAAKU,GAClD,MAEA,IAAI,MACAA,EAAWruB,KAAK6iB,UACZ,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAASW,IAAIpB,GAAWG,EAAKU,GACjD,MAEA,IAAI,SACAA,EAAWruB,KAAK6iB,UACZ,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAAS1X,OAAOiX,GAAWG,EAAKU,GACpD,MAEA,IAAI,MACAz9B,EAAgBq9B,EAAStoB,IAAI6nB,GAAWG,GAGhD,OAAO/8B,EAGJ,SAASi+B,KACZ,IAAI3vB,EAAM0G,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,GACN+nB,GAAoB/nB,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,GACjCkT,GAAoBlT,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,GACjCzJ,EAAwBoK,GAAU,sBAAwB,GAE1DqnB,EAAoB,CACIC,OAAQ,mBACRC,eAAgB,mBAChBC,8BAA+B,KAEtD5xB,EAASsqB,QACVmH,EAAWI,cAAqB,UAAY7xB,EAASsqB,OAGzD,IAAIwH,EAAWC,KAAMC,OAAO,CACxBC,QAASR,IAGTh9B,EAAoB,GACxB,OAAOsO,GACH,IAAI,OACA,IAAImvB,EAAWruB,KAAK6iB,UAChB,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAASU,KAAKlB,GAAYE,EAAKU,GACnD,MAEA,IAAI,MACAA,EAAWruB,KAAK6iB,UACZ,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAASW,IAAInB,GAAYE,EAAKU,GAClD,MAEA,IAAI,SACAA,EAAWruB,KAAK6iB,UACZ,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAAS1X,OAAOkX,GAAYE,EAAKU,GACrD,MAEA,IAAI,MACAz9B,EAAgBq9B,EAAStoB,IAAI8nB,GAAYE,GAGjD,OAAO/8B,EAGJ,SAASk+B,KACZ,IAAI5vB,EAAM0G,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,GACN+nB,GAAoB/nB,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,GACjCkT,GAAoBlT,UAAA1oB,QAAA,OAAA2oB,EAAAD,UAAA,KAAa,IACTW,GAAU,sBAAwB,IAOhDkgB,MAId,IAAIwH,EAAWC,KAAMC,OAAO,CACxBC,QAVoB,CACIP,OAAQ,mBACRC,eAAgB,mBAChBC,8BAA+B,OAUvDn9B,EAAoB,GACxB,OAAOsO,GACH,IAAI,OACA,IAAImvB,EAAWruB,KAAK6iB,UAChB,CACIyL,QAAQ,EACRC,IAAI,EACJC,SAAS,MACTC,IAAI,CACAC,GAAG,QACHnmC,KAAK,aAETH,OAAO0wB,IAEfloB,EAAgBq9B,EAASU,KAAK,SAAShB,EAAKU,GAChD,MAEA,IAAI,MACAz9B,EAAgBq9B,EAAStoB,IAAI,gCAGrC,OAAO/U,mBCzLMm+B,iBAgDAC,IAhDV,SAAUD,GAAS5vB,GAAnB,IAAA8vB,EAAArL,EAAAsL,EAAAt+B,EAAA,OAAAu+B,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOiB,OAPjBF,EAAAC,KAAA,EAEwB,GACpB,aACCL,EAAmB9vB,EAAOzmB,KACzBkrC,EAAkBqL,EAAQrL,gBACtBqL,EAAQrL,SANlByL,EAAAE,KAAA,EAOuBxvC,aAAK2tC,GAAS,OAJjC,aAI8CuB,GAPlD,YAOOC,EAPPG,EAAAG,MASY92C,KAAK4G,MATjB,CAAA+vC,EAAAE,KAAA,SAUK,OAVLF,EAAAE,KAAA,GAUWX,aAAIa,GAA6BP,EAAQx2C,KAAK4G,QAVzD,YAcI4vC,EAAQx2C,KAAKkY,OAdjB,CAAAy+B,EAAAE,KAAA,SAwCK,OAzBI3+B,EAASs+B,EAAQx2C,KAAKkY,OAG1B7P,GAAc,CAAC5B,QAAS,oDAKrBykC,GACCtd,GAAa,qBACbF,GAAkBxV,EAAO0gB,KAAM,uBAG/BhL,GAAa,qBACbH,GAAUvV,EAAO0gB,KAAM,sBAQ3BpR,aAAaqrB,QAAQ,SAAUvrB,KAAK6iB,UAAU1nC,GAAOX,QAAU,KAE/Dk1C,GAAgB9+B,EAAO0gB,MAvC5B+d,EAAAE,KAAA,GAwCWX,aAAIa,GAA+B7+B,IAxC9C,QAAAy+B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SA2CClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SA5Cf,yBAAAkwC,EAAAO,SAAAC,GAAA,eAgDA,SAAUb,KAAV,OAAAG,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEC,OAFDO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEOQ,aAAWC,GAAwBjB,IAF1C,OAAAe,EAAAP,KAAA,eAAAO,EAAAR,KAAA,EAAAQ,EAAAH,GAAAG,EAAA,SAIChyC,QAAQC,IAAR+xC,EAAAH,IAJD,wBAAAG,EAAAF,SAAAK,GAAA,+BClDUC,iBAsBAC,IAtBV,SAAUD,GAAgB/wB,GAA1B,IAAA+vB,EAAAt+B,EAAA,OAAAu+B,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIiB,OAJjBF,EAAAC,KAAA,EAEwB,GACpB,uBAHJD,EAAAE,KAAA,EAIuBxvC,aAAK2tC,GAAS,OADjC,uBAC8CvuB,EAAOzmB,MAJzD,YAIOw2C,EAJPG,EAAAG,MAMY92C,KAAK4G,MANjB,CAAA+vC,EAAAE,KAAA,QAOK,OAPLF,EAAAE,KAAA,EAOWX,aAAIwB,GAA+ClB,EAAQx2C,KAAK4G,QAP3E,WAWI4vC,EAAQx2C,KAAKkY,OAXjB,CAAAy+B,EAAAE,KAAA,SAcK,OAFI3+B,EAASs+B,EAAQx2C,KAAKkY,OAZ/By+B,EAAAE,KAAA,GAcWX,aAAIwB,GAAiDx/B,IAdhE,QAAAy+B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAiBClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SAlBf,yBAAAkwC,EAAAO,SAAAS,GAAA,eAsBA,SAAUF,KAAV,OAAAhB,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEC,OAFDO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEOQ,aAAWO,GAAwCJ,IAF1D,OAAAJ,EAAAP,KAAA,eAAAO,EAAAR,KAAA,EAAAQ,EAAAH,GAAAG,EAAA,SAIChyC,QAAQC,IAAR+xC,EAAAH,IAJD,wBAAAG,EAAAF,SAAAW,GAAA,+BCtBUC,iBAsBAC,IAtBV,SAAUD,GAAerxB,GAAzB,IAAA+vB,EAAAt+B,EAAA,OAAAu+B,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIiB,OAJjBF,EAAAC,KAAA,EAEwB,GACpB,sBAHJD,EAAAE,KAAA,EAIuBxvC,aAAK2tC,GAAS,OADjC,sBAC8CvuB,EAAOzmB,MAJzD,YAIOw2C,EAJPG,EAAAG,MAMY92C,KAAK4G,MANjB,CAAA+vC,EAAAE,KAAA,QAOK,OAPLF,EAAAE,KAAA,EAOWX,aAAI8B,GAA6CxB,EAAQx2C,KAAK4G,QAPzE,WAWI4vC,EAAQx2C,KAAKkY,OAXjB,CAAAy+B,EAAAE,KAAA,SAcK,OAFI3+B,EAASs+B,EAAQx2C,KAAKkY,OAZ/By+B,EAAAE,KAAA,GAcWX,aAAI8B,GAA+C9/B,IAd9D,QAAAy+B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAiBClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SAlBf,yBAAAkwC,EAAAO,SAAAe,GAAA,eAsBA,SAAUF,KAAV,OAAAtB,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEC,OAFDO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEOqB,aAAYC,GAAsCL,IAFzD,OAAAV,EAAAP,KAAA,eAAAO,EAAAR,KAAA,EAAAQ,EAAAH,GAAAG,EAAA,SAIChyC,QAAQC,IAAR+xC,EAAAH,IAJD,wBAAAG,EAAAF,SAAAkB,GAAA,+BCrBUC,iBAuCAvK,iBA0BAwK,IAjEV,SAAUD,GAAa5xB,GAAvB,IAAA+vB,EAAAt+B,EAAAqG,EAAA,OAAAk4B,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIiB,OAJjBF,EAAAC,KAAA,EAEwB,GACpB,yBAHJD,EAAAE,KAAA,EAIuBxvC,aAAK8uC,GAAW,MADnC,0BAHJ,YAIOK,EAJPG,EAAAG,MAOY92C,KAAK4G,MAPjB,CAAA+vC,EAAAE,KAAA,QASK,OATLF,EAAAE,KAAA,EASWX,aAAIqC,MATf,WAaI/B,EAAQx2C,KAAKkY,OAbjB,CAAAy+B,EAAAE,KAAA,SAsBK,OARI3+B,EAASs+B,EAAQx2C,KAAKkY,QACtBqG,EAAYrG,EAAOqG,QAAU,KAE7B1b,OAAOgZ,KAAK0C,GAAU,IAAIF,QAAQ,SAAAxL,GAC9B0L,EAAO1L,GAAayU,KAAKC,MAAMhJ,EAAO1L,IAAM,QAlBzD8jC,EAAAE,KAAA,GAsBWX,aAAIqC,GAAmC,CACzC1E,SAAU37B,EAAO27B,UAAY,GAC7B7uB,SAAU9M,EAAO6M,WAAa,GAC9BwpB,KAAM,CAACh5B,KAAM2C,EAAO3C,KAAMi5B,MAAOt2B,EAAOq2B,MACxChE,WAAYryB,EAAO6kB,YACnBzS,WAAY/L,KA3BrB,QAAAo4B,EAAAE,KAAA,iBAgCC,OAhCDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAE,KAAA,GAgCOX,aAAIqC,MAhCX,QAiCCnzC,QAAQC,IAAI,CAACoB,QAASkwC,EAAAM,GAAExwC,UAjCzB,yBAAAkwC,EAAAO,SAAAsB,GAAA,eAuCA,SAAU1K,GAAarnB,GAAvB,IAAA+vB,EAAAt+B,EAAA,OAAAu+B,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAIiB,OAJjBO,EAAAR,KAAA,EAEwB,GACpB,oBAHJQ,EAAAP,KAAA,EAIuBxvC,aAAK2tC,GAAS,MADjC,qBAHJ,YAIOwB,EAJPY,EAAAN,MAOY92C,KAAK4G,MAPjB,CAAAwwC,EAAAP,KAAA,QASK,OATLO,EAAAP,KAAA,EASWX,aAAIqC,MATf,WAaI/B,EAAQx2C,KAAKkY,OAbjB,CAAAk/B,EAAAP,KAAA,SAiBK,OAHI3+B,EAASs+B,EAAQx2C,KAAKkY,OAd/Bk/B,EAAAP,KAAA,GAiBWX,aAAIqC,GAAuCrgC,IAjBtD,QAAAk/B,EAAAP,KAAA,iBAqBC,OArBDO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAAAA,EAAAP,KAAA,GAqBOX,aAAIqC,MArBX,QAsBCnzC,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAtBf,yBAAA2wC,EAAAF,SAAAuB,GAAA,eA0BA,SAAUH,KAAV,OAAA7B,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAEC,OAFD6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAEOQ,aAAWsB,GAA6BN,IAF/C,OAGC,OAHDK,EAAA7B,KAAA,EAGOQ,aAAWsB,GAA6B7K,IAH/C,OAAA4K,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,EAAA8B,EAAAzB,GAAAyB,EAAA,SAKCtzC,QAAQC,IAARqzC,EAAAzB,IALD,yBAAAyB,EAAAxB,SAAA0B,GAAA,+BC5DU74C,iBAiFAW,iBAsBAD,iBAsBA6jB,iBAwBAzjB,iBAwBAG,iBAwBAV,iBA8BAc,iBAyIA4oB,iBAsGAzoB,iBAuEAs3C,IAzhBV,SAAU94C,GAAa0mB,GAAvB,IAAAqyB,EAAAh3C,EAAAw8B,EAAAkY,EAAAluB,EAAAD,EAAAzH,EAAAE,EAAA1U,EAAAyU,EAAA3I,EAAA0gB,EAAA,OAAA6d,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMiB,OANjBF,EAAAC,KAAA,EAE6B,GACxBkC,EAAwBxxB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MACrE3lB,EAAwBg3C,EAAmBnmC,IAAI,SAAAmJ,GAAI,OAAIA,EAAKvZ,KAC7D,eALJo0C,EAAAE,KAAA,EAMuBkC,aAAI,CACM1xC,aAAK2tC,GAAS,MAF3C,gBAG6B3tC,aAAK8uC,GAAW,OAAQ,iBAAkB,CAAC7uC,MAAQxF,MARpF,YAMOw8B,EANPqY,EAAAG,MAAA,CAAAH,EAAAE,KAAA,YAaSL,EAAgBlY,EAAI,GACpBhW,EAAgBgW,EAAI,IAGrBkY,EAAQx2C,KAAK4G,MAjBrB,CAAA+vC,EAAAE,KAAA,SAkBS,OAlBTF,EAAAE,KAAA,GAkBeX,aAAI8C,KAlBnB,YAsBQxC,EAAQx2C,KAAKkY,OAtBrB,CAAAy+B,EAAAE,KAAA,SAgES,OAzCIxuB,EAAgB,GAChBzH,EAAgB,GAChBE,GAAgB,EAChB1U,EAAgB,GAChByU,EAAgB,GAChB3I,EAAgBs+B,EAAQx2C,KAAKkY,OAEX,cADlB0gB,EAAgB4d,EAAQx2C,KAAK44B,MACzB7T,WACJnE,EAAgB,WAChBE,GAAgB,GACS,YAAnB8X,EAAK7T,WACXnE,EAAgB,UAChBE,GAAgB,IAEhBF,EAAgB,QAChBE,GAAgB,GAEpB5I,EAAOvF,IAAI,SAACC,EAAGC,GACXzG,EAAUyG,GAAK,CACXtQ,GAAYqQ,EAAErQ,GACdC,MAAYqQ,EACZyL,MAAY1L,EAAExO,QACdpE,KAAY4S,GAED,KAAZA,EAAEuL,OAA4B,OAAZvL,EAAEuL,QACnB0C,EAAOhO,GAAK,CACRtQ,GAAYqQ,EAAErQ,GACdqmB,QAAYhW,EAAEgW,QACdpmB,MAAYqQ,EACZyL,MAAY1L,EAAEuL,MACdne,KAAY4S,MAIxBiO,EAAoBo4B,kBAAQp4B,GAC5BzU,EAAoB6sC,kBAAQ7sC,GAEvBkc,EAAKtoB,OACNqoB,EAAwBC,EAAKtoB,MAAQ,IA7DlD22C,EAAAE,KAAA,GAgEeX,aAAI8C,EAA0C,CAChDp4B,SAAUA,EACVE,SAAUA,EACV1U,UAAWA,EACXyU,OAAQA,EACRqH,MAAOG,KArEpB,QAAAsuB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SA0EClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SA3Ef,yBAAAkwC,EAAAO,SAAAgC,GAAA,eAiFA,SAAUx4C,GAAe+lB,GAAzB,IAAAwuB,EAAAuB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAIiC,OAJjCO,EAAAR,KAAA,EAE6B,GAC5B3B,EAAG,SAAAhvC,OAAkCwgB,EAAOzmB,KAAKiI,MAHlDmvC,EAAAP,KAAA,EAIuCxvC,aAAK8uC,GAAW,MAAOlB,GAJ9D,YAIOuB,EAJPY,EAAAN,MAOY92C,KAAK4G,MAPjB,CAAAwwC,EAAAP,KAAA,QAQK,OARLO,EAAAP,KAAA,EAQWX,aAAI8C,KARf,WAYIxC,EAAQx2C,KAZZ,CAAAo3C,EAAAP,KAAA,SAaK,OAbLO,EAAAP,KAAA,GAaWX,aAAI8C,EAA4CxC,EAAQx2C,OAbnE,QAAAo3C,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAgBC3rC,GAAY2rC,EAAAH,GAAExwC,SACdrB,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAjBf,yBAAA2wC,EAAAF,SAAAiC,GAAA,eAsBA,SAAU14C,GAAgBgmB,GAA1B,IAAAwuB,EAAAuB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAIiC,OAJjC6B,EAAA9B,KAAA,EAE6B,GAC5B3B,EAAG,SAAAhvC,OAAkCwgB,EAAOzmB,KAAKiI,MAHlDywC,EAAA7B,KAAA,EAIuCxvC,aAAK+uC,GAAgB,MAAOnB,GAJnE,QAIOuB,EAJPkC,EAAA5B,MAOY92C,KAAK4G,MAKb4vC,EAAQx2C,KAZZ04C,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAzB,GAAAyB,EAAA,SAgBCjtC,GAAYitC,EAAAzB,GAAExwC,SACdrB,QAAQC,IAAIqzC,EAAAzB,GAAExwC,SAjBf,yBAAAiyC,EAAAxB,SAAAkC,GAAA,eAsBA,SAAU90B,GAAWmC,GAArB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAIyB,OAJzBwC,EAAAzC,KAAA,EAEyB,GACrB,QAHJyC,EAAAxC,KAAA,EAI+BxvC,aAAK2tC,GAAS,OADzC,QACsDvuB,EAAOzmB,MAJjE,YAIOw2C,EAJP6C,EAAAvC,MAOY92C,KAAK4G,MAPjB,CAAAyyC,EAAAxC,KAAA,SASK,OADAzxC,QAAQC,IAAImxC,EAAQx2C,KAAK4G,OAR9ByyC,EAAAxC,KAAA,GASWX,aAAI8C,KATf,YAaIxC,EAAQx2C,KAbZ,CAAAq5C,EAAAxC,KAAA,SAeK,OADAxuC,GAAc,CAAC5B,QAAS,uCAd7B4yC,EAAAxC,KAAA,GAeWX,aAAI8C,EAAwC,KAfvD,QAAAK,EAAAxC,KAAA,iBAAAwC,EAAAzC,KAAA,GAAAyC,EAAApC,GAAAoC,EAAA,SAkBC5tC,GAAY4tC,EAAApC,GAAExwC,SACdrB,QAAQC,IAAIg0C,EAAApC,GAAExwC,SAnBf,yBAAA4yC,EAAAnC,SAAAoC,GAAA,eAwBA,SAAUz4C,GAAW4lB,GAArB,IAAAwuB,EAAAj1C,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAKyB,OALzB0C,EAAA3C,KAAA,EAEyB,GACxB3B,EAAG,SAAAhvC,OAA8BwgB,EAAOzmB,KAAKiI,MACzCjI,EAAoB,CAAC0D,UAAYH,OAASC,OAAO,MAJtD+1C,EAAA1C,KAAA,EAK+BxvC,aAAK2tC,GAAS,SAAUC,EAAKj1C,GAL5D,YAKOw2C,EALP+C,EAAAzC,MAQY92C,KAAK4G,MARjB,CAAA2yC,EAAA1C,KAAA,SASK,OATL0C,EAAA1C,KAAA,GASWX,aAAI8C,KATf,YAaIxC,EAAQx2C,KAbZ,CAAAu5C,EAAA1C,KAAA,SAeK,OADAxuC,GAAc,CAAC5B,QAAS,8BAd7B8yC,EAAA1C,KAAA,GAeWX,aAAI8C,EAAwC,KAfvD,QAAAO,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAAtC,GAAAsC,EAAA,SAkBC9tC,GAAY8tC,EAAAtC,GAAExwC,SACdrB,QAAQC,IAAIk0C,EAAAtC,GAAExwC,SAnBf,yBAAA8yC,EAAArC,SAAAsC,GAAA,eAwBA,SAAUx4C,GAAiBylB,GAA3B,IAAAwuB,EAAAj1C,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAKyB,OALzB4C,EAAA7C,KAAA,EAEyB,GACxB3B,EAAG,gBAAAhvC,OAAqCwgB,EAAOzmB,KAAKiI,MAChDjI,EAAoB,CAAC05C,YAAY,CAACn0C,OAAOkhB,EAAOzmB,KAAKuF,SAJ1Dk0C,EAAA5C,KAAA,EAK+BxvC,aAAK2tC,GAAS,MAAOC,EAAKj1C,GALzD,YAKOw2C,EALPiD,EAAA3C,MAQY92C,KAAK4G,MARjB,CAAA6yC,EAAA5C,KAAA,SASK,OATL4C,EAAA5C,KAAA,GASWX,aAAI8C,KATf,YAaIxC,EAAQx2C,KAbZ,CAAAy5C,EAAA5C,KAAA,SAeK,OADAxuC,GAAc,CAAC5B,QAAS,qCAd7BgzC,EAAA5C,KAAA,GAeWX,aAAI8C,EAA8C,KAf7D,QAAAS,EAAA5C,KAAA,iBAAA4C,EAAA7C,KAAA,GAAA6C,EAAAxC,GAAAwC,EAAA,SAkBChuC,GAAYguC,EAAAxC,GAAExwC,SACdrB,QAAQC,IAAIo0C,EAAAxC,GAAExwC,SAnBf,yBAAAgzC,EAAAvC,SAAAyC,GAAA,eAwBA,SAAUr5C,GAASmmB,GAAnB,IAAAwuB,EAAAj1C,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAKyB,OALzB+C,EAAAhD,KAAA,EAEyB,GACxB3B,EAAG,SAAAhvC,OAA8BwgB,EAAOzmB,KAAKiI,MACzCjI,EAJL6C,OAAAC,EAAA,EAAAD,CAAA,GAI6B4jB,EAAOzmB,KAAK0P,QAJzCkqC,EAAA/C,KAAA,EAK+BxvC,aAAK2tC,GAAS,MAAOC,EAAKj1C,GALzD,YAKOw2C,EALPoD,EAAA9C,MAQY92C,KAAK4G,MARjB,CAAAgzC,EAAA/C,KAAA,SASK,OATL+C,EAAA/C,KAAA,GASWX,aAAI8C,KATf,YAaIxC,EAAQx2C,KAbZ,CAAA45C,EAAA/C,KAAA,SAgBK,OADAxuC,GAAc,CAAC5B,QAAS,8BAf7BmzC,EAAA/C,KAAA,GAgBWX,aAAI8C,EAAsC,KAhBrD,QAAAY,EAAA/C,KAAA,iBAAA+C,EAAAhD,KAAA,GAAAgD,EAAA3C,GAAA2C,EAAA,SAoBIA,EAAA3C,GAAE7Y,UAAcwb,EAAA3C,GAAE7Y,SAASp+B,KAC1ByL,GAAY,CAAChF,QAASmzC,EAAA3C,GAAE7Y,SAASp+B,KAAKyG,QAAQozC,QAE9CpuC,GAAY,CAAChF,QAASmzC,EAAA3C,GAAExwC,UAE5BrB,QAAQC,IAAIu0C,EAAA3C,GAAExwC,SAzBf,yBAAAmzC,EAAA1C,SAAA4C,GAAA,eA8BA,SAAU14C,GAAOqlB,GAAjB,IAAAzmB,EAAAw2C,EAAAt+B,EAAA8B,EAAAgG,EAAA,OAAAy2B,GAAAjtC,EAAAktC,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAY8B,OAZ9BkD,EAAAnD,KAAA,EAE6B,GACzB,eACC52C,EAAwB,CACxBglB,SAAgByB,EAAOzmB,KAAK+kB,UAC5Bi1B,SAAgBvzB,EAAOzmB,KAAKC,KAC5Bg6C,SAAgBxzB,EAAOzmB,KAAKwC,OAE3BikB,EAAOzmB,KAAK6xC,WACb7xC,EAAK6xC,SAAoBprB,EAAOzmB,KAAK6xC,UAV1CkI,EAAAlD,KAAA,EAYoCxvC,aAAK8uC,GAAW,OAThD,eAS6Dn2C,GAZjE,YAYOw2C,EAZPuD,EAAAjD,MAeY92C,KAAK4G,MAfjB,CAAAmzC,EAAAlD,KAAA,SAgBK,OAhBLkD,EAAAlD,KAAA,GAgBWX,aAAI8C,KAhBf,YAoBIxC,EAAQx2C,KAAKkY,OApBjB,CAAA6hC,EAAAlD,KAAA,SAgIK,OA3GI3+B,EAASs+B,EAAQx2C,KAAKkY,OACtB8B,EAAQ,GACT9B,EAAO8B,MAAMxV,OAAS,GACrB0T,EAAO8B,MAAMrH,IAAI,SAACyM,EAAKhS,GACnB,IAAI8sC,GAAoB,EACpBz+B,EAAoB,GACpBE,EAAoB,GACpBrO,EAAoB,YACH,iBAAlB8R,EAAI9R,UACHA,EAAoB,YACI,oBAAlB8R,EAAI9R,UACVA,EAAoB,YACI,iBAAlB8R,EAAI9R,WAAqD,wBAArB8R,EAAI7R,aAC9CD,EAAoB,YACI,iBAAlB8R,EAAI9R,UACVA,EAAoB,aACI,YAAlB8R,EAAI9R,UACVA,EAAoB,YACI,gBAAlB8R,EAAI9R,UACVA,EAAoB,UACI,eAAlB8R,EAAI9R,YACVA,EAAoB,WAExB,IACI86B,EADoBhpB,EAAI+6B,YAAYlrC,MAAM,KACnB,GAAGA,MAAM,KAChC8P,EAAoBqpB,EAAE,GAAG,IAAIA,EAAE,GAAG,IAAIA,EAAE,GAExCgJ,EAAoB,GACpBC,EAAoB,GAEJ,KAAjBjyB,EAAIvJ,UACHu7B,EAAoB3tC,GAA0C,IAA9BsC,SAASqZ,EAAIzZ,eAAuByZ,EAAIvJ,SAAU,qBAClFw7B,EAAoB5tC,GAA2C,IAA/BsC,SAASqZ,EAAIxZ,gBAAwBwZ,EAAIvJ,SAAU,YAEvFu7B,EAAwBxtC,GAA6C,IAA9BmC,SAASqZ,EAAIzZ,eAAuB,qBAC3E0rC,EAAwBztC,GAA8C,IAA/BmC,SAASqZ,EAAIxZ,gBAAwB,YAExE0D,kBAAQ8V,EAAItK,kBAAkBD,SAC5BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAoB,IAEpB5wC,kBAAQ8V,EAAItK,kBAAkBD,SAC5BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAoB,GAGnB96B,EAAIG,qBACL9D,EAAoB,qBACpBE,EAAoByD,EAAIG,oBAGvBH,EAAII,mBACL/D,EAAoB,sBACpBE,EAAoByD,EAAII,kBAGtBxF,EAAMoF,EAAIna,YAQN+U,EAAMoF,EAAIna,YAAYma,EAAIW,0BAC5B/F,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CACpDlQ,KAAgBuP,EAAIU,yBACpBvd,GAAgB6c,EAAIna,WAAWma,EAAIW,uBACnC7F,OAAgB,MAXxBF,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CACpDlQ,KAAgBuP,EAAIU,yBACpBvd,GAAgB6c,EAAIna,WAAWma,EAAIW,uBACnC7F,OAAgB,KAYxBF,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwB7F,OAAOxL,KAAK,CAC1DqQ,WAA4BA,EAC5B1P,eAA4B+hC,EAC5B9hC,gBAA4B+hC,EAC5BlpC,eAA4BiX,EAAItR,WAAW1J,QAC3C8D,eAA4BkX,EAAIvR,SAASzJ,QACzCg2C,aAA4Bh7B,EAAIvR,SAASG,MACzCqsC,aAA4Bj7B,EAAItR,WAAWE,MAC3C5F,WAA4BkF,EAC5BrF,KAA4BmX,EAAInX,KAChCoB,aAA4B+V,EAAI5J,YAChCG,YAA4ByJ,EAAIzJ,YAChCukC,cAA4BA,EAC5BrkC,SAA4BuJ,EAAIvJ,SAChCykC,gBAA4Bl7B,EAAIvR,SAAS0B,SACzCgrC,gBAA4Bn7B,EAAItR,WAAWyB,SAC3CiQ,iBAA4BJ,EAAII,kBAAoB,GACpDD,mBAA4BH,EAAIG,oBAAsB,GACtD9D,aAA4BA,EAC5BE,YAA4BA,EAC5BjP,IAA4B0S,EAAI1S,IAChCzH,WAA4Bma,EAAIna,WAChC8a,uBAA4BX,EAAIW,2BAIxCC,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,SAASrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,SAAC0F,GAAQ,OAAOA,EAAElc,cAElFsc,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,EA/HzC+5B,EAAAlD,KAAA,GAgIWX,aAAI8C,EAAoC,CAAC74B,MAAOjI,EAAO8B,MAAMxV,OAAQwV,MAAOA,KAhIvF,QAAA+/B,EAAAlD,KAAA,iBAAAkD,EAAAnD,KAAA,GAAAmD,EAAA9C,GAAA8C,EAAA,SAmICtuC,GAAYsuC,EAAA9C,GAAExwC,SACdrB,QAAQC,IAAI00C,EAAA9C,GAAExwC,SApIf,yBAAAszC,EAAA7C,SAAAsD,GAAA,eAyIA,SAAUxwB,GAAavD,GAAvB,IAAAwuB,EAAAj1C,EAAAw2C,EAAAlsB,EAAAhB,EAAAmxB,EAAA34C,EAAAomB,EAAA/J,EAAA,OAAAs4B,GAAAjtC,EAAAktC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAUC,OAVD6D,EAAA9D,KAAA,EAEK3B,EAAwB,GAC5BA,EAAG,eACCj1C,EAAwB,CACxBue,OAAQ,CACJnR,IAAM,YACN5K,MAAQ8kB,KAAK6iB,UAAU1jB,EAAOzmB,QAPvC06C,EAAA7D,KAAA,EAUOX,aAAIqC,GAAwB,CAC9BnrC,IAAM,YACN5K,MAAQikB,EAAOzmB,QAZpB,OAc8B,OAd9B06C,EAAA7D,KAAA,EAcoCxvC,aAAK8uC,GAAW,OAAQlB,EAAKj1C,GAdjE,WAcOw2C,EAdPkE,EAAA5D,MAiBY92C,KAAK4G,OAKb4vC,EAAQx2C,KAtBZ,CAAA06C,EAAA7D,KAAA,SA2FK,OAnEIvsB,EAAmB7D,EAAOzmB,MAAQ,GAClCspB,EAAmBgB,EAAWhB,YAAc,GAC5CtpB,EAAkB,CAClB+kB,UAAauF,EAAWrqB,KACxBA,KAAoB,WAEpBqJ,kBAAQggB,KACuB,IAA5BA,EAAWE,MAAMhlB,QAA2C,IAA3B8kB,EAAWG,KAAKjlB,QAAgB8kB,EAAWC,MAAM/kB,OAAS,IACtF1C,GAAqBwnB,EAAWC,OAAS,IAAI5W,IAAI,SAAAmJ,GAErD,OAAOA,EAAKtZ,SAEFgC,OAAS,IACfxE,EAAS,CACLC,KAAQ,QACRqH,MAASxF,IAOU,IAA5BwnB,EAAWE,MAAMhlB,QAAgB8kB,EAAWG,KAAKjlB,OAAS,IACrD0jB,EAAmB,IACtBoB,EAAWG,MAAQ,IAAI9W,IAAI,SAACmJ,GAC7B,IAAII,EAASgM,EAAMpG,UAAU,SAACsJ,GAAD,OAAOA,EAAE9jB,QAAUwU,EAAKxU,QAElD4U,GAAS,EACRgM,EAAMhM,GAAO0M,QAAQla,KAAKoN,EAAKvZ,IAE/B2lB,EAAMxZ,KAAK,CACPpH,MAAOwU,EAAKxU,MACZshB,QAAU,CAAC9M,EAAKvZ,QAKrB2lB,EAAM1jB,OAAS,IAClBxE,EAAS,CACLC,KAAQ,QACRorB,MAASnD,KAQdoB,EAAWE,MAAMhlB,OAAS,IACrB2Z,EAAoB,IACvBmL,EAAWE,OAAS,IAAInL,QAAQ,SAAAvC,GACjCqC,EAAMzP,KAAKoN,EAAKrM,SAASuD,cAEtBmL,EAAM3Z,OAAS,IAClBxE,EAAS,CACLC,KAAQ,QACRwP,SAAW0O,KAMnBne,EAAK+kB,UAAauF,EAAWrqB,KACvBD,EAAKC,OACPD,EAAKC,KAAa,YAxF/By6C,EAAA7D,KAAA,GA2FWX,aAAI8C,EAA+Bh5C,IA3F9C,QAAA06C,EAAA7D,KAAA,iBAAA6D,EAAA9D,KAAA,GAAA8D,EAAAzD,GAAAyD,EAAA,SA8FCjvC,GAAWivC,EAAAzD,IACX7xC,QAAQC,IAAIq1C,EAAAzD,GAAExwC,SA/Ff,yBAAAi0C,EAAAxD,SAAAyD,GAAA,eAsGA,SAAUp5C,GAAeklB,GAAzB,IAAA+vB,EAAAt+B,EAAAmC,EAAAvY,EAAAomB,EAAA/J,EAAA,OAAAs4B,GAAAjtC,EAAAktC,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,OAI8B,OAJ9B+D,EAAAhE,KAAA,EAE6B,GACzB,gBAHJgE,EAAA/D,KAAA,EAIoCxvC,aAAK8uC,GAAW,OADhD,gBAC6D1vB,EAAOzmB,MAJxE,YAIOw2C,EAJPoE,EAAA9D,MAOY92C,KAAK4G,MAPjB,CAAAg0C,EAAA/D,KAAA,QAQK,OARL+D,EAAA/D,KAAA,EAQWX,aAAI8C,KARf,WAYIxC,EAAQx2C,KAAKkY,OAZjB,CAAA0iC,EAAA/D,KAAA,SA+DK,OAlDI3+B,EAA4Bs+B,EAAQx2C,KAAKkY,QAAU,GACnDmC,EAA4B,GAC7BnC,EAAO1T,OAAS,IACS,YAArBiiB,EAAOzmB,KAAKC,OACXoa,EAAkBxX,OAAAC,EAAA,EAAAD,CAAA,GAAcqV,EAAO,KAEnB,UAArBuO,EAAOzmB,KAAKC,OACP6B,EAAoB,GACxBoW,EAAOvF,IAAI,SAAAmJ,GACPha,EAAOga,EAAK7W,YAAoB,CAC5ByV,aAAgBoB,EAAKpB,aACrBC,sBAAuBmB,EAAKnB,sBAC5BF,aAAcqB,EAAKrB,gBAG3BJ,EAAkBxX,OAAAC,EAAA,EAAAD,CAAA,GAAcf,IAEZ,UAArB2kB,EAAOzmB,KAAKC,OACPioB,EAAmB,GACvBhQ,EAAOvF,IAAI,SAAAmJ,GACFoM,EAAMpM,EAAK7W,YACZijB,EAAMpM,EAAK7W,YAAY6W,EAAKiE,wBAAgC,CACxDrF,aAAgBoB,EAAKpB,aACrBC,sBAAuBmB,EAAKnB,sBAC5BF,aAAcqB,EAAKrB,eAGvByN,EAAMpM,EAAK7W,YAAkB,GAC7BijB,EAAMpM,EAAK7W,YAAY6W,EAAKiE,wBAAgC,CACxDrF,aAAgBoB,EAAKpB,aACrBC,sBAAuBmB,EAAKnB,sBAC5BF,aAAcqB,EAAKrB,iBAI/BJ,EAAkBxX,OAAAC,EAAA,EAAAD,CAAA,GAAcqlB,IAEZ,UAArBzB,EAAOzmB,KAAKC,OACPke,EAAmB,GACvBjG,EAAOvF,IAAI,SAAAmJ,GACPqC,EAAMrC,EAAKrM,UAAkB,CACzBiL,aAAgBoB,EAAKpB,aACrBC,sBAAuBmB,EAAKnB,sBAC5BF,aAAcqB,EAAKrB,gBAG3BJ,EAAkBxX,OAAAC,EAAA,EAAAD,CAAA,GAAcsb,KA3D7Cy8B,EAAA/D,KAAA,GA+DWX,aAAI8C,EAAyC,CAAC1+B,QAAQzX,OAAAC,EAAA,EAAAD,CAAA,GAAKwX,GAAqBpa,KAAMwmB,EAAOzmB,KAAKC,QA/D7G,QAAA26C,EAAA/D,KAAA,iBAAA+D,EAAAhE,KAAA,GAAAgE,EAAA3D,GAAA2D,EAAA,SAkECnvC,GAAYmvC,EAAA3D,GAAExwC,SACdrB,QAAQC,IAAIu1C,EAAA3D,GAAExwC,SAnEf,yBAAAm0C,EAAA1D,SAAA2D,GAAA,eAuEA,SAAUhC,KAAV,OAAApC,GAAAjtC,EAAAktC,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAEC,OAFDiE,EAAAlE,KAAA,EAAAkE,EAAAjE,KAAA,EAEOQ,aAAW0D,EAAqCt6C,IAFvD,OAGC,OAHDq6C,EAAAjE,KAAA,EAGOQ,aAAW0D,EAAoCr6C,IAHtD,OAIC,OAJDo6C,EAAAjE,KAAA,EAIOQ,aAAW0D,EAAiCh7C,IAJnD,OAKC,OALD+6C,EAAAjE,KAAA,EAKOQ,aAAW0D,EAA+Bl6C,IALjD,OAMC,OANDi6C,EAAAjE,KAAA,GAMOQ,aAAW0D,EAAsC/5C,IANxD,QAOC,OAPD85C,EAAAjE,KAAA,GAOOQ,aAAW0D,EAA+Bz2B,IAPjD,QAQC,OARDw2B,EAAAjE,KAAA,GAQOQ,aAAW0D,EAA6Bz6C,IAR/C,QASC,OATDw6C,EAAAjE,KAAA,GASOQ,aAAW0D,EAA+B35C,IATjD,QAUC,OAVD05C,EAAAjE,KAAA,GAUOQ,aAAW0D,EAAiC/wB,IAVnD,QAWC,OAXD8wB,EAAAjE,KAAA,GAWOQ,aAAW0D,EAAmCx5C,IAXrD,QAAAu5C,EAAAjE,KAAA,iBAAAiE,EAAAlE,KAAA,GAAAkE,EAAA7D,GAAA6D,EAAA,SAaC11C,QAAQC,IAARy1C,EAAA7D,IAbD,yBAAA6D,EAAA5D,SAAA8D,GAAA,gCC5hBUC,iBA4XA7K,iBA2BA8K,IAvZV,SAAUD,GAAYx0B,GAAtB,IAAAwuB,EAAAkG,EAAAn7C,EAAAw2C,EAAAt+B,EAAA8B,EAAAoE,EAAA4B,EAAAo7B,EAAA,OAAA3E,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOC,OAPDF,EAAAC,KAAA,EAEK3B,EAAoB,GACxBA,EAAG,gBACCkG,EAAoB10B,EAAOzmB,KAJhC22C,EAAAE,KAAA,EAOOX,aAAIqC,GAAwB,CAACnrC,IAAK+tC,EAAW58B,OAAOnR,KAAO,UAAW5K,MAAO8kB,KAAKC,MAAM4zB,EAAW58B,OAAO/b,OAAS,SAP1H,OAmBiB,OAXZxC,EAAoB,CACpB+kB,UAAWo2B,EAAWl7C,KACtBuvB,KAAM2rB,EAAWvT,OACjB15B,MAAQitC,EAAWjtC,MACnBC,IAAIgtC,EAAWhtC,IACf8hC,UAAYkL,EAAWlL,UACvBC,UAAUiL,EAAWjL,UACrB3xB,OAAQ48B,EAAW58B,SAGE,CAAC,QAAS,OAAQ,YAAYsB,SAAS7f,EAAKiwC,WAlBtE0G,EAAAE,KAAA,GAmBuBxvC,aAAK8uC,GAAW,OAAQlB,EAAKj1C,GAnBpD,aAmBOw2C,EAnBPG,EAAAG,MAsBY92C,KAAK4G,MAtBjB,CAAA+vC,EAAAE,KAAA,SAwBK,OAxBLF,EAAAE,KAAA,GAwBWX,aAAImF,MAxBf,YA4BI7E,EAAQx2C,KAAKkY,OA5BjB,CAAAy+B,EAAAE,KAAA,SAoXK,OAvVI3+B,EAASs+B,EAAQx2C,KAAKkY,OAEtB8B,EAAQ,GAEgB,aAAzBmhC,EAAWlL,WACP/3B,EAAO8B,MAAMxV,OAAS,IACjB4Z,EAAiB+8B,EAAW/8B,UAChClG,EAAO8B,MAAMrH,IAAI,SAACyM,EAAKhS,GAEnB,IAAI8sC,GAAoB,EACpBz+B,EAAoB,GACpBE,EAAoB,GAEpBrO,EAAY,YACK,iBAAlB8R,EAAI9R,UACHA,EAAY,YACY,oBAAlB8R,EAAI9R,UACVA,EAAY,YACY,iBAAlB8R,EAAI9R,WAAqD,wBAArB8R,EAAI7R,aAC9CD,EAAY,YACY,iBAAlB8R,EAAI9R,UACVA,EAAY,aACY,YAAlB8R,EAAI9R,UACVA,EAAY,YACY,gBAAlB8R,EAAI9R,UACVA,EAAY,UACY,eAAlB8R,EAAI9R,YACVA,EAAY,WAEhB,IACI86B,EADKhpB,EAAI+6B,YAAYlrC,MAAM,KACpB,GAAGA,MAAM,KAChB8P,EAAaqpB,EAAE,GAAG,IAAIA,EAAE,GAAG,IAAIA,EAAE,GAEjCgJ,EAAgB,GAChBC,EAAiB,GAED,KAAjBjyB,EAAIvJ,UACPu7B,EAAgB3tC,GAA0C,IAA9BsC,SAASqZ,EAAIzZ,eAAuByZ,EAAIvJ,SAAU,qBAC9Ew7B,EAAiB5tC,GAA2C,IAA/BsC,SAASqZ,EAAIxZ,gBAAwBwZ,EAAIvJ,SAAU,YAEhFu7B,EAAgBxtC,GAA6C,IAA9BmC,SAASqZ,EAAIzZ,eAAuB,qBACnE0rC,EAAiBztC,GAA8C,IAA/BmC,SAASqZ,EAAIxZ,gBAAwB,YAEjEyZ,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,IAEhB76B,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,GAGf96B,EAAIG,qBACL9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG3BH,EAAII,mBACL/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAG1BxF,EAAMoF,EAAIna,YAQN+U,EAAMoF,EAAIna,YAAYma,EAAI3P,YAC5BuK,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CACtCI,KAAgBuO,EAAUgB,EAAI3P,UAC9BlN,GAAgB6c,EAAIna,WAAWma,EAAI3P,SACnCyK,OAAgB,MAXxBF,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CAC9BI,KAAgBuO,EAAUgB,EAAI3P,UAC9BlN,GAAgB6c,EAAIna,WAAWma,EAAI3P,SACnCyK,OAAgB,KAYhCF,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUyK,OAAOxL,KAAK,CAC5CqQ,WAA4BA,EAC5Brb,UAA4B0b,EAAIzZ,cAChC0J,eAA4B+hC,EAC5B9hC,gBAA4B+hC,EAC5BlpC,eAA4BiX,EAAItR,WAAW1J,QAC3C8D,eAA4BkX,EAAIvR,SAASzJ,QACzCg2C,aAA4Bh7B,EAAIvR,SAASG,MACzCqsC,aAA4Bj7B,EAAItR,WAAWE,MAC3C5F,WAA4BkF,EAC5BrF,KAA4BmX,EAAInX,KAChCoB,aAA4B+V,EAAI5J,YAChCG,YAA4ByJ,EAAIzJ,YAChCukC,cAA4BA,EAC5BrkC,SAA4BuJ,EAAIvJ,SAChCykC,gBAA4Bl7B,EAAIvR,SAAS0B,SACzCgrC,gBAA4Bn7B,EAAItR,WAAWyB,SAC3CiQ,iBAA4BJ,EAAII,kBAAoB,GACpDD,mBAA4BH,EAAIG,oBAAsB,GACtD9D,aAA4BA,EAC5BE,YAA4BA,EAC5BjP,IAA4B0S,EAAI1S,IAChCzH,WAA4Bma,EAAIna,WAChCwK,SAA4B2P,EAAI3P,SAChCsQ,uBAA4BX,EAAIW,4BAIxCC,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,UAAUrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAElc,YAAY,CAAC,WAEtFsc,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,GACL,UAAzBm7B,EAAWlL,WACd/3B,EAAO8B,MAAMxV,OAAS,GACrB0T,EAAO8B,MAAMrH,IAAI,SAACyM,EAAKhS,GAEnB,IAAI8sC,GAAoB,EACpBz+B,EAAoB,GACpBE,EAAoB,GAEpBrO,EAAY,YACK,iBAAlB8R,EAAI9R,UACHA,EAAY,YACY,oBAAlB8R,EAAI9R,UACVA,EAAY,YACY,iBAAlB8R,EAAI9R,WAAqD,wBAArB8R,EAAI7R,aAC9CD,EAAY,YACY,iBAAlB8R,EAAI9R,UACVA,EAAY,aACY,YAAlB8R,EAAI9R,UACVA,EAAY,YACY,gBAAlB8R,EAAI9R,UACVA,EAAY,UACY,eAAlB8R,EAAI9R,YACVA,EAAY,WAEhB,IACI86B,EADKhpB,EAAI+6B,YAAYlrC,MAAM,KACpB,GAAGA,MAAM,KAChB8P,EAAaqpB,EAAE,GAAG,IAAIA,EAAE,GAAG,IAAIA,EAAE,GAEjCgJ,EAAgB,GAChBC,EAAiB,GAED,KAAjBjyB,EAAIvJ,UACPu7B,EAAgB3tC,GAA0C,IAA9BsC,SAASqZ,EAAIzZ,eAAuByZ,EAAIvJ,SAAU,qBAC9Ew7B,EAAiB5tC,GAA2C,IAA/BsC,SAASqZ,EAAIxZ,gBAAwBwZ,EAAIvJ,SAAU,YAEhFu7B,EAAgBxtC,GAA6C,IAA9BmC,SAASqZ,EAAIzZ,eAAuB,qBACnE0rC,EAAiBztC,GAA8C,IAA/BmC,SAASqZ,EAAIxZ,gBAAwB,YAEjEyZ,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,IAEhB76B,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,GAGf96B,EAAIG,qBACL9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG3BH,EAAII,mBACL/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAoB1BxF,EAAMoF,EAAIna,cACZ+U,EAAMoF,EAAIna,YAAkB,CACxB4K,KAAgBuP,EAAIna,WACpBiV,OAAgB,KAMxBF,EAAMoF,EAAIna,YAAYiV,OAAOxL,KAAK,CAC9BqQ,WAA4BA,EAC5Brb,UAA4B0b,EAAIzZ,cAChC0J,eAA4B+hC,EAC5B9hC,gBAA4B+hC,EAC5BlpC,eAA4BiX,EAAItR,WAAW1J,QAC3C8D,eAA4BkX,EAAIvR,SAASzJ,QACzCg2C,aAA4Bh7B,EAAIvR,SAASG,MACzCqsC,aAA4Bj7B,EAAItR,WAAWE,MAC3C5F,WAA4BkF,EAC5BrF,KAA4BmX,EAAInX,KAChCoB,aAA4B+V,EAAI5J,YAChCG,YAA4ByJ,EAAIzJ,YAChCukC,cAA4BA,EAC5BrkC,SAA4BuJ,EAAIvJ,SAChCykC,gBAA4Bl7B,EAAIvR,SAAS0B,SACzCgrC,gBAA4Bn7B,EAAItR,WAAWyB,SAC3CiQ,iBAA4BJ,EAAII,kBAAoB,GACpDD,mBAA4BH,EAAIG,oBAAsB,GACtD9D,aAA4BA,EAC5BE,YAA4BA,EAC5BjP,IAA4B0S,EAAI1S,IAChCzH,WAA4Bma,EAAIna,WAChC8a,uBAA4BX,EAAIW,2BAI5CV,OAAOrF,EAAO,SAACoF,EAAKhS,GAChB4M,EAAM5M,GAAK8M,OAAwBmF,UAAUrF,EAAM5M,GAAK8M,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAElc,YAAY,CAAC,YAE1D,SAAzBy3C,EAAWlL,WACd/3B,EAAO8B,MAAMxV,OAAS,GACrB0T,EAAO8B,MAAMrH,IAAI,SAACyM,EAAKhS,GAEnB,IAAI8sC,GAAoB,EACpBz+B,EAAoB,GACpBE,EAAoB,GAEpBrO,EAAY,YACK,iBAAlB8R,EAAI9R,UACHA,EAAY,YACY,oBAAlB8R,EAAI9R,UACVA,EAAY,YACY,iBAAlB8R,EAAI9R,WAAqD,wBAArB8R,EAAI7R,aAC9CD,EAAY,YACY,iBAAlB8R,EAAI9R,UACVA,EAAY,aACY,YAAlB8R,EAAI9R,UACVA,EAAY,YACY,gBAAlB8R,EAAI9R,UACVA,EAAY,UACY,eAAlB8R,EAAI9R,YACVA,EAAY,WAEhB,IACI86B,EADKhpB,EAAI+6B,YAAYlrC,MAAM,KACpB,GAAGA,MAAM,KAChB8P,EAAaqpB,EAAE,GAAG,IAAIA,EAAE,GAAG,IAAIA,EAAE,GAEjCgJ,EAAgB,GAChBC,EAAiB,GAED,KAAjBjyB,EAAIvJ,UACPu7B,EAAgB3tC,GAA0C,IAA9BsC,SAASqZ,EAAIzZ,eAAuByZ,EAAIvJ,SAAU,qBAC9Ew7B,EAAiB5tC,GAA2C,IAA/BsC,SAASqZ,EAAIxZ,gBAAwBwZ,EAAIvJ,SAAU,YAEhFu7B,EAAgBxtC,GAA6C,IAA9BmC,SAASqZ,EAAIzZ,eAAuB,qBACnE0rC,EAAiBztC,GAA8C,IAA/BmC,SAASqZ,EAAIxZ,gBAAwB,YAEjEyZ,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,IAEhB76B,UAAUD,EAAItK,kBAAkBD,SAC9BuK,EAAItK,kBAAkBD,OAAOO,mBAC/B8kC,GAAgB,GAGf96B,EAAIG,qBACL9D,EAAwB,qBACxBE,EAAwByD,EAAIG,oBAG3BH,EAAII,mBACL/D,EAAwB,sBACxBE,EAAwByD,EAAII,kBAG1BxF,EAAMoF,EAAIna,YAQN+U,EAAMoF,EAAIna,YAAYma,EAAIW,0BAC5B/F,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CACpDlQ,KAAgBuP,EAAIU,yBACpBvd,GAAgB6c,EAAIna,WAAWma,EAAIW,uBACnC7F,OAAgB,MAXxBF,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAIW,wBAA8B,CAC5ClQ,KAAgBuP,EAAIU,yBACpBvd,GAAgB6c,EAAIna,WAAWma,EAAIW,uBACnC7F,OAAgB,KAYhCF,EAAMoF,EAAIna,YAAYma,EAAIW,wBAAwB7F,OAAOxL,KAAK,CAC1DqQ,WAA4BA,EAC5Brb,UAA4B0b,EAAIzZ,cAChC0J,eAA4B+hC,EAC5B9hC,gBAA4B+hC,EAC5BlpC,eAA4BiX,EAAItR,WAAW1J,QAC3C8D,eAA4BkX,EAAIvR,SAASzJ,QACzCg2C,aAA4Bh7B,EAAIvR,SAASG,MACzCqsC,aAA4Bj7B,EAAItR,WAAWE,MAC3C5F,WAA4BkF,EAC5BrF,KAA4BmX,EAAInX,KAChCoB,aAA4B+V,EAAI5J,YAChCG,YAA4ByJ,EAAIzJ,YAChCukC,cAA4BA,EAC5BrkC,SAA4BuJ,EAAIvJ,SAChCykC,gBAA4Bl7B,EAAIvR,SAAS0B,SACzCgrC,gBAA4Bn7B,EAAItR,WAAWyB,SAC3CiQ,iBAA4BJ,EAAII,kBAAoB,GACpDD,mBAA4BH,EAAIG,oBAAsB,GACtD9D,aAA4BA,EAC5BE,YAA4BA,EAC5BjP,IAA4B0S,EAAI1S,IAChCzH,WAA4Bma,EAAIna,WAChC8a,uBAA4BX,EAAIW,2BAIxCC,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,UAAUrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAElc,YAAY,CAAC,WAEtFsc,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,GAEpChG,EAAoC9B,EAAO8B,OAAS,GA/W7D28B,EAAAE,KAAA,GAoXWX,aAAImF,GAAuC,CAACrhC,MAAOA,EAAOiF,WAAY/G,EAAO+G,WAAYsyB,UAAW4J,EAAWlL,aApX1H,QAAA0G,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAuXClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SAxXf,yBAAAkwC,EAAAO,SAAAoE,GAAA,eA4XA,SAAUlL,GAAc3pB,GAAxB,IAAA00B,EAAAn7C,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAWiB,OAXjBO,EAAAR,KAAA,EAEKuE,EAAoB10B,EAAOzmB,KAC3BA,EAAoB,CACpB+kB,UAAWo2B,EAAWl7C,KACtBuvB,KAAM2rB,EAAWvT,OACjB15B,MAAQitC,EAAWjtC,MACnBC,IAAIgtC,EAAWhtC,IACf8hC,UAAYkL,EAAWlL,UACvBC,UAAUiL,EAAWjL,WAT1BkH,EAAAP,KAAA,EAWuBxvC,aAAK8uC,GAAW,OAAQ,iBAAkBn2C,GAXjE,YAWOw2C,EAXPY,EAAAN,MAcY92C,KAAK4G,MAdjB,CAAAwwC,EAAAP,KAAA,QAeK,OAfLO,EAAAP,KAAA,EAeWX,aAAImF,MAff,WAkBI7E,EAAQx2C,KAAKkY,OAlBjB,CAAAk/B,EAAAP,KAAA,SAmBK,OAnBLO,EAAAP,KAAA,GAmBWX,aAAImF,GAA6C7E,EAAQx2C,KAAKkY,SAnBzE,QAAAk/B,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAsBC3rC,GAAW2rC,EAAAH,IACX7xC,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAvBf,yBAAA2wC,EAAAF,SAAAqE,GAAA,eA2BA,SAAUL,KAAV,OAAAzE,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAGC,OAHD6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAGOQ,aAAWmE,GAAiCP,IAHnD,OAIC,OAJDvC,EAAA7B,KAAA,EAIOQ,aAAWmE,GAA6CpL,IAJ/D,OAAAsI,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,EAAA8B,EAAAzB,GAAAyB,EAAA,SAMCtzC,QAAQC,IAARqzC,EAAAzB,IAND,yBAAAyB,EAAAxB,SAAAuE,GAAA,+BCzZU/jB,iBAkBAG,iBA2BAU,iBAkBA7J,iBAsBAgtB,IArFV,SAAUhkB,GAAWjR,GAArB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBxvC,aAAK8uC,GAAW,OAAQ,mBAAoB1vB,EAAOzmB,MAF1E,YAEOw2C,EAFPG,EAAAG,MAKY92C,KAAK4G,MALjB,CAAA+vC,EAAAE,KAAA,QAMK,OANLF,EAAAE,KAAA,EAMWX,aAAIyF,MANf,WASInF,EAAQx2C,KAAKkY,OATjB,CAAAy+B,EAAAE,KAAA,SAUK,OAVLF,EAAAE,KAAA,GAUWX,aAAIyF,GAAuCnF,EAAQx2C,KAAKkY,SAVnE,QAAAy+B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAaClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SAdf,yBAAAkwC,EAAAO,SAAA0E,GAAA,eAkBA,SAAU/jB,GAAYpR,GAAtB,IAAAzmB,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAUC,OAVDO,EAAAR,KAAA,EAGK52C,EAHL6C,OAAAC,EAAA,EAAAD,CAAA,GAIQ4jB,EAAOzmB,KAJf,CAKKue,OAAQ,CACJnR,IAAK,WACL5K,MAAO8kB,KAAK6iB,UAAU1jB,EAAOzmB,KAAKue,WAP3C64B,EAAAP,KAAA,EAUOX,aAAIqC,GAAwB,CAACnrC,IAAK,WAAY5K,MAAOikB,EAAOzmB,KAAKue,UAVxE,OAWiB,OAXjB64B,EAAAP,KAAA,EAWuBxvC,aAAK8uC,GAAW,OAAQ,gBAAiBn2C,GAXhE,YAWOw2C,EAXPY,EAAAN,MAcY92C,KAAK4G,MAdjB,CAAAwwC,EAAAP,KAAA,SAeK,OAfLO,EAAAP,KAAA,GAeWX,aAAIyF,MAff,YAkBInF,EAAQx2C,KAAKkY,OAlBjB,CAAAk/B,EAAAP,KAAA,SAmBK,OAnBLO,EAAAP,KAAA,GAmBWX,aAAIyF,GAAwCnF,EAAQx2C,KAAKkY,SAnBpE,QAAAk/B,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAsBC3rC,GAAW2rC,EAAAH,IACX7xC,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAvBf,yBAAA2wC,EAAAF,SAAA2E,GAAA,eA2BA,SAAUtjB,GAAe9R,GAAzB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAEiB,OAFjB6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAEuBxvC,aAAK8uC,GAAW,OAAQ,kBAAmB1vB,EAAOzmB,MAFzE,YAEOw2C,EAFPkC,EAAA5B,MAKY92C,KAAK4G,MALjB,CAAA8xC,EAAA7B,KAAA,QAMK,OANL6B,EAAA7B,KAAA,EAMWX,aAAIyF,MANf,WASInF,EAAQx2C,KAAKkY,OATjB,CAAAwgC,EAAA7B,KAAA,SAUK,OAVL6B,EAAA7B,KAAA,GAUWX,aAAIyF,GAA2CnF,EAAQx2C,KAAKkY,SAVvE,QAAAwgC,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAzB,GAAAyB,EAAA,SAaCjtC,GAAWitC,EAAAzB,IACX7xC,QAAQC,IAAIqzC,EAAAzB,GAAExwC,SAdf,yBAAAiyC,EAAAxB,SAAA4E,GAAA,eAkBA,SAAUptB,GAAMjI,GAAhB,IAAA+vB,EAAAuF,EAAA,OAAAtF,GAAAjtC,EAAAktC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAEiB,OAFjBwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAEuBxvC,aAAK8uC,GAAW,OAAQ,iBAAkB1vB,EAAOzmB,MAFxE,YAEOw2C,EAFP6C,EAAAvC,MAKY92C,KAAK4G,MALjB,CAAAyyC,EAAAxC,KAAA,QAMK,OANLwC,EAAAxC,KAAA,EAMWX,aAAIyF,MANf,WASInF,EAAQx2C,KAAKkY,OATjB,CAAAmhC,EAAAxC,KAAA,SAaK,OAHIkF,EAVTl5C,OAAAC,EAAA,EAAAD,CAAA,GAUyB2zC,EAAQx2C,KAAKkY,SACvBwZ,QAAUjL,EAAOzmB,KAAK0xB,QAChCqqB,EAAU1yC,aAAeod,EAAOzmB,KAAKqJ,aAZ1CgwC,EAAAxC,KAAA,GAaWX,aAAIyF,GAA4BI,IAb3C,QAcKC,GAAa,CAACv1C,QAAS,4BAd5B,QAAA4yC,EAAAxC,KAAA,iBAAAwC,EAAAzC,KAAA,GAAAyC,EAAApC,GAAAoC,EAAA,SAiBC5tC,GAAW4tC,EAAApC,IACX7xC,QAAQC,IAAIg0C,EAAApC,GAAExwC,SAlBf,yBAAA4yC,EAAAnC,SAAA+E,GAAA,eAsBA,SAAUP,KAAV,OAAAjF,GAAAjtC,EAAAktC,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAEC,OAFD0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAEOQ,aAAW6E,GAAwBxtB,IAF1C,OAGC,OAHD6qB,EAAA1C,KAAA,EAGOQ,aAAW6E,GAA8BxkB,IAHhD,OAIC,OAJD6hB,EAAA1C,KAAA,EAIOQ,aAAW6E,GAA+BrkB,IAJjD,OAKC,OALD0hB,EAAA1C,KAAA,EAKOQ,aAAW6E,GAAkC3jB,IALpD,OAAAghB,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAAtC,GAAAsC,EAAA,SAOCn0C,QAAQC,IAARk0C,EAAAtC,IAPD,yBAAAsC,EAAArC,SAAAiF,GAAA,gCCrFU/e,iBAoBA9B,iBAmBA0B,iBA6BAS,iBAuBAyB,iBAsBA6B,iBAkBAgB,iBAoBAC,iBAwBAL,iBAoBAD,iBAwBAhD,iBA4BAE,iBAuBAwd,IA9QV,SAAUhf,GAAQ3W,GAAlB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBxvC,aAAK2tC,GAAS,MAAO,cAF5C,YAEOwB,EAFPG,EAAAG,MAKY92C,KAAK4G,MALjB,CAAA+vC,EAAAE,KAAA,QAMK,OANLF,EAAAE,KAAA,EAMWX,aAAImG,MANf,WASI7F,EAAQx2C,KAAKkY,OATjB,CAAAy+B,EAAAE,KAAA,SAUK,OAVLF,EAAAE,KAAA,GAUWX,aAAImG,GAAmC7F,EAAQx2C,KAAKkY,SAV/D,QAAAy+B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAaClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SAdf,yBAAAkwC,EAAAO,SAAAoF,GAAA,eAoBA,SAAUhhB,GAAU7U,GAApB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAEiB,OAFjBO,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAEuBxvC,aAAK2tC,GAAS,MAAO,iBAF5C,YAEOwB,EAFPY,EAAAN,MAKY92C,KAAK4G,MALjB,CAAAwwC,EAAAP,KAAA,QAMK,OANLO,EAAAP,KAAA,EAMWX,aAAImG,MANf,WASI7F,EAAQx2C,KAAKkY,OATjB,CAAAk/B,EAAAP,KAAA,SAUK,OAVLO,EAAAP,KAAA,GAUWX,aAAImG,GAAkC7F,EAAQx2C,KAAKkY,SAV9D,QAAAk/B,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAaC3rC,GAAW2rC,EAAAH,IACX7xC,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAdf,yBAAA2wC,EAAAF,SAAAqF,GAAA,eAmBA,SAAUvf,GAAcvW,GAAxB,IAAA+vB,EAAA/yB,EAAA+4B,EAAA,OAAA/F,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAEiB,OAFjB6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAEuBxvC,aAAK2tC,GAAS,MAAO,eAAgBvuB,EAAOzmB,MAFnE,YAEOw2C,EAFPkC,EAAA5B,MAKY92C,KAAK4G,MALjB,CAAA8xC,EAAA7B,KAAA,QAOK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAN9CiyC,EAAA7B,KAAA,EAOWX,aAAImG,MAPf,WAUI7F,EAAQx2C,KAAKkY,OAVjB,CAAAwgC,EAAA7B,KAAA,SAoBK,OATAxuC,GAAc,CAAC5B,QAAS+vC,EAAQx2C,KAAKkY,OAAOzR,UACxCgd,EAAoBoK,GAAU,sBAAwB,GACtD2uB,EAAoB/1B,EAAOzmB,KAC/ByjB,EAAS0Z,WAAeqf,EAAYrf,WACpC1Z,EAASN,UAAeq5B,EAAYr5B,UACpCM,EAASK,MAAe04B,EAAY14B,MACpC2J,GAAUhK,EAAU,qBACpBuzB,GAAgBvzB,GAlBrBi1B,EAAA7B,KAAA,GAoBWX,aAAImG,GAAyC,KApBxD,QAAA3D,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAzB,GAAAyB,EAAA,SAuBCjtC,GAAWitC,EAAAzB,IACX7xC,QAAQC,IAAIqzC,EAAAzB,GAAExwC,SAxBf,yBAAAiyC,EAAAxB,SAAAuF,GAAA,eA6BA,SAAUhf,GAAehX,GAAzB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAIiB,OAJjBwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAIuBxvC,aAAK2tC,GAAS,MAAO,gBAAiBvuB,EAAOzmB,MAJpE,YAIOw2C,EAJP6C,EAAAvC,MAOY92C,KAAK4G,MAPjB,CAAAyyC,EAAAxC,KAAA,QASK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAR9C4yC,EAAAxC,KAAA,EASWX,aAAImG,MATf,WAYI7F,EAAQx2C,KAAKkY,OAZjB,CAAAmhC,EAAAxC,KAAA,SAcK,OADAxuC,GAAc,CAAC5B,QAAS+vC,EAAQx2C,KAAKkY,OAAOzR,UAbjD4yC,EAAAxC,KAAA,GAcWX,aAAImG,GAA0C,KAdzD,QAAAhD,EAAAxC,KAAA,iBAAAwC,EAAAzC,KAAA,GAAAyC,EAAApC,GAAAoC,EAAA,SAiBC5tC,GAAW4tC,EAAApC,IACX7xC,QAAQC,IAAIg0C,EAAApC,GAAExwC,SAlBf,yBAAA4yC,EAAAnC,SAAAwF,GAAA,eAuBA,SAAUxd,GAAYzY,GAAtB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAEiB,OAFjB0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAEuBxvC,aAAK2tC,GAAS,OAAQ,WAAYvuB,EAAOzmB,MAFhE,YAEOw2C,EAFP+C,EAAAzC,MAKY92C,KAAK4G,MALjB,CAAA2yC,EAAA1C,KAAA,QAOK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAN9C8yC,EAAA1C,KAAA,EAOWX,aAAImG,MAPf,WAUI7F,EAAQx2C,KAVZ,CAAAu5C,EAAA1C,KAAA,SAYK,OADAxuC,GAAc,CAAC5B,QAAS+vC,EAAQx2C,KAAKyG,UAX1C8yC,EAAA1C,KAAA,GAYWX,aAAImG,GAAuC,KAZtD,QAaK,OAbL9C,EAAA1C,KAAA,GAaWX,aAAImG,MAbf,QAAA9C,EAAA1C,KAAA,iBAiBC,OAjBD0C,EAAA3C,KAAA,GAAA2C,EAAAtC,GAAAsC,EAAA,SAgBC9tC,GAAY,CAAChF,QAAS8yC,EAAAtC,GAAExwC,UAhBzB8yC,EAAA1C,KAAA,GAiBOX,aAAImG,MAjBX,QAkBCj3C,QAAQC,IAAIk0C,EAAAtC,GAAExwC,SAlBf,yBAAA8yC,EAAArC,SAAAyF,GAAA,eAsBA,SAAU5b,GAASta,GAAnB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAEiB,OAFjB4C,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EAEuBxvC,aAAK8uC,GAAW,MAAO,iBAAkB1vB,EAAOzmB,MAFvE,YAEOw2C,EAFPiD,EAAA3C,MAKY92C,KAAK4G,MALjB,CAAA6yC,EAAA5C,KAAA,QAMK,OANL4C,EAAA5C,KAAA,EAMWX,aAAImG,MANf,WASI7F,EAAQx2C,KAAKkY,OATjB,CAAAuhC,EAAA5C,KAAA,SAUK,OAVL4C,EAAA5C,KAAA,GAUWX,aAAImG,GAAmC7F,EAAQx2C,KAAKkY,SAV/D,QAAAuhC,EAAA5C,KAAA,iBAAA4C,EAAA7C,KAAA,GAAA6C,EAAAxC,GAAAwC,EAAA,SAaChuC,GAAWguC,EAAAxC,IACX7xC,QAAQC,IAAIo0C,EAAAxC,GAAExwC,SAdf,yBAAAgzC,EAAAvC,SAAA0F,GAAA,eAkBA,SAAU7a,GAAQtb,GAAlB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,OAEiB,OAFjB+C,EAAAhD,KAAA,EAAAgD,EAAA/C,KAAA,EAEuBxvC,aAAK8uC,GAAW,OAAQ,YAAa1vB,EAAOzmB,MAFnE,YAEOw2C,EAFPoD,EAAA9C,MAKY92C,KAAK4G,MALjB,CAAAgzC,EAAA/C,KAAA,QAOK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAN9CmzC,EAAA/C,KAAA,EAOWX,aAAImG,GAAkC7F,EAAQx2C,KAAK4G,MAAMH,UAPpE,WAUI+vC,EAAQx2C,KAAKkY,OAVjB,CAAA0hC,EAAA/C,KAAA,SAYK,OADAxuC,GAAc,CAAC5B,QAAS,4BAX7BmzC,EAAA/C,KAAA,GAYWX,aAAImG,GAAmC7F,EAAQx2C,KAAKkY,SAZ/D,QAAA0hC,EAAA/C,KAAA,iBAAA+C,EAAAhD,KAAA,GAAAgD,EAAA3C,GAAA2C,EAAA,SAeCnuC,GAAWmuC,EAAA3C,IACX7xC,QAAQC,IAAIu0C,EAAA3C,GAAExwC,SAhBf,yBAAAmzC,EAAA1C,SAAA2F,GAAA,eAoBA,SAAU7a,GAASvb,GAAnB,IAAAq2B,EAAA3B,EAAA3E,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OAMiB,OANjBkD,EAAAnD,KAAA,EAEKkG,EAAWr2B,EAAOzmB,KAAKuC,UACvB44C,EAAa10B,EAAOzmB,MAENuC,GALnBw3C,EAAAlD,KAAA,EAMuBxvC,aAAK8uC,GAAW,MAAO,aAAa2G,EAAU3B,GANrE,YAMO3E,EANPuD,EAAAjD,MASY92C,KAAK4G,MATjB,CAAAmzC,EAAAlD,KAAA,SAWK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAV9CszC,EAAAlD,KAAA,GAWWX,aAAImG,GAAmC7F,EAAQx2C,KAAK4G,MAAMH,UAXrE,YAcI+vC,EAAQx2C,KAAKkY,OAdjB,CAAA6hC,EAAAlD,KAAA,SAgBK,OADAxuC,GAAc,CAAC5B,QAAS,8BAf7BszC,EAAAlD,KAAA,GAgBWX,aAAImG,GAAoC7F,EAAQx2C,KAAKkY,SAhBhE,QAAA6hC,EAAAlD,KAAA,iBAAAkD,EAAAnD,KAAA,GAAAmD,EAAA9C,GAAA8C,EAAA,SAmBCtuC,GAAWsuC,EAAA9C,IACX7xC,QAAQC,IAAI00C,EAAA9C,GAAExwC,SApBf,yBAAAszC,EAAA7C,SAAA6F,GAAA,eAwBA,SAAUpb,GAAWlb,GAArB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAEiB,OAFjB6D,EAAA9D,KAAA,EAAA8D,EAAA7D,KAAA,EAEuBxvC,aAAK8uC,GAAW,SAAU,aAAa1vB,EAAOzmB,MAFrE,YAEOw2C,EAFPkE,EAAA5D,MAKY92C,KAAK4G,MALjB,CAAA8zC,EAAA7D,KAAA,QAOK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAN9Ci0C,EAAA7D,KAAA,EAOWX,aAAImG,GAAqC7F,EAAQx2C,KAAK4G,MAAMH,UAPvE,WAUI+vC,EAAQx2C,KAAKkY,OAVjB,CAAAwiC,EAAA7D,KAAA,SAYK,OADAxuC,GAAc,CAAC5B,QAAS,8BAX7Bi0C,EAAA7D,KAAA,GAYWX,aAAImG,GAAsC7F,EAAQx2C,KAAKkY,SAZlE,QAAAwiC,EAAA7D,KAAA,iBAAA6D,EAAA9D,KAAA,GAAA8D,EAAAzD,GAAAyD,EAAA,SAeCjvC,GAAWivC,EAAAzD,IACX7xC,QAAQC,IAAIq1C,EAAAzD,GAAExwC,SAhBf,yBAAAi0C,EAAAxD,SAAA8F,GAAA,eAoBA,SAAUtb,GAAYjb,GAAtB,IAAAq2B,EAAA3B,EAAA3E,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,OAMiB,OANjB+D,EAAAhE,KAAA,EAEKkG,EAAWr2B,EAAOzmB,KAAKuC,UACvB44C,EAAa10B,EAAOzmB,MAENuC,GALnBq4C,EAAA/D,KAAA,EAMuBxvC,aAAK8uC,GAAW,MAAO,aAAa2G,EAAU3B,GANrE,YAMO3E,EANPoE,EAAA9D,MASY92C,KAAK4G,MATjB,CAAAg0C,EAAA/D,KAAA,SAWK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAV9Cm0C,EAAA/D,KAAA,GAWWX,aAAImG,MAXf,YAcI7F,EAAQx2C,KAAKkY,OAdjB,CAAA0iC,EAAA/D,KAAA,SAgBK,OADAxuC,GAAc,CAAC5B,QAAS,gCAf7Bm0C,EAAA/D,KAAA,GAgBWX,aAAImG,GAAuC7F,EAAQx2C,KAAKkY,SAhBnE,QAAA0iC,EAAA/D,KAAA,iBAAA+D,EAAAhE,KAAA,GAAAgE,EAAA3D,GAAA2D,EAAA,SAmBCnvC,GAAWmvC,EAAA3D,IACX7xC,QAAQC,IAAIu1C,EAAA3D,GAAExwC,SApBf,yBAAAm0C,EAAA1D,SAAA+F,GAAA,eAwBA,SAAUve,GAAUjY,GAApB,IAAAq2B,EAAA3B,EAAA3E,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAQiB,OARjBiE,EAAAlE,KAAA,EAEKkG,EAAWr2B,EAAOzmB,KAAKuC,UACvB44C,EAAa10B,EAAOzmB,MAENuC,GALnBu4C,EAAAjE,KAAA,EAQuBxvC,aAAK2tC,GAAS,MAAO,YAAY8H,EAAU3B,GARlE,YAQO3E,EARPsE,EAAAhE,MAWY92C,KAAK4G,MAXjB,CAAAk0C,EAAAjE,KAAA,SAaK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAZ9Cq0C,EAAAjE,KAAA,GAaWX,aAAImG,GAAmC7F,EAAQx2C,KAAK4G,MAAMH,UAbrE,YAgBI+vC,EAAQx2C,KAAKkY,OAhBjB,CAAA4iC,EAAAjE,KAAA,SAkBK,OADAxuC,GAAc,CAAC5B,QAAS,+BAjB7Bq0C,EAAAjE,KAAA,GAkBWX,aAAImG,GAAqC7F,EAAQx2C,KAAKkY,SAlBjE,QAmBK,OAnBL4iC,EAAAjE,KAAA,GAmBWX,aAAImG,MAnBf,QAAAvB,EAAAjE,KAAA,iBAsBC,OAtBDiE,EAAAlE,KAAA,GAAAkE,EAAA7D,GAAA6D,EAAA,SAAAA,EAAAjE,KAAA,GAsBOX,aAAImG,MAtBX,QAuBC5wC,GAAY,CAAChF,QAASq0C,EAAA7D,GAAExwC,UACxBrB,QAAQC,IAAIy1C,EAAA7D,GAAExwC,SAxBf,yBAAAq0C,EAAA5D,SAAAgG,GAAA,eA4BA,SAAUte,GAAYnY,GAAtB,IAAA+vB,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,OAIiB,OAJjBsG,EAAAvG,KAAA,EAAAuG,EAAAtG,KAAA,EAIuBxvC,aAAK2tC,GAAS,SAAU,YAAYvuB,EAAOzmB,MAJlE,YAIOw2C,EAJP2G,EAAArG,MAOY92C,KAAK4G,MAPjB,CAAAu2C,EAAAtG,KAAA,QASK,OADAprC,GAAY,CAAChF,QAAS+vC,EAAQx2C,KAAK4G,MAAMH,UAR9C02C,EAAAtG,KAAA,EASWX,aAAImG,GAAqC7F,EAAQx2C,KAAK4G,MAAMH,UATvE,WAYI+vC,EAAQx2C,KAAKkY,OAZjB,CAAAilC,EAAAtG,KAAA,SAcK,OADAxuC,GAAc,CAAC5B,QAAS,+BAb7B02C,EAAAtG,KAAA,GAcWX,aAAImG,GAAuC7F,EAAQx2C,KAAKkY,SAdnE,QAeK,OAfLilC,EAAAtG,KAAA,GAeWX,aAAImG,MAff,QAAAc,EAAAtG,KAAA,iBAAAsG,EAAAvG,KAAA,GAAAuG,EAAAlG,GAAAkG,EAAA,SAkBC1xC,GAAW0xC,EAAAlG,IACX7xC,QAAQC,IAAI83C,EAAAlG,GAAExwC,SAnBf,yBAAA02C,EAAAjG,SAAAkG,GAAA,eAuBA,SAAUhB,KAAV,OAAA3F,GAAAjtC,EAAAktC,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,OAEC,OAFDwG,EAAAzG,KAAA,EAAAyG,EAAAxG,KAAA,EAEOQ,aAAWiG,GAA0BlgB,IAF5C,OAGC,OAHDigB,EAAAxG,KAAA,EAGOQ,aAAWiG,GAA4BhiB,IAH9C,OAIC,OAJD+hB,EAAAxG,KAAA,EAIOQ,aAAWiG,GAA0Bvc,IAJ5C,OAKC,OALDsc,EAAAxG,KAAA,EAKOQ,aAAWiG,GAA0Bvb,IAL5C,OAMC,OANDsb,EAAAxG,KAAA,GAMOQ,aAAWiG,GAA2Btb,IAN7C,QAOC,OAPDqb,EAAAxG,KAAA,GAOOQ,aAAWiG,GAA6B3b,IAP/C,QAQC,OARD0b,EAAAxG,KAAA,GAQOQ,aAAWiG,GAA8B5b,IARhD,QASC,OATD2b,EAAAxG,KAAA,GASOQ,aAAWiG,GAAgCtgB,IATlD,QAUC,OAVDqgB,EAAAxG,KAAA,GAUOQ,aAAWiG,GAA6B7f,IAV/C,QAWC,OAXD4f,EAAAxG,KAAA,GAWOQ,aAAWiG,GAA8Bpe,IAXhD,QAYC,OAZDme,EAAAxG,KAAA,GAYOQ,aAAWiG,GAA4B5e,IAZ9C,QAaC,OAbD2e,EAAAxG,KAAA,GAaOQ,aAAWiG,GAA8B1e,IAbhD,QAAAye,EAAAxG,KAAA,iBAAAwG,EAAAzG,KAAA,GAAAyG,EAAApG,GAAAoG,EAAA,SAeCj4C,QAAQC,IAARg4C,EAAApG,IAfD,yBAAAoG,EAAAnG,SAAAqG,GAAA,gCC3QU9Z,iBA0DA2F,iBAwBAR,iBAgCPvF,iBAgROma,IAlYV,SAAU/Z,GAAUhd,GAApB,IAAAzmB,EAAAy9C,EAAA1Z,EAAAzF,EAAA2F,EAAA/pB,EAAAwjC,EAAA5Z,EAAA0B,EAAA,OAAAiR,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAYC,OAZDF,EAAAC,KAAA,SAEK52C,EAFL6C,OAAAC,EAAA,EAAAD,CAAA,GAEyB4jB,EAAOzmB,OACnBkqC,QACRuT,EAJL56C,OAAAC,EAAA,EAAAD,CAAA,GAI6B7C,UACrBA,EAAKue,cACLkI,EAAOzmB,KAAKue,OAEO,WADtBwlB,EAPLlhC,OAAAC,EAAA,EAAAD,CAAA,GAO6B4jB,EAAOzmB,OACrBkqC,UACVnG,EAAW71B,MAAgB3K,OAASsxB,SAAS,GAAI,UAAUrxB,OAAO,cAClEugC,EAAW51B,IAAgB5K,OAASC,OAAO,eAVhDmzC,EAAAE,KAAA,GAYOX,aAAIqC,GAAwB,CAACnrC,IAAKqwC,EAAUl/B,OAAOnR,IAAK5K,MAAO8kB,KAAKC,MAAMk2B,EAAUl/B,OAAO/b,UAZlG,QAaa,OAbbm0C,EAAAE,KAAA,GAamBkC,aAAI,CAClB1xC,aAAK8uC,GAAW,OAAQ,gBAAiBn2C,GACzCqH,aAAK8uC,GAAW,OAAQ,iBAAkBpS,GAC1C18B,aAAK8uC,GAAW,OAAQ,sBAAuBsH,KAhBpD,aAaOnf,EAbPqY,EAAAG,MAAA,CAAAH,EAAAE,KAAA,YAoBS5S,EAAQ3F,EAAI,GACZpkB,EAASokB,EAAI,GACbof,EAAapf,EAAI,KAGlB2F,EAAMjkC,KAAK4G,OAASq9B,EAAMjkC,KAAK4G,OAASq9B,EAAMjkC,KAAK4G,OAzB3D,CAAA+vC,EAAAE,KAAA,SA0BS,OA1BTF,EAAAE,KAAA,GA0BeX,aAAIyH,MA1BnB,YA6BQ1Z,EAAMjkC,KAAKkY,OA7BnB,CAAAy+B,EAAAE,KAAA,SAyCS,OAXI/S,EAAoBG,EAAMjkC,KAAKkY,QACzBisB,yBAA8BtgC,GAAuBigC,EAAUK,2BAErEqB,EAAoBkY,EAAW19C,KAAKkY,QAC5B0tB,2BAAgC/hC,GAAuB2hC,EAAYI,4BAC/EJ,EAAYE,wBAA6B7hC,GAAuB2hC,EAAYE,yBAC5EF,EAAYuD,gBAAqBllC,GAAuB2hC,EAAYuD,iBACpEvD,EAAYqD,mBAAwBhlC,GAAuB2hC,EAAYqD,oBACvErD,EAAY7qB,sBAA2B9W,GAAuB2hC,EAAY7qB,uBAtCnFg8B,EAAAE,KAAA,GAyCeX,aAAIyH,GAAoC,CAC1C7Z,UAAWA,EACXe,WAAY3qB,EAAOla,KAAKkY,OACxBstB,YAAaA,KA5C1B,QAAAmR,EAAAE,KAAA,iBAgDKprC,GAAY,CAAChF,QAAS,wBAhD3B,QAAAkwC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAmDClrC,GAAWkrC,EAAAM,IACX7xC,QAAQC,IAAIsxC,EAAAM,GAAExwC,SApDf,yBAAAkwC,EAAAO,SAAA0G,GAAA,eA0DA,SAAUxU,GAAS3iB,GAAnB,IAAAzmB,EAAAw2C,EAAA,OAAAC,GAAAjtC,EAAAktC,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OAOiB,MALA,WADhB72C,EADD6C,OAAAC,EAAA,EAAAD,CAAA,GACiC4jB,EAAOzmB,OACnCkqC,UACJlqC,EAAKkO,MAAgB3K,OAASsxB,SAAS,GAAI,UAAUrxB,OAAO,cAC5DxD,EAAKmO,IAAgB5K,OAASC,OAAO,eAJtC4zC,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAOuBxvC,aAAK8uC,GAAW,OAAQ,iBAAkBn2C,GAPjE,YAOOw2C,EAPPY,EAAAN,MAUY92C,KAAK4G,MAVjB,CAAAwwC,EAAAP,KAAA,QAWK,OAXLO,EAAAP,KAAA,EAWWX,aAAIyH,MAXf,WAcInH,EAAQx2C,KAAKkY,OAdjB,CAAAk/B,EAAAP,KAAA,SAeK,OAfLO,EAAAP,KAAA,GAeWX,aAAIyH,GAAmCnH,EAAQx2C,KAAKkY,SAf/D,QAAAk/B,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAH,GAAAG,EAAA,SAkBC3rC,GAAW2rC,EAAAH,IACX7xC,QAAQC,IAAI+xC,EAAAH,GAAExwC,SAnBf,yBAAA2wC,EAAAF,SAAA2G,GAAA,eAwBA,SAAUjV,GAAcniB,GAAxB,IAAAzmB,EAAAw2C,EAAApY,EAAA0f,EAAA,OAAArH,GAAAjtC,EAAAktC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAOiB,OAPjB6B,EAAA9B,KAAA,SAEK52C,EAFL6C,OAAAC,EAAA,EAAAD,CAAA,GAEyB4jB,EAAOzmB,OACnBue,OACZve,EAAKq4B,SAAe,iBAJrBqgB,EAAA7B,KAAA,EAOuBxvC,aAAK8uC,GAAW,OAAZ,sBAA2Cn2C,GAPtE,YAOOw2C,EAPPkC,EAAA5B,MAUY92C,KAAK4G,MAVjB,CAAA8xC,EAAA7B,KAAA,SAWK,OAXL6B,EAAA7B,KAAA,GAWWX,aAAIyH,MAXf,YAcInH,EAAQx2C,KAAKkY,OAdjB,CAAAwgC,EAAA7B,KAAA,SAwBK,OAPIzY,EAAgBoY,EAAQx2C,KAAKkY,QAAU,GAEvC4lC,EAAgB,CAChBxT,mBAA0BlM,EAASp+B,KACnCmgB,MAAgBie,EAASje,MACzBmL,WAAgB7E,EAAOzmB,MAtBhC04C,EAAA7B,KAAA,GAwBWX,aAAIyH,GAA4BG,IAxB3C,QAAApF,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAzB,GAAAyB,EAAA,SA2BCjtC,GAAWitC,EAAAzB,IACX7xC,QAAQC,IAAIqzC,EAAAzB,GAAExwC,SA5Bf,yBAAAiyC,EAAAxB,SAAA6G,GAAA,eAgCP,SAAU1a,GAAe5c,GAAzB,IAAAzmB,EAAAue,EAAAC,EAAAC,EAAA4Z,EAAAjvB,EAAA8O,EAAA8B,EAAAmG,EAAAvD,EAAAoD,EAAAo7B,EAAA,OAAA3E,GAAAjtC,EAAAktC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OA6QI,OA5QI72C,EAAgBymB,EAAOzmB,KAAKsrB,WAE5B/M,EAAgBve,EAAKue,QAAU,GAC/BC,EAAgBD,EAAO+K,WAAWC,OAAS,GAC3C9K,EAAgBF,EAAO+K,WAAWG,MAAQ,GAC1BlL,EAAO+K,WAAWE,OAAS,GAC3C6O,EAAgBr4B,EAAKq4B,UAAY,iBACjCjvB,EAAgBpJ,EAAKwD,QAAU,MAC/B0U,EAAgBuO,EAAOzmB,KAAKsqC,mBAC5BtwB,EAAgB,GAChBmG,EAAgBsG,EAAOzmB,KAAKmgB,OAAS,EACrCvD,EAAW,GACE,UAAd5c,EAAKC,MACJ2c,EAAsB,WACnB1E,EAAO1T,OAAS,GACf0T,EAAOvF,IAAI,SAACyM,EAAKhS,GAEP4M,EAAMoF,EAAIna,YAaN+U,EAAMoF,EAAIna,YAAYma,EAAI3P,YAC5BuK,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CACtCI,KAAgBuP,EAAIjB,MACpB5b,GAAgB6c,EAAI3P,SACpByK,OAAgB,GAChB1Q,EAAgB,EAChB0+B,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBvtB,MAAgB,KArBxBb,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAgB,CAC9BI,KAAgBuP,EAAIjB,MACpB5b,GAAgB6c,EAAI3P,SACpByK,OAAgB,GAChB1Q,EAAgB,EAChB0+B,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBvtB,MAAgB,IAiBhCb,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUoL,QACpC,IAAIytB,EAAoB,GACrBlpB,EAAImpB,WAAa,GAAKnpB,EAAImpB,WAAa,IACtCD,EAAoB,QACpBtuB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUy4B,KAC9B9oB,EAAImpB,UAAY,IAAMnpB,EAAImpB,WAAa,IAC7CD,EAAoB,WACpBtuB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAU04B,KAC9B/oB,EAAImpB,UAAY,IACtBD,EAAoB,YACpBtuB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAU24B,KAEpCpuB,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUjG,IAGxCwQ,EAAMoF,EAAIna,YAAYma,EAAI3P,UAAUyK,OAAOxL,KAAK,CAC5ChL,UAA4BH,KAAO6b,EAAIL,YAAYvb,OAAO,KAC1Dub,WAA4B1b,GAAW+b,EAAIL,YAC3Ci/B,UAA4B5+B,EAAI4+B,UAAUl/B,cAC1C0pB,cAA4BppB,EAAI4+B,UAChC30C,aAA4B+V,EAAI/V,aAChC8U,MAA4BiB,EAAIjB,MAChC1O,SAA4B2P,EAAI3P,SAChCH,gBAA4BjM,GAAW+b,EAAI9P,iBAC3CD,eAA4BhM,GAAW+b,EAAI/P,gBAC3C5C,cAA4BpJ,GAAW+b,EAAI3S,eAC3Ci8B,YAA4BtpB,EAAIspB,YAChCD,uBAA4BplC,GAAW+b,EAAIqpB,wBAC3CH,UAA4BA,EAC5BC,UAA4BnpB,EAAImpB,UAChCtgC,KAA4BmX,EAAInX,SAIxC+X,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GACblG,EAAM5M,GAAK8S,GAAIhG,OAAamF,UAAUrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAEyY,KAAY,CAACjvB,MAEtF4W,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,GAChB,UAAdhgB,EAAKC,KACRue,EAAYha,OAAS,GAA2B,IAAtBia,EAAWja,QACpCoY,EAAqB,YAClB1E,EAAO1T,OAAS,GACf0T,EAAOvF,IAAI,SAACyM,EAAKhS,GAEP4M,EAAMoF,EAAIna,cACZ+U,EAAMoF,EAAIna,YAAkB,CACxB4K,KAAgBuP,EAAIna,WACpBiV,OAAgB,GAChB1Q,EAAgB,EAChB0+B,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBvtB,MAAgB,IAIxBb,EAAMoF,EAAIna,YAAY4V,QACtB,IAAIytB,EAAoB,GACrBlpB,EAAImpB,WAAa,GAAKnpB,EAAImpB,WAAa,IACtCD,EAAoB,QACpBtuB,EAAMoF,EAAIna,YAAYijC,KAChB9oB,EAAImpB,UAAY,IAAMnpB,EAAImpB,WAAa,IAC7CD,EAAoB,WACpBtuB,EAAMoF,EAAIna,YAAYkjC,KAChB/oB,EAAImpB,UAAY,IACtBD,EAAoB,YACpBtuB,EAAMoF,EAAIna,YAAYmjC,KAEtBpuB,EAAMoF,EAAIna,YAAYuE,IAK1BwQ,EAAMoF,EAAIna,YAAYiV,OAAOxL,KAAK,CAC9BhL,UAA4BH,KAAO6b,EAAIL,YAAYvb,OAAO,KAC1Dub,WAA4B1b,GAAW+b,EAAIL,YAC3Ci/B,UAA4B5+B,EAAI4+B,UAAUl/B,cAC1C0pB,cAA4BppB,EAAI4+B,UAChC30C,aAA4B+V,EAAI/V,aAChC8U,MAA4BiB,EAAIjB,MAChC1O,SAA4B2P,EAAI3P,SAChCH,gBAA4BjM,GAAW+b,EAAI9P,iBAC3CD,eAA4BhM,GAAW+b,EAAI/P,gBAC3C5C,cAA4BpJ,GAAW+b,EAAI3S,eAC3Ci8B,YAA4BtpB,EAAIspB,YAChCD,uBAA4BplC,GAAW+b,EAAIqpB,wBAC3CH,UAA4BA,EAC5BC,UAA4BnpB,EAAImpB,UAChCtgC,KAA4BmX,EAAInX,SAI5CoX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChB4M,EAAM5M,GAAK8M,OAAwBmF,UAAUrF,EAAM5M,GAAK8M,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAEyY,KAAY,CAACjvB,OAEnFqV,EAAWja,OAAS,IAC1BoY,EAAsB,WACnB1E,EAAO1T,OAAS,GACf0T,EAAOvF,IAAI,SAACyM,EAAKhS,GAEP4M,EAAMoF,EAAIna,YAaN+U,EAAMoF,EAAIna,YAAYma,EAAIwJ,WAC5B5O,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAAe,CACrC/Y,KAAgBuP,EAAI6+B,UACpB17C,GAAgB6c,EAAIwJ,QACpB1O,OAAgB,GAChB1Q,EAAgB,EAChB0+B,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBvtB,MAAgB,KArBxBb,EAAMoF,EAAIna,YAAkB,GAC5B+U,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAAe,CAC7B/Y,KAAgBuP,EAAI6+B,UACpB17C,GAAgB6c,EAAIwJ,QACpB1O,OAAgB,GAChB1Q,EAAgB,EAChB0+B,EAAgB,EAChBC,EAAgB,EAChBC,EAAgB,EAChBvtB,MAAgB,IAiBhC,IAAIytB,EAAoB,GACxBtuB,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAAS/N,QAChCuE,EAAImpB,WAAa,GAAKnpB,EAAImpB,WAAa,IACtCvuB,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAASsf,IACnCI,EAAoB,SACdlpB,EAAImpB,UAAY,IAAMnpB,EAAImpB,WAAa,IAC7CvuB,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAASuf,IACnCG,EAAoB,YACdlpB,EAAImpB,UAAY,IACtBvuB,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAASwf,IACnCE,EAAoB,aAEpBtuB,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAASpf,IAGvCwQ,EAAMoF,EAAIna,YAAYma,EAAIwJ,SAAS1O,OAAOxL,KAAK,CAC3ChL,UAA4BH,KAAO6b,EAAIL,YAAYvb,OAAO,KAC1Dub,WAA4B1b,GAAW+b,EAAIL,YAC3Ci/B,UAA4B5+B,EAAI4+B,UAAUl/B,cAC1C0pB,cAA4BppB,EAAI4+B,UAChC30C,aAA4B+V,EAAI/V,aAChC8U,MAA4BiB,EAAIjB,MAChC1O,SAA4B2P,EAAI3P,SAChCH,gBAA4BjM,GAAW+b,EAAI9P,iBAC3CD,eAA4BhM,GAAW+b,EAAI/P,gBAC3C5C,cAA4BpJ,GAAW+b,EAAI3S,eAC3Ci8B,YAA4BtpB,EAAIspB,YAChCD,uBAA4BplC,GAAW+b,EAAIqpB,wBAC3CH,UAA4BA,EAC5BC,UAA4BnpB,EAAImpB,UAChCtgC,KAA4BmX,EAAInX,SAIxC+X,EAAgC,GACpCX,OAAOrF,EAAO,SAACoF,EAAKhS,GAChBiS,OAAOD,EAAK,SAACa,EAAIC,GAEblG,EAAM5M,GAAK8S,GAAIhG,OAAiBmF,UAAUrF,EAAM5M,GAAK8S,GAAIhG,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAEyY,KAAY,CAACjvB,MAE1F4W,EAAK5S,GAA2BiS,SAASrF,EAAM5M,GAAM,SAACwS,GAAQ,OAAOA,EAAE/P,SAE3EmK,EAAoCgG,IAGxChG,EAA4B,CACxBxQ,EAAE,EACF0+B,EAAE,EACFC,EAAE,EACFC,EAAE,EACFvtB,MAAgB,EAChBX,OAAQ,IAEZ0C,EAA4B,gBAC5B1E,EAAOvF,IAAI,SAACyM,EAAKhS,GAEb4M,EAAMa,QACN,IAAIytB,EAAoB,GACrBlpB,EAAImpB,WAAa,GAAKnpB,EAAImpB,WAAa,IACtCvuB,EAAMkuB,IACNI,EAAoB,SACdlpB,EAAImpB,UAAY,IAAMnpB,EAAImpB,WAAa,IAC7CD,EAAoB,WACpBtuB,EAAMmuB,KACA/oB,EAAImpB,UAAY,IACtBD,EAAoB,YACpBtuB,EAAMouB,KAENpuB,EAAMxQ,IAGVwQ,EAAME,OAAOxL,KAAK,CACdhL,UAA4BH,KAAO6b,EAAIL,YAAYvb,OAAO,KAC1Dub,WAA4B1b,GAAW+b,EAAIL,YAC3Ci/B,UAA4B5+B,EAAI4+B,UAAUl/B,cAC1C0pB,cAA4BppB,EAAI4+B,UAChC30C,aAA4B+V,EAAI/V,aAChC8U,MAA4BiB,EAAIjB,MAChC1O,SAA4B2P,EAAI3P,SAChCH,gBAA4BjM,GAAW+b,EAAI9P,iBAC3CD,eAA4BhM,GAAW+b,EAAI/P,gBAC3C5C,cAA4BpJ,GAAW+b,EAAI3S,eAC3Ci8B,YAA4BtpB,EAAIspB,YAChCD,uBAA4BplC,GAAW+b,EAAIqpB,wBAC3CH,UAA4BA,EAC5BC,UAA4BnpB,EAAImpB,UAChCtgC,KAA4BmX,EAAInX,SAIxC+R,EAAME,OAAgCmF,UAAUrF,EAAME,OAAQ,CAAC,SAAA0F,GAAC,OAAIA,EAAEyY,KAAY,CAACjvB,KA1Q3FiwC,EAAAxC,KAAA,GA6QUX,aAAIyH,GAAqC,CAACrT,mBAAoBpyB,EAAQ08B,cAAe,CAAEz0B,MAAOA,EAAOnG,MAAOA,EAAO4C,SAAUA,EAAUgrB,OAAQ5nC,EAAKwvB,KAAMsY,OAAQzP,EAAU70B,OAAQ4F,MA7Q9L,yBAAAiwC,EAAAnC,SAAAgH,IAgRO,SAAUV,KAAV,OAAA/G,GAAAjtC,EAAAktC,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAEC,OAFD0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAEOQ,aAAW8G,GAA2B1a,IAF7C,OAGC,OAHD8V,EAAA1C,KAAA,EAGOQ,aAAW8G,GAA0B/U,IAH5C,OAIC,OAJDmQ,EAAA1C,KAAA,EAIOQ,aAAW8G,GAA+BvV,IAJjD,OAKC,OALD2Q,EAAA1C,KAAA,EAKOQ,aAAW8G,GAAiC9a,IALnD,OAAAkW,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAAtC,GAAAsC,EAAA,SAOCn0C,QAAQC,IAARk0C,EAAAtC,IAPD,yBAAAsC,EAAArC,SAAAkH,GAAA,gCCjYkBC,IAAV,SAAUA,KAAV,OAAA5H,GAAAjtC,EAAAktC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPkC,aAAI,CACR1xC,aAAKivC,IACLjvC,aAAKowC,IACLpwC,aAAK0wC,IACL1wC,aAAKixC,IACLjxC,aAAK6zC,IACL7zC,aAAKwxC,IACLxxC,aAAKq0C,IACLr0C,aAAK+0C,IACL/0C,aAAKm2C,MAVM,wBAAA7G,EAAAO,SAAAoH,ICUf,IAAMC,GAAsBC,eACtBrgC,GAAsBsgC,aACIC,GACAC,aAAgBJ,KAEhDA,GAAeK,IAAIP,IAInBQ,IAASC,OACOv1C,EAAAC,EAAAC,cAACs1C,EAAA,EAAD,CAAU5gC,MAAOA,IACb5U,EAAAC,EAAAC,cAACmiC,GAAA,EAAD,KACIriC,EAAAC,EAAAC,cAACu1C,GAAD,QAGRz2C,SAASmd,eAAe,StB4FlC,kBAAmBu5B,WACrBA,UAAUC,cAAcpkC,MAAM/P,KAAK,SAAAo0C,GACjCA,EAAaC","file":"static/js/main.b902221c.chunk.js","sourcesContent":["//Get Locations & Zones\r\nexport const GET_LOCATIONS                              =   'GET_LOCATIONS';\r\nexport const GET_LOCATIONS_SUCCESS                      =   'GET_LOCATIONS_SUCCESS';\r\nexport const GET_LOCATIONS_ERROR                        =   'GET_LOCATIONS_ERROR';\r\n\r\n//Create Task\r\nexport const CREATE_TASK                                =   'CREATE_TASK';\r\nexport const CREATE_TASK_SUCCESS                        =   'CREATE_TASK_SUCCESS';\r\nexport const CREATE_TASK_ERROR                          =   'CREATE_TASK_ERROR';\r\n\r\n//Edit Task\r\nexport const EDIT_TASK                                  =   'EDIT_TASK';\r\nexport const EDIT_TASK_SUCCESS                          =   'EDIT_TASK_SUCCESS';\r\nexport const EDIT_TASK_ERROR                            =   'EDIT_TASK_ERROR';\r\n\r\n//Task Details\r\nexport const GET_TASK_DETAILS                           =   'GET_TASK_DETAILS';\r\nexport const GET_TASK_DETAILS_SUCCESS                   =   'GET_TASK_DETAILS_SUCCESS';\r\nexport const GET_TASK_DETAILS_ERROR                     =   'GET_TASK_DETAILS_ERROR';\r\n\r\n//Track Details\r\nexport const GET_TRACK_DETAILS                          =   'GET_TRACK_DETAILS';\r\nexport const GET_TRACK_DETAILS_SUCCESS                  =   'GET_TRACK_DETAILS_SUCCESS';\r\nexport const GET_TRACK_DETAILS_ERROR                    =   'GET_TRACK_DETAILS_ERROR';\r\n\r\n//Delete Task\r\nexport const DELETE_TASK                                =   'DELETE_TASK';\r\nexport const DELETE_TASK_SUCCESS                        =   'DELETE_TASK_SUCCESS';\r\nexport const DELETE_TASK_ERROR                          =   'DELETE_TASK_ERROR';\r\n\r\n//Update Task Status\r\nexport const UPDATE_TASK_STATUS                         =   'UPDATE_TASK_STATUS';\r\nexport const UPDATE_TASK_STATUS_SUCCESS                 =   'UPDATE_TASK_STATUS_SUCCESS';\r\nexport const UPDATE_TASK_STATUS_ERROR                   =   'UPDATE_TASK_STATUS_ERROR';\r\n\r\n//Search\r\nexport const RESET_TASK_SEARCH                          =   'RESET_TASK_SEARCH';\r\nexport const TASK_SEARCH                                =   'TASK_SEARCH';\r\nexport const TASK_SEARCH_SUCCESS                        =   'TASK_SEARCH_SUCCESS';\r\nexport const TASK_SEARCH_ERROR                          =   'TASK_SEARCH_ERROR';\r\n\r\n//Shopped Late\r\nexport const GET_SHOPPEDLATE                            =   'GET_SHOPPEDLATE';\r\nexport const GET_SHOPPEDLATE_SUCCESS                    =   'GET_SHOPPEDLATE_SUCCESS';\r\nexport const GET_SHOPPEDLATE_ERROR                      =   'GET_SHOPPEDLATE_ERROR';\r\n\r\n//Update Filter\r\nexport const UPDATE_FILTER                              =   'UPDATE_FILTER';","import {\r\n        GET_LOCATIONS,\r\n        GET_LOCATIONS_SUCCESS,\r\n        GET_LOCATIONS_ERROR,\r\n        CREATE_TASK,\r\n        CREATE_TASK_SUCCESS,\r\n        CREATE_TASK_ERROR,\r\n        EDIT_TASK,\r\n        EDIT_TASK_SUCCESS,\r\n        EDIT_TASK_ERROR,\r\n        DELETE_TASK,\r\n        DELETE_TASK_SUCCESS,\r\n        DELETE_TASK_ERROR,\r\n        GET_TASK_DETAILS,\r\n        GET_TASK_DETAILS_SUCCESS,\r\n        GET_TASK_DETAILS_ERROR,\r\n        GET_TRACK_DETAILS,\r\n        GET_TRACK_DETAILS_SUCCESS,\r\n        GET_TRACK_DETAILS_ERROR,\r\n        UPDATE_TASK_STATUS,\r\n        UPDATE_TASK_STATUS_SUCCESS,\r\n        UPDATE_TASK_STATUS_ERROR,\r\n        TASK_SEARCH,\r\n        TASK_SEARCH_SUCCESS,\r\n        TASK_SEARCH_ERROR,\r\n        GET_SHOPPEDLATE,\r\n        GET_SHOPPEDLATE_SUCCESS,\r\n        GET_SHOPPEDLATE_ERROR,\r\n        RESET_TASK_SEARCH,\r\n        UPDATE_FILTER\r\n} from \"./constants\";\r\nexport const getLocations = (data) => ({\r\n  type: GET_LOCATIONS,\r\n  data\r\n});\r\n\r\nexport const listenGetLocationsSuccess = (data) => ({\r\n  type: GET_LOCATIONS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenGetLocationsError = (data) => ({\r\n  type: GET_LOCATIONS_ERROR,\r\n  data\r\n});\r\n\r\nexport const createTask = (data) => ({\r\n  type: CREATE_TASK,\r\n  data\r\n});\r\n\r\nexport const listenCreateTaskSuccess = (data) => ({\r\n  type: CREATE_TASK_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenCreateTaskError = (data) => ({\r\n  type: CREATE_TASK_ERROR,\r\n  data\r\n});\r\n\r\nexport const editTask = (data) => ({\r\n  type: EDIT_TASK,\r\n  data\r\n});\r\n\r\nexport const listenEditTaskSuccess = (data) => ({\r\n  type: EDIT_TASK_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenEditTaskError = (data) => ({\r\n  type: EDIT_TASK_ERROR,\r\n  data\r\n});\r\n\r\nexport const getTrackDetails = (data) => ({\r\n  type: GET_TRACK_DETAILS,\r\n  data\r\n});\r\n\r\nexport const listenGetTrackDetailsSuccess = (data) => ({\r\n  type: GET_TRACK_DETAILS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenGetTrackDetailsError = (data) => ({\r\n  type: GET_TRACK_DETAILS_ERROR,\r\n  data\r\n});\r\n\r\nexport const getTaskDetails = (data) => ({\r\n  type: GET_TASK_DETAILS,\r\n  data\r\n});\r\n\r\nexport const listenGetTaskDetailsSuccess = (data) => ({\r\n  type: GET_TASK_DETAILS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenGetTaskDetailsError = (data) => ({\r\n  type: GET_TASK_DETAILS_ERROR,\r\n  data\r\n});\r\n\r\nexport const deleteTask = (data) => ({\r\n  type: DELETE_TASK,\r\n  data\r\n});\r\n\r\nexport const listenDeleteTaskSuccess = (data) => ({\r\n  type: DELETE_TASK_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenDeleteTaskError = (data) => ({\r\n  type: DELETE_TASK_ERROR,\r\n  data\r\n});\r\n\r\nexport const updateTaskStatus = (data) => ({\r\n  type: UPDATE_TASK_STATUS,\r\n  data\r\n});\r\n\r\nexport const listenUpdateTaskStatusSuccess = (data) => ({\r\n  type: UPDATE_TASK_STATUS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenUpdateTaskStatusError = (data) => ({\r\n  type: UPDATE_TASK_STATUS_ERROR,\r\n  data\r\n});\r\n\r\nexport const resetSearch = (data) => ({\r\n  type: RESET_TASK_SEARCH,\r\n  data\r\n});\r\n\r\nexport const search = (data) => ({\r\n  type: TASK_SEARCH,\r\n  data\r\n});\r\n\r\nexport const listenSearchSuccess = (data) => ({\r\n  type: TASK_SEARCH_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenSearchError = (data) => ({\r\n  type: TASK_SEARCH_ERROR,\r\n  data\r\n});\r\n\r\nexport const getShoppedLate = (data) => ({\r\n  type: GET_SHOPPEDLATE,\r\n  data\r\n});\r\n\r\nexport const listenShoppedLateSuccess = (data) => ({\r\n  type: GET_SHOPPEDLATE_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenShoppedLateError = (data) => ({\r\n  type: GET_SHOPPEDLATE_ERROR,\r\n  data\r\n});\r\n\r\nexport const updateFilter = (data) => ({\r\n  type: UPDATE_FILTER,\r\n  data\r\n});","//console.log('Environment : ', process.env.REACT_APP_ENV);\r\nlet env             =   process.env.REACT_APP_ENV || 'development';\r\n//console.log(env, process.env);\r\nlet ApiUrl          =   '/api/';\r\nlet ApiUrl2         =   '/api2/';\r\nif(env  === 'development') {\r\n    ApiUrl          =   '/v1/merchant/';\r\n    ApiUrl2         =   '/v2/merchant/';\r\n}\r\n\r\nlet firebase        =   {};\r\nlet cookie          =   {};\r\nlet states          =   [];\r\nif(env === 'production') {\r\n    firebase        =   {\r\n        apiKey: 'AIzaSyDb9IdB-9QWmXsQY6Q_5PBf-n_7RfGEGSg',\r\n        authDomain: 'foodjets-4bc9f.firebaseapp.com',\r\n        databaseURL: 'https://foodjets-4bc9f.firebaseio.com',\r\n        storageBucket: 'foodjets-4bc9f.appspot.com',\r\n        messagingSenderId: '644501783160',\r\n        projectId: 'foodjets-4bc9f'\r\n    }\r\n    cookie          =   {\r\n        domain: '.foodjets.com',\r\n        hostname: 'https://console.foodjets.com'\r\n    }\r\n    states          =   [\r\n        {id:\"CA\",value:\"California\"},\r\n        //{id:\"UT\",value:\"Utah\"},\r\n        {id:\"NV\",value:\"Nevada\"},\r\n        /* {id:\"ID\",value:\"Idaho\"},\r\n        {id:\"WA\",value:\"Washington\"},\r\n        {id:\"FL\",value:\"Florida\"},\r\n        {id:\"MI\",value:\"Michigan\"},\r\n        {id:\"VA\",value:\"Virginia\"} */\r\n    ];\r\n} else {\r\n    //if(env === 'development' || env === 'staging') {\r\n    firebase        =   {\r\n        apiKey: 'AIzaSyBo2UVHKB2honDutQGN_tyYSsG4lZ5BMi4',\r\n        authDomain: 'foodjets-dev.firebaseapp.com',\r\n        databaseURL: 'https://foodjets-dev.firebaseio.com',\r\n        storageBucket: 'foodjets-dev.appspot.com',\r\n        messagingSenderId: '687940236129',\r\n        projectId: 'foodjets-dev'\r\n    }\r\n    cookie          =   {\r\n        domain: (env === 'staging') ? '.dev.foodjets.com' : '',\r\n        hostname: 'http://console.dev.foodjets.com'\r\n    }\r\n    states          =   [\r\n                {id:\"CA\",value:\"California\"},\r\n                //{id:\"UT\",value:\"Utah\"},\r\n                {id:\"NV\",value:\"Nevada\"},\r\n                /* {id:\"ID\",value:\"Idaho\"},\r\n                {id:\"WA\",value:\"Washington\"},\r\n                {id:\"FL\",value:\"Florida\"},\r\n                {id:\"MI\",value:\"Michigan\"},\r\n                {id:\"VA\",value:\"Virginia\"} */\r\n            ];\r\n}\r\nconst Config        =   {\r\n    Title       :   'Foodjets',\r\n    Pagination  : {\r\n        itemsPerPage : 100\r\n    },\r\n    ApiUrl: ApiUrl,\r\n    ApiUrl2: ApiUrl2,\r\n    firebase: {...firebase},\r\n    cookie: {...cookie},\r\n    states: states\r\n}\r\nexport default Config;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport Config from '../config';\r\n\r\nlet Auth        = false;\r\nfirebase.initializeApp( Config.firebase);\r\n// firebase auth\r\nif(Auth === false){\r\n  //console.log(' Auth Called ');\r\n  firebase.auth().signInAnonymously();\r\n  Auth = true;\r\n}\r\n// create a firebase database object\r\nexport const database     = firebase.firestore();\r\nexport const firestore    = firebase.firestore;","import moment from 'moment-timezone';\r\nexport function formatDate(date){\r\n    return moment(date).format('MM/DD/YYYY hh:mm:ss');\r\n}\r\n\r\nexport function getDateTime(timestamp, tz, format) {\r\n    return moment.tz(timestamp, tz).format(format);\r\n}\r\n\t    \r\nexport function getSysDateTime(timestamp, format) {\r\n    return moment(timestamp).format(format);\r\n}\r\n\r\nexport function formatAmount(amount = 0){\r\n    return '$'+amount.toFixed(2)\r\n}\r\n\r\nexport function filterArrayByKey(searchTerm, key, list = [], limit = 10){\r\n    let results = [];\r\n    for(let i = 0; results.length < limit && i<=list.length; i ++) {\r\n      let item = list[i];\r\n      try{\r\n        if(item){\r\n            if(item[key].toLowerCase().startsWith(searchTerm.toLowerCase())) {\r\n                results.push(item)\r\n            }\r\n        }\r\n       }catch(e){\r\n          console.log(e);\r\n       }\r\n    }\r\n    return results;\r\n}\r\n\r\nexport function avgCustomerFeedback(rate){\r\n  let dec = 0;\r\n  let whole = Math.floor(rate);\r\n  let fraction = (rate - whole);\r\n\r\n  if(fraction < .25) {\r\n    dec=0;\r\n  } else if (fraction >= .25 && fraction < .75) {\r\n    dec=.50;\r\n  } else if (fraction >= .75) {\r\n    dec=1;\r\n  }\r\n\r\n  let r = (whole + dec);\r\n\r\n  //As we sometimes round up, we split again  \r\n  let newwhole = Math.floor(r);\r\n  fraction = (r - newwhole);   \r\n\r\n  return {\r\n    fraction: fraction,\r\n    newwhole: newwhole\r\n  };\r\n}\r\n\r\nexport function setFilter(pagename, filter) {\r\n  localStorage.setItem(pagename + '_filter', JSON.stringify(filter));\r\n}\r\n\r\nexport function getFilter(pagename) {\r\n  let filter    = localStorage.getItem(pagename + '_filter') || '{}';\r\n  return JSON.parse(filter);\r\n}\r\n\r\nexport function clearFilter(pagename) {\r\n  let filter    = localStorage.removeItem(pagename + '_filter');\r\n}\r\n\r\nexport const convertFloatTwoDecimal = function(num) {\r\n  return parseFloat(num).toFixed(2);\r\n}\r\n\r\nexport const convertTwoDecimalRound = function(num) {\r\n  return +(Math.round(num + \"e+2\") + \"e-2\");\r\n}","import * as _ from 'lodash';\r\nimport { getDateTime } from '../Helper/common';\r\n\r\nexport function sortTaskList(snapshot, filter) {\r\n    let filterState     =   filter.state || [];\r\n    let filterArea      =   filter.area || [];\r\n    let filterStore     =   filter.store || [];\r\n    let filterStoreName =   filter.storeName || [];\r\n    let filterTxt       =   (!!filter.searchTxt) ? filter.searchTxt.toLowerCase() : '';\r\n    let tsk_status      =   '';\r\n    let track_driver    =   '';\r\n    let current_url     =   '';\r\n    let created_at      =   '';\r\n    let tasks                       =   {};\r\n    let order_status                =   null;\r\n    let tip                         =   0;\r\n    let tsk_type                    =   'general';\r\n    let task_count                  =   0;\r\n    let type                        =   'UncategorizedList';\r\n    if(!!snapshot) {\r\n        if(filterState.length === 0 && filterArea.length === 0 && filterStore.length === 0) {\r\n            type                        =   'UncategorizedList';\r\n            tasks                       =   {\r\n                ready           :   0,\r\n                not_ready       :   0,\r\n                total           :   0,\r\n                shopping        :   0,\r\n                orders          :   [],\r\n                totShoppedLate  :   0\r\n            }\r\n            snapshot.forEach(function(doc) {\r\n                let val                 =   doc.data();\r\n                //console.log('Val : ', val.ready_timestamp, val.complete_after);\r\n                task_count++;\r\n                tsk_type                =   'general';\r\n                tsk_status              =   '';\r\n                track_driver            =   '';\r\n                current_url             =   '';\r\n                created_at              =   '';\r\n                order_status            =   null;\r\n                tip                     =   0;\r\n                if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\r\n                    tsk_type            =   val.tsk_type;\r\n                }\r\n\r\n                if(val.tsk_status === 'tsk_proc_hld') {\r\n                    tsk_status          =   'Scheduled';\r\n                } else if(val.tsk_status === 'tsk_proc_mrchnt') {\r\n                    tsk_status          =   'Scheduled';\r\n                } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\r\n                    tsk_status          =   'Picked Up';\r\n                } else if(val.tsk_status === 'tsk_proc_drv') {\r\n                    tsk_status          =   'Processing';\r\n                } else if(val.tsk_status === 'tsk_cmp') {\r\n                    tsk_status          =   'Completed'\r\n                } else if(val.tsk_status === 'tsk_cncling') {\r\n                    tsk_status          =   'Deleted'\r\n                } else if(val.tsk_status === 'tsk_cncled') {\r\n                    tsk_status          =   'Deleted'\r\n                } else {\r\n                    tsk_status          =   'Scheduled'\r\n                }\r\n\r\n                if(!_.isUndefined(val.created_at) && val.created_at !== ''){\r\n                    created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\r\n                }\r\n\r\n                if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\r\n                    track_driver        =   'Driver to Merchant';\r\n                    current_url         =   val.pickup_onfleet_url;\r\n                }\r\n\r\n                if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\r\n                    track_driver        =   'Driver to Recipient';\r\n                    current_url         =   val.drop_onfleet_url;\r\n                }\r\n                let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\r\n                let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\r\n\r\n                if(!!val.order_status) {\r\n                    order_status            =   val.order_status;\r\n                }\r\n\r\n                tasks.total++;\r\n                if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\r\n                    tasks.ready++;\r\n                } else if(order_status === 'W') {\r\n                    tasks.shopping++;\r\n                }\r\n                else {\r\n                    tasks.not_ready++;\r\n                }\r\n\r\n                if(!!val.tip) {\r\n                    tip                     =   val.tip;\r\n                }\r\n                let shoppedLate             =   0;\r\n                if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\r\n                    shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\r\n                }\r\n                if(shoppedLate > 0)\r\n                    tasks.totShoppedLate++;\r\n\r\n                tasks.orders.push({\r\n                    id                  :   val.id,\r\n                    created_at          :   created_at,\r\n                    complete_after      :   coa,\r\n                    complete_before     :   cob,\r\n                    recpnt_address      :   val.recpnt_address_full,\r\n                    mrchnt_address      :   val.mrchnt_address_full,\r\n                    driver_name         :   val.driver_name,\r\n                    tsk_status          :   tsk_status,\r\n                    uuid                :   val.uuid,\r\n                    drop_onfleet_url    :   val.drop_onfleet_url || '',\r\n                    pickup_onfleet_url  :   val.pickup_onfleet_url || '',\r\n                    track_driver        :   track_driver,\r\n                    current_url         :   current_url,\r\n                    order_number        :   val.order_number,\r\n                    timestamp           :   val.complete_after,\r\n                    timezone            :   val.time_zone,\r\n                    order_status        :   order_status,\r\n                    mrchnt_name         :   val.mrchnt_name,\r\n                    tsk_type            :   tsk_type,\r\n                    shoppedLate         :   shoppedLate\r\n                });\r\n            });\r\n            tasks.orders                   =   _.orderBy(tasks.orders, [o => o.timestamp], ['asc'])\r\n        } else {\r\n            if(filterState.length > 0 && filterArea.length === 0 && filterStore.length === 0) {\r\n                type                        =   'StateWiseList';\r\n                snapshot.forEach(function(doc) {\r\n                    let val                 =   doc.data();\r\n                    if((filterState.length === 0\r\n                        || filterState.includes(val.state_code)) &&\r\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\r\n                        &&\r\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\r\n                        &&\r\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\r\n                    ) {\r\n                        task_count++;\r\n                        //console.log('Data : ', val);\r\n                        tsk_type                =   'general';\r\n                        tsk_status              =   '';\r\n                        track_driver            =   '';\r\n                        current_url             =   '';\r\n                        created_at              =   '';\r\n                        order_status            =   null;\r\n                        tip                     =   0;\r\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\r\n                            tsk_type            =   val.tsk_type;\r\n                        }\r\n\r\n                        if(val.tsk_status === 'tsk_proc_hld') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\r\n                            tsk_status          =   'Picked Up';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\r\n                            tsk_status          =   'Processing';\r\n                        } else if(val.tsk_status === 'tsk_cmp') {\r\n                            tsk_status          =   'Completed'\r\n                        } else if(val.tsk_status === 'tsk_cncling') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else if(val.tsk_status === 'tsk_cncled') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else {\r\n                            tsk_status          =   'Scheduled'\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\r\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\r\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\r\n\r\n\r\n                        if(!!!tasks[val.state_code]) {\r\n                            tasks[val.state_code]   =   {\r\n                                        name            :   val.state_code,\r\n                                        ready           :   0,\r\n                                        not_ready       :   0,\r\n                                        shopping        :   0,\r\n                                        total           :   0,\r\n                                        orders          :   [],\r\n                                        totShoppedLate  :   0\r\n                            };\r\n                        }\r\n\r\n                        if(!!val.order_status) {\r\n                            order_status            =   val.order_status;\r\n                        }\r\n\r\n                        tasks[val.state_code].total++;\r\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\r\n                            tasks[val.state_code].ready++;\r\n                        } else if(order_status === 'W') {\r\n                            tasks[val.state_code].shopping++;\r\n                        }\r\n                        else {\r\n                            tasks[val.state_code].not_ready++;\r\n                        }\r\n\r\n                        if(!!val.tip) {\r\n                            tip                     =   val.tip;\r\n                        }\r\n                        let shoppedLate             =   0;\r\n                        //console.log('Status : ', val.order_number, val.ready_timestamp, val.complete_after, val.ready_timestamp > val.complete_after);\r\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\r\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\r\n                        }\r\n                        if(shoppedLate > 0)\r\n                            tasks[val.state_code].totShoppedLate++;\r\n                        tasks[val.state_code].orders.push({\r\n                            id                  :   val.id,\r\n                            created_at          :   created_at,\r\n                            complete_after      :   coa,\r\n                            complete_before     :   cob,\r\n                            recpnt_address      :   val.recpnt_address_full,\r\n                            mrchnt_address      :   val.mrchnt_address_full,\r\n                            driver_name         :   val.driver_name,\r\n                            tsk_status          :   tsk_status,\r\n                            uuid                :   val.uuid,\r\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\r\n                            track_driver        :   track_driver,\r\n                            current_url         :   current_url,\r\n                            order_number        :   val.order_number,\r\n                            timestamp           :   val.complete_after,\r\n                            timezone            :   val.time_zone,\r\n                            order_status        :   order_status,\r\n                            mrchnt_name         :   val.mrchnt_name,\r\n                            tsk_type            :   tsk_type,\r\n                            shoppedLate         :   shoppedLate\r\n                        });\r\n                    }\r\n                });\r\n                _.each(tasks, (val, key) => {\r\n                    //console.log(val, key);\r\n                    tasks[key].orders           =  _.orderBy(tasks[key].orders, [o => o.timestamp], ['asc']);\r\n                });\r\n                tasks                       =   _.orderBy(tasks, [o => o.name], ['asc']);\r\n            }\r\n            if(filterState.length > 0 && filterArea.length > 0 && filterStore.length === 0) {\r\n                type                        =   'ZoneWiseList';\r\n                snapshot.forEach(function(doc) {\r\n                    let val                 =   doc.data();\r\n                    if((filterState.length === 0\r\n                        || filterState.includes(val.state_code)) &&\r\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\r\n                        &&\r\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\r\n                        &&\r\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\r\n                    ) {\r\n                        task_count++;\r\n                        //console.log('Data : ', val);\r\n                        tsk_type                =   'general';\r\n                        tsk_status              =   '';\r\n                        track_driver            =   '';\r\n                        current_url             =   '';\r\n                        created_at              =   '';\r\n                        order_status            =   null;\r\n                        tip                     =   0;\r\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\r\n                            tsk_type            =   val.tsk_type;\r\n                        }\r\n                        //console.log('Status : ', val.tsk_status);\r\n\r\n                        if(val.tsk_status === 'tsk_proc_hld') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\r\n                            tsk_status          =   'Picked Up';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\r\n                            tsk_status          =   'Processing';\r\n                        } else if(val.tsk_status === 'tsk_cmp') {\r\n                            tsk_status          =   'Completed'\r\n                        } else if(val.tsk_status === 'tsk_cncling') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else if(val.tsk_status === 'tsk_cncled') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else {\r\n                            tsk_status          =   'Scheduled'\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\r\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\r\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\r\n\r\n\r\n                        if(_.isUndefined(tasks[val.state_code])) {\r\n                            tasks[val.state_code]   =   {};\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                        name            :   val.mkt_ofc_cty_del_zne_name,\r\n                                        id              :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                        uniqueid        :   val.mkt_ofc_cty_del_zne_id,\r\n                                        ready           :   0,\r\n                                        not_ready       :   0,\r\n                                        shopping        :   0,\r\n                                        total           :   0,\r\n                                        orders          :   [],\r\n                                        totShoppedLate  :   0\r\n                            };\r\n                        } else {\r\n                            if(_.isUndefined(tasks[val.state_code][val.mkt_ofc_cty_del_zne_id])) {\r\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                    name            :   val.mkt_ofc_cty_del_zne_name,\r\n                                    id              :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                    uniqueid        :   val.mkt_ofc_cty_del_zne_id,\r\n                                    ready           :   0,\r\n                                    not_ready       :   0,\r\n                                    shopping        :   0,\r\n                                    total           :   0,\r\n                                    orders          :   [],\r\n                                    totShoppedLate  :   0\r\n                                };\r\n                            }\r\n                        }\r\n\r\n                        if(!!val.order_status) {\r\n                            order_status            =   val.order_status;\r\n                        }\r\n\r\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].total++;\r\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].ready++;\r\n                        } else if(order_status === 'W') {\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].shopping++;\r\n                        }\r\n                        else {\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].not_ready++;\r\n                        }\r\n\r\n                        if(!!val.tip) {\r\n                            tip                     =   val.tip;\r\n                        }\r\n                        \r\n                        let shoppedLate             =   0;\r\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\r\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\r\n                        }\r\n                        if(shoppedLate > 0)\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].totShoppedLate++;\r\n\r\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\r\n                            id                  :   val.id,\r\n                            created_at          :   created_at,\r\n                            complete_after      :   coa,\r\n                            complete_before     :   cob,\r\n                            recpnt_address      :   val.recpnt_address_full,\r\n                            mrchnt_address      :   val.mrchnt_address_full,\r\n                            driver_name         :   val.driver_name,\r\n                            tsk_status          :   tsk_status,\r\n                            uuid                :   val.uuid,\r\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\r\n                            track_driver        :   track_driver,\r\n                            current_url         :   current_url,\r\n                            order_number        :   val.order_number,\r\n                            timestamp           :   val.complete_after,\r\n                            timezone            :   val.time_zone,\r\n                            order_status        :   order_status,\r\n                            mrchnt_name         :   val.mrchnt_name,\r\n                            tsk_type            :   tsk_type,\r\n                            shoppedLate         :   shoppedLate\r\n                        });\r\n                    }\r\n                });\r\n                let temp                        =   {};\r\n                _.each(tasks, (val, key) => {\r\n                    _.each(val, (vz, kz) => {\r\n                        tasks[key][kz].orders   =   _.sortBy(tasks[key][kz].orders, (o) => { return o.timestamp; })\r\n                    });\r\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n                });\r\n                tasks                           =   temp;\r\n            }\r\n            if(filterStore.length > 0) {\r\n                type                        =   'ZoneWiseList';\r\n                snapshot.forEach(function(doc) {\r\n                    let val                 =   doc.data();\r\n                    if((filterState.length === 0\r\n                        || filterState.includes(val.state_code)) &&\r\n                        (filterTxt === '' || val.order_number.toLowerCase().includes(filterTxt))\r\n                        &&\r\n                        (filterArea.length === 0 || filterArea.includes(val.mkt_ofc_cty_del_zne_name))\r\n                        &&\r\n                        (filterStore.length === 0 || filterStore.includes(val.store_id))\r\n                    ) {\r\n                        task_count++;\r\n                        //console.log('Data : ', val);\r\n                        tsk_type                =   'general';\r\n                        tsk_status              =   '';\r\n                        track_driver            =   '';\r\n                        current_url             =   '';\r\n                        created_at              =   '';\r\n                        order_status            =   null;\r\n                        tip                     =   0;\r\n                        if(!_.isUndefined(val.tsk_type) && val.tsk_type !== '') {\r\n                            tsk_type            =   val.tsk_type;\r\n                        }\r\n                        //console.log('Status : ', val.tsk_status);\r\n\r\n                        if(val.tsk_status === 'tsk_proc_hld') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_mrchnt') {\r\n                            tsk_status          =   'Scheduled';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv' && val.driver_status === 'drv_strt_recpnt_tsk') {\r\n                            tsk_status          =   'Picked Up';\r\n                        } else if(val.tsk_status === 'tsk_proc_drv') {\r\n                            tsk_status          =   'Processing';\r\n                        } else if(val.tsk_status === 'tsk_cmp') {\r\n                            tsk_status          =   'Completed'\r\n                        } else if(val.tsk_status === 'tsk_cncling') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else if(val.tsk_status === 'tsk_cncled') {\r\n                            tsk_status          =   'Deleted'\r\n                        } else {\r\n                            tsk_status          =   'Scheduled'\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.created_at) && val.created_at !== ''){\r\n                            created_at          =   getDateTime(parseInt(val.created_at) * 1000, val.time_zone, 'MM/DD/YYYY');\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.pickup_onfleet_url) && val.pickup_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n\r\n                        if(!_.isUndefined(val.drop_onfleet_url) && val.drop_onfleet_url !== '') {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n                        let coa                 =   getDateTime(parseInt(val.complete_after) * 1000, val.time_zone, 'MM/DD · hh:mma');\r\n                        let cob                 =   getDateTime(parseInt(val.complete_before) * 1000, val.time_zone, 'hh:mma');\r\n\r\n\r\n                        if(_.isUndefined(tasks[val.state_code])) {\r\n                            tasks[val.state_code]   =   {};\r\n                            tasks[val.state_code][val.store_id]   =   {\r\n                                        name            :   filterStoreName[val.store_id],\r\n                                        id              :   val.state_code+val.store_id,\r\n                                        uniqueid        :   val.store_id,\r\n                                        ready           :   0,\r\n                                        not_ready       :   0,\r\n                                        shopping        :   0,\r\n                                        total           :   0,\r\n                                        orders          :   [],\r\n                                        totShoppedLate  :   0\r\n                            };\r\n                        } else {\r\n                            if(_.isUndefined(tasks[val.state_code][val.store_id])) {\r\n                                tasks[val.state_code][val.store_id]   =   {\r\n                                    name            :   filterStoreName[val.store_id],\r\n                                    id              :   val.state_code+val.store_id,\r\n                                    uniqueid        :   val.store_id,\r\n                                    ready           :   0,\r\n                                    not_ready       :   0,\r\n                                    shopping        :   0,\r\n                                    total           :   0,\r\n                                    orders          :   [],\r\n                                    totShoppedLate  :   0\r\n                                };\r\n                            }\r\n                        }\r\n\r\n                        if(!!val.order_status) {\r\n                            order_status            =   val.order_status;\r\n                        }\r\n\r\n                        tasks[val.state_code][val.store_id].total++;\r\n                        if(order_status === 'R' || order_status === 'F' || order_status === 'Y') {\r\n                            tasks[val.state_code][val.store_id].ready++;\r\n                        } else if(order_status === 'W') {\r\n                            tasks[val.state_code][val.store_id].shopping++;\r\n                        }\r\n                        else {\r\n                            tasks[val.state_code][val.store_id].not_ready++;\r\n                        }\r\n\r\n                        if(!!val.tip) {\r\n                            tip                     =   val.tip;\r\n                        }\r\n                        let shoppedLate             =   0;\r\n                        if(!!val.ready_timestamp && val.ready_timestamp > val.complete_after) {\r\n                            shoppedLate             =   Math.round((val.ready_timestamp - val.complete_after)/60);\r\n                        }\r\n                        if(shoppedLate > 0)\r\n                            tasks[val.state_code][val.store_id].totShoppedLate++;\r\n\r\n                        tasks[val.state_code][val.store_id].orders.push({\r\n                            id                  :   val.id,\r\n                            created_at          :   created_at,\r\n                            complete_after      :   coa,\r\n                            complete_before     :   cob,\r\n                            recpnt_address      :   val.recpnt_address_full,\r\n                            mrchnt_address      :   val.mrchnt_address_full,\r\n                            driver_name         :   val.driver_name,\r\n                            tsk_status          :   tsk_status,\r\n                            uuid                :   val.uuid,\r\n                            drop_onfleet_url    :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url  :   val.pickup_onfleet_url || '',\r\n                            track_driver        :   track_driver,\r\n                            current_url         :   current_url,\r\n                            order_number        :   val.order_number,\r\n                            timestamp           :   val.complete_after,\r\n                            timezone            :   val.time_zone,\r\n                            order_status        :   order_status,\r\n                            mrchnt_name         :   val.mrchnt_name,\r\n                            tsk_type            :   tsk_type,\r\n                            shoppedLate         :   shoppedLate\r\n                        });\r\n                    }\r\n                });\r\n                let temp                        =   {};\r\n                _.each(tasks, (val, key) => {\r\n                    _.each(val, (vz, kz) => {\r\n                        tasks[key][kz].orders   =   _.sortBy(tasks[key][kz].orders, (o) => { return o.timestamp; })\r\n                    });\r\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n                });\r\n                tasks                           =   temp;\r\n            }\r\n        }\r\n    }\r\n    return {tasks: tasks, count: task_count, type: type};\r\n}\r\n\r\n\r\nexport const addressFormater = (obj) => {\r\n    try{\r\n      let regex = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/;\r\n  \r\n      let address = obj.match(regex);\r\n      //console.log(address);\r\n      if(address[4].indexOf(',') > -1 && address[3].indexOf(' ') > -1){\r\n        let formattedAddress = address[3]+', '+ address[4] + ' '+ address[address.length -1];\r\n        let modAddress = formattedAddress+', USA';\r\n        if(/(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g.test(modAddress)){\r\n          let _address = modAddress.match(regex);\r\n  \r\n          return {\r\n            validAdrs: true, \r\n            formattedAddress: formattedAddress,\r\n            address: modAddress,\r\n            number: _address[0],\r\n            street: _address[1],\r\n            city: _address[2],\r\n            country: 'United States',\r\n            state_code: _address[4],\r\n            zipcode: _address[_address.length -1]\r\n          }\r\n        } else {\r\n          return {\r\n            validAdrs: false \r\n          }\r\n        }\r\n      } else {\r\n        let formattedAddress = address[1] + ' ' + address[2] + ', '+ address[3] + ', ' + address[4] + ' ' + address[address.length -1];\r\n        return {\r\n          validAdrs: true, \r\n          formattedAddress: formattedAddress,\r\n          address: obj,\r\n          number: address[1],\r\n          street: address[2],\r\n          city: address[3],\r\n          country: 'United States',\r\n          state_code: address[4],\r\n          zipcode: address[address.length -1],\r\n        }\r\n      }\r\n    } catch(e){\r\n      console.log(e);\r\n      return {\r\n        validAdrs: false \r\n      }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport function getStatusClass(status){\r\n    let clsName         =  '';\r\n    switch(status) {\r\n        case'Processing':\r\n            clsName     =  'btn_Processing';\r\n        break;\r\n        case'Picked Up':\r\n            clsName     =  'btn_Pickedup';\r\n        break;\r\n        case'Scheduled':\r\n            clsName     =  'btn_Scheduled';\r\n        break;\r\n        case'Completed':\r\n            clsName     =  'btn_Completed';\r\n        break;\r\n        case'Deleted':\r\n            clsName     =  'btn_Deleted';\r\n        break;\r\n        default:\r\n            clsName     =  'btn_Processing';\r\n        break;\r\n    }\r\n    return clsName;\r\n}\r\n\r\nexport function getTaskStatus(status) {\r\n    let tsk_status          =   'Scheduled';\r\n    if(status === 'tsk_proc_hld') {\r\n        tsk_status          =   'Scheduled';\r\n    } else if(status === 'tsk_proc_mrchnt') {\r\n        tsk_status          =   'Scheduled';\r\n    } else if(status === 'tsk_proc_drv' && status === 'drv_strt_recpnt_tsk') {\r\n        tsk_status          =   'Picked Up';\r\n    } else if(status === 'tsk_proc_drv') {\r\n        tsk_status          =   'Processing';\r\n    } else if(status === 'tsk_cmp') {\r\n        tsk_status          =   'Completed';\r\n    } else if(status === 'tsk_cncling') {\r\n        tsk_status          =   'Deleted';\r\n    } else if(status === 'tsk_cncled') {\r\n        tsk_status          =   'Deleted';\r\n    } else {\r\n        tsk_status          =   'Scheduled';\r\n    }\r\n    return tsk_status;\r\n}\r\n\r\nexport function getDeliveryWindow(completeAfter, completeBefore, time_zone){\r\n    let coa     =   getDateTime(parseInt(completeAfter) * 1000, time_zone, 'MM/DD · hh:mma');\r\n    let cob     =   getDateTime(parseInt(completeBefore) * 1000, time_zone, 'hh:mma');\r\n    return `${coa} - ${cob}`;\r\n}","import $ from 'jquery';\r\nimport '../css/notify.css';\r\n\r\nexport const success = (text) =>{\r\n\t$('#notify').fadeIn('slow');\r\n\t//notify.show(text, 'success', 5000, successCss);\r\n\t$('#notify').removeClass('inform').removeClass('error').removeClass('warning').addClass('success');\r\n\t$('#notify').html(text.message);\r\n\tsetTimeout(function(){\r\n\t\t$('#notify').fadeOut('slow')\r\n\t}, 5000);\r\n};\r\n\r\nexport const error = (text) =>{\r\n\t$('#notify').fadeIn('slow');\r\n\t$('#notify').removeClass('inform').removeClass('success').removeClass('warning').addClass('error');\r\n\t$('#notify').html(text.message);\r\n\tsetTimeout(function(){\r\n\t\t$('#notify').fadeOut('slow')\r\n\t}, 5000);\r\n};\r\n\r\nexport const warning = (text) =>{\r\n\t$('#notify').fadeIn('slow');\r\n\t$('#notify').removeClass('inform').removeClass('success').removeClass('error').addClass('warning');\r\n\t$('#notify').html(text.message);\r\n\tsetTimeout(function(){\r\n\t\t$('#notify').fadeOut('slow')\r\n\t}, 5000);\r\n};\r\n\r\nexport const inform = (text) =>{\r\n\t$('#notify').fadeIn('slow');\r\n\t$('#notify').removeClass('error').removeClass('warning').removeClass('success').addClass('inform');\r\n\t$('#notify').html(text.message);\r\n\tsetTimeout(function(){\r\n\t\t$('#notify').fadeOut('slow')\r\n\t}, 5000);\r\n};","import React, { Component } from 'react';\r\nimport {success as notifysuccess} from '../../util/notify';\r\nimport {isEmpty} from 'lodash';\r\n\r\nclass CustomContext extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            visible     :   false,\r\n            x           :   0,\r\n            y           :   0\r\n        };\r\n        this.contextDiv = React.createRef();\r\n        this.openEditWindow     =   this.openEditWindow.bind(this);\r\n        this.updateTask         =   this.updateTask.bind(this);\r\n    }\r\n\r\n    openEditWindow(uuid, mrchnt_address, recpnt_address, tsk_status){\r\n        /* console.log('Task Status : ', tsk_status);\r\n        if(tsk_status === 'Scheduled') {\r\n            this.props.openEditWindow(uuid, mrchnt_address, recpnt_address);\r\n        }\r\n        else {\r\n            notifysuccess({message: `Task is already in ${tsk_status} mode.`});\r\n        } */\r\n        this.props.openEditWindow(uuid, mrchnt_address, recpnt_address);\r\n    }\r\n\r\n    updateTask(uuid, status, tsk_status){\r\n        console.log('Task Status : ', tsk_status);\r\n        if(tsk_status === 'Scheduled') {\r\n            this.props.updateTask(uuid, status);\r\n        }\r\n        else {\r\n            notifysuccess({message: `Task is already in ${tsk_status} mode.`});\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var self            =   this;       \r\n        document.addEventListener(\"click\", function(event){\r\n            event.stopPropagation();\r\n            self.props.hideContextMenu();\r\n            /* self.setState({\r\n                visible: false,\r\n                x:0,\r\n                y:0\r\n            }, () => {\r\n            }); */\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log('Context Props : ', props);\r\n        this.setState({\r\n            visible     :   props.visible,\r\n            x           :   props.x,\r\n            y           :   props.y,\r\n            selOrder    :   props.selOrder\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"click\", function(){\r\n            //console.log('Hide Context Menu ', this.state);\r\n        });\r\n    }\r\n\r\n    render() {        \r\n        var myStyle     =   {\r\n            \"position\"  :   \"absolute\",\r\n            \"top\"       :   `${this.state.y}px`,\r\n            \"left\"      :   `${this.state.x+5}px`\r\n        }\r\n        let order           =   this.props.selOrder || {};\r\n        let items           =   [\r\n                                    {\"label\"        :   \"Order #\" + order.order_number},\r\n                                    {\"label\"        :   \"View Task\"},\r\n                                    {\"label\"        :   \"View Map\"},\r\n                                    {\"label\"        :   \"Edit Task\"},\r\n                                    {\"label\"        :   \"Delete Task\"},\r\n                                    {\r\n                                        \"label\"     :   \"Change Status\",\r\n                                        \"submenu\"   :   [\"Processing\", \"Picked up\"]\r\n                                    },\r\n                                    {\"label\"        :   \" \"}\r\n                                ];\r\n\r\n        //console.log('Context Menu : ', (!!this.props.selOrder) ? this.props.selOrder.tsk_status : '');\r\n        return (\r\n            (!isEmpty(this.props.selOrder)) ?\r\n            <div id=\"cmenu\" ref={this.contextDiv}>\r\n                {\r\n                    this.state.visible ? \r\n                    <div className=\"custom-context\" id=\"text\" style={myStyle}>\r\n                        <div className=\"custom-context-item\">{`Order #${order.order_number}`}</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.openDetailsWindow(order.order_uuid)}>View Task</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.openMapWindow(order.order_uuid)}>View Map</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.openEditWindow(order.order_uuid, order.mrchnt_address, order.recpnt_address, order.tsk_status)}>Edit Task</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.deleteTask(order.order_uuid)}>Delete Task</div>\r\n                        <div className=\"custom-context-item\">\r\n                            Change Status\r\n                            <ul>\r\n                                <li data=\"ignore-outer-click\" onClick={() => this.updateTask(order.order_uuid, 'R', order.tsk_status)}>Ready</li>\r\n                                <li data=\"ignore-outer-click\" onClick={() => this.updateTask(order.order_uuid, 'W', order.tsk_status)}>Work In Progress</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div> : null\r\n        )\r\n    }\r\n}\r\nexport default CustomContext;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { addressFormater } from '../../util/helper';\r\nimport {error as notifyerror, success as notifysuccess} from '../../util/notify';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport {isEmpty, isEqual} from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport { getDateTime } from '../../Helper/common';\r\n\r\nclass EditTask extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state              =   {\r\n           show                     :   false,\r\n           alcohol                  :   false,\r\n           signature                :   true,\r\n           locations                :   [],\r\n           formData                 :   {},\r\n           startDate                :   new Date(),\r\n           settingsData             :   {},\r\n           recipient_location       :   {},\r\n           merchant_location        :   {},\r\n           isProcessing             :   false,\r\n           errors:{\r\n               merchant_address:\"\",\r\n               recipient_address:\"\",\r\n               delivery_date:\"\",\r\n               delivery_time:\"\",\r\n               tip:\"\"\r\n           }\r\n        }\r\n        this.handleClose            =   this.handleClose.bind(this);\r\n        this.handleEditTask         =   this.handleEditTask.bind(this);\r\n        this.validateForm           =   this.validateForm.bind(this);\r\n        this.onChangeHandle         =   this.onChangeHandle.bind(this);\r\n        this.handleChange           =   this.handleChange.bind(this);\r\n        this.handleMerchantChange   =   this.handleMerchantChange.bind(this);\r\n        this.onDateSelect           =   this.onDateSelect.bind(this);\r\n    }    \r\n\r\n    onSelectDate = (date) => {\r\n        this.setState({\r\n            formData: {...this.state.formData,\r\n                delivery_date   :  date\r\n            }\r\n        })\r\n    }\r\n \r\n    handleMerchantChange = merchant_address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({\r\n            errors: {\r\n                ...this.state.errors,\r\n                merchant_address:(!!merchant_address) ? \"\" : 'Please enter merchant address'\r\n            },\r\n            merchant_address:merchant_address\r\n        });\r\n    };   \r\n \r\n    handleChange = recipient_address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({\r\n            errors: {\r\n                ...this.state.errors,\r\n                recipient_address:(!!recipient_address) ? \"\" : 'Please enter recipient address'\r\n            },\r\n            recipient_address : recipient_address\r\n        });\r\n    };\r\n\r\n    handleSelect = recipient_address => {\r\n        let self    =   this;\r\n        let data = {\r\n            zipcode: '',\r\n            state_code: '',\r\n            latitude: '',\r\n            longitude: '',\r\n            address: ''\r\n        };\r\n        geocodeByAddress(recipient_address)\r\n        .then((results) => {\r\n            //console.log(recipient_address, results[0], results[0].formatted_address);\r\n            data.address = results[0].formatted_address || '';\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n            if(matchExp.test(data.address)){\r\n                let delAddData = this.props.deliveryAddress;\r\n                let addressArray = addressFormater(data.address);\r\n                console.log('Address : ', data.address, addressArray);\r\n                if(!isEmpty(addressArray) && addressArray.validAdrs){\r\n                    data.latitude = lat;\r\n                    data.longitude = lng;\r\n                    data.address = addressArray.address;\r\n                    data.zipcode = addressArray.zipcode;\r\n                    data.state_code = addressArray.state_code;\r\n                    data.city = addressArray.city;\r\n                    data.country = addressArray.country;\r\n                    data.number = addressArray.number;\r\n                    data.street = addressArray.street;\r\n\r\n                    //console.log('AddressBox ###########', data);\r\n                    //this.setState({ address: addressArray.address }); \r\n                    self.setState({\r\n                        errors: {\r\n                            ...self.state.error,\r\n                            recipient_address:\"\"\r\n                        },\r\n                        recipient_location: data,\r\n                        recipient_address: data.address\r\n                    }); \r\n                } else {\r\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                    self.setState({\r\n                        errors: {\r\n                            ...self.state.error,\r\n                            recipient_address:\"Invalid Address\"\r\n                        },\r\n                        recipient_location: {}\r\n                        //recipient_address: ''\r\n                    }); \r\n                }             \r\n            } else {\r\n                notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                self.setState({\r\n                    errors: {\r\n                        ...self.state.error,\r\n                        recipient_address:\"Invalid Address\"\r\n                    },\r\n                    recipient_location: {}\r\n                    //recipient_address: ''\r\n                }); \r\n            }\r\n        })\r\n        .catch(error => {\r\n            self.setState({\r\n                errors: {\r\n                    ...self.state.error,\r\n                    recipient_address:\"Invalid Address\"\r\n                },\r\n                recipient_location: {}\r\n            });\r\n            console.log('Error', error);\r\n        });\r\n    };    \r\n\r\n    handleMerchantSelect = merchant_address => {\r\n        let self    =   this;\r\n        let data = {\r\n            zipcode: '',\r\n            state_code: '',\r\n            latitude: '',\r\n            longitude: '',\r\n            address: ''\r\n        };\r\n        geocodeByAddress(merchant_address)\r\n        .then((results) => {\r\n            data.address = results[0].formatted_address || '';\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n            if(matchExp.test(data.address)){\r\n                let delAddData = this.props.deliveryAddress;\r\n                let addressArray = addressFormater(data.address);\r\n                if(!isEmpty(addressArray) && addressArray.validAdrs){\r\n                    data.latitude = lat;\r\n                    data.longitude = lng;\r\n                    data.address = addressArray.address;\r\n                    data.zipcode = addressArray.zipcode;\r\n                    data.state_code = addressArray.state_code;\r\n                    data.city = addressArray.city;\r\n                    data.country = addressArray.country;\r\n                    data.number = addressArray.number;\r\n                    data.street = addressArray.street;\r\n                    self.setState({\r\n                        errors: {\r\n                            ...self.state.error,\r\n                            merchant_address:\"\"\r\n                        },\r\n                        merchant_location: data,\r\n                        merchant_address: data.address\r\n                    }); \r\n                } else {\r\n                    self.setState({\r\n                        errors: {\r\n                            ...self.state.error,\r\n                            merchant_address:\"Invalid Address\"\r\n                        },\r\n                        merchant_location: {}\r\n                        //merchant_address: ''\r\n                    }); \r\n                }          \r\n            } else {\r\n                self.setState({\r\n                    errors: {\r\n                        ...self.state.error,\r\n                        merchant_address:\"Invalid Address\"\r\n                    },\r\n                    merchant_location: {}\r\n                    //merchant_address: ''\r\n                }); \r\n            }\r\n        })\r\n        .catch(error => {\r\n            self.setState({\r\n                errors: {\r\n                    ...self.state.error,\r\n                    merchant_address:\"Invalid Address\"\r\n                },\r\n                merchant_location: {}\r\n            });\r\n            console.log('Error', error);\r\n        });\r\n    };\r\n\r\n    onDateSelect = date => {\r\n        this.setState({\r\n            formData: { ...this.state.formData, delivery_date: date}\r\n        });\r\n    };\r\n\r\n    handleEditClick = (e)  => {\r\n        //e.preventDefault();\r\n        e.stopImmediatePropagation()\r\n        console.log('Handle Edit Click');\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"click\", this.handleEditClick);        \r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log(props.show, this.props.show, props.isProcessing, this.props.isProcessing);\r\n        /* if(props.show !== this.props.show) {\r\n            this.setState({\r\n                show: props.show\r\n            })\r\n        } */\r\n        if(props.isProcessing !== this.props.isProcessing) {\r\n            this.setState({\r\n                isProcessing: false\r\n            })\r\n        }\r\n        if(!isEmpty(props.settingsData) && !isEqual(this.state.settingsData, props.settingsData)) {\r\n            this.timings        =   this.timing(props.settingsData.start_time, props.settingsData.end_time);           \r\n            let delivery_time   =   (!!this.timings.key && !!!this.state.formData.delivery_time) ? this.timings.key : '';\r\n            this.setState({\r\n                settingsData:   props.settingsData,\r\n                formData: { \r\n                    ...this.state.formData, delivery_time: delivery_time\r\n                }\r\n            })\r\n        }\r\n        if(!isEqual(props.taskDetails, this.props.taskDetails) && !isEmpty(props.taskDetails)) {\r\n            let taskDetails =   props.taskDetails || {};\r\n            let tskStatus = 'Scheduled';\r\n            if(taskDetails.tskStatus === 'tsk_proc_hld') {\r\n                tskStatus = 'Scheduled'\r\n            } else if(taskDetails.tskStatus === 'tsk_proc_mrchnt') {\r\n                tskStatus = 'Scheduled'\r\n            } else if(taskDetails.tskStatus === 'tsk_proc_drv' && taskDetails.driverStatus === 'drv_strt_recpnt_tsk') {\r\n                tskStatus = 'Picked Up';\r\n            } else if(taskDetails.tskStatus === 'tsk_proc_drv') {\r\n                tskStatus = 'Processing'\r\n            } else if(taskDetails.tskStatus === 'tsk_cmp') {\r\n                tskStatus = 'Completed'\r\n            } else if(taskDetails.tskStatus === 'tsk_cncling') {\r\n                tskStatus = 'Deleted'\r\n            } else if(taskDetails.tskStatus === 'tsk_cncled') {\r\n                tskStatus = 'Deleted'\r\n            }\r\n\r\n            if(tskStatus !== 'Scheduled') {\r\n                notifysuccess({message: `Task is already in ${tskStatus} mode.`});\r\n                this.handleClose();\r\n            }\r\n            \r\n            let toTime              =   getDateTime(parseInt(props.taskDetails.completeBefore) * 1000, props.taskDetails.time_zone, 'hh:mm A');\r\n            let fromTime            =   getDateTime(parseInt(props.taskDetails.completeAfter) * 1000, props.taskDetails.time_zone, 'hh:mm A');\r\n            //let delivery_date       =   moment.tz(parseInt(props.taskDetails.completeAfter) * 1000, props.taskDetails.time_zone).unix();\r\n            let fulldate            =   moment.tz(parseInt(props.taskDetails.completeAfter) * 1000, props.taskDetails.time_zone);\r\n            let year                =   fulldate.format('YYYY');\r\n            let month               =   fulldate.format('MM');\r\n            month                   =   month - 1; \r\n            let date                =   fulldate.format('DD');\r\n            let delivery_date       =   new Date(year, month, date);\r\n            //console.log(fulldate.format('YYYY-MM-DD'), year, month, date, dateObj, fulldate.format('x'));\r\n            //console.log(dateObj, parseInt(props.taskDetails.completeAfter), props.taskDetails.time_zone, moment.tz(parseInt(props.taskDetails.completeAfter) * 1000, props.taskDetails.time_zone).format('lll'), moment.tz(parseInt(props.taskDetails.completeAfter) * 1000, props.taskDetails.time_zone).format('YYYY-MM-DD'));\r\n            this.setState({\r\n                merchant: props.taskDetails.merchant,\r\n                recipients: props.taskDetails.recipients,\r\n                recipient_address   :   (!!props.recpnt_address) ? props.recpnt_address : '',\r\n                merchant_address    :   (!!props.mrchnt_address) ? props.mrchnt_address : '',\r\n                time_zone           :   props.taskDetails.time_zone,\r\n                formData : {\r\n                    merchant_notes      :   (!!props.taskDetails.merchant && !!props.taskDetails.merchant.notes) ? props.taskDetails.merchant.notes : '',\r\n                    recipient_notes     :   (!!props.taskDetails.recipients && !!props.taskDetails.recipients.notes) ? props.taskDetails.recipients.notes : '',\r\n                    tip                 :   props.taskDetails.tip,\r\n                    delivery_date       :   delivery_date,\r\n                    delivery_time       :   fromTime + '-' + toTime\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /* shouldComponentUpdate(nextProps) {\r\n        console.log('Should Update : ', nextProps);\r\n        return true;\r\n    } */\r\n\r\n    handleClose() {\r\n        this.setState({show: false});\r\n        this.props.handleClose();\r\n    }\r\n\r\n    timing(start, end) {\r\n       //console.log('Start End : ', start, end);\r\n       let today = moment().format('MM/DD/YYYY');\r\n       let now = moment().unix();\r\n       let gap = 30 * 60;\r\n       let key = \"\";\r\n       let stimestamp = moment(today+' '+start, 'MM/DD/YYYY H:mm').unix();\r\n       let etimestamp = moment(today+' '+end, 'MM/DD/YYYY H:mm').unix();\r\n       let data = [];\r\n       for(let i=stimestamp; i<etimestamp; i=i+gap) {\r\n          data.push({\r\n             t: moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A')\r\n          });\r\n          if(now >= i && now <= i+gap ) {\r\n             key = moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A');\r\n          }\r\n       }\r\n       return {data:data, key: key};\r\n    }\r\n\r\n    utc(date, time, tz) {\r\n        let datetime = moment(date).format('MM/DD/YYYY')+' '+time;\r\n        return moment.tz(datetime, 'MM/DD/YYYY hh:mm A', tz).utc().unix();\r\n    }\r\n\r\n    handleEditTask(e) {\r\n        e.preventDefault();\r\n        let isError             =   this.validateForm();\r\n        //console.log(this.props.taskDetails);\r\n        if(!!!isError) {\r\n            let formData            =   {...this.state.formData};\r\n            let timeZone            =   this.state.time_zone;\r\n            let time                =   formData.delivery_time.split('-');\r\n            let from_time           =   time[0];\r\n            let to_time             =   time[1];\r\n            let completeAfter       =   this.utc(formData.delivery_date,  from_time, timeZone);\r\n            let completeBefore      =   this.utc(formData.delivery_date, to_time, timeZone);\r\n            let recipient           =   this.state.recipient_location || {};\r\n            let merchant            =   this.state.merchant_location || {};\r\n            let data                =   {};\r\n            data.merchant_notes     =   formData.merchant_notes || '';\r\n            data.recipient_notes    =   formData.recipient_notes || '';\r\n            data.complete_after     =   completeAfter || '';\r\n            data.complete_before    =   completeBefore || '';\r\n            data.tip                =   formData.tip || 0;\r\n            if(!isEmpty(recipient)){\r\n                data.recipient      =   {\r\n                    location        :   [recipient.longitude, recipient.latitude],\r\n                    address         :   {\r\n                        state       :   recipient.state_code,\r\n                        postalCode  :   recipient.zipcode,\r\n                        country     :   recipient.country,\r\n                        city        :   recipient.city,\r\n                        street      :   recipient.street,\r\n                        number      :   recipient.number\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if(!isEmpty(merchant)){\r\n                data.merchant      =   {\r\n                    location        :   [merchant.longitude, merchant.latitude],\r\n                    address         :   {\r\n                        state       :   merchant.state_code,\r\n                        postalCode  :   merchant.zipcode,\r\n                        country     :   merchant.country,\r\n                        city        :   merchant.city,\r\n                        street      :   merchant.street,\r\n                        number      :   merchant.number\r\n                    },\r\n                    store_id        :   this.props.taskDetails.store_id\r\n                }\r\n            }\r\n            this.setState({isProcessing: true});\r\n            this.props.editTask({uuid: this.props.taskDetails.uuid, params: data});\r\n            setTimeout(() => {\r\n                this.handleClose()\r\n            }, 1000);\r\n        }\r\n    }\r\n    \r\n    validateForm(){      \r\n        let formData                    =   this.state.formData || {};\r\n        let errors                      =   this.state.errors || {};\r\n        let isError                     =   false;\r\n        //console.log('Errors : ', this.state.recipient_address, errors.recipient_address, (!!!this.state.recipient_address || !!errors.recipient_address));\r\n        if(!!errors.merchant_address || !!errors.recipient_address) {\r\n            isError                     =   true;\r\n        }\r\n\r\n        if(!!!formData.delivery_date) {\r\n            errors.delivery_date        =   \"Please enter the delivery date\";\r\n            isError                     =   true;\r\n        }\r\n\r\n        if(!!!formData.delivery_time) {\r\n            errors.delivery_time        =   \"Please enter the delivery time\";\r\n            isError                     =   true;\r\n        }\r\n\r\n        if(!!!this.state.merchant_address || !!errors.merchant_address) {\r\n            errors.merchant_address     =   \"Please enter merchant address\";\r\n            isError                     =   true;\r\n        }\r\n\r\n        if(!!!this.state.recipient_address || !!errors.recipient_address) {\r\n            errors.recipient_address    =   \"Please enter recipient address\";\r\n            isError                     =   true;\r\n        }\r\n\r\n        /* if(formData.tip === '' || formData.tip === null || formData.tip === undefined) {\r\n            errors.tip                  =   \"Please enter the tip\";\r\n            isError                     =   true;\r\n        } */\r\n\r\n        if(!!formData.tip && isNaN(formData.tip)) {\r\n            errors.tip                  =   \"Tip amount should be number\";\r\n            isError                     =   true;\r\n        }\r\n\r\n        this.setState({errors:errors, isError: isError});\r\n        return isError;\r\n    }\r\n\r\n    onChangeHandle(e) {\r\n        let self                    =   this;\r\n        let formData                =   { ...this.state.formData};\r\n        const name                  =   e.target.name;\r\n        const value\t\t            =   e.target.value\r\n        formData[name]              =   value;\r\n        let errors                  =   {...this.state.errors};\r\n        errors[name]                =   \"\";\r\n        this.setState({ formData: formData, errors: errors });\r\n    }\r\n\r\n    render() {\r\n        //console.log('Task Details : ', this.props.taskDetails);\r\n        let taskDetails             =   this.props.taskDetails || {};\r\n        let show                    =   this.props.show || false;\r\n        let errors                  =   this.state.errors || {};\r\n        const err_merchant_address  =   ( errors.merchant_address === \"\" ) ? null : errors.merchant_address;\r\n        const err_recipient_address =   ( errors.recipient_address === \"\" ) ? null : errors.recipient_address;\r\n        const err_delivery_date     =   ( errors.delivery_date === \"\" ) ? null : errors.delivery_date;\r\n        const err_delivery_time     =   ( errors.delivery_time === \"\" ) ? null : errors.delivery_time;\r\n        const err_tip               =   ( errors.tip === \"\" ) ? null : errors.tip;\r\n        let formData                =   this.state.formData || {};\r\n        //let timings               =   this.timings.data || [];\r\n        let timings                 =   (!!this.timings && !!this.timings.data) ? this.timings.data : [];\r\n        let isDisabled          =   false;\r\n        if(!!err_merchant_address\r\n            || !!err_recipient_address\r\n            || !!err_delivery_date\r\n            || !!err_delivery_time\r\n            || !!err_tip) {\r\n            isDisabled          =   true;\r\n        }\r\n        //console.log('Error : ', errors);\r\n        const rsSrchStyles = {\r\n            input: {\r\n                width: '260px',\r\n                padding: '0px 15px 0px 35px',\r\n                color: '#333',\r\n                margin:'0'\r\n            },\r\n            autocompleteContainer: {\r\n                borderRadius: '0 0 3px 3px',\r\n                zIndex: '999',\r\n                background: 'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\r\n                position: 'relative',\r\n                border: '1px solid #e8e8e8',\r\n                boxShadow:'1px 5px 10px rgba(68,68,68,0.2)',\r\n            },\r\n            autocompleteItem: {\r\n                textAlign: 'left',\r\n                fontSize: '12px',\r\n                padding: '5px 8px 5px 30px',\r\n                lineHeight:'20px',\r\n                color: '#999',\r\n                background: '10px 8px #fff',\r\n                margin: '0',\r\n                borderTop:'none',\r\n                borderBottom: '1px solid #ccc',\r\n                background: 'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\r\n            },\r\n            autocompleteItemActive: { color: '#E44500' }\r\n        };\r\n\r\n        //const renderFunc    =   ;\r\n        return (\r\n            (!isEmpty(this.props.taskDetails)) ?\r\n            <Modal size=\"md\" className=\"c-modal\" data=\"ignore-outer-click\" show={show} onHide={this.props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Task</Modal.Title>\r\n                </Modal.Header>\r\n                <form onSubmit={this.handleEditTask}>\r\n                    <Modal.Body>\r\n                        <Row noGutters>\r\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"delivery\">Delivery Date</label>\r\n                                    <DatePicker className={`t_box${(!!err_delivery_date) ? ' error' : ''}`}  selected={formData.delivery_date} onChange={this.onDateSelect} minDate={new Date()} placeholderText=\"Today\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"time\">Time</label>\r\n                                    <select className={`s_box${(!!err_delivery_time) ? ' error' : ''}`} name=\"delivery_time\" onChange={this.onChangeHandle} value={formData.delivery_time}>\r\n                                        <option >-- Select --</option>\r\n                                        {\r\n                                            (timings || []).map((v, k)    =>  {\r\n                                                return (\r\n                                                    <option key={k} value={v.t}>{v.t}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    {err_delivery_time && <small className=\"text-danger\">{err_delivery_time}</small>}\r\n                                </div>\r\n                                {\r\n                                    (!!!taskDetails.driver_id) ?\r\n                                    <div className=\"form-group pr\">\r\n                                        <label htmlFor=\"address\">Merchant Address</label>\r\n                                        <PlacesAutocomplete\r\n                                            value={this.state.merchant_address.toString()}\r\n                                            onChange={this.handleMerchantChange}\r\n                                            onSelect={this.handleMerchantSelect}\r\n                                            styles={rsSrchStyles}\r\n                                        >\r\n                                            {\r\n                                                ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                                <div>\r\n                                                    <input\r\n                                                    {...getInputProps({\r\n                                                        placeholder: 'Enter Address',\r\n                                                        className: !!err_merchant_address  ? \"t_box error\" : \"t_box\",\r\n                                                    })}\r\n                                                    />\r\n                                                    <div className=\"autocomplete-dropdown-container\">\r\n                                                    {loading && <div>Loading...</div>}\r\n                                                    {suggestions.map(suggestion => {\r\n                                                        const className = suggestion.active\r\n                                                        ? 'suggestion-item--active'\r\n                                                        : 'suggestion-item';\r\n                                                        // inline style for demonstration purpose\r\n                                                        const style = suggestion.active\r\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                        return (\r\n                                                        <div\r\n                                                            {...getSuggestionItemProps(suggestion, {\r\n                                                            className,\r\n                                                            style,\r\n                                                            })}\r\n                                                        >\r\n                                                            <span>{suggestion.description}</span>\r\n                                                        </div>\r\n                                                        );\r\n                                                    })}\r\n                                                    </div>\r\n                                                </div>\r\n                                                )\r\n                                            }\r\n                                        </PlacesAutocomplete>\r\n                                    </div> : null\r\n                                }\r\n                                {\r\n                                    (!!!taskDetails.driver_id) ?\r\n                                    <div className=\"form-group pr\">\r\n                                        <label htmlFor=\"raddress\">Recipient Address</label>\r\n                                        <PlacesAutocomplete\r\n                                            value={this.state.recipient_address.toString()}\r\n                                            onChange={this.handleChange}\r\n                                            onSelect={this.handleSelect}\r\n                                            styles={rsSrchStyles}\r\n                                        >\r\n                                            {\r\n                                                ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                                <div>\r\n                                                    <input\r\n                                                    {...getInputProps({\r\n                                                        placeholder: 'Enter Address',\r\n                                                        className: !!err_recipient_address  ? \"t_box error\" : \"t_box\",\r\n                                                    })}\r\n                                                    />\r\n                                                    <div className=\"autocomplete-dropdown-container\">\r\n                                                    {loading && <div>Loading...</div>}\r\n                                                    {suggestions.map(suggestion => {\r\n                                                        const className = suggestion.active\r\n                                                        ? 'suggestion-item--active'\r\n                                                        : 'suggestion-item';\r\n                                                        // inline style for demonstration purpose\r\n                                                        const style = suggestion.active\r\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                        return (\r\n                                                        <div\r\n                                                            {...getSuggestionItemProps(suggestion, {\r\n                                                            className,\r\n                                                            style,\r\n                                                            })}\r\n                                                        >\r\n                                                            <span>{suggestion.description}</span>\r\n                                                        </div>\r\n                                                        );\r\n                                                    })}\r\n                                                    </div>\r\n                                                </div>\r\n                                                )\r\n                                            }\r\n                                        </PlacesAutocomplete>\r\n                                    </div> : null\r\n                                }\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"tip\">Tip</label>\r\n                                    <input type=\"text\" placeholder=\"0.00\" className={`t_box${(!!err_tip) ? ' error' : ''}`} name=\"tip\" onChange={this.onChangeHandle} value={formData.tip}/>\r\n                                    {err_tip && <small className=\"text-danger\">{err_tip}</small>}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"d-notes\">Merchant Notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"merchant_notes\" onChange={this.onChangeHandle} value={formData.merchant_notes}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"notes\">Recipient Notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"recipient_notes\" onChange={this.onChangeHandle} value={formData.recipient_notes}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" disabled={isDisabled || !!this.state.isProcessing} className={(!this.state.isProcessing && !isDisabled) ? 'active' : ''} variant=\"primary\">\r\n                            {(!!this.state.isProcessing) ? 'Processing..' : 'Submit'}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n            : null\r\n        )\r\n    }\r\n}\r\nexport default EditTask;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {findIndex as _findIndex, isEmpty, isEqual} from 'lodash';\r\nimport {getTaskStatus, getDeliveryWindow} from '../../util/helper';\r\nimport {getDateTime} from '../../Helper/common';\r\n\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\n  export function getDetails(taskDetails){    \r\n    let completionDetails   =   taskDetails.completionDetails || {};\r\n    let events              =   completionDetails.events || {};\r\n    let mrchnt_pics         =   events.onflt_mrchnt_pics || '';\r\n    mrchnt_pics             =   (!!mrchnt_pics) ? mrchnt_pics.split(',') : [];\r\n    let recpnt_pics         =   events.onflt_recpnt_pics || '';\r\n    recpnt_pics             =   (!!recpnt_pics) ? recpnt_pics.split(',') : [];\r\n    let recpnt_sig          =   events.onflt_recpnt_sig || '';\r\n    let mrchnt_sig          =   events.onflt_mrchnt_sig || '';\r\n    let path                =   'https://d15p8tr8p0vffz.cloudfront.net/';\r\n    return (\r\n        (!isEmpty(taskDetails)) ? \r\n        <Modal.Body>         \r\n        <Row noGutters>\r\n            <Col md=\"6\" sm=\"12\" className=\"l_col\">\r\n            <div className=\"merchant_box\">\r\n                <div className=\"detail_p\">\r\n                    <p><label>Task ID:</label> {taskDetails.uuid}</p>\r\n                    <p><label>Task Status:</label> {getTaskStatus(taskDetails.tskStatus)}</p>\r\n                    <p><label>Delivery Window:</label> {getDeliveryWindow(taskDetails.completeAfter, taskDetails.completeBefore, taskDetails.time_zone)}</p>\r\n                    <p><label>Order Number:</label> {taskDetails.orderNumber}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"merchant_box\">\r\n                <h4>Merchant info</h4>\r\n                {!!taskDetails.merchant ?\r\n                    <div className=\"detail_p\">\r\n                        <p><label>Name:</label> <span>{taskDetails.merchant.name}</span>  </p>\r\n                        <p><label>Phone:</label><span>{taskDetails.merchant.phone}</span></p>\r\n                        <p><label>Address:</label><span>{taskDetails.merchant.address.number}, {taskDetails.merchant.address.street}, {taskDetails.merchant.address.postalCode}, {taskDetails.merchant.address.city}, {taskDetails.merchant.address.state}, {taskDetails.merchant.address.country}</span></p>\r\n                        <p><label>Notes:</label><span>{ taskDetails.merchant.notes} </span></p>\r\n                    </div>:null\r\n                }\r\n            </div>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\" className=\"r_col\">\r\n            <div className=\"merchant_box minH\">\r\n                <h4>Recipient info</h4> \r\n                {!!taskDetails.merchant ?\r\n                <div className=\"detail_p\">\r\n                    <p><label>Name:</label> <span>{taskDetails.recipients.name}</span></p>\r\n                    <p><label>Phone:</label> <span>{taskDetails.recipients.phone}</span></p>\r\n                    {\r\n                        (!!taskDetails.recpnt_email) ?\r\n                        <p><label>Email:</label> <span>{taskDetails.recpnt_email}</span></p> : null\r\n                    }\r\n                    <p><label>Address:</label><span>{taskDetails.recipients.address.number}, {taskDetails.recipients.address.street}, {taskDetails.recipients.address.postalCode}, {taskDetails.recipients.address.city}, {taskDetails.recipients.address.state}, {taskDetails.recipients.address.country}</span></p>\r\n                    <p><label>Notes:</label> <span>{taskDetails.recipients.notes}</span></p>\r\n                \r\n                    <p><label>Alochol:</label> <span>{(!!taskDetails.alcohol) ? 'Yes' : 'No'}</span></p>\r\n                    <p><label>Tip: </label><span>{taskDetails.tip}</span></p>\r\n                </div>:null\r\n                } \r\n            </div>\r\n            </Col>    \r\n        </Row>\r\n        <Row noGutters>\r\n            <Col md=\"12\" sm=\"12\" className=\"c_info task-d\">\r\n            <div className=\"merchant_box\">\r\n                <h4>Driver Details</h4>\r\n                    <Row noGutters>\r\n                        <Col md=\"6\" sm=\"12\">\r\n                            <div className=\"detail_p\">\r\n                            <p><label>Driver Name:</label> {taskDetails.driver_name}</p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>    \r\n                    <Row noGutters>\r\n                        <Col md=\"6\" sm=\"12\">\r\n                            <h6>Merchant Task</h6>\r\n                            <div className=\"detail_p\">\r\n                            {\r\n                                (!!events.work_in_progress_timestamp) ?\r\n                                <p>\r\n                                    <label>Order Processing:</label> \r\n                                    {getDateTime((events.work_in_progress_timestamp * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.ready_timestamp) ?\r\n                                <p>\r\n                                    <label>Order Ready:</label> \r\n                                    {getDateTime((events.ready_timestamp * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.merchant_start) ?\r\n                                <p>\r\n                                    <label>Start:</label> \r\n                                    {getDateTime((events.merchant_start * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.merchant_eta) ?\r\n                                <p>\r\n                                    <label>2 min eta:</label> \r\n                                    {getDateTime((events.merchant_eta * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.merchant_arrival) ?\r\n                                <p>\r\n                                    <label>Arrival:</label> \r\n                                    {getDateTime((events.merchant_arrival * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            } \r\n                            {\r\n                                (!!events.merchant_complete) ?\r\n                                <p>\r\n                                    <label>Complete:</label> \r\n                                    {getDateTime((events.merchant_complete * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }                                      \r\n                            {\r\n                                (!!events.merchant_worker_note) ?\r\n                                <p>\r\n                                    <label>Complete:</label> \r\n                                    {events.merchant_worker_note}\r\n                                </p> : null\r\n                            }\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"6\" sm=\"12\">\r\n                            <h6>Recipient Task</h6>\r\n                            <div className=\"detail_p\">\r\n                            {\r\n                                (!!events.recipient_start) ?\r\n                                <p>\r\n                                    <label>Start:</label> \r\n                                    {getDateTime((events.recipient_start * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.recipient_eta) ?\r\n                                <p>\r\n                                    <label>2 min eta:</label>\r\n                                    {getDateTime((events.recipient_eta * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }\r\n                            {\r\n                                (!!events.recipient_arrival) ?\r\n                                <p>\r\n                                    <label>Arrival:</label> \r\n                                    {getDateTime((events.recipient_arrival * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            } \r\n                            {\r\n                                (!!events.recipient_complete) ?\r\n                                <p>\r\n                                    <label>Complete:</label> \r\n                                    {getDateTime((events.recipient_complete * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                </p> : null\r\n                            }                                      \r\n                            {\r\n                                (!!events.recipient_worker_note) ?\r\n                                <p>\r\n                                    <label>Complete:</label> \r\n                                    {events.recipient_worker_note}\r\n                                </p> : null\r\n                            }\r\n                            </div> \r\n                        </Col>\r\n                    </Row>\r\n            </div>\r\n        </Col>\r\n        </Row>\r\n                                \r\n        <Row noGutters className=\"sigPhotoRow\">\r\n        {\r\n            (!!mrchnt_sig || !!recpnt_sig) ?  \r\n            <Col md=\"6\" sm=\"12\" className=\"l_col\">\r\n                <div className=\"merchant_box sigbox\">\r\n                <h4>Signature Details</h4> \r\n                <Row noGutters>\r\n                    <Col md=\"6\" sm=\"12\">\r\n                    <h6>Merchant Signature</h6>\r\n                        { (!!mrchnt_sig) ? <img src={`${path}${mrchnt_sig}/282x.png`} /> : null }\r\n                    </Col>\r\n                    <Col md=\"6\" sm=\"12\" className=\"sigimg\">\r\n                    <h6>Recipient Signature</h6>\r\n                        { (!!recpnt_sig) ? <img src={`${path}${recpnt_sig}/282x.png`} /> : null }\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            </Col>  : null\r\n            }\r\n            <Col md=\"6\" sm=\"12\" className=\"r_col\">\r\n                <div className=\"merchant_box dPhoto\">\r\n                <h4>Delivery Photo</h4> \r\n                {\r\n                    (recpnt_pics.length > 0 || mrchnt_pics.length > 0) ?\r\n                    <Carousel responsive={responsive}>\r\n                        {\r\n                            (mrchnt_pics || []).map((pic, i) => {\r\n                                return (\r\n                                    (!!pic) ?\r\n                                    <div className=\"pr16\"><img src={`${path}${pic}/800x.png`} /></div> : null\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                        {\r\n                            (recpnt_pics || []).map((pic, i) => {\r\n                                return (\r\n                                    (!!pic) ?\r\n                                    <div className=\"pr16\"><img src={`${path}${pic}/800x.png`} /></div> : null\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* <div className=\"pr16\"><img src=\"/assets/image-20.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-21.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-20.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-21.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-20.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-21.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-20.png\" /></div>\r\n                        <div className=\"pr16\"><img src=\"/assets/image-21.png\" /></div>  */}                                   \r\n                    </Carousel>  \r\n                : <p  className=\"noreply\" > No delivery photos</p>\r\n            }\r\n            </div>\r\n            </Col>\r\n        </Row>\r\n        {\r\n            (!!taskDetails.feedback) ?\r\n            <Row noGutters>\r\n                <Col md=\"12\" sm=\"12\" className=\"c_info task-d\">\r\n                    <div className=\"merchant_box feedbackpan\">\r\n                        <h4>Feedback</h4>\r\n                        <Row noGutters>\r\n                            <Col md=\"6\" sm=\"12\">\r\n                                <h6>Customer Feedback</h6>\r\n                                <p>{taskDetails.feedback.comment}</p>\r\n                            </Col>\r\n                            <Col md=\"6\" sm=\"12\">\r\n                                <h6>Response to Customer </h6>\r\n                                {\r\n                                    taskDetails.feedback.reply_message?\r\n                                    <p>{taskDetails.feedback.reply_message}</p>:\r\n                                    <p  className=\"noreply\" > No response yet</p>\r\n                                }\r\n                            </Col>\r\n                        </Row>                                       \r\n                    </div>\r\n                </Col>\r\n            </Row> : null\r\n        }\r\n        \r\n        </Modal.Body>\r\n        : <div className=\"loader\">Loading...</div>\r\n    )\r\n  }","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport {getDetails} from './orderDetailsTemplate';\r\n  \r\nclass TaskDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state              =   {\r\n           show         :   false\r\n        }\r\n        this.handleClose        =   this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            show: props.show\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({show: false});\r\n    }\r\n    \r\n    render() {\r\n        let show            =   this.state.show || false;\r\n        let taskDetails     =   this.props.taskDetails || {};\r\n        //console.log(taskDetails, events);\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" show={show} onHide={this.props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Task Details</Modal.Title>\r\n                </Modal.Header>\r\n                {getDetails(taskDetails)}\r\n            </Modal>\r\n        )\r\n\r\n    }\r\n}\r\nexport default TaskDetails;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { withGoogleMap, GoogleMap, Marker, Polyline,\r\n    DirectionsRenderer } from 'react-google-maps';\r\nimport {isEmpty, isEqual} from 'lodash';\r\n\r\n/* function makeMarker( position, icon, title ) {\r\n    let map = new window.google.maps.Map( element, options );\r\n    new window.google.maps.Marker({\r\n     position: position,\r\n     map: map,\r\n     icon: icon,\r\n     title: title\r\n    });\r\n   }\r\n */\r\nclass MapDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state              =   {\r\n           show         :   false\r\n        }\r\n        this.handleClose        =   this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if(!isEmpty(props.taskDetails)) {\r\n            const directionsService = new window.google.maps.DirectionsService();\r\n\r\n            const origin = { lat : parseFloat(props.taskDetails.mrchnt_lat), lng: parseFloat(props.taskDetails.mrchnt_lng), icon:'https://storage.googleapis.com/creative-image/order_status_icon25.png'  };\r\n            const destination = { lat: parseFloat(props.taskDetails.recpnt_lat), lng: parseFloat(props.taskDetails.recpnt_lng), icon:'https://storage.googleapis.com/creative-image/order_status_icon25.png'  };\r\n\r\n            directionsService.route(\r\n                {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    travelMode: window.google.maps.TravelMode.DRIVING,\r\n\r\n                    /* waypoints: [\r\n                        {\r\n                            location: new window.google.maps.LatLng(6.4698,  3.5852)\r\n                        },\r\n                        {\r\n                            location: new window.google.maps.LatLng(6.6018,3.3515)\r\n                        }\r\n                    ] */\r\n                },\r\n                (result, status) => {\r\n                    if (status === window.google.maps.DirectionsStatus.OK) {\r\n                        //console.log(result)\r\n                        this.setState({\r\n                            directions: result\r\n                        });\r\n                    } else {\r\n                        console.error(`error fetching directions ${result}`);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        this.setState({\r\n            show: props.show\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({show: false, directions: ''});\r\n    }   \r\n    \r\n    shouldComponentUpdate(props, state){\r\n        //console.log(isEqual(this.props, props), isEqual(this.state, state));\r\n        //if(!isEqual(this.props, props) || (!isEqual(this.state, state) && !isEmpty(this.state.directions))) {\r\n            if(!!this.state && !!this.state.directions) {\r\n                //console.log(this.state.directions.routes[0].legs, state.directions.routes[0].legs);\r\n                //console.log(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path);\r\n                //console.log(this.props, props);\r\n                //console.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\r\n                //console.log('[0].legs : ', isEqual(this.state.directions.routes[0].legs, state.directions.routes[0].legs));\r\n                //console.log('[0].warnings : ', isEqual(this.state.directions.routes[0].warnings, state.directions.routes[0].warnings));\r\n                //console.log('[0].waypoint_order : ', isEqual(this.state.directions.routes[0].waypoint_order, state.directions.routes[0].waypoint_order));\r\n                //console.log('[0].overview_path : ', isEqual(this.state.directions.routes[0].overview_path, state.directions.routes[0].overview_path));\r\n                //.log('[0].bounds : ', isEqual(this.state.directions.routes[0].bounds, state.directions.routes[0].bounds));\r\n                if(!!this.state.directions.routes[0].legs && !!this.state.directions.routes[0].overview_path)\r\n                    return false;\r\n            }\r\n        //}\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        //console.log('state : ', this.state);\r\n        let show            =   this.state.show || false;\r\n        let taskDetails     =   this.props.taskDetails || {};\r\n            const GoogleMapExample = withGoogleMap(props => (\r\n                (!isEmpty(this.state.directions)) ? \r\n                <GoogleMap\r\n                defaultCenter={{ lat: 6.5244, lng:  3.3792 }}\r\n                //defaultCenter = { { lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) } }\r\n                defaultZoom = { 12 }\r\n                mapTypeControl = {false}\r\n                >\r\n                    <DirectionsRenderer\r\n                        directions={this.state.directions}\r\n                        options={{\r\n                            polylineOptions: {\r\n                              stokeColor: \"#FF0000\",\r\n                              strokeOpacity: 0.5,\r\n                              strokeWeight: 4\r\n                            },\r\n                            icon: false,\r\n                            suppressMarkers:true\r\n                          }}\r\n                    />\r\n                    <Marker\r\n                        position={{ lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) }}\r\n                        icon='/assets/icon01.png'\r\n                    />\r\n                    <Marker\r\n                        position={{ lat: parseFloat(taskDetails.recpnt_lat), lng: parseFloat(taskDetails.recpnt_lng) }}\r\n                        icon='/assets/icon02.png'\r\n                    />\r\n                    {/* <Marker position={{ lat: 38.6013835, lng: -121.39313700000002 }} /> */}\r\n                    {/* <Polyline\r\n                        path={[{ lat: parseFloat(taskDetails.mrchnt_lat), lng: parseFloat(taskDetails.mrchnt_lng) }, { lat: parseFloat(taskDetails.recpnt_lat), lng: parseFloat(taskDetails.recpnt_lng) }]}\r\n                        /> */}\r\n                </GoogleMap> : null\r\n            ));\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" show={show} onHide={this.props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Map Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row noGutters>\r\n                        <Col md=\"12\" sm=\"12\" className=\"v-map\"> \r\n                            {\r\n                                (!isEmpty(taskDetails)) ?\r\n                                <GoogleMapExample\r\n                                        containerElement={ <div style={{ height: `300px`, width: '100%' }} /> }\r\n                                        mapElement={ <div style={{ height: `100%` }} /> }\r\n                                /> : <div className=\"loader\">Loading...</div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"map_footer\">\r\n                    <p><span>Distance:</span> {(!!this.state.directions) ? this.state.directions.routes[0].legs[0].distance.text : ''} </p>\r\n                    <p><span>Duration:</span> {(!!this.state.directions) ? this.state.directions.routes[0].legs[0].duration.text : ''} </p>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default MapDetails;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {findIndex as _findIndex, isEmpty, isEqual} from 'lodash';\r\nimport moment from 'moment-timezone';\r\n\r\nclass TrackDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state              =   {\r\n           show         :   false\r\n        }\r\n        this.handleClose        =   this.handleClose.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log('Props : ', props);\r\n        this.setState({\r\n            show: props.show\r\n        })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({show: false});\r\n    }\r\n    \r\n    render() {\r\n        let show            =   this.state.show || false;\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" show={show} onHide={this.props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{this.props.trackDriver}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row noGutters>\r\n                        <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                            {\r\n                                (!!this.props.currentUrl) ?\r\n                                <iframe  frameborder=\"0\" width=\"100%\" src={this.props.currentUrl} style={{border:'none!important', height:'500px'}}></iframe>\r\n                                : null\r\n                            }\r\n                        </Col>    \r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default TrackDetails;","import React, {Component} from 'react';\r\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport { convertTwoDecimalRound } from '../../Helper/common';\r\n\r\nexport default class UncategorizedList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let tasks                  =  this.props.tasks || {};  \r\n      let orderList              =  tasks.orders || [];\r\n      let shoppedLateData        =  this.props.shoppedLate || {};\r\n      let shoppedLateSummary     =  shoppedLateData.summary || {};\r\n      let shoppedLate            =  0;\r\n      let totalShopped           =  0;\r\n      let shoppedLatePerc        =  0;\r\n      if(!isEmpty(shoppedLateSummary) && shoppedLateData.type === 'default') {\r\n         totalShopped            =  shoppedLateSummary.total_orders;\r\n         shoppedLate             =  shoppedLateSummary.shopped_late;\r\n         shoppedLatePerc         =  convertTwoDecimalRound(shoppedLateSummary.shopping_late_percent);\r\n      }\r\n      //let shoppedLatePerc  =  convertTwoDecimalRound((tasks.totShoppedLate > 0 && tasks.total >= 0)? (tasks.totShoppedLate * 100)/tasks.total : 0);\r\n      return (\r\n         (!isEmpty(tasks)) ?\r\n               <section className=\"content\">\r\n                  <div className=\"table_sec dboardtable\">\r\n                     <table>\r\n                     <thead>\r\n                           <tr>\r\n                              <th colSpan=\"8\" className=\"t-titel\"><span className=\"aOrder\">All Orders</span>\r\n                                 <div className=\"status_count\">\r\n                                       <span className=\"fc_black\"> Total: {tasks.total}</span>\r\n                                       <span className=\"fc_green\">Ready: {tasks.ready}</span>\r\n                                       <span className=\"fc_yellow\">Shopping: {tasks.shopping}</span>\r\n                                       <span className=\"fc_read\">Not Ready: {tasks.not_ready}</span>\r\n                                       <span className=\"fc_gray\"> Shopped Late: {shoppedLatePerc}% ({shoppedLate}/{totalShopped})</span>\r\n                                 </div>\r\n                              </th>\r\n                           </tr>\r\n                           </thead>\r\n                           <tbody>\r\n                           <tr className=\"t-heading\">\r\n                              <th>Order Number</th>\r\n                              <th>Delivery Window</th>\r\n                              <th>Merchant Address</th>\r\n                              <th>Recipient Address</th>\r\n                              <th>Driver</th>\r\n                              <th>Shopped Late</th>\r\n                              <th>Task Status</th>\r\n                              <th></th>\r\n                           </tr>\r\n                           {\r\n                              (orderList.length > 0) ?\r\n                              orderList.map((order, oIndex) => {\r\n                                 let ordClsName  =   '';\r\n                                 if(order.order_status === 'R' || order.order_status === 'F' || order.order_status === 'Y'){\r\n                                       ordClsName  =   'ready';\r\n                                 } else if(order.order_status === 'W') {\r\n                                       ordClsName  =   'shopping';\r\n                                 }\r\n                                 else {\r\n                                       ordClsName  =   'not_ready';\r\n                                 }\r\n                                 let shoppedLate         =  'No';\r\n                                 let shoppedLateCls      =  'fcGray';\r\n                                 if(order.shoppedLate > 0) {\r\n                                    shoppedLate    = order.shoppedLate + ' min';\r\n                                    if(order.shoppedLate >= 30)\r\n                                       shoppedLateCls    =  'fcRed';\r\n                                    else \r\n                                       shoppedLateCls    =  'fcBlack';\r\n                                 }\r\n                                 //console.log('Onfleet : ', order.order_status, ordClsName);\r\n                                 let clsName    =  getStatusClass(order.tsk_status);\r\n                                 return (\r\n                                       <tr\r\n                                          key={oIndex}\r\n                                          onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                             order_number: order.order_number,\r\n                                             order_id: order.id,\r\n                                             order_uuid: order.uuid,\r\n                                             tsk_status: order.tsk_status,\r\n                                             mrchnt_address: order.mrchnt_address,\r\n                                             recpnt_address: order.recpnt_address\r\n                                          })}>\r\n                                          <td abbr=\"tr\">\r\n                                             <span className={`round ${ordClsName}`}></span>\r\n                                             {order.order_number}\r\n                                          </td>\r\n                                          <td abbr=\"tr\">{order.complete_after} - {order.complete_before}</td>\r\n                                          <td abbr=\"tr\" className=\"acell\"><label>{order.mrchnt_address.toString()}</label> <span className=\"tTip\">{order.mrchnt_address.toString()}</span></td>\r\n                                          <td abbr=\"tr\" className=\"acell\"><label>{order.recpnt_address.toString()}</label><span className=\"tTip\">{order.recpnt_address.toString()}</span></td>\r\n                                          <td abbr=\"tr\">{order.driver_name}</td>\r\n                                          <td abbr=\"tr\">\r\n                                             <span className={shoppedLateCls}>{shoppedLate}</span>\r\n                                          </td>\r\n                                          <td className=\"react-contextmenu-wrapper\" id=\"some_unique_identifier\">\r\n                                             <span className={clsName}>{order.tsk_status}</span>                           \r\n                                          </td>\r\n                                          <td>\r\n                                             {\r\n                                                   (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                                   <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                      current_url: order.current_url,\r\n                                                      track_driver: order.track_driver\r\n                                                   })}>Track Driver</a> : null\r\n                                             }\r\n                                          </td>\r\n                                       </tr>\r\n                                 )\r\n                              }) : <tr><td align=\"center\" colSpan=\"7\">No Record(s)</td></tr>\r\n                           }\r\n                           </tbody>\r\n                     </table>\r\n                  </div>\r\n               </section>\r\n            : <section className=\"content\"><div className=\"loader\">Loading....</div></section>\r\n      )\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport { convertTwoDecimalRound } from '../../Helper/common';\r\n\r\nexport default class UncategorizedList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let tasks                           =  this.props.tasks || {};\r\n      //console.log('shoppedLate', this.props.shoppedLate);\r\n      let shoppedLateData                 =  this.props.shoppedLate || {};\r\n      let shoppedLateSummary              =  shoppedLateData.summary || {};\r\n      return (\r\n         (!isEmpty(tasks)) ?\r\n            Object.keys(tasks || {}).map((item, i) => {\r\n               let task                   =  tasks[item] || [];\r\n               let orderList              =  task.orders || [];\r\n               //let shoppedLatePerc      =  convertTwoDecimalRound((task.totShoppedLate > 0 && task.total >= 0) ? (task.totShoppedLate * 100)/task.total : 0);\r\n               \r\n               let shoppedLate            =  0;\r\n               let totalShopped           =  0;\r\n               let shoppedLatePerc        =  0;\r\n               let stateSummary           =  shoppedLateSummary[task.name];\r\n               //console.log(stateSummary, !isEmpty(stateSummary));\r\n               if(!isEmpty(stateSummary) && shoppedLateData.type === 'state') {\r\n                  totalShopped            =  stateSummary.total_orders;\r\n                  shoppedLate             =  stateSummary.shopped_late;\r\n                  shoppedLatePerc         =  convertTwoDecimalRound(stateSummary.shopping_late_percent);\r\n               }\r\n               return (\r\n                     <section key={i} className=\"content\">\r\n                        <div className=\"table_sec dboardtable\">\r\n                           <table>\r\n                              <thead>\r\n                                 <tr>\r\n                                    <th colSpan=\"8\" className=\"t-titel\"><span className=\"aOrder\">{task.name}</span>\r\n                                       <div className=\"status_count\">\r\n                                          <span className=\"fc_black\"> Total: {task.total}</span>\r\n                                          <span className=\"fc_green\">Ready: {task.ready}</span>\r\n                                          <span className=\"fc_yellow\">Shopping: {task.shopping}</span>\r\n                                          <span className=\"fc_read\">Not Ready: {task.not_ready}</span>\r\n                                          <span className=\"fc_gray\"> Shopped Late: {shoppedLatePerc}% ({shoppedLate}/{totalShopped})</span>\r\n                                       </div>\r\n                                    </th>\r\n                                 </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                 <tr className=\"t-heading\">\r\n                                    <th>Order Number</th>\r\n                                    <th>Delivery Window</th>\r\n                                    <th>Merchant Address</th>\r\n                                    <th>Recipient Address</th>\r\n                                    <th>Driver</th>\r\n                                    <th>Shopped Late</th>\r\n                                    <th>Task Status</th>\r\n                                    <th></th>\r\n                                 </tr>\r\n                                 {\r\n                                    orderList.map((order, oIndex) => {\r\n                                       let ordClsName  =   '';\r\n                                       if(order.order_status === 'R' || order.order_status === 'F' || order.order_status === 'Y'){\r\n                                             ordClsName  =   'ready';\r\n                                       } else if(order.order_status === 'W') {\r\n                                             ordClsName  =   'shopping';\r\n                                       }\r\n                                       else {\r\n                                             ordClsName  =   'not_ready';\r\n                                       }\r\n                                       let shoppedLate         =  'No';\r\n                                       let shoppedLateCls      =  'fcGray';\r\n                                       if(order.shoppedLate > 0) {\r\n                                          shoppedLate    = order.shoppedLate + ' min';\r\n                                          if(order.shoppedLate >= 30)\r\n                                             shoppedLateCls    =  'fcRed';\r\n                                          else \r\n                                             shoppedLateCls    =  'fcBlack';\r\n                                       }\r\n                                       //console.log('Onfleet : ', order.order_status, ordClsName);\r\n                                       let clsName    =  getStatusClass(order.tsk_status);\r\n                                       return (\r\n                                             <tr\r\n                                                key={oIndex}\r\n                                                onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                                   order_number: order.order_number,\r\n                                                   order_id: order.id,\r\n                                                   order_uuid: order.uuid,\r\n                                                   tsk_status: order.tsk_status,\r\n                                                   mrchnt_address: order.mrchnt_address,\r\n                                                   recpnt_address: order.recpnt_address\r\n                                                })}>\r\n                                                <td abbr=\"tr\">\r\n                                                   <span className={`round ${ordClsName}`}></span>\r\n                                                   {order.order_number}\r\n                                                </td>\r\n                                                <td abbr=\"tr\">{order.complete_after} - {order.complete_before}</td>\r\n                                                <td abbr=\"tr\" className=\"acell\"><label>{order.mrchnt_address.toString()}</label> <span className=\"tTip\">{order.mrchnt_address.toString()}</span></td>\r\n                                                <td abbr=\"tr\" className=\"acell\"><label>{order.recpnt_address.toString()}</label><span className=\"tTip\">{order.recpnt_address.toString()}</span></td>\r\n                                                <td abbr=\"tr\">{order.driver_name}</td>\r\n                                                <td abbr=\"tr\">\r\n                                                   <span className={shoppedLateCls}>{shoppedLate}</span>\r\n                                                </td>\r\n                                                <td className=\"react-contextmenu-wrapper\" id=\"some_unique_identifier\">\r\n                                                   <span className={clsName}>{order.tsk_status}</span>                           \r\n                                                </td>\r\n                                                <td>\r\n                                                   {\r\n                                                         (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                                         <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                            current_url: order.current_url,\r\n                                                            track_driver: order.track_driver\r\n                                                         })}>Track Driver</a> : null\r\n                                                   }\r\n                                                </td>\r\n                                             </tr>\r\n                                       )\r\n                                    })\r\n                                 }\r\n                                 </tbody>\r\n                           </table>\r\n                        </div>  \r\n                     </section>\r\n               )\r\n            })  : <section className=\"content\"><div className=\"no-records\">No Records</div></section>\r\n      )\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport { convertTwoDecimalRound } from '../../Helper/common';\r\n\r\nexport default class UncategorizedList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let tasks               =  this.props.tasks || {};\r\n      let shoppedLateData     =  this.props.shoppedLate || {};\r\n      let shoppedLateSummary  =  shoppedLateData.summary || {};\r\n      return (\r\n         (!isEmpty(tasks)) ?\r\n            Object.keys(tasks || {}).map((item, i) => {\r\n               let cities     =  tasks[item] || [];\r\n               return (\r\n                     <section key={i} className=\"content\">\r\n                        <h3 className=\"title\">{item}</h3>\r\n                        {    \r\n                           cities.map((city, index) => {\r\n                                 let orderList           =  city.orders || [];\r\n                                 //let shoppedLatePerc     =  convertTwoDecimalRound((city.totShoppedLate > 0 && city.total >= 0) ? (city.totShoppedLate * 100)/city.total : 0);\r\n                                 let shoppedLate            =  0;\r\n                                 let totalShopped           =  0;\r\n                                 let shoppedLatePerc        =  0;\r\n                                 let zoneSummary            =  {};\r\n                                 if(shoppedLateData.type === 'store')\r\n                                    zoneSummary             =  shoppedLateSummary[city.uniqueid] || {};\r\n                                 else\r\n                                    zoneSummary             =  (!!shoppedLateSummary[item]) ? shoppedLateSummary[item][city.uniqueid] : {};\r\n                                 //console.log(stateSummary, task.name);\r\n                                 if(!isEmpty(zoneSummary)) {\r\n                                    totalShopped            =  zoneSummary.total_orders;\r\n                                    shoppedLate             =  zoneSummary.shopped_late;\r\n                                    shoppedLatePerc         =  convertTwoDecimalRound(zoneSummary.shopping_late_percent);\r\n                                 }\r\n                                 return (\r\n                                    <div key={index} className=\"table_sec dboardtable\">\r\n                                       <table>\r\n                                       <thead>\r\n                                             <tr>\r\n                                                <th colSpan=\"8\" className=\"t-titel\"><span className=\"aOrder\">{city.name}</span>\r\n                                                   <div className=\"status_count\">\r\n                                                         <span className=\"fc_black\"> Total: {city.total}</span>\r\n                                                         <span className=\"fc_green\">Ready: {city.ready}</span>\r\n                                                         <span className=\"fc_yellow\">Shopping: {city.shopping}</span>\r\n                                                         <span className=\"fc_read\">Not Ready: {city.not_ready}</span>\r\n                                                         <span className=\"fc_gray\"> Shopped Late: {shoppedLatePerc}% ({shoppedLate}/{totalShopped})</span>\r\n                                                   </div>\r\n                                                </th>\r\n                                             </tr>\r\n                                             </thead>\r\n                                             <tbody>\r\n                                             <tr className=\"t-heading\">\r\n                                                <th>Order Number</th>\r\n                                                <th>Delivery Window</th>\r\n                                                <th>Merchant Address</th>\r\n                                                <th>Recipient Address</th>\r\n                                                <th>Driver</th>\r\n                                                <th>Shopped Late</th>\r\n                                                <th>Task Status</th>\r\n                                                <th></th>\r\n                                             </tr>\r\n                                             {\r\n                                                orderList.map((order, oIndex) => {\r\n                                                   let ordClsName  =   '';\r\n                                                   if(order.order_status === 'R' || order.order_status === 'F' || order.order_status === 'Y'){\r\n                                                         ordClsName  =   'ready';\r\n                                                   } else if(order.order_status === 'W') {\r\n                                                         ordClsName  =   'shopping';\r\n                                                   }\r\n                                                   else {\r\n                                                         ordClsName  =   'not_ready';\r\n                                                   }\r\n                                                   let shoppedLate         =  'No';\r\n                                                   let shoppedLateCls      =  'fcGray';\r\n                                                   if(order.shoppedLate > 0) {\r\n                                                      shoppedLate    = order.shoppedLate + ' min';\r\n                                                      if(order.shoppedLate >= 30)\r\n                                                         shoppedLateCls    =  'fcRed';\r\n                                                      else \r\n                                                         shoppedLateCls    =  'fcBlack';\r\n                                                   }\r\n                                                   //console.log('Onfleet : ', order.order_status, ordClsName);\r\n                                                   let clsName    =  getStatusClass(order.tsk_status);\r\n                                                   return (\r\n                                                         <tr\r\n                                                            key={oIndex}\r\n                                                            onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                                               order_number: order.order_number,\r\n                                                               order_id: order.id,\r\n                                                               order_uuid: order.uuid,\r\n                                                               tsk_status: order.tsk_status,\r\n                                                               mrchnt_address: order.mrchnt_address,\r\n                                                               recpnt_address: order.recpnt_address\r\n                                                            })}>\r\n                                                            <td abbr=\"tr\">\r\n                                                               <span className={`round ${ordClsName}`}></span>\r\n                                                               {order.order_number}\r\n                                                            </td>\r\n                                                            <td abbr=\"tr\">{order.complete_after} - {order.complete_before}</td>\r\n                                                            <td abbr=\"tr\" className=\"acell\"><label>{order.mrchnt_address.toString()}</label> <span className=\"tTip\">{order.mrchnt_address.toString()}</span></td>\r\n                                                            <td abbr=\"tr\" className=\"acell\"><label>{order.recpnt_address.toString()}</label><span className=\"tTip\">{order.recpnt_address.toString()}</span></td>\r\n                                                            <td abbr=\"tr\">{order.driver_name}</td>\r\n                                                            <td abbr=\"tr\">\r\n                                                               <span className={shoppedLateCls}>{shoppedLate}</span>\r\n                                                            </td>\r\n                                                            <td className=\"react-contextmenu-wrapper\" id=\"some_unique_identifier\">\r\n                                                               <span className={clsName}>{order.tsk_status}</span>                           \r\n                                                            </td>\r\n                                                            <td>\r\n                                                               {\r\n                                                                     (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                                                     <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                                        current_url: order.current_url,\r\n                                                                        track_driver: order.track_driver\r\n                                                                     })}>Track Driver</a> : null\r\n                                                               }\r\n                                                            </td>\r\n                                                         </tr>\r\n                                                   )\r\n                                                })\r\n                                             }\r\n                                             </tbody>\r\n                                       </table>\r\n                                    </div>\r\n                                 )\r\n                           })\r\n                        }            \r\n                     </section>\r\n               )\r\n            })  : <section className=\"content\"><div className=\"no-records\">No Records</div></section>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { fb as firebase, database as firebaseDb } from '../../util/firebase';\r\nimport { sortTaskList } from '../../util/helper';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport CustomContext from '../Modals/contextMenu';\r\nimport EditTask from '../Modals/editTaskModal';\r\nimport TaskDetails from '../Modals/taskDetailsModal';\r\nimport MapDetails from '../Modals/mapDetailsModal';\r\nimport TrackDetails from '../Modals/trackDetailsModal';\r\nimport UncategorisedList from './uncategorizedList';\r\nimport StateWiseList from './stateWiseList';\r\nimport ZoneWiseList from './zoneWiseList';\r\n\r\nclass DashboardList extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state                  =   {\r\n                                            editShow        :   false,\r\n                                            detailsShow     :   false,\r\n                                            mapShow         :   false,\r\n                                            trackShow       :   false,\r\n                                            visible         :   false,\r\n                                            x               :   '',\r\n                                            y               :   '',\r\n                                            tasks           :   {},\r\n                                            isLoading       :   true,\r\n                                            mrchnt_address  :   '',\r\n                                            recpnt_address  :   '',\r\n                                            filteredList    :   [],\r\n                                            listType        :   ''\r\n                                        };\r\n        this.snapshot               =   null;\r\n        this.statefilter            =   [];\r\n        this.areafilter             =   [];\r\n        this.storefilter            =   [];\r\n        this.arrangeData            =   this.arrangeData.bind(this);\r\n        this.handleContextMenu      =   this.handleContextMenu.bind(this);\r\n        this.openEditWindow         =   this.openEditWindow.bind(this);\r\n        this.openDetailsWindow      =   this.openDetailsWindow.bind(this);\r\n        this.openMapWindow          =   this.openMapWindow.bind(this);\r\n        this.openTrackWindow        =   this.openTrackWindow.bind(this);\r\n        this.deleteTask             =   this.deleteTask.bind(this);\r\n        this.updateTask             =   this.updateTask.bind(this);\r\n        this.handleClose            =   this.handleClose.bind(this);\r\n    }\r\n\r\n    openEditWindow(uuid, mrchnt_address, recpnt_address){\r\n        this.props.getTaskDetails({uuid: uuid})\r\n        this.setState({\r\n            editShow        :   true,\r\n            mrchnt_address  :   mrchnt_address,\r\n            recpnt_address  :   recpnt_address\r\n        })\r\n    }\r\n\r\n    openDetailsWindow(uuid){\r\n        this.props.getTaskDetails({uuid: uuid})\r\n        this.setState({\r\n            detailsShow: true\r\n        })\r\n    }    \r\n\r\n    openMapWindow(uuid){\r\n        this.props.getTaskDetails({uuid: uuid});\r\n        this.setState({\r\n            mapShow: true\r\n        })\r\n    }\r\n\r\n    openTrackWindow(e, data){\r\n        e.stopPropagation();\r\n        this.setState({\r\n            trackShow: true,\r\n            currentUrl: data.current_url,\r\n            trackDriver: data.track_driver\r\n        })\r\n    }\r\n\r\n    updateTask(uuid, status){\r\n        if(window.confirm('Do you really want to update status of this task?')) {\r\n            this.props.updateTaskStatus({uuid: uuid, status: status});\r\n        }\r\n    }\r\n\r\n    deleteTask(uuid){\r\n        if(window.confirm('Do you really want to delete this task?')) {\r\n            this.props.deleteTask({uuid: uuid});\r\n        }\r\n    }\r\n    \r\n    handleClose(){\r\n        //console.log('Handle Close');\r\n        this.setState({\r\n            visible     :   false,\r\n            editShow    :   false,            \r\n            mapShow     :   false,\r\n            detailsShow :   false,\r\n            trackShow   :   false\r\n        })\r\n    }\r\n\r\n    handleContextMenu(event, order) {\r\n        let self                   =  this;\r\n        event.preventDefault();        \r\n        const clickX               =  event.clientX;\r\n        const clickY               =  event.pageY;\r\n        self.setState({\r\n            visible     :  true,\r\n            x           :  clickX,\r\n            y           :  clickY,\r\n            selOrder    :  {...order}\r\n        });\r\n    }\r\n    \r\n    hideContextMenu = () => {\r\n        this.setState({\r\n            visible :   false,\r\n            x       :   0,\r\n            y       :   0\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log('List Mounted ');\r\n        this.statefilter        =   [...this.props.statefilter];\r\n        this.areafilter         =   [...this.props.areafilter];\r\n        this.storefilter        =   [...this.props.storefilter];\r\n        let org_id              =   this.props.org_id || '';\r\n        let task_type           =   this.props.type || '';\r\n        this.getTasks({\r\n            org_id          :   org_id,\r\n            task_type       :   task_type,\r\n            statefilter     :   this.props.statefilter,\r\n            areafilter      :   this.props.areafilter,\r\n            storefilter     :   this.props.storefilter\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log('Will Receive Props Filter : ', props);\r\n        if(this.props.type !== props.type\r\n            || !!!this.unsubscribe) {\r\n            this.statefilter        =   [...props.statefilter];\r\n            this.areafilter         =   [...props.areafilter];\r\n            this.storefilter        =   [...props.storefilter];\r\n            let org_id              =   props.org_id || '';\r\n            let task_type           =   props.type || '';\r\n            this.getTasks({\r\n                org_id          :   org_id,\r\n                task_type       :   task_type,\r\n                statefilter     :   props.statefilter,\r\n                areafilter      :   props.areafilter,\r\n                storefilter     :   props.storefilter\r\n            });\r\n        } else {\r\n            if(this.searchTxt !== props.searchTxt\r\n                || !isEqual(this.statefilter, props.statefilter)\r\n                || !isEqual(this.areafilter, props.areafilter)\r\n                || !isEqual(this.storefilter, props.storefilter)) {                    \r\n                this.statefilter        =   [...props.statefilter];\r\n                this.areafilter         =   [...props.areafilter];\r\n                this.storefilter        =   [...props.storefilter];\r\n                this.searchTxt          =   props.searchTxt;\r\n                this.arrangeData();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //console.log('Subscribe : ', this.unsubscribe, !!this.unsubscribe)\r\n        if(!!this.unsubscribe)\r\n            this.unsubscribe();\r\n    }\r\n\r\n    getTasks(data){\r\n        //console.log('called get tasks : ', data);\r\n        if(!!this.unsubscribe)\r\n            this.unsubscribe();\r\n        let self            =   this;\r\n        let org_id          =   data.org_id;\r\n        let task_type       =   data.task_type;\r\n        let statefilter     =   data.statefilter;\r\n        //let areafilter      =   data.areafilter;\r\n        //let storefilter     =   data.storefilter;\r\n        let query           =   firebaseDb\r\n        .collection(\"tasks\")\r\n        .where('org_id', '==', org_id)\r\n        .where('tsk_type', '==', task_type);\r\n        /*\r\n        if(statefilter.length > 0) {\r\n            let stateArr    =   _map(statefilter, 'value');\r\n            if(stateArr.length > 0)\r\n                query   =   query.where('state_code', 'in', [...stateArr]);\r\n        }\r\n        */\r\n        /*\r\n        if(areafilter.length > 0) {\r\n            let areaArr    =   _map(areafilter, 'value');\r\n            console.log('Area : ', areaArr);\r\n            if(areaArr.length > 0)\r\n                query   =   query.where('mkt_ofc_cty_del_zne_name', 'in', [...areaArr]);\r\n        }\r\n        if(storefilter.length > 0) {\r\n            let storeArr    =   _map(storefilter, 'value');\r\n            console.log('Store : ', storeArr);\r\n            //if(storeArr.length > 0)\r\n              //  query   =   query.where('state_code', 'in', [...storeArr]);\r\n        }\r\n        */\r\n        this.unsubscribe    =   query\r\n        //.where('mkt_ofc_cty_del_zne_id', 'in', [11, 13])\r\n        //.where('org_id', 'in', [3, 2])\r\n        .onSnapshot(function(querySnapshot) {\r\n            self.snapshot   =   querySnapshot;\r\n            self.arrangeData();\r\n        })\r\n    }\r\n\r\n    arrangeData() {        \r\n        let snapshot    =   this.snapshot;\r\n        let store       =   [];\r\n        let storeName   =   {};\r\n        (this.storefilter || []).forEach((item) => {\r\n            store.push(item.store_id);\r\n            storeName[item.store_id]  =   item.label;\r\n        })\r\n        //console.log('Store Filter : ', store, storeName);\r\n        let filter      =   {\r\n            state       :   _map(this.statefilter, 'value'),\r\n            area        :   _map(this.areafilter, 'value'),\r\n            //store       :   _map(this.storefilter, 'store_id'),\r\n            //storeName   :   map(this.storefilter) => 'label'),\r\n            store       :   store,\r\n            storeName   :   storeName,\r\n            searchTxt   :   this.searchTxt\r\n        }\r\n        let result      =   sortTaskList(snapshot, filter);\r\n        let tasks       =   result.tasks;\r\n        let count       =   result.count;\r\n        let type        =   result.type;\r\n        this.setState({\r\n            tasks       :   tasks,\r\n            listType    :   type,\r\n            isLoading   :   false\r\n        }, () => {\r\n            this.props.updateTotalCount(count || 0);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let tasks                       =   this.state.tasks || {};\r\n        //console.log(tasks);\r\n        return (  \r\n            <div>                         \r\n                <CustomContext\r\n                    visible             =   {this.state.visible}\r\n                    x                   =   {this.state.x}\r\n                    y                   =   {this.state.y}\r\n                    selOrder            =   {this.state.selOrder}\r\n                    openEditWindow      =   {this.openEditWindow}\r\n                    openDetailsWindow   =   {this.openDetailsWindow}\r\n                    openMapWindow       =   {this.openMapWindow}\r\n                    deleteTask          =   {this.deleteTask}\r\n                    updateTask          =   {this.updateTask}\r\n                    hideContextMenu     =   {this.hideContextMenu}\r\n                />\r\n                {\r\n                    (!!!this.state.isLoading) ?\r\n                    <div>\r\n                        {\r\n                            (this.state.listType === 'UncategorizedList') ? \r\n                                <UncategorisedList\r\n                                    tasks               =   {tasks}\r\n                                    openTrackWindow     =   {this.openTrackWindow}\r\n                                    handleContextMenu   =   {this.handleContextMenu}\r\n                                    shoppedLate         =   {this.props.shoppedLate}\r\n                                />\r\n                            : null\r\n                        }\r\n                        {\r\n                            (this.state.listType === 'StateWiseList') ? \r\n                                <StateWiseList\r\n                                    tasks               =   {tasks}\r\n                                    openTrackWindow     =   {this.openTrackWindow}\r\n                                    handleContextMenu   =   {this.handleContextMenu}\r\n                                    shoppedLate         =   {this.props.shoppedLate}\r\n                                />\r\n                            : null\r\n                        }\r\n                        {\r\n                            (this.state.listType === 'ZoneWiseList') ? \r\n                                <ZoneWiseList\r\n                                    tasks               =   {tasks}\r\n                                    openTrackWindow     =   {this.openTrackWindow}\r\n                                    handleContextMenu   =   {this.handleContextMenu}\r\n                                    shoppedLate         =   {this.props.shoppedLate}\r\n                                />\r\n                            : null\r\n                        }\r\n                        {\r\n                            (!!this.state.editShow) ?\r\n                            <EditTask\r\n                                taskDetails         =   {this.props.taskDetails}\r\n                                show                =   {this.state.editShow}\r\n                                taskType            =   {this.props.taskType}\r\n                                stores              =   {this.props.stores}\r\n                                locations           =   {this.props.locations}\r\n                                pharmacy            =   {this.props.pharmacy}\r\n                                timings             =   {this.props.timings}\r\n                                settingsData        =   {this.props.settingsData}\r\n                                editTask            =   {this.props.editTask}\r\n                                mrchnt_address      =   {this.state.mrchnt_address}\r\n                                recpnt_address      =   {this.state.recpnt_address}\r\n                                handleClose         =   {this.handleClose}\r\n                            /> : null\r\n                        }\r\n                        {\r\n                            /* (!!this.state.trackShow) ? */\r\n                            <TrackDetails\r\n                                show                =   {this.state.trackShow}\r\n                                currentUrl          =   {this.state.currentUrl}\r\n                                trackDriver         =   {this.state.trackDriver}\r\n                                handleClose         =   {this.handleClose}\r\n                            /> /* : null */\r\n                        }\r\n                        {\r\n                            (!!this.state.detailsShow) ?\r\n                            <TaskDetails\r\n                                show                =   {this.state.detailsShow}\r\n                                taskDetails         =   {this.props.taskDetails}\r\n                                handleClose         =   {this.handleClose}\r\n                            /> : null\r\n                        }                    \r\n                        {\r\n                            (!!this.state.mapShow) ?\r\n                            <MapDetails\r\n                                show                =   {this.state.mapShow}\r\n                                taskDetails         =   {this.props.taskDetails}\r\n                                handleClose         =   {this.handleClose}\r\n                            /> : null\r\n                        }\r\n                    </div> : <div className=\"loader\">Loading....</div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DashboardList;","import React, { Component } from 'react';\r\nimport {sortBy as _sortBy} from 'lodash';\r\nexport default class StoreDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            storeTxt: '',\r\n            selStoreTxt: '',\r\n            stOpen: false\r\n        }\r\n    }   \r\n  \r\n    onChangeHandle = (e) => {\r\n       const name = e.target.name;\r\n       const value = e.target.value;\r\n       this.setState({\r\n           [name]   :   value,\r\n           stOpen   :   true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    };\r\n     \r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if(this.nodeStore.contains(e.target)\r\n        || e.target.getAttribute('data') === 'ignore-outer-click'){ return; }\r\n\t\tif(!!this.state.stOpen) {\r\n            this.setState({\r\n                stOpen      :   false,\r\n                storeTxt    :   this.state.selStoreTxt\r\n            });\r\n        }\r\n    }\r\n   \r\n    handleSelectbox = () => {\r\n        this.setState({\r\n            stOpen      :  !this.state.stOpen,\r\n            storeTxt    :   (!!this.state.stOpen) ? this.state.selStoreTxt : ''\r\n        })\r\n        //this.onChangeHandle     =   this.onChangeHandle.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let selId           =   props.selected || '';     \r\n        if(!!selId) {\r\n            let selectedIndex   =   (props.stores || []).findIndex(item => item.id === selId)\r\n            let selectedStore   =   props.stores[selectedIndex].label;\r\n            this.setState({\r\n                storeTxt        :   selectedStore,\r\n                selStoreTxt     :   selectedStore\r\n            })\r\n        } else {\r\n            this.setState({                \r\n                selStoreTxt     :   ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let unsortedStore           =   this.props.stores || [];\r\n        let stores                  =   _sortBy(unsortedStore, 'label');\r\n        return (\r\n            <div ref={nodeStore => this.nodeStore = nodeStore} className={`select-box${this.state.stOpen ? \" sopen\" : \" \"}`} onClick={this.handleSelectbox}>\r\n                <div className=\"s-result\"><input type=\"text\" className={this.props.className} autoComplete=\"text\" placeholder=\"Store\" name=\"storeTxt\" value={this.state.storeTxt} onChange={this.onChangeHandle}/></div>\r\n                <ul>\r\n                {\r\n                    stores.map((store, i) => {\r\n                        return (\r\n                            (store.label.toLowerCase().includes(this.state.storeTxt.toLowerCase())) ?\r\n                            <li key={i} data='ignore-outer-click' onClick={(e) => this.props.handleStoreChange({...store}, i)}>{store.label}</li> : null\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {sortBy as _sortBy} from 'lodash';\r\nexport default class LocationDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            locationTxt: '',\r\n            selLocaTxt: '',\r\n            lOpen: false\r\n        }\r\n    }   \r\n  \r\n    onChangeHandle = (e) => {\r\n       const name = e.target.name;\r\n       const value = e.target.value;\r\n       this.setState({\r\n           [name]   :   value,\r\n           lOpen   :   true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    };\r\n     \r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if(this.nodeAddress.contains(e.target)\r\n        || e.target.getAttribute('data') === 'ignore-outer-click'){ return; }\r\n\t\tif(!!this.state.lOpen) {\r\n            this.setState({\r\n                lOpen       :   false,\r\n                locationTxt :   this.state.selLocaTxt\r\n            });\r\n        }\r\n    }\r\n   \r\n    handleSelectbox = () => {\r\n        this.setState({\r\n            lOpen      :  !this.state.lOpen,\r\n            locationTxt :   (!!this.state.lOpen) ? this.state.selLocaTxt : ''\r\n        })\r\n        //this.onChangeHandle     =   this.onChangeHandle.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        let selId           =   props.selected || '';     \r\n        if(!!selId && selId > 0) {\r\n            let selectedIndex       =   (props.locations || []).findIndex(item => item.id === selId)\r\n            let selectedLocation    =   props.locations[selectedIndex].label;\r\n            this.setState({\r\n                locationTxt :   selectedLocation,\r\n                selLocaTxt  :   selectedLocation\r\n            })\r\n        } else {\r\n            this.setState({\r\n                selLocaTxt : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let unsortedLocations       =   this.props.locations || [];\r\n        let locations               =   _sortBy(unsortedLocations, 'label');\r\n        return (\r\n            <div ref={nodeAddress => this.nodeAddress = nodeAddress} className={`select-box${this.state.lOpen ? \" sopen\" : \" \"}`} onClick={this.handleSelectbox}>\r\n                <div className=\"s-result\"><input type=\"text\" className={this.props.className} autoComplete=\"text\" placeholder=\"Address\" name=\"locationTxt\" value={this.state.locationTxt} onChange={this.onChangeHandle}/></div>\r\n                <ul>\r\n                {\r\n                    locations.map((location, i) => {\r\n                        return (\r\n                            (location.label.toLowerCase().includes(this.state.locationTxt.toLowerCase())) ?\r\n                            <li key={i} data='ignore-outer-click' onClick={(e) => this.props.handleLocationChange({...location}, i)}>{location.label}</li> : null\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { addressFormater } from '../../util/helper';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport {findIndex as _findIndex, isEmpty, isEqual} from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport StoreDropdown from '../Filter/storeDropdown';\r\nimport LocationDropdown from '../Filter/locationDropdown';\r\n\r\nclass CreateTask extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.defaultErrors      =   {\r\n            merchant_name: \"\",\r\n            last_name:  \"\",\r\n            merchant_phone:\"\",\r\n            orderNumber:\"\",\r\n            store:\"\",\r\n            merchant_address:\"\",\r\n            recipient_name:\"\",\r\n            delivery_date:\"\",\r\n            recipient_phone:\"\",\r\n            delivery_time:\"\"\r\n        }\r\n        this.state              =   {\r\n           show         :   false,\r\n           alcohol      :   false,\r\n           signature    :   true,\r\n           locations    :   [],\r\n           formData     :   {},\r\n           settingsData :   {},\r\n           startDate    :   new Date(),\r\n           recipient_address    :   '',\r\n           recipient_location   :   {\r\n                zipcode: '',\r\n                state_code: '',\r\n                latitude: '',\r\n                longitude: '',\r\n                address: ''\r\n            },\r\n            /* errors:{\r\n                merchant_name: \"\",\r\n                last_name:  \"\",\r\n                merchant_phone:\"\",\r\n                orderNumber:\"\",\r\n                store:\"\",\r\n                merchant_address:\"\",\r\n                recipient_name:\"\",\r\n                delivery_date:\"\",\r\n                recipient_phone:\"\",\r\n                delivery_time:\"\"\r\n            } */\r\n        }\r\n        this.handleClose        =   this.handleClose.bind(this);\r\n        this.handleCbox         =   this.handleCbox.bind(this);\r\n        this.handleCreateTask   =   this.handleCreateTask.bind(this);\r\n        this.validateForm       =   this.validateForm.bind(this);\r\n        this.onChangeHandle     =   this.onChangeHandle.bind(this);\r\n        this.handleChange       =   this.handleChange.bind(this);\r\n        this.onDateSelect       =   this.onDateSelect.bind(this);\r\n    }    \r\n \r\n    handleChange = recipient_address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({\r\n            recipient_address: recipient_address,\r\n            formData: {\r\n                ...this.state.formData,\r\n                recipient_location: {}\r\n            },\r\n            /* errors: {\r\n                ...this.state.errors,\r\n                recipient_address:\"\"\r\n            } */\r\n        });\r\n    };   \r\n        \r\n    selectStore = (store, k) => {\r\n        /* let errors                      =   {...this.state.errors};\r\n        errors['merchant_address']      =   \"\";\r\n        errors['merchant_phone']        =   \"\"; */\r\n        let index                       =   (this.props.locations || []).findIndex((item) => item.id === store.id);\r\n        if(!!store.id) {\r\n            //let store       =   this.props.stores[this.state.formData.store];\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    store               :   store.id,\r\n                    merchant_address    :   store.id,\r\n                    merchant_phone      :   store.data.phone,\r\n                    merchant_notes      :   store.data.note\r\n                },\r\n                //errors: errors\r\n            })\r\n        } else {\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    store               :   '',\r\n                    merchant_address    :   '',\r\n                    merchant_phone      :   '',\r\n                    merchant_notes      :   ''\r\n                },\r\n                //errors: errors\r\n            })\r\n        }\r\n       \r\n    };\r\n\r\n    selectMerchantAddress = (location, k) =>{\r\n        /* let errors                  =   {...this.state.errors};\r\n        errors['store']             =   \"\";\r\n        errors['merchant_phone']    =   \"\"; */\r\n        let index                       =   (this.props.locations || []).findIndex((item) => item.id === location.id);\r\n        if(!!location.id) {\r\n            //let location            =   this.props.locations[this.state.formData.merchant_address];\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    store               :   location.id,\r\n                    merchant_address    :   location.id,\r\n                    merchant_phone      :   location.data.phone,\r\n                    merchant_notes      :   location.data.note\r\n                },\r\n                //errors: errors\r\n            })\r\n        } else {\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    store               :   '',\r\n                    merchant_address    :   '',\r\n                    merchant_phone      :   '',\r\n                    merchant_notes      :   ''\r\n                },\r\n                //errors: errors\r\n            })\r\n        }\r\n    };\r\n\r\n    handleSelect = recipient_address => {\r\n        let self    =   this;\r\n        let data = {\r\n            zipcode: '',\r\n            state_code: '',\r\n            latitude: '',\r\n            longitude: '',\r\n            address: ''\r\n        };\r\n        geocodeByAddress(recipient_address)\r\n        .then((results) => {\r\n            //console.log(recipient_address, results[0], results[0].formatted_address);\r\n            data.address = results[0].formatted_address || '';\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n            if(matchExp.test(data.address)){\r\n                let delAddData = this.props.deliveryAddress;\r\n                //delvAddIndex = _findIndex(delAddData, {address: data.address});\r\n                /* if(delvAddIndex != -1){\r\n                self.editDelvAdd(delvAddIndex);\r\n                } else { */\r\n                    let addressArray = addressFormater(data.address);\r\n                    //console.log('Address : ', data.address, addressArray);\r\n                    if(!isEmpty(addressArray) && addressArray.validAdrs){\r\n                        data.latitude = lat;\r\n                        data.longitude = lng;\r\n                        data.address = addressArray.address;\r\n                        data.zipcode = addressArray.zipcode;\r\n                        data.state_code = addressArray.state_code;\r\n                        data.city = addressArray.city;\r\n                        data.country = addressArray.country;\r\n                        data.number = addressArray.number;\r\n                        data.street = addressArray.street;\r\n\r\n                        //console.log('AddressBox ###########', data);\r\n                        //this.setState({ address: addressArray.address }); \r\n                        self.setState({\r\n                            /* errors: {\r\n                                ...self.state.errors,\r\n                                recipient_address:\"\"\r\n                            }, */\r\n                            formData: {\r\n                                ...self.state.formData,\r\n                                recipient_location: data\r\n                            },\r\n                            recipient_address: data.address }); \r\n                    } else {\r\n                        //notiyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                        self.setState({\r\n                            formData: {\r\n                                ...self.state.formData,\r\n                                recipient_location: {}\r\n                            }/* ,\r\n                            errors: {\r\n                                ...self.state.errors,\r\n                                recipient_address:\"Invalid Address\"\r\n                            } */\r\n                        });\r\n                    }//\r\n                //}             \r\n            } else {\r\n                //notiyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                self.setState({\r\n                    formData: {\r\n                        ...self.state.formData,\r\n                        recipient_location: {}\r\n                    }/* ,\r\n                    errors: {\r\n                        ...self.state.errors,\r\n                        recipient_address:\"Invalid Address\"\r\n                    } */\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            self.setState({\r\n                formData: {\r\n                    ...self.state.formData,\r\n                    recipient_location: {}\r\n                }/* ,\r\n                errors: {\r\n                    ...self.state.errors,\r\n                    recipient_address:\"Invalid Address\"\r\n                } */\r\n            });\r\n            console.error('Error', error)\r\n        });\r\n    };\r\n\r\n    onDateSelect = date => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                delivery_date: date\r\n            }/* ,\r\n            errors: {\r\n                ...this.state.errors,\r\n                delivery_date: ''\r\n            } */\r\n        });\r\n    };\r\n\r\n    handleCbox(e) {\r\n        let target  =    e.target;\r\n        this.setState({\r\n            [e.target.name]: !this.state[e.target.name],\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let fullname        =   this.props.userData.org_name;\r\n        this.setState({formData: {merchant_name: fullname}});\r\n        this.props.getLocations();\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log('Create Task Props : ', props.isTaskProcessing, this.props.isTaskProcessing, !!!props.isTaskProcessing && props.isTaskProcessing !== this.props.isTaskProcessing);\r\n        if(!!!props.isTaskProcessing && props.isTaskProcessing !== this.props.isTaskProcessing) {\r\n            this.handleClose();\r\n        } else {\r\n            let fullname        =   this.props.userData.org_name;\r\n            this.setState({\r\n                show: props.show,\r\n                formData     :   {\r\n                    ...this.state.formData,\r\n                    merchant_name   :   fullname\r\n                }\r\n            }, () => {\r\n                this.validateForm()\r\n            })\r\n        }\r\n        if(!isEmpty(props.settingsData) && !isEqual(this.state.settingsData, props.settingsData)) {\r\n           this.timings    =   this.timing(props.settingsData.start_time, props.settingsData.end_time);           \r\n            let delivery_time   =   (!!this.timings.key && !!!this.state.formData.delivery_time) ? this.timings.key : '';\r\n            this.setState({\r\n                settingsData:   props.settingsData,\r\n                formData: { ...this.state.formData, delivery_time: delivery_time}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        let fullname        =   this.props.userData.org_name;\r\n        let delivery_time   =   this.timings.key;\r\n        this.setState({\r\n            //show: false,\r\n            recipient_location : {},\r\n            formData     :   {\r\n                merchant_name   :   fullname,\r\n                delivery_time   :   delivery_time\r\n            },\r\n            recipient_address   :   '',\r\n            startDate    :   new Date(),\r\n            recipient_location   :   {\r\n                zipcode: '',\r\n                state_code: '',\r\n                latitude: '',\r\n                longitude: '',\r\n                address: ''\r\n            }/* ,\r\n            errors:{\r\n                merchant_name: \"\",\r\n                last_name:  \"\",\r\n                merchant_phone:\"\",\r\n                orderNumber:\"\",\r\n                store:\"\",\r\n                merchant_address:\"\",\r\n                recipient_name:\"\",\r\n                delivery_date:\"\",\r\n                recipient_phone:\"\",\r\n                delivery_time:\"\"\r\n            } */\r\n        }, function(){\r\n            this.props.handleClose();\r\n        });\r\n    }\r\n\r\n    timing(start, end) {\r\n       //console.log('Start End : ', start, end);\r\n       let today = moment().format('MM/DD/YYYY');\r\n       let now = moment().unix();\r\n       let gap = 30 * 60;\r\n       let key = \"\";\r\n       let stimestamp = moment(today+' '+start, 'MM/DD/YYYY H:mm').unix();\r\n       let etimestamp = moment(today+' '+end, 'MM/DD/YYYY H:mm').unix();\r\n       let data = [];\r\n       for(let i=stimestamp; i<etimestamp; i=i+gap) {\r\n          data.push({\r\n             t: moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A')\r\n          });\r\n          if(now >= i && now <= i+gap ) {\r\n             key = moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A');\r\n          }\r\n       }\r\n       return {data:data, key: key};\r\n    }\r\n\r\n    utc(date, time, tz) {\r\n        let datetime = moment(date).format('MM/DD/YYYY')+' '+time;\r\n        //console.log('Date Time : ', datetime);\r\n        return moment.tz(datetime, 'MM/DD/YYYY hh:mm A', tz).utc().unix();\r\n    }\r\n\r\n    handleCreateTask(e) { \r\n        //console.log('Task Type : ', this.props.type);\r\n        e.preventDefault();\r\n        let validate        =   this.validateForm();\r\n        let isError         =   validate.isError;\r\n        //console.log('Is Error : ', isError)\r\n        if(isError) {\r\n            return false;\r\n\r\n        } else{\r\n\r\n        let formData        =   {...this.state.formData};\r\n        let storeId         =   formData.store;\r\n        let storeIndex      =   (this.props.stores || []).findIndex(item => item.id === storeId);\r\n        let store           =   this.props.stores[storeIndex];\r\n        let timeZone        =   store.data.timeZone;\r\n        let time            =   formData.delivery_time.split('-');\r\n        let from_time       =   time[0];\r\n        let to_time         =   time[1];\r\n        let completeAfter   =   this.utc(formData.delivery_date,  from_time, timeZone);\r\n\t    let completeBefore  =   this.utc(formData.delivery_date, to_time, timeZone);\r\n        //console.log('Stores : ', store, completeAfter, completeBefore);\r\n        let data    =   {\r\n            storeId     :   store.data.store_id,\r\n            merchant: {\r\n                name: formData.merchant_name,\r\n                phone: formData.merchant_phone,\r\n                location: [\r\n                    store.data.longitude,\r\n                    store.data.latitude\r\n                ],\r\n                address: {\r\n                    state: store.data.state,\r\n                    postalCode: store.data.postalCode,\r\n                    country: store.data.country,\r\n                    city: store.data.city,\r\n                    street: store.data.street,\r\n                    number: store.data.number\r\n                },\r\n                notes: formData.merchant_notes\r\n            },\r\n            recipient: {\r\n                email: formData.recipient_email,\r\n                name: formData.recipient_name,\r\n                phone: formData.recipient_phone,\r\n                location: [\r\n                    formData.recipient_location.longitude,\r\n                    formData.recipient_location.latitude\r\n                ],\r\n                address: {\r\n                    state: formData.recipient_location.state_code,\r\n                    postalCode: formData.recipient_location.zipcode,\r\n                    country: formData.recipient_location.country,\r\n                    city: formData.recipient_location.city,\r\n                    street: formData.recipient_location.street,\r\n                    number: formData.recipient_location.number\r\n                },\r\n                notes: formData.recipient_notes\r\n            },\r\n            orderNumber: formData.orderNumber,\r\n            store: store.data.store,\r\n            completeAfter: completeAfter,\r\n            completeBefore: completeBefore,\r\n            timezone: timeZone,\r\n            alcohol: this.state.alcohol,\r\n            //taskType: (!!this.props.pharmacy) ? 'pharmacy' : 'general',//this.props.taskType,\r\n            taskType: this.props.type,\r\n            metadata: null,\r\n            signature: true,\r\n            tip: (!!formData.tip) ? formData.tip : 0,\r\n            sms: {\r\n                merchantStart: store.data.sms.merchant_start,\r\n                merchantEta: store.data.sms.merchant_eta,\r\n                recipientStart: store.data.sms.recipient_start,\r\n                recipientEta: store.data.sms.recipient_eta\r\n            }\r\n        }\r\n        //console.log('Form Submitted : ', data);\r\n        this.props.createTask(data);\r\n        //this.handleClose();\r\n    }\r\n    }\r\n    \r\n    validateForm(){\r\n        let formData                =   this.state.formData || {};\r\n        //let errors                  =   this.state.errors || {};\r\n        let errors                  =   {...this.defaultErrors};\r\n        let isError                 =   false;\r\n        if(!!!formData.merchant_name){\r\n            errors.merchant_name    =   true;\r\n            isError                 =   true;\r\n        }        \r\n        if(!!!formData.merchant_phone){\r\n            errors.merchant_phone   =   true;\r\n            isError                 =   true;\r\n        }\r\n        else {\r\n            if(formData.merchant_phone.length!=10 && !isNaN(formData.merchant_phone)) {\r\n                errors.merchant_phone   =   true;\r\n                isError                 =   true;\r\n            }\r\n        }       \r\n        if(!!!formData.orderNumber){\r\n            errors.orderNumber      =   true;\r\n            isError                 =   true;\r\n        }        \r\n        if(!!!formData.store){\r\n            errors.store            =   true;\r\n            isError                 =   true;\r\n        }     \r\n        if(!!!formData.merchant_address){\r\n            //console.log(\"here\",!!!formData.merchant_address, formData.merchant_address); \r\n            errors.merchant_address     =   true;\r\n            isError                     =   true;\r\n        }\r\n        if(!!!formData.recipient_name) {\r\n            errors.recipient_name   =   true;\r\n            isError                 =   true;\r\n        }\r\n        if(!!!formData.delivery_date) {\r\n            errors.delivery_date    =   true;\r\n            isError                 =   true;\r\n        }\r\n        if(!!!formData.delivery_time) {\r\n            errors.delivery_time    =   true;\r\n            isError                 =   true;\r\n        }\r\n        if(!!!formData.recipient_phone) {\r\n           \r\n            errors.recipient_phone  =   true;\r\n            isError                 =   true;\r\n        } else {\r\n            if(formData.recipient_phone.length!=10 || isNaN(formData.recipient_phone)) {\r\n                errors.recipient_phone  =   true;\r\n                isError                 =   true;\r\n            }\r\n        }\r\n        if(isEmpty(formData.recipient_location) || !!errors.recipient_address) {\r\n            errors.recipient_address    =   true;\r\n            isError                     =   true;\r\n        }\r\n        if(!!formData.tip && isNaN(formData.tip)) {\r\n            errors.tip              =   true;\r\n            isError                 =   true;\r\n        }\r\n        return {isError: isError, errors: errors};\r\n    }\r\n\r\n    onChangeHandle(e) {\r\n        let self                    =   this;\r\n        let formData                =   { ...this.state.formData};\r\n        //console.log('Form Data : ', formData, e.target.name, e.target.value, e.target.checked);\r\n        const name                  =   e.target.name;\r\n        const value\t\t            =   e.target.value\r\n        formData[name]              =   value;\r\n        let errors                  =   {...this.state.errors};\r\n        errors[name]                =   \"\";\r\n        //console.log(\"from dta\",formData);\r\n        this.setState({ formData: formData, errors: errors }, function(){\r\n            if(name === \"store\")\r\n                self.selectStore();\r\n                //console.log(name);\r\n            if(name === \"merchant_address\")\r\n                self.selectMerchantAddress();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let show                =   this.state.show || false;\r\n        let locationData        =   this.props.locations || {};\r\n        let pharmacy            =   this.props.pharmacy || false;\r\n        let stores              =   this.props.stores || [];\r\n        let locations           =   this.props.locations || [];\r\n        let taskType            =   this.props.taskType || '';\r\n        let formData            =   this.state.formData || {};\r\n        //let timings             =   this.timings.data || [];\r\n        let timings             =   (!!this.timings && !!this.timings.data) ? this.timings.data : [];\r\n        let currentTime         =   (!!this.props.timings) ? this.props.timings.key : [];\r\n        let validate            =   this.validateForm();\r\n        //let errors              =  this.state.errors ;\r\n        let errors              =   validate.errors;\r\n        let isDisabled          =   validate.isError;\r\n        /* if(!!errors.merchant_name\r\n            || !!errors.orderNumber\r\n            || !!errors.store\r\n            || !!errors.merchant_address\r\n            || !!errors.merchant_phone\r\n            || !!errors.delivery_date\r\n            || !!errors.delivery_time\r\n            || !!errors.recipient_name\r\n            || !!errors.recipient_address\r\n            || !!errors.recipient_phone\r\n            || !!errors.tip) {\r\n            isDisabled          =   true;\r\n        } */\r\n        //console.log('Pharmacy : ', this.props.pharmacy);\r\n        //console.log('Form data : ', this.state.formData);\r\n        //console.log('Errors ', errors);\r\n        const rsSrchStyles = {\r\n            input: {\r\n                width: '260px',\r\n                padding: '0px 15px 0px 35px',\r\n                color: '#333',\r\n                margin:'0'\r\n            },\r\n            autocompleteContainer: {\r\n                borderRadius: '0 0 3px 3px',\r\n                zIndex: '999',\r\n                background: 'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\r\n                position: 'relative',\r\n                border: '1px solid #e8e8e8',\r\n                boxShadow:'1px 5px 10px rgba(68,68,68,0.2)',\r\n            },\r\n            autocompleteItem: {\r\n                textAlign: 'left',\r\n                fontSize: '12px',\r\n                padding: '5px 8px 5px 30px',\r\n                lineHeight:'20px',\r\n                color: '#999',\r\n                background: '10px 8px #fff',\r\n                margin: '0',\r\n                borderTop:'none',\r\n                borderBottom: '1px solid #ccc',\r\n                background: 'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\r\n            },\r\n            autocompleteItemActive: { color: '#E44500' }\r\n        };\r\n\r\n        const inputProps = {\r\n            type: \"text\",\r\n            id: \"del_add_name_hdr\",\r\n            value: this.state.address ? this.state.address: '',\r\n            //onChange: this.addHandleChange,\r\n            placeholder: 'Where are you?',\r\n            autoFocus: true\r\n        };\r\n        //console.log('Errors : ', errors);\r\n        //console.log('Stores : ', this.props.stores);\r\n        //console.log('Locations : ', this.props.locations);\r\n        return (\r\n            <Modal size=\"lg\" className=\"c-modal boxmod\" show={show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Task</Modal.Title>\r\n                </Modal.Header>\r\n                <Form autoComplete=\"off\" onSubmit={this.handleCreateTask}>\r\n                    <Modal.Body>\r\n                        <Row noGutters>\r\n                            <Col md=\"6\" sm=\"12\" className=\"l_col\"> \r\n                                <div className=\"merchant_box\">\r\n                                <h4>Merchant</h4>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    {/* <input type=\"text\" placeholder=\"Enter Name\" className={!!errors.merchant_name  ? \"t_box error\" : \"t_box\" } name=\"merchant_name\" onChange={this.onChangeHandle} value={formData.merchant_name}/> */}\r\n                                    {formData.merchant_name}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"store\">Store</label>\r\n                                    {/* <select className={!!errors.store ? \"s_box error\" : \"s_box\"} name=\"store\" onChange={this.onChangeHandle} value={formData.store}>\r\n                                        <option value=\"\">-- Select --</option>\r\n                                        {\r\n                                            stores.map((v, k)    =>  {\r\n                                                return (\r\n                                                    <option key={k} value={k}>{v.label}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select> */}\r\n                                    \r\n                                    <StoreDropdown\r\n                                        stores              =   {this.props.stores}\r\n                                        selected            =   {formData.store}\r\n                                        className           =   {!!errors.store ? \"error\" : \"\"}\r\n                                        handleStoreChange   =   {this.selectStore}\r\n                                        /* handleRemoveFilter={this.handleRemoveFilter} */\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"address\">Address</label>\r\n                                    {/* <select className={!!errors.merchant_address ? \"s_box error\" : \"s_box\"} name=\"merchant_address\" onChange={this.onChangeHandle} value={formData.merchant_address}>\r\n                                        <option value=\"\">-- Select --</option>\r\n                                        {\r\n                                            locations.map((v, k)    =>  {\r\n                                                return (\r\n                                                <option key={k} value={k}>{v.label}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select> */}                              \r\n                                    \r\n                                    <LocationDropdown\r\n                                        locations               =   {this.props.locations}\r\n                                        selected                =   {formData.merchant_address}\r\n                                        className               =   {!!errors.merchant_address ? \"error\" : \"\"}\r\n                                        handleLocationChange    =   {this.selectMerchantAddress}\r\n                                        /* handleRemoveFilter={this.handleRemoveFilter} */\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"order-number\">Order Number</label>\r\n                                    <input type=\"text\" placeholder=\"Enter order number\"  className={!!errors.orderNumber  ? \"t_box error\" : \"t_box\" } name=\"orderNumber\" onChange={this.onChangeHandle} value={formData.orderNumber}/>\r\n                                </div>                                \r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" placeholder=\"Enter phone number\" className={!!errors.merchant_phone ? \"t_box error\" : \"t_box\" } name=\"merchant_phone\" onChange={this.onChangeHandle} value={formData.merchant_phone}/>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"merchant_box\">\r\n                                <h4>Delivery</h4>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"delivery\">Delivery Date</label>\r\n                                    {/* <input type=\"text\" placeholder=\"Today\" className=\"t_box\" id=\"delivery\" /> */}\r\n                                    <DatePicker className={!!errors.delivery_date ? \"t_box error\" : \"t_box\" }  selected={formData.delivery_date} onChange={this.onDateSelect} minDate={new Date()} placeholderText=\"Today\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"time\">Time</label>\r\n                                    {/* <input type=\"text\" placeholder=\"02:00pm – 2:30pm\" className=\"t_box\" id=\"time\" /> */}\r\n                                    <select className={!!errors.delivery_time ? \"t_box error\" : \"t_box\" }  selected={formData.delivery_date} name=\"delivery_time\" onChange={this.onChangeHandle} value={formData.delivery_time}>\r\n                                        <option>-- Select --</option>\r\n                                        {\r\n                                            (timings || []).map((v, k)    =>  {\r\n                                                return (\r\n                                                <option key={k} value={v.t}>{v.t}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"d-notes\">Driver Notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"merchant_notes\" onChange={this.onChangeHandle} value={formData.merchant_notes}/>\r\n                                </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md=\"6\" sm=\"12\" className=\"r_col\">\r\n                                <div className=\"merchant_box\">\r\n                                <h4>Recipient</h4>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"rname\">Name</label>\r\n                                    <input type=\"text\" autoComplete=\"off\" placeholder=\"Enter Name\" className={!!errors.recipient_name  ? \"t_box error\" : \"t_box\" } name=\"recipient_name\" onChange={this.onChangeHandle} value={formData.recipient_name}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"raddress\">Address</label>\r\n                                    {/* <input type=\"text\" placeholder=\"Enter address\" className=\"t_box\" id=\"rddress\" /> */}\r\n                                    <PlacesAutocomplete\r\n                                        value={this.state.recipient_address}\r\n                                        onChange={this.handleChange}\r\n                                        onSelect={this.handleSelect}\r\n                                        styles={rsSrchStyles}\r\n                                    >\r\n                                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                        <div className=\"pRelative error\">\r\n                                            <input\r\n                                            autoComplete=\"off\"\r\n                                            {...getInputProps({\r\n                                                placeholder: 'Enter Address',\r\n                                                className: !!errors.recipient_address  ? \"t_box error\" : \"t_box\",\r\n                                            })}\r\n                                            />\r\n                                            <div className=\"autocomplete-dropdown-container\">\r\n                                            {loading && <div>Loading...</div>}\r\n                                            {suggestions.map(suggestion => {\r\n                                                const className = suggestion.active\r\n                                                ? 'suggestion-item--active'\r\n                                                : 'suggestion-item';\r\n                                                // inline style for demonstration purpose\r\n                                                const style = suggestion.active\r\n                                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                return (\r\n                                                <div\r\n                                                    {...getSuggestionItemProps(suggestion, {\r\n                                                    className,\r\n                                                    style,\r\n                                                    })}\r\n                                                >\r\n                                                    <span>{suggestion.description}</span>\r\n                                                </div>\r\n                                                );\r\n                                            })}\r\n                                            </div>\r\n                                        </div>\r\n                                        )}\r\n                                    </PlacesAutocomplete>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"rphone\">Phone</label>\r\n                                    <input type=\"text\" placeholder=\"Enter phone number\" className={!!errors.recipient_phone ? \"t_box error\" : \"t_box\" } name=\"recipient_phone\" onChange={this.onChangeHandle} value={formData.recipient_phone}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"remail\">Email</label>\r\n                                    <input type=\"email\" placeholder=\"Enter email\" className=\"t_box\" name=\"recipient_email\" onChange={this.onChangeHandle} value={formData.recipient_email}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"notes\">Add notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"recipient_notes\" onChange={this.onChangeHandle} value={formData.recipient_notes}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <span className=\"c_boxgroup\">\r\n                                        <label htmlFor=\"alcohol\">Alcohol</label>\r\n                                        <input type=\"checkbox\" id=\"alcohol\" name=\"alcohol\" className=\"c_box\" checked={this.state.alcohol} onChange={(e)=>this.handleCbox(e)}/>\r\n                                    </span>\r\n                                    {/* <span className=\"c_boxgroup\">\r\n                                        <label htmlFor=\"signature\">Signature</label>\r\n                                        <input type=\"checkbox\" id=\"signature\" name=\"signature\" className=\"c_box\" checked={this.state.signature} onChange={(e)=>this.handleCbox(e)}/>\r\n                                    </span> */}\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"merchant_box\">\r\n                                <h4>Optional</h4>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"tip\">Tip</label>\r\n                                    <input type=\"text\" placeholder=\"0.00\" className={!!errors.tip ? \"t_box error\" : \"t_box\" } name=\"tip\" onChange={this.onChangeHandle} value={formData.tip}/>\r\n                                </div>\r\n                                {/* <div className=\"form-group\">\r\n                                    <label htmlFor=\"store-id\">Store ID</label>\r\n                                    <input type=\"email\" placeholder=\"Enter Store ID\" className=\"t_box\" id=\"store-id\" />\r\n                                </div> */}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" disabled={isDisabled || !!this.props.isTaskProcessing} className={(!this.props.isTaskProcessing && !isDisabled) ? 'active' : ''} variant=\"primary\">\r\n                            {(!!this.props.isTaskProcessing)? 'Processing..' : 'Submit'}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default CreateTask;","import React, {Component} from 'react';\r\nimport { getStatusClass } from '../../util/helper';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport { isEmpty } from 'lodash';\r\nimport { addressFormater } from '../../util/helper';\r\nimport { error as notifyerror } from '../../util/notify';\r\nimport { Form } from 'reactstrap';\r\nimport CustomContext from '../Modals/contextMenu';\r\n\r\nexport default class CustomFilter extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   { \r\n            x               :   '',\r\n            y               :   '',\r\n            typeOpen                :   false,\r\n            search                  :   {\r\n                text                :   '',\r\n                merchant_address    :   '',\r\n                recipient_address   :   '',\r\n                start_time          :   '',\r\n                end_time            :   '',\r\n                type                :   'order-number',\r\n                label               :   'Order Number'\r\n            },\r\n            filteredList            :   {}\r\n        }\r\n        this.timings                    =   [];\r\n        this.changeSearchType           =   this.changeSearchType.bind(this);\r\n        this.handleChange               =   this.handleChange.bind(this);\r\n        this.handleSelect               =   this.handleSelect.bind(this);\r\n        this.handleRecipientChange      =   this.handleRecipientChange.bind(this);\r\n        this.handleRecipientSelect      =   this.handleRecipientSelect.bind(this);\r\n        this.onSearchDelTime            =   this.onSearchDelTime.bind(this);\r\n        this.resetSearch                =   this.resetSearch.bind(this);\r\n        this.handleSearch               =   this.handleSearch.bind(this);\r\n        this.handleSelectbox            =   this.handleSelectbox.bind(this);\r\n        this.collapse                   =   this.collapse.bind(this);\r\n        this.handleContextMenu          =   this.handleContextMenu.bind(this);\r\n    }\r\n\r\n    /* shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('Should Update : ', (!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow));\r\n        if(!!this.state.editShow || !!this.state.detailsShow || this.state.mapShow || !!this.trackShow){\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } */\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.timings        =   props.timings || {};\r\n        this.setState({\r\n            filteredList:   props.filteredList\r\n        })\r\n    }\r\n\r\n    handleContextMenu(event, order) {\r\n        //console.log('Context Menu : ', order);\r\n        let self                   =  this;\r\n        event.preventDefault();        \r\n        const clickX            =   event.pageX;\r\n        const clickY            =   event.pageY;\r\n        let element             =   document.getElementById('sideBar');\r\n        let left                =   0;\r\n        if(element.offsetLeft >= 0)\r\n            left                =   element.clientWidth;\r\n        self.setState({\r\n            visible     :  true,\r\n            x           :  clickX - left,\r\n            y           :  clickY - 250,\r\n            selOrder    :  {...order}\r\n        });\r\n    }\r\n\r\n    hideContextMenu = () => {\r\n        this.setState({\r\n            visible     :  false,\r\n            x:0,\r\n            y:0\r\n        });\r\n    }\r\n\r\n    collapse(type) {\r\n        this.setState({\r\n            typeOpen: false\r\n        })\r\n    } \r\n\r\n    handleSelectbox(cls) {\r\n        this.setState({\r\n            [cls]: !this.state[cls]\r\n        })\r\n    }\r\n\r\n    changeSearchType(data) {\r\n       this.setState({\r\n            search: {\r\n                ...this.state.search,\r\n                type        :   data.type,\r\n                label       :   data.label,\r\n                text        :   '',\r\n                typeOpen    :   false\r\n            },\r\n            //typeOpen    :   !this.state.typeOpen\r\n       })\r\n    }  \r\n\r\n    handleSearch(e) {\r\n        let value = e.target.value;\r\n        this.setState({\r\n        search: { ...this.state.search, text: e.target.value }\r\n        }, function () {\r\n        if (value.length > 1)\r\n            this.props.searchFilter({\r\n                type: this.state.search.type,\r\n                value: value,\r\n                user_type: this.props.userType\r\n            });\r\n        else\r\n            this.setState({\r\n                filteredList: {}\r\n            })\r\n        })\r\n    }\r\n\r\n    onSearchDelTime(e, type) {\r\n        let self = this;\r\n        /* let i = e.target.value || '';\r\n        let start   =  this.timings.from[i].value;\r\n        let end   =  this.timings.to[i].value; */\r\n        \r\n        let start   =   '';\r\n        let end     =   '';\r\n        if(type === 'start') {\r\n            start   =   e.target.value || '';\r\n            end     =   this.state.search.end_time || '';\r\n        }\r\n        \r\n        if(type === 'end') {\r\n            end   =   e.target.value || '';\r\n            start     =   this.state.search.start_time || '';\r\n        }\r\n        //console.log('Search By time : ', start, end);\r\n        this.setState({\r\n            search: {\r\n                ...this.state.search,\r\n                start_time: start,\r\n                end_time: end\r\n            }\r\n        }, function () {\r\n            if(!!start && !!end) {\r\n                self.props.searchFilter({\r\n                    type: start,\r\n                    value: end,\r\n                    user_type: this.props.userType\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    resetSearch() {\r\n        this.setState({\r\n            search                  :   {\r\n                text                :  '',\r\n                merchant_address    :  '',\r\n                recipient_address   :  '',\r\n                delivery_time       :  '',\r\n                start_date          :  '',\r\n                end_date            :  '',\r\n                type                :  'order-number',\r\n                label               :  'Order Number'\r\n            },\r\n            filteredList            : {}\r\n        }, () => {\r\n            this.props.resetSearch();\r\n        })\r\n    }\r\n\r\n    handleChange = merchant_address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({ search: { ...this.state.search, merchant_address: merchant_address } });\r\n    };\r\n\r\n    handleSelect = merchant_address => {\r\n        //console.log('Merchant Address', merchant_address);\r\n        let self = this;\r\n        let data = {\r\n        zipcode: '',\r\n        state_code: '',\r\n        latitude: '',\r\n        longitude: '',\r\n        address: ''\r\n        };\r\n        geocodeByAddress(merchant_address)\r\n        .then((results) => {\r\n            //console.log(merchant_address, results[0], results[0].formatted_address);\r\n            data.address = results[0].formatted_address || '';\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n            if (matchExp.test(data.address)) {\r\n                let delAddData = this.props.deliveryAddress;\r\n                let addressArray = addressFormater(data.address);\r\n                //console.log('Address : ', addressArray.formattedAddress);\r\n                if (!isEmpty(addressArray) && addressArray.validAdrs) {\r\n                    let formattedAddress = addressArray.formattedAddress || '';\r\n                    self.setState({\r\n                    search: {\r\n                        ...this.state.search,\r\n                        merchant_address: formattedAddress\r\n                    }\r\n                    }, function () {\r\n                    self.props.searchFilter({\r\n                        type: self.state.search.type,\r\n                        value: formattedAddress,\r\n                        user_type: this.props.userType\r\n                    });\r\n                    });\r\n                } else {\r\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                    self.setState({\r\n                    /* errors: {\r\n                            ...self.state.error,\r\n                            recipient_address:\"Invalid Address\"\r\n                    },\r\n                    recipient_location: {} */\r\n                    recipient_address: ''\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Error', error);\r\n        });\r\n    };\r\n\r\n    handleRecipientChange = recipient_address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({ search: { ...this.state.search, recipient_address: recipient_address } });\r\n    };\r\n\r\n    handleRecipientSelect = recipient_address => {\r\n        //console.log('Merchant Address', merchant_address);\r\n        let self = this;\r\n        let data = {\r\n        zipcode: '',\r\n        state_code: '',\r\n        latitude: '',\r\n        longitude: '',\r\n        address: ''\r\n        };\r\n        geocodeByAddress(recipient_address)\r\n        .then((results) => {\r\n            //console.log(merchant_address, results[0], results[0].formatted_address);\r\n            data.address = results[0].formatted_address || '';\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n            if (matchExp.test(data.address)) {\r\n                let delAddData = this.props.deliveryAddress;\r\n                let addressArray = addressFormater(data.address);\r\n                //console.log('Address : ', addressArray.formattedAddress);\r\n                if (!isEmpty(addressArray) && addressArray.validAdrs) {\r\n                    let formattedAddress = addressArray.formattedAddress || '';\r\n                    self.setState({\r\n                    search: {\r\n                        ...this.state.search,\r\n                        recipient_address: formattedAddress\r\n                    }\r\n                    }, function () {\r\n                    self.props.searchFilter({\r\n                        type: self.state.search.type,\r\n                        value: formattedAddress,\r\n                        user_type: this.props.userType\r\n                    });\r\n                    });\r\n                } else {\r\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                    self.setState({\r\n                    /* errors: {\r\n                            ...self.state.error,\r\n                            recipient_address:\"Invalid Address\"\r\n                    },\r\n                    recipient_location: {} */\r\n                    recipient_address: ''\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Error', error);\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetSearch();\r\n    }\r\n\r\n    render () {\r\n        //console.log(this.state.search);\r\n        let startTimings        =   (!!this.timings && !!this.timings.from) ? this.timings.from : [];\r\n        let endTimings          =   (!!this.timings && !!this.timings.to) ? this.timings.to : [];     \r\n        let filteredData        =   this.state.filteredList || {};\r\n        let filteredList        =   {};\r\n        let filteredCount       =   0;\r\n        if (!isEmpty(filteredData)) {\r\n            filteredList        =   filteredData.tasks || {};\r\n            filteredCount       =   filteredData.count || 0;\r\n        }\r\n        const rsSrchStyles      =   {\r\n            input           :   {\r\n                width       :   '260px',\r\n                padding     :   '0px 15px 0px 35px',\r\n                color       :   '#333',\r\n                margin      :   '0'\r\n            },\r\n            autocompleteContainer   :   {\r\n                borderRadius    :   '0 0 3px 3px',\r\n                zIndex          :   '999',\r\n                background      :   'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\r\n                position        :   'relative',\r\n                border          :   '1px solid #e8e8e8',\r\n                boxShadow       :   '1px 5px 10px rgba(68,68,68,0.2)',\r\n            },\r\n            autocompleteItem    :   {\r\n                textAlign       :   'left',\r\n                fontSize        :   '12px',\r\n                padding         :   '5px 8px 5px 30px',\r\n                lineHeight      :   '20px',\r\n                color           :   '#999',\r\n                background      :   '10px 8px #fff',\r\n                margin          :   '0',\r\n                borderTop       :   'none',\r\n                borderBottom    :   '1px solid #ccc',\r\n                background      :   'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\r\n            },\r\n            autocompleteItemActive  :   { color: '#E44500' }\r\n        };\r\n\r\n        const renderFunc = ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n            <div>\r\n                <input\r\n                {...getInputProps({\r\n                    placeholder: 'Enter Address',\r\n                    className: 't_box',\r\n                })}\r\n                />\r\n                <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map(suggestion => {\r\n                    const className = suggestion.active\r\n                        ? 'suggestion-item--active'\r\n                        : 'suggestion-item';\r\n                    // inline style for demonstration purpose\r\n                    const style = suggestion.active\r\n                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                    return (\r\n                        <div\r\n                            {...getSuggestionItemProps(suggestion, {\r\n                            className,\r\n                            style,\r\n                            })}\r\n                        >\r\n                            <span data=\"autosuggest\">{suggestion.description}</span>\r\n                        </div>\r\n                    );\r\n                })}\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            \r\n            <div className={`searchMod_sec${(!!this.props.showSearch) ? '' : ' hide'}`}>\r\n               <div className=\"s_bar\">\r\n                  <label>Search by:</label>\r\n                  <Form method=\"get\" action=\"\" autoComplete=\"off\">\r\n                     <div\r\n                        className={`select-box ${this.state.typeOpen ? \" sopen\" : \" \"}`}                        \r\n                        onBlur={() => this.collapse('typeOpen')}\r\n                     >\r\n                        <div className=\"s-result\" onClick={() => this.handleSelectbox('typeOpen')}>\r\n                            <input type=\"text\" autoComplete=\"off\" readOnly value={this.state.search.label} name=\"searchType\"/>\r\n                        </div>\r\n                        <ul className=\"selectchild\">\r\n                           <li onClick={() => this.changeSearchType({\r\n                              type: 'order-number',\r\n                              label: 'Order Number'\r\n                           })}>Order Number</li>\r\n                           {\r\n                               (this.props.section !== 'All Tasks') ? \r\n                               <li onClick={() => this.changeSearchType({\r\n                                    type: 'delivery-window',\r\n                                    label: 'Delivery Window'\r\n                                })}>Delivery Window</li> : null\r\n                           }                           \r\n                           <li onClick={() => this.changeSearchType({\r\n                              type: 'merchant-address',\r\n                              label: 'Merchant Address'\r\n                           })}>Merchant Address</li>\r\n                           <li onClick={() => this.changeSearchType({\r\n                              type: 'recipient-address',\r\n                              label: 'Recipient Address'\r\n                           })}>Recipient Address</li>\r\n                           <li onClick={() => this.changeSearchType({\r\n                              type: 'driver',\r\n                              label: 'Driver'\r\n                           })}>Driver</li>\r\n                           {/* <li>Task Status</li> */}\r\n                        </ul>\r\n                     </div>\r\n                     <div className=\"resboxwrap\">\r\n                     <div className=\"search_box\">\r\n                           {\r\n                              (['order-number', 'driver'].includes(this.state.search.type)) ?\r\n                              <input type=\"text\"autoComplete=\"off\" placeholder=\"Search\" name=\"searchTxt\" value={this.state.search.text} onChange={this.handleSearch}/> : null\r\n                           }\r\n                           {                              \r\n                              (this.state.search.type === 'delivery-window') ?\r\n                              <div className=\"d_window\">\r\n                                 <select className=\"sdate\" name=\"start_time\" onChange={(e) => this.onSearchDelTime(e, 'start')} value={this.state.search.start_time}>\r\n                                    <option>-- Select --</option>\r\n                                    {\r\n                                       (startTimings || []).map((v, k)    =>  {\r\n                                          return (\r\n                                             <option key={k} value={v.value}>{v.label}</option>\r\n                                          )\r\n                                       })\r\n                                    }\r\n                                 </select>\r\n                                 <span>to</span> \r\n                                 <select className=\"edate\" name=\"end_time\" onChange={(e) => this.onSearchDelTime(e, 'end')} value={this.state.search.end_time}>\r\n                                    <option>-- Select --</option>\r\n                                    {\r\n                                       (endTimings || []).map((v, k)    =>  {\r\n                                          return (\r\n                                             <option key={k} value={v.value}>{v.label}</option>\r\n                                          )\r\n                                       })\r\n                                    }\r\n                                 </select>\r\n                              </div>: null\r\n                           }\r\n                           {\r\n                              (this.state.search.type === 'merchant-address') ?\r\n                              <PlacesAutocomplete\r\n                                    value={this.state.search.merchant_address}\r\n                                    onChange={this.handleChange}\r\n                                    onSelect={this.handleSelect}\r\n                                    styles={rsSrchStyles}\r\n                              >\r\n                                    {renderFunc}\r\n                              </PlacesAutocomplete> : null\r\n                           }                        \r\n                           {\r\n                              (this.state.search.type === 'recipient-address') ?\r\n                              <PlacesAutocomplete\r\n                                    value={this.state.search.recipient_address}\r\n                                    onChange={this.handleRecipientChange}\r\n                                    onSelect={this.handleRecipientSelect}\r\n                                    styles={rsSrchStyles}\r\n                              >\r\n                                    {renderFunc}\r\n                              </PlacesAutocomplete> : null\r\n                           }\r\n                        </div>\r\n                     <button onClick={this.resetSearch} className=\"reset_btn\" type=\"reset\">Reset</button>\r\n                     </div>\r\n                  </Form>\r\n               </div>\r\n               <div className=\"s_result\">                                           \r\n                    <CustomContext\r\n                        visible             =   {this.state.visible}\r\n                        x                   =   {this.state.x}\r\n                        y                   =   {this.state.y}\r\n                        selOrder            =   {this.state.selOrder}\r\n                        openEditWindow      =   {this.props.openEditWindow}\r\n                        openDetailsWindow   =   {this.props.openDetailsWindow}\r\n                        openMapWindow       =   {this.props.openMapWindow}\r\n                        deleteTask          =   {this.props.deleteTask}\r\n                        updateTask          =   {this.props.updateTask}\r\n                        hideContextMenu     =   {this.hideContextMenu}\r\n                    />\r\n                    {\r\n                        (filteredCount > 0) ? \r\n                        <div>\r\n              {\r\n                                    (!isEmpty(filteredList)) ?\r\n                                    Object.keys(filteredList || {}).map((item, i) => {\r\n                                        let cities = filteredList[item] || [];\r\n                                        return (\r\n                                            <section key={i} className=\"t_content\">\r\n                                                <h3 className=\"title\">{item}</h3>\r\n                                                {\r\n                                                cities.map((city, index) => {\r\n                                                    let orderList = city.orders || [];\r\n                                                    return (\r\n                                                        <div key={index} className=\"table_sec\">\r\n                                                            <table>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th colSpan=\"7\" className=\"t-titel\">{city.name}</th>\r\n                                                                    </tr>\r\n                                                                    <tr className=\"t-heading\">\r\n                                                                        <th>Order Number</th>\r\n                                                                        <th>Delivery Window</th>\r\n                                                                        <th>Merchant Address</th>\r\n                                                                        <th>Recipient Address</th>\r\n                                                                        <th>Driver</th>\r\n                                                                        <th>Task Status</th>\r\n                                                                        <th></th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {\r\n                                                                        orderList.map((order, oIndex) => {\r\n                                                                            //console.log('Onfleet : ', order);\r\n                                                                            let clsName = getStatusClass(order.tsk_status);\r\n                                                                            let merchant_address = `${order.mrchnt_address.number} ${order.mrchnt_address.street}, ${order.mrchnt_address.city}`;\r\n                                                                            let recipient_address = `${order.recpnt_address.number} ${order.recpnt_address.street}, ${order.recpnt_address.city}`;\r\n                                                                            return (\r\n                                                                                <tr\r\n                                                                                key={oIndex}\r\n                                                                                onContextMenu={(e) => this.handleContextMenu(e, {\r\n                                                                                    order_number: order.order_number,\r\n                                                                                    order_id: order.id,\r\n                                                                                    order_uuid: order.uuid,\r\n                                                                                    tsk_status:order.tsk_status,\r\n                                                                                    mrchnt_address: merchant_address,\r\n                                                                                    recpnt_address: recipient_address\r\n                                                                                })}>\r\n                                                                                <td>{order.order_number}</td>\r\n                                                                                <td>{order.complete_after} - {order.complete_before}</td>\r\n                                                                                <td className=\"acell\">\r\n                                                                                    <label>{merchant_address}</label>\r\n                                                                                    <span className=\"tTip\">{merchant_address}</span>\r\n                                                                                </td>\r\n                                                                                <td className=\"acell\">\r\n                                                                                    <label>{recipient_address}</label>\r\n                                                                                    <span className=\"tTip\">{recipient_address}</span>\r\n                                                                                </td>\r\n                                                                                <td>{order.driver_name}</td>\r\n                                                                                <td>\r\n                                                                                    <span className={clsName}>{order.tsk_status}</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                        {\r\n                                                                                            (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                                                                            <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                                                                current_url: order.current_url,\r\n                                                                                                track_driver: order.track_driver\r\n                                                                                            })}>{order.track_driver}</a> : null\r\n                                                                                        }\r\n                                                                                        {/* <a href=\"/dashboard\">{order.track_driver}</a> */}\r\n                                                                                </td>\r\n                                                                                </tr>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </section>\r\n                                        )\r\n                                    })\r\n                                    : null\r\n                                }              <div className=\"resultCount\">{filteredCount} SEARCH RESULT(S)</div>\r\n                            <div className=\"t_result\">\r\n                                \r\n                            </div>\r\n                        </div> : <div className=\"noresult\">Type to search and relevant results will appear</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {sortBy as _sortBy} from 'lodash';\r\nexport default class StateFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            stateTxt: '',\r\n            sOpen: false\r\n        }\r\n        this.dropdownInput = React.createRef();\r\n    } \r\n\r\n    handleStateChange = (e, state) => {\r\n        this.setState({\r\n            stateTxt    :   ''\r\n        }, () => {\r\n            this.dropdownInput.current.focus();\r\n        })\r\n        this.props.handleStateChange(e, state);\r\n    }   \r\n  \r\n    onChangeHandle = (e) => {\r\n        const name      =   e.target.name;\r\n        const value     =   e.target.value;\r\n        this.setState({\r\n            [name]      :   value,\r\n            sOpen       :   true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props);\r\n        document.addEventListener('click', this.handleClick);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    };\r\n     \r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if(this.nodeState.contains(e.target)\r\n        || e.target.getAttribute('data') === 'ignore-outer-click'){ return; }\r\n\t\tif(!!this.state.sOpen) {\r\n            this.setState({\r\n                sOpen       :   false,\r\n                stateTxt    :   ''\r\n            }); \r\n        }\r\n    }\r\n   \r\n    handleSelectbox = () => {   \r\n        //console.log('Select Box : ')\r\n        this.setState({\r\n            sOpen      :  !this.state.sOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let statesLocalStorage     =  JSON.parse(localStorage.getItem('states') || '[]');      \r\n        let unsortedStates         =  statesLocalStorage.map((item) => {\r\n            return {\r\n                label: item.value,\r\n                value: item.id\r\n            }\r\n        })\r\n        let states                  =   _sortBy(unsortedStates, 'value');\r\n        let stateFilter             =   this.props.stateFilter || [];\r\n        return (            \r\n            <div ref={nodeState => this.nodeState = nodeState} className={`select-box${this.state.sOpen ? \" sopen\" : \" \"}`}>\r\n                <div className=\"s-result\" onClick={this.handleSelectbox}>\r\n                <input type=\"text\" ref={this.dropdownInput} autoComplete=\"text\" placeholder=\"State\" name=\"stateTxt\" value={this.state.stateTxt} onChange={this.onChangeHandle}/>\r\n                </div>\r\n                <ul className={(stateFilter.length > 0) ? 'selected' : ''}>\r\n                {/* {\r\n                    (this.props.states.length > 0) ?\r\n                    this.props.states.map((filter, index) => {\r\n                        return (\r\n                        <li key={index + 'filtered'} data='ignore-outer-click' onClick={(e) => this.props.handleRemoveFilter(e, 'State', index)} className=\"selected\">{filter.label}</li>\r\n                        )\r\n                    }) : null\r\n                } */}\r\n                {\r\n                    (states || []).map((state, i) => {      \r\n                        let index       =   stateFilter.indexOf(state.label);                  \r\n                        return (\r\n                            (state.label.toLowerCase().includes(this.state.stateTxt.toLowerCase())) ?\r\n                            (index > -1) ?\r\n                                <li\r\n                                    key={i}\r\n                                    data='ignore-outer-click'\r\n                                    onClick={(e) => this.props.handleRemoveFilter(e, 'State', index)}\r\n                                    className='selected'\r\n                                >\r\n                                    {state.label}\r\n                                </li> : <li\r\n                                    key={i}\r\n                                    data='ignore-outer-click'\r\n                                    onClick={(e) => this.handleStateChange(e, {...state})}\r\n                                >\r\n                                    {state.label}\r\n                                </li>\r\n                            : null\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {sortBy as _sortBy} from 'lodash';\r\nexport default class AreaFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            areaTxt: '',\r\n            aOpen: false\r\n        }\r\n        this.dropdownInput = React.createRef();\r\n    }   \r\n\r\n    handleAreaChange = (e, data) => {\r\n        this.setState({\r\n            areaTxt    :   ''\r\n        }, () => {\r\n            this.dropdownInput.current.focus();\r\n        })\r\n        this.props.handleAreaChange(e, data);\r\n    }\r\n  \r\n    onChangeHandle = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]  :   value,\r\n            aOpen   :   true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    };\r\n     \r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if(this.nodeArea.contains(e.target)\r\n        || e.target.getAttribute('data') === 'ignore-outer-click'){ return; }\r\n\t\tif(!!this.state.aOpen) {\r\n            this.setState({\r\n                aOpen       :   false,\r\n                areaTxt     :   ''\r\n            });\r\n        }\r\n    }\r\n   \r\n    handleSelectbox = () => {   \r\n        if (this.props.states.length === 0)\r\n            return;\r\n        this.setState({\r\n            aOpen      :  !this.state.aOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let areaFilter = this.props.area.map(area => area.value);\r\n        let zones                   =   this.props.zones || {};\r\n        let stateCodeFilter         =   this.props.stateCodeFilter || [];\r\n        let unsortedZoneList        = stateCodeFilter.map(state => {\r\n            return { state: state, zones: zones[state] }\r\n        });\r\n        let zoneList                  =   _sortBy(unsortedZoneList, 'state');\r\n        return (\r\n            <div ref={nodeArea => this.nodeArea = nodeArea} className={`select-box${this.state.aOpen ? \" sopen\" : \" \"}`} onClick={this.handleSelectbox}>\r\n                <div className={`s-result ${(this.props.states.length === 0) ? \"dis\":\" \"}`}>\r\n                    <input type=\"text\" ref={this.dropdownInput} autoComplete=\"off\" disabled={(this.props.states.length === 0) ? true : false} placeholder=\"Area\" name=\"areaTxt\" value={this.state.areaTxt} onChange={this.onChangeHandle}/>\r\n                </div>\r\n                <ul className={(areaFilter.length > 0) ? 'selected' : ''}>\r\n                {/* {\r\n                    (this.props.area.length > 0) ?\r\n                    this.props.area.map((filter, index) => {\r\n                        return (\r\n                            <li key={index + 'filtered'} data='ignore-outer-click' onClick={(e) => this.props.handleRemoveFilter(e, 'Area', index)} className=\"selected\">{filter.label}</li>\r\n                        )\r\n                    }) : null\r\n                } */}\r\n                {\r\n                    (zoneList || []).map((item, i) => {  \r\n                        let zones   =   item.zones || [];\r\n                        zones       =   _sortBy(zones, 'delivery_zone_name');\r\n                        return (\r\n                            zones.map((zone, k) => {\r\n                            let index   =   areaFilter.indexOf(zone.delivery_zone_name);\r\n                            return (                                                   \r\n                                (zone.delivery_zone_name.toLowerCase().includes(this.state.areaTxt.toLowerCase())) ?\r\n                                    (index > -1) ?\r\n                                    <li\r\n                                        key={k}\r\n                                        data='ignore-outer-click'\r\n                                        onClick={(e) => this.props.handleRemoveFilter(e, 'Area', index)}\r\n                                        className='selected'\r\n                                    >\r\n                                        {zone.delivery_zone_name} ({item.state})\r\n                                    </li> : <li\r\n                                        key={k}\r\n                                        data='ignore-outer-click'\r\n                                        onClick={(e) => this.handleAreaChange(e, {...zone, state: item.state})}\r\n                                    >\r\n                                        {zone.delivery_zone_name} ({item.state})\r\n                                    </li>\r\n                                : null\r\n                            )\r\n                            })\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>        \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {sortBy as _sortBy} from 'lodash';\r\nexport default class StoreFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            storeTxt: '',\r\n            stOpen: false\r\n        }\r\n        this.dropdownInput = React.createRef();\r\n    }   \r\n\r\n    handleStoreChange = (e, store) => {\r\n        this.setState({\r\n            storeTxt    :   ''\r\n        }, () => {\r\n            this.dropdownInput.current.focus();\r\n        })\r\n        this.props.handleStoreChange(e, store);\r\n    }\r\n  \r\n    onChangeHandle(e) {\r\n       const name = e.target.name;\r\n       const value = e.target.value;\r\n       this.setState({\r\n           [name]   :   value,\r\n           stOpen   :   true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClick);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClick);\r\n    };\r\n     \r\n    handleClick = (e) => {\r\n        e.stopPropagation();\r\n        if(this.nodeStore.contains(e.target)\r\n        || e.target.getAttribute('data') === 'ignore-outer-click'){ return; }\r\n\t\tif(!!this.state.stOpen) {\r\n            this.setState({\r\n                stOpen      :   false,\r\n                storeTxt    :   ''\r\n            });\r\n        }\r\n    }\r\n   \r\n    handleSelectbox = () => {   \r\n        if (this.props.area.length === 0)\r\n            return;\r\n        this.setState({\r\n            stOpen      :  !this.state.stOpen\r\n        })\r\n        this.onChangeHandle     =   this.onChangeHandle.bind(this);\r\n    }\r\n\r\n    render() {\r\n        let storeFilter = this.props.store.map(store => store.label);\r\n        let unsortedStore       =   this.props.stores || [];\r\n        let area                =   this.props.area || [];\r\n        let filteredArea        =   (area.length > 0) ? area.map((item) => item.id.toString()) : [];\r\n        //unsortedStore           =   unsortedStore.map((item) => filteredArea.includes(item.zoneid));\r\n        let stores              =   _sortBy(unsortedStore, 'label');\r\n        //console.log('Filtered Store : ', this.props.store);\r\n        return (\r\n            <div ref={nodeStore => this.nodeStore = nodeStore} className={`select-box${this.state.stOpen ? \" sopen\" : \" \"}`} onClick={this.handleSelectbox}>\r\n                <div className={`s-result ${(this.props.area.length === 0) ? \"dis\":\" \"}`}>\r\n                    <input type=\"text\" ref={this.dropdownInput} autoComplete=\"off\" disabled={(this.props.area.length === 0) ? true : false} placeholder=\"Store\" name=\"storeTxt\" value={this.state.storeTxt} onChange={this.onChangeHandle}/>\r\n                </div>\r\n                <ul className={(storeFilter.length > 0) ? 'selected' : ''}>\r\n                {/* {\r\n                    (this.props.store.length > 0) ?\r\n                    this.props.store.map((filter, index) => {\r\n                        return (\r\n                            <li key={index + 'filtered'} data='ignore-outer-click' onClick={(e) => this.props.handleRemoveFilter(e, 'Store', index)} className=\"selected\">{filter.label}</li>\r\n                        )\r\n                    }) : null\r\n                } */}\r\n                {\r\n                    stores.map((store, i) => {\r\n                        let exists  =    (!!store.zone_id) ? filteredArea.includes(store.zone_id.toString()) : '';\r\n                        let index   =   storeFilter.indexOf(store.label);\r\n                        //console.log('Store : ', exists, store.zone_id);\r\n                        return (\r\n                            (!!store.zone_id && !!exists && store.label.toLowerCase().includes(this.state.storeTxt.toLowerCase())) ?\r\n                                (index > -1) ?\r\n                                <li\r\n                                    key={i}\r\n                                    data='ignore-outer-click'\r\n                                    onClick={(e) => this.props.handleRemoveFilter(e, 'Store', index)}\r\n                                    className='selected'\r\n                                >\r\n                                    {store.label}\r\n                                </li> : <li\r\n                                    key={i}\r\n                                    data='ignore-outer-click'\r\n                                    onClick={(e) => this.handleStoreChange(e, {...store})}\r\n                                >\r\n                                    {store.label}\r\n                                </li>\r\n                            : null\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Form } from 'reactstrap';\r\nimport CreateTask from '../Modals/createTaskModal';\r\nimport moment from 'moment-timezone';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport CustomFilter from './customFilter';\r\nimport EditTask from '../Modals/editTaskModal';\r\nimport TaskDetails from '../Modals/taskDetailsModal';\r\nimport MapDetails from '../Modals/mapDetailsModal';\r\nimport TrackDetails from '../Modals/trackDetailsModal';\r\nimport StateFilter from '../Filter/stateFilter';\r\nimport AreaFilter from '../Filter/areaFilter';\r\nimport StoreFilter from '../Filter/storeFilter';\r\nimport {isEqual, isEmpty, sortBy as _sortBy, remove as _remove} from 'lodash';\r\n\r\nclass Filter extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state              =  {           \r\n         editShow        :   false,\r\n         detailsShow     :   false,\r\n         mapShow         :   false,\r\n         trackShow       :   false,\r\n         visible         :   false,\r\n         show                 :  false,\r\n         selectedState        :  null,\r\n         selectedArea         :  null,\r\n         selectedStore        :  null,\r\n         filterKeys           :  {State:[], Area: [], Store: []},\r\n         showSearch: false,\r\n         showFilter: false,\r\n         filteredList: {}\r\n      }\r\n      this.interval                 =  null;\r\n      this.timings                  =  [];\r\n      this.handleShow               =  this.handleShow.bind(this);\r\n      this.handleSearchClose              =  this.handleSearchClose.bind(this);\r\n      this.handleRemoveFilter       =  this.handleRemoveFilter.bind(this);\r\n      this.onChangeHandle           =  this.onChangeHandle.bind(this);\r\n      this.toggleCustomSearch       =  this.toggleCustomSearch.bind(this);\r\n      this.toggleResFilter          =  this.toggleResFilter.bind(this);\r\n      this.openEditWindow             =   this.openEditWindow.bind(this);\r\n      this.openDetailsWindow          =   this.openDetailsWindow.bind(this);\r\n      this.openMapWindow              =   this.openMapWindow.bind(this);\r\n      this.openTrackWindow            =   this.openTrackWindow.bind(this);\r\n      this.deleteTask                 =   this.deleteTask.bind(this);\r\n      this.updateTask                 =   this.updateTask.bind(this);\r\n      this.handleClose                =   this.handleClose.bind(this);\r\n   }\r\n\r\n   openEditWindow(uuid, mrchnt_address, recpnt_address){\r\n       this.props.getTaskDetails({uuid: uuid})\r\n       this.setState({\r\n           editShow        :   true,\r\n           mrchnt_address  :   mrchnt_address,\r\n           recpnt_address  :   recpnt_address\r\n       })\r\n   }\r\n\r\n   openDetailsWindow(uuid){\r\n       this.props.getTaskDetails({uuid: uuid})\r\n       this.setState({\r\n           detailsShow: true\r\n       })\r\n   }    \r\n\r\n   openMapWindow(uuid){\r\n       this.props.getTaskDetails({uuid: uuid});\r\n       this.setState({\r\n           mapShow: true\r\n       })\r\n   }\r\n\r\n   openTrackWindow(e, data){\r\n      e.stopPropagation();\r\n       this.setState({\r\n           trackShow: true,\r\n           currentUrl: data.current_url,\r\n           trackDriver: data.track_driver\r\n       })\r\n   }\r\n\r\n   updateTask(uuid, status){\r\n       if(window.confirm('Do you really want to update status of this task?')) {\r\n           this.props.updateTaskStatus({uuid: uuid, status: status});\r\n       }\r\n   }\r\n\r\n   deleteTask(uuid){\r\n       if(window.confirm('Do you really want to delete this task?')) {\r\n           this.props.deleteTask({uuid: uuid});\r\n       }\r\n   }\r\n   \r\n   handleClose(){\r\n       //console.log('Handle Close');\r\n         this.setState({\r\n            visible     :  false,\r\n            show        :  false,\r\n            editShow    :  false,            \r\n            mapShow     :  false,\r\n            detailsShow :  false,\r\n            trackShow   :  false\r\n         })\r\n   }\r\n\r\n   toggleCustomSearch() {\r\n      this.setState({\r\n         showFilter  :  false,\r\n         showSearch  :  !this.state.showSearch,\r\n         sOpen       :  false,\r\n         aOpen       :  false,\r\n         stOpen      :  false\r\n\r\n      })\r\n   }\r\n\r\n   toggleResFilter() {\r\n      this.setState({\r\n         showSearch:false,\r\n         showFilter: !this.state.showFilter\r\n      })\r\n   }\r\n   \r\n   handleShow() {\r\n      this.setState({\r\n         show: true\r\n      })\r\n   }\r\n\r\n   handleSearchClose() {\r\n      this.setState({\r\n         show: false\r\n      }, function (){\r\n\r\n      })\r\n   }\r\n\r\n   timing(start, end) {\r\n      //console.log('Start End : ', start, end);\r\n      let today = moment().format('MM/DD/YYYY');\r\n      let now = moment().unix();\r\n      let gap = 30 * 60;\r\n      let key = \"\";\r\n      let stimestamp = moment(today+' '+start, 'MM/DD/YYYY H:mm').unix();\r\n      let etimestamp = moment(today+' '+end, 'MM/DD/YYYY H:mm').unix();\r\n      let from = [];\r\n      let to = [];\r\n      for(let i=stimestamp; i<etimestamp; i=i+gap) {\r\n         from.push({\r\n            label :  moment(i*1000).format('hh:mm A'),\r\n            value :  moment(i*1000).format('HH:mm:ss')\r\n         });\r\n         to.push({\r\n            label :  moment((i+gap)*1000).format('hh:mm A'),\r\n            value :  moment((i+gap)*1000).format('HH:mm:ss')\r\n         });\r\n         if(now >= i && now <= i+gap ) {\r\n            key = moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A');\r\n         }\r\n      }\r\n      return {from:from, to:to, key: key};\r\n   }\r\n\r\n   componentDidMount() {\r\n      let filter     =  this.props.filterData;\r\n      //console.log('Dashboard Filter Parent Props : ', this.props.userType, filter.user_type);\r\n      if(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t//type        =  filter.type;\r\n\t\t\tthis.setState({\r\n\t\t\t\tfilterKeys  :  filter.filterKeys,\r\n\t\t\t\ttype        :  filter.type\r\n\t\t\t}, () => {\r\n            //console.log('Did Mount : ', filter.filterKeys, this.state);\r\n            this.getShoppedLate();\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n\t\t\tthis.setState({\r\n\t\t\t\ttype : type\r\n\t\t\t}, () => {\r\n            this.handleUpdateFilter();\r\n            this.getShoppedLate();\r\n\t\t\t})\r\n\t\t}\r\n      let self = this;\r\n      this.timings = this.timing(this.props.settingsData.start_time, this.props.settingsData.end_time);\r\n      document.addEventListener('click', this.handleClick, false);\r\n      /* document.addEventListener(\"click\", function(event){\r\n         event.stopPropagation();\r\n         self.setState({ sOpen: false, aOpen:false, stOpen:false});\r\n      }); */\r\n   }\r\n\r\n   getShoppedLate = () => {\r\n      this.setIntervalSummary();\r\n      this.props.getShoppedLate();\r\n   }\r\n\r\n   setIntervalSummary = () => {  \r\n      //console.log('Set Interval Done')    \r\n      if(!!this.interval)\r\n         clearInterval(this.interval);\r\n      this.interval = setInterval(() => {\r\n         this.props.getShoppedLate();\r\n      }, 1000 * 60 * 10);\r\n   }\r\n   \r\n   handleClick = (e) => {\r\n      e.stopPropagation();\r\n      if(this.nodeSearch.contains(e.target)\r\n         || this.nodeSrchButton.contains(e.target)\r\n         || this.nodeResSrchButton.contains(e.target)\r\n         || e.target.getAttribute('data') === 'autosuggest'\r\n         || e.target.getAttribute('data') === 'ignore-outer-click'\r\n         || !!e.target.getAttribute('aria-hidden')\r\n         || !!this.state.editShow\r\n         //|| !!!this.state.showSearch\r\n         )\r\n         return;\r\n      if(!!this.state.showSearch) {\r\n         this.setState({\r\n            showSearch  :  false\r\n         })\r\n      }\r\n   }   \r\n\r\n   handleStateChange = (e, selectedState) => {\r\n      //console.log('handle state change');\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {};\r\n      let selIndex            =  filterKeys.State.findIndex((item) => {\r\n         return item.value === selectedState.value;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.State.push({\r\n            label    :  selectedState.label,\r\n            value    :  selectedState.value\r\n         })\r\n      }\r\n      filterKeys.State     =  _sortBy(filterKeys.State, 'value');\r\n      if(filterKeys.State.length === 0){\r\n         filterKeys.Store     =  [];\r\n         filterKeys.Area      =  [];\r\n      }\r\n      this.setState({\r\n         //selectedState,\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n         this.handleUpdateFilter()\r\n      });\r\n   }\r\n\r\n   handleAreaChange           =  (e, selectedArea) => {\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {};\r\n      let selIndex            =  filterKeys.Area.findIndex((item) => {\r\n         return item.value === selectedArea.delivery_zone_name;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.Area.push({\r\n            label    :  `${selectedArea.delivery_zone_name} (${selectedArea.state})`,\r\n            value    :  selectedArea.delivery_zone_name,\r\n            state    :  selectedArea.state,\r\n            id       :  selectedArea.id\r\n         })\r\n      }\r\n      filterKeys.Area     =  _sortBy(filterKeys.Area, 'value');\r\n      if(filterKeys.Area.length === 0){\r\n         filterKeys.Store      =  [];\r\n      }\r\n      this.setState({\r\n         //selectedArea,\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n         this.handleUpdateFilter()\r\n      });\r\n   };\r\n\r\n   handleStoreChange          =  (e, selectedStore) => {\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {}; \r\n      let selIndex            =  filterKeys.Store.findIndex((item) => {\r\n         return item.value === selectedStore.label;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.Store.push({\r\n            id          :  selectedStore.data.id,\r\n            store_id    :  selectedStore.data.store_id,\r\n            label       :  selectedStore.label,\r\n            value       :  selectedStore.label,\r\n         })\r\n      }\r\n      filterKeys.Store     =  _sortBy(filterKeys.Store, 'value');\r\n      this.setState({\r\n         //selectedStore,\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n         this.handleUpdateFilter()\r\n      });\r\n   };\r\n\r\n   handleRemoveFilter = (e, type, index) => {\r\n      //console.log('handle remove');\r\n      e.stopPropagation();\r\n      let filters          =  this.state.filterKeys || [];\r\n      if(type === 'State') {\r\n         let stateCode     =  filters[type][index].value;\r\n         _remove(filters.Area, function (area) {\r\n            return area.state === stateCode;\r\n         });\r\n      }\r\n      /* if(type === 'Area') {\r\n         let stateCode     =  filters[type][index].value;\r\n         _remove(filters.Area, function (area) {\r\n            return area.state === stateCode;\r\n         });\r\n      } */\r\n      filters[type].splice(index, 1);\r\n      let selectedState    =  (type !== 'State') ? this.state.selectedState : null;\r\n      let selectedArea     =  (type !== 'Area') ? this.state.selectedArea : null;\r\n      let selectedStore    =  (type !== 'Store') ? this.state.selectedStore : null;\r\n      if(filters.State.length === 0){\r\n         filters.Store     =  [];\r\n         filters.Area      =  [];\r\n      }\r\n      if(filters.Area.length === 0){\r\n         filters.Store      =  [];\r\n      }\r\n\r\n      this.setState({\r\n         filterKeys : filters,\r\n         selectedState: selectedState,\r\n         selectedArea: selectedArea,\r\n         selectedStore: selectedStore\r\n      }, () => {\r\n         this.handleUpdateFilter()\r\n      });\r\n   }\r\n\r\n   handleTypeChange(type) {\r\n      this.setState({\r\n\t\t\ttype: type\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t})\r\n   }\r\n\r\n   handleUpdateFilter = () => {\r\n      /* console.log('Update Filter : ', {\r\n         user_type:this.props.userType,\r\n         type: this.state.type,\r\n         filterKeys: this.state.filterKeys || {}\r\n      }) */\r\n      this.props.updateFilter({\r\n         user_type:this.props.userType,\r\n         type: this.state.type,\r\n         filterKeys: this.state.filterKeys || {}\r\n      });\r\n   }\r\n\r\n   onChangeHandle(e) {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      this.setState({ [name]: value }, function () {\r\n      });\r\n   }\r\n\r\n   componentWillReceiveProps(props) {\r\n      if(!isEqual(this.props.filterData, props.filterData)) {\r\n         let filter     =  props.filterData;\r\n         if(!isEmpty(filter) && filter.user_type === props.userType) {\r\n            //type        =  filter.type;\r\n            this.setState({\r\n               filterKeys  :  filter.filterKeys,\r\n               type        :  filter.type,\r\n               filteredList: props.filteredList\r\n            }, () => {\r\n               //console.log('Did Mount : ', filter.filterKeys, this.state);\r\n               //this.handleUpdateFilter();\r\n            })\r\n         } else {\r\n            let type       =  (props.userType === 'admin') ? 'general' : props.userType;\r\n            this.setState({\r\n               type : type,\r\n               filteredList: props.filteredList\r\n            }, () => {\r\n               this.handleUpdateFilter();\r\n            })\r\n         }\r\n      } else {\r\n         this.setState({\r\n            //filterKeys: props.filterKeys,\r\n            filteredList: props.filteredList\r\n         })\r\n      }\r\n      //}\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      document.removeEventListener('click', this.handleClick);\r\n      clearInterval(this.interval);\r\n      /* document.removeEventListener(\"click\", function(){\r\n      }); */\r\n   }\r\n\r\n   render() {\r\n      //console.log('Render Filter : ', this.state.filterKeys, this.state);\r\n      //let timings                =  (!!this.timings && !!this.timings.data) ? this.timings.data : [];\r\n      let stores                 =  this.props.stores || [];\r\n      let locations              =  this.props.locations || [];\r\n      let zones                  =  this.props.zones || {};\r\n      let statesLocalStorage     =  JSON.parse(localStorage.getItem('states') || '[]');      \r\n      let states                 =  statesLocalStorage.map((item) => {\r\n         return {\r\n            label: item.value,\r\n            value: item.id\r\n         }\r\n      })\r\n      let stateFilter = [];\r\n      let stateCodeFilter = [];\r\n      this.state.filterKeys.State.forEach((state) => {\r\n         stateFilter.push(state.label);\r\n         stateCodeFilter.push(state.value);\r\n      });\r\n      let areaFilter = this.state.filterKeys.Area.map(area => area.value);\r\n      let storeFilter = this.state.filterKeys.Store.map(store => store.label);\r\n      let zoneList = stateCodeFilter.map(state => {\r\n         return { state: state, zones: zones[state] }\r\n      });\r\n      return (\r\n         <div>\r\n            <section className=\"con_top\">\r\n                  <div className=\"tab_pan-wrap\">\r\n                     <div className=\"tab_pan\">\r\n                        <span onClick={() => this.handleTypeChange('general')} className={(this.state.type === 'general') ? ' active' : ''}>Grocery</span>\r\n                        <span onClick={() => this.handleTypeChange('pharmacy')} className={(this.state.type === 'pharmacy') ? ' active' : ''}>Rx</span>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"res_btn\">\r\n                     <div className={`resfilter_btn ${this.state.showFilter ? \"showfilter\":\"\"} `} onClick={this.toggleResFilter}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Filter</div>\r\n                     <div ref={nodeResSrchButton => this.nodeResSrchButton = nodeResSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\":\"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n                  </div>\r\n                  <Form method=\"get\" action=\"\" autoComplete=\"off\" className={`resfilter_box ${this.state.showFilter ? \"showfilterbox\":\"\"}`} >\r\n                     <div className=\"filter_label\">Filter by: </div>\r\n                     <StateFilter\r\n                        stateFilter={stateFilter}\r\n                        states={this.state.filterKeys.State}\r\n                        handleStateChange={this.handleStateChange}\r\n                        handleRemoveFilter={this.handleRemoveFilter}\r\n                     />\r\n                     <AreaFilter\r\n                        area={this.state.filterKeys.Area}\r\n                        states={this.state.filterKeys.State}\r\n                        zones={this.props.zones}\r\n                        stateCodeFilter={stateCodeFilter}\r\n                        handleAreaChange={this.handleAreaChange}\r\n                        handleRemoveFilter={this.handleRemoveFilter}\r\n                     />\r\n                     <StoreFilter\r\n                        store={this.state.filterKeys.Store}\r\n                        area={this.state.filterKeys.Area}\r\n                        stores={this.props.stores}\r\n                        handleStoreChange={this.handleStoreChange}\r\n                        handleRemoveFilter={this.handleRemoveFilter}\r\n                     />\r\n                  </Form>\r\n               \r\n               <div className=\"search_sec\">\r\n                  <div ref={nodeSrchButton => this.nodeSrchButton = nodeSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\":\"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n                  <button type=\"button\" onClick={this.handleShow} className=\"btn btn_blue\">Create Task <img src=\"/assets/plus.svg\" alt=\"\" /></button>\r\n               </div>\r\n            </section>\r\n            {\r\n               (this.props.liveOrderCount !== '') ? <div className=\"liveOrders\">{this.props.liveOrderCount} {(this.props.liveOrderCount <= 1) ? 'Live Order' : 'Live Orders'}</div> : null\r\n            }\r\n            {\r\n\t\t\t\t\t(this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0) ?\r\n            <section className=\"filter-tag_section\">\r\n               {\r\n                  (this.state.filterKeys.State.length > 0) ?\r\n                     this.state.filterKeys.State.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'State', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n               {\r\n                  (this.state.filterKeys.Area.length > 0) ?\r\n                     this.state.filterKeys.Area.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Area', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n               {\r\n                  (this.state.filterKeys.Store.length > 0) ?\r\n                     this.state.filterKeys.Store.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Store', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n            </section>:null\r\n            }\r\n            <div\r\n               ref={nodeSearch => this.nodeSearch = nodeSearch}>\r\n               <CustomFilter\r\n                  filteredList         =  {this.state.filteredList}\r\n                  settingsData         =  {this.props.settingsData}\r\n                  timings              =  {this.timings}\r\n                  searchFilter         =  {this.props.searchFilter}\r\n                  resetSearch          =  {this.props.resetSearch}\r\n                  showSearch           =  {this.state.showSearch}\r\n                  getTaskDetails       =  {this.props.getTaskDetails}\r\n                  taskDetails          =  {this.props.taskDetails}\r\n                  deleteTask           =  {this.props.deleteTask}\r\n                  updateTaskStatus     =  {this.props.updateTaskStatus}\r\n                  editTask             =  {this.props.editTask}\r\n                  getTrackDetails      =  {this.props.getTrackDetails}\r\n                  openEditWindow       =  {this.openEditWindow}\r\n                  openDetailsWindow    =  {this.openDetailsWindow}\r\n                  openMapWindow        =  {this.openMapWindow}\r\n                  deleteTask           =  {this.deleteTask}\r\n                  updateTask           =  {this.updateTask}\r\n                  openTrackWindow      =  {this.openTrackWindow}\r\n                  section              =  'Dashboard'\r\n                  userType             =  {this.state.type}\r\n               />\r\n            </div>\r\n            <CreateTask\r\n               type                 =  {this.state.type}\r\n               show={this.state.show}\r\n               handleClose={this.handleClose}\r\n               getLocations={this.props.getLocations}\r\n               taskType={this.props.taskType}\r\n               stores={this.props.stores}\r\n               locations={this.props.locations}\r\n               pharmacy={this.props.pharmacy}\r\n               timings={this.props.timings}\r\n               userData={this.props.userData}\r\n               settingsData={this.props.settingsData}\r\n               createTask={this.props.createTask}\r\n               isTaskProcessing     =  {this.props.isTaskProcessing}\r\n            />            \r\n            {\r\n               (!!this.state.editShow) ?\r\n               <EditTask\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  show                =   {this.state.editShow}\r\n                  timings             =   {this.props.timings}\r\n                  settingsData        =   {this.props.settingsData}\r\n                  editTask            =   {this.props.editTask}\r\n                  mrchnt_address      =   {this.state.mrchnt_address}\r\n                  recpnt_address      =   {this.state.recpnt_address}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }\r\n            {\r\n               //(!!this.state.trackShow) ?\r\n               <TrackDetails\r\n                  show                =   {this.state.trackShow}\r\n                  currentUrl          =   {this.state.currentUrl}\r\n                  trackDriver         =   {this.state.trackDriver}\r\n                  handleClose         =   {this.handleClose}\r\n               /> //: null\r\n            }\r\n            {\r\n               (!!this.state.detailsShow) ?\r\n               <TaskDetails\r\n                  show                =   {this.state.detailsShow}\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }                    \r\n            {\r\n               (!!this.state.mapShow) ?\r\n               <MapDetails\r\n                  show                =   {this.state.mapShow}\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }\r\n         </div>\r\n      )\r\n   }\r\n}\r\nexport default withRouter(Filter);","import React, { Component } from 'react';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport DashboardList from './dashboardList';\r\nimport {isEqual, isEmpty, sortBy as _sortBy, remove as _remove} from 'lodash';\r\nimport Filter from './filter';\r\nimport StateFilter from '../Filter/stateFilter';\r\nimport {setFilter, getFilter, clearFilter} from '../../Helper/common';\r\n\r\nclass DashboardComponent extends Component {\r\n   static propTypes = {\r\n      userData    :  PT.object\r\n   }\r\n\r\n   static defaultProps = {\r\n      userData    :  {}\r\n   }\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      this.state                    =  {\r\n                                          org_id         :  (!!this.props.userData) ? this.props.userData.org_id : '',\r\n                                          //selectedState  :  null,\r\n                                          //selectedArea   :  null,\r\n                                          //selectedStore  :  null,\r\n                                          //filterKeys     :  {State:[], Area: [], Store: []},\r\n                                          //type           :  'general',\r\n                                          searchTxt      :  '',\r\n                                          sOpen          :  false,\r\n                                          selOrder       :  {},\r\n                                          liveOrderCount :  '',\r\n                                          filterData     :  {}\r\n                                       }\r\n      this.timings                  =  [];\r\n      //this.handleTypeChange         =  this.handleTypeChange.bind(this);\r\n      //this.handleRemoveFilter       =  this.handleRemoveFilter.bind(this);\r\n      this.searchFilter             =  this.searchFilter.bind(this);\r\n   }\r\n\r\n   /* handleTypeChange(type) {\r\n      this.setState({\r\n         type        :  type\r\n      })\r\n      setFilter('dashboard', {user_type:this.props.userType, type: type, filterKeys: this.state.filterKeys || {}});\r\n      this.props.updateFilter();\r\n   } */\r\n\r\n   searchFilter (searchData) {\r\n      //console.log('Search Data : ', searchData);\r\n      this.props.search({\r\n         ...searchData,\r\n         //user_type: this.state.type\r\n      })\r\n   }\r\n\r\n   /* handleRemoveFilter (type, index) {\r\n      let filters          =  this.state.filterKeys || [];\r\n      if(type === 'State') {\r\n         let stateCode     =  filters[type][index].value;\r\n         _remove(filters.Area, function (area) {\r\n            return area.state === stateCode;\r\n         });\r\n      }\r\n      filters[type].splice(index, 1);\r\n      let selectedState    =  (type !== 'State') ? this.state.selectedState : null;\r\n      let selectedArea     =  (type !== 'Area') ? this.state.selectedArea : null;\r\n      let selectedStore    =  (type !== 'Store') ? this.state.selectedStore : null;\r\n      if(filters.State.length === 0){\r\n         filters.Store     =  [];\r\n         filters.Area      =  [];\r\n      }\r\n      if(filters.Area.length === 0){\r\n         filters.Store      =  [];\r\n      }\r\n\r\n      this.setState({\r\n         filterKeys : filters,\r\n         selectedState: selectedState,\r\n         selectedArea: selectedArea,\r\n         selectedStore: selectedStore\r\n      });      \r\n      setFilter('dashboard', {user_type:this.props.userType, type: this.state.type, filterKeys: filters});\r\n      this.props.updateFilter();\r\n   } */\r\n\r\n   componentDidMount() {\r\n      //console.log('Props Added : ', this.props);\r\n      this.setState({\r\n         filterData: this.props.filterData.dashboard || {}\r\n      })\r\n      /* let type       =  '';\r\n      let filterKeys =  this.state.filterKeys;\r\n      if(!!this.props.userType){\r\n         //let filter     =  getFilter('dashboard');         \r\n\t\t   let filter     =\tthis.props.filterData.reports || {};\r\n         if(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n            type        =  filter.type;\r\n            filterKeys  =  filter.filterKeys;\r\n         } else {\r\n            type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n            this.props.updateFilter();\r\n         }\r\n      }\r\n      this.setState({\r\n         type        :  type,\r\n         filterKeys  :  filterKeys\r\n      }) */\r\n   }\r\n\r\n   componentWillReceiveProps(props) {\r\n      //console.log('Props Updated : ', props.shoppedLate);\r\n      this.setState({\r\n         filterData: props.filterData.dashboard || {}\r\n      })\r\n      /* if(!!props.userType && !isEqual(this.props.userType, props.userType)) {\r\n         let type       =  (props.userType === 'admin') ? 'general' : props.userType;\r\n         //let filterKeys =  this.state.filterKeys;\r\n         //let filter     =  this.props.filterData.reports || {};\r\n         \r\n         if(!!props.userType){\r\n            //let filter     =  getFilter('');\r\n            let filter     =\tprops.filterData.reports || {};\r\n            if(!isEmpty(filter) && filter.user_type === props.userType) {\r\n               type        =  filter.type;\r\n               filterKeys  =  filter.filterKeys;\r\n            } else {\r\n               type       =  (props.userType === 'admin') ? 'general' : props.userType;\r\n               this.props.updateFilter();\r\n            }\r\n         }\r\n         this.setState({\r\n            type        :  type,\r\n            filterKeys  :  filterKeys\r\n         })\r\n      } */\r\n   }\r\n\r\n   updateFilter = (data) => {\r\n      this.setState({\r\n         filterData: {...data}\r\n      })\r\n      this.props.updateFilter({...data});\r\n   }\r\n   updateTotalCount = (count) => {\r\n      this.setState({\r\n         liveOrderCount    :  count\r\n      })\r\n   }\r\n\r\n   getShoppedLate = () => {\r\n      let filterData    =  this.state.filterData || {};\r\n      let filterKeys    =  filterData.filterKeys || {};\r\n      let type          =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n      let data\t\t\t\t=\t{}\r\n      if(!isEmpty(filterKeys)) {   \r\n         if(filterKeys.Store.length === 0 && filterKeys.Area.length === 0 && filterKeys.State.length > 0) {\r\n               let states           =  (filterKeys.State || []).map(item => {\r\n               //return {state: item.value, zone_id: []};\r\n               return item.value;\r\n            });\r\n            if(states.length > 0){\r\n                  data\t\t\t=\t{\r\n                     type\t\t:\t'state',\r\n                     state\t\t:\tstates\r\n                  }\r\n               //value_one         =  'state';\r\n               //value_two         =  states;\r\n            }\r\n         }\r\n   \r\n         if(filterKeys.Store.length === 0 && filterKeys.Area.length > 0) {         \r\n            let zones           =  [];\r\n            (filterKeys.Area || []).map((item) => {\r\n               let index\t\t=\tzones.findIndex((z) => z.state === item.state);\r\n               //console.log(filterKeys.Area, index);\r\n               if(index > -1){\r\n                  zones[index].zone_id.push(item.id)\r\n               } else {\r\n                  zones.push({\r\n                     state: item.state,\r\n                     zone_id : [item.id]\r\n                  })\r\n               }\r\n            });\r\n\r\n            if(zones.length > 0){\r\n               data\t\t\t=\t{\r\n                  type\t\t:\t'place',\r\n                  place\t\t:\tzones\r\n               }\r\n               //type         \t\t=  'place';\r\n               //place         \t=  zones; \r\n               \r\n            }\r\n         }\r\n   \r\n         if(filterKeys.Store.length > 0) {\r\n            let store            =  [];\r\n            (filterKeys.Store || []).forEach(item => {\r\n               store.push(item.store_id.toString());\r\n            })\r\n            if(store.length > 0){\r\n               data\t\t\t=\t{\r\n                  type\t\t:\t'store',\r\n                  store_id\t:\tstore\r\n               }\r\n               //type         \t\t=  'store';\r\n               //store_id         \t=  store;\r\n            }\r\n         }\r\n         data.user_type\t\t=\tfilterData.type || type;\r\n         if(!!!data.type) {\r\n            data.type      =  'default';\r\n         }\r\n         this.props.getShoppedLate(data);\r\n      }\r\n      //console.log('Filter Data : ', data);\r\n   }\r\n\r\n   render() {\r\n      //console.log('Filter Data : ', this.state.filterKeys, this.state.type);\r\n      let locationData           =  this.props.locations || {};\r\n      let pharmacy               =  (!!locationData.pharmacy) ? locationData.pharmacy : false;\r\n      let stores                 =  locationData.stores || [];\r\n      let locations              =  locationData.locations || [];\r\n      let taskType               =  locationData.taskType || '';\r\n      let zones                  =  locationData.zones || {};\r\n      let userType               =  this.props.userType || {};\r\n      /* let filterData             =  {};\r\n      if(!!this.props.userType){\r\n         //let filter     =  getFilter('');\r\n         let filter     =\tthis.props.filterData.dashboard || {};\r\n         if(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n            filterData.type         =  filter.type;\r\n            filterData.filterKeys   =  filter.filterKeys;\r\n         } else {\r\n            filterData.type         =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n            filterData.filterKeys   =  this.state.filterKeys;\r\n            //this.props.updateFilter();\r\n         }\r\n      }\r\n\r\n      console.log('Filter Data : ', filterData); */\r\n      \r\n      let filterData\t=\tthis.state.filterData;\r\n      //let filterData\t=\tthis.props.filterData.dashboard;\r\n      let type       =  '';\r\n      let filterKeys =  {};\r\n      if(!isEmpty(filterData)) {\r\n         type                          =  filterData.type;\r\n         filterKeys                    =  filterData.filterKeys;\r\n      }\r\n      //console.log('Dashboard Render : ', type, filterKeys, filterData);\r\n      return (\r\n         <main className={`dash right_sec${(userType !== 'admin') ? ' noAdmin' : ''}`}>            \r\n            {\r\n               (!isEmpty(this.props.settingsData)) ? \r\n               <Filter\r\n                  liveOrderCount       =  {this.state.liveOrderCount}\r\n                  //type                 =  {this.state.type}\r\n                  filterData           =  {filterData}\r\n                  userType             =  {userType}\r\n                  stores               =  {stores}\r\n                  zones                =  {zones}\r\n                  //handleTypeChange     =  {this.handleTypeChange}\r\n                  //handleStateChange    =  {this.handleStateChange}\r\n                  //handleAreaChange     =  {this.handleAreaChange}\r\n                  //handleStoreChange    =  {this.handleStoreChange}\r\n                  searchFilter         =  {this.searchFilter}\r\n                  resetSearch          =  {this.props.resetSearch}\r\n                  //handleRemoveFilter   =  {this.handleRemoveFilter}\r\n                  //filterKeys           =  {this.state.filterKeys}\r\n                  getLocations         =  {this.props.getLocations}\r\n                  taskType             =  {taskType}\r\n                  locations            =  {locations}\r\n                  pharmacy             =  {pharmacy}\r\n                  timings              =  {this.timings}\r\n                  userData             =  {this.props.userData}\r\n                  settingsData         =  {this.props.settingsData}\r\n                  createTask           =  {this.props.createTask}\r\n                  filteredList         =  {this.props.filteredList}\r\n                  getTaskDetails       =  {this.props.getTaskDetails}\r\n                  taskDetails          =  {this.props.taskDetails}\r\n                  deleteTask           =  {this.props.deleteTask}\r\n                  updateTaskStatus     =  {this.props.updateTaskStatus}\r\n                  editTask             =  {this.props.editTask}\r\n                  getTrackDetails      =  {this.props.getTrackDetails}\r\n                  isTaskProcessing     =  {this.props.isTaskProcessing}\r\n                  updateFilter         =  {this.updateFilter}\r\n                  getShoppedLate       =  {this.getShoppedLate}\r\n               /> : null\r\n            }\r\n            <div>\r\n               {\r\n                  (!isEmpty(filterData) && !isEmpty(this.props.settingsData)) ?                  \r\n                     <DashboardList\r\n                        updateTotalCount  =  {this.updateTotalCount}\r\n                        type              =  {type}\r\n                        org_id            =  {this.state.org_id}\r\n                        statefilter       =  {filterKeys.State}\r\n                        areafilter        =  {filterKeys.Area}\r\n                        storefilter       =  {filterKeys.Store}\r\n                        searchTxt         =  {this.state.searchTxt}\r\n                        taskType          =  {taskType}\r\n                        stores            =  {stores}\r\n                        locations         =  {locations}\r\n                        pharmacy          =  {pharmacy}\r\n                        timings           =  {this.timings}\r\n                        getTaskDetails    =  {this.props.getTaskDetails}\r\n                        taskDetails       =  {this.props.taskDetails}\r\n                        deleteTask        =  {this.props.deleteTask}\r\n                        updateTaskStatus  =  {this.props.updateTaskStatus}\r\n                        editTask          =  {this.props.editTask}\r\n                        settingsData      =  {this.props.settingsData}\r\n                        getTrackDetails   =  {this.props.getTrackDetails}\r\n                        shoppedLate       =  {this.props.shoppedLate}\r\n                     /> : null\r\n               }\r\n            </div>\r\n         </main>\r\n      )\r\n   }\r\n}\r\nexport default withRouter(DashboardComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport DashboardComponent from './dashboard';\r\n\r\nconst Dashboard   = ({\r\n                        userData,\r\n                        getLocations,\r\n                        locations,\r\n                        settingsData,\r\n                        userType,\r\n                        createTask,\r\n                        getTaskDetails,\r\n                        taskDetails,\r\n                        deleteTask,\r\n                        editTask,\r\n                        updateTaskStatus,\r\n                        getTrackDetails,\r\n                        search,\r\n                        resetSearch,\r\n                        filteredList,\r\n                        isTaskProcessing,\r\n                        updateFilter,\r\n                        filterData,\r\n                        isFilterLoaded,\r\n                        getShoppedLate,\r\n                        shoppedLate\r\n    }) => {\r\n    return (\r\n      <DashboardComponent\r\n        userData={userData}\r\n        getLocations={getLocations}\r\n        locations={locations}\r\n        settingsData={settingsData}\r\n        userType={userType}\r\n        createTask={createTask}\r\n        getTaskDetails={getTaskDetails}\r\n        taskDetails={taskDetails}\r\n        deleteTask={deleteTask}\r\n        editTask={editTask}\r\n        updateTaskStatus={updateTaskStatus}\r\n        getTrackDetails={getTrackDetails}\r\n        search={search}\r\n        resetSearch={resetSearch}\r\n        filteredList={filteredList}\r\n        isTaskProcessing={isTaskProcessing}\r\n        updateFilter={updateFilter}\r\n        filterData={filterData}\r\n        isFilterLoaded={isFilterLoaded}\r\n        getShoppedLate={getShoppedLate}\r\n        shoppedLate={shoppedLate}\r\n      />\r\n    )\r\n };\r\n\r\n Dashboard.propTypes   = {\r\n  userData: PT.object,\r\n  getLocations: PT.func,\r\n  createTask: PT.func,\r\n  getTaskDetails: PT.func,\r\n  getTrackDetails: PT.func,\r\n  deleteTask: PT.func,\r\n  editTask: PT.func,\r\n  updateTaskStatus: PT.func,\r\n  search: PT.func,\r\n  resetSearch: PT.func,\r\n  locations: PT.object,\r\n  taskDetails: PT.object,\r\n  settingsData: PT.object,\r\n  userType: PT.string,\r\n  isTaskProcessing: PT.bool,\r\n  updateFilter: PT.func,\r\n\tfilterData: PT.object,\r\n\tisFilterLoaded: PT.bool,\r\n  getShoppedLate: PT.func,\r\n\tshoppedLate: PT.object,\r\n }\r\n\r\n const  mapStateToProps   = ({dashboardReducer, headerReducer}, ownProps) => {\r\n    //console.log('Header Reducer : ', headerReducer.filterData);\r\n    return ({\r\n            userData: ownProps.userData,\r\n            isTaskProcessing: dashboardReducer.isTaskProcessing,\r\n            locations: dashboardReducer.locations,\r\n            userType: headerReducer.userType,\r\n            settingsData: headerReducer.settingsData,\r\n            taskDetails: dashboardReducer.taskDetails,\r\n            filteredList: dashboardReducer.filteredList,\r\n            filterData: headerReducer.filterData,\r\n            isFilterLoaded: headerReducer.isFilterLoaded,\r\n            shoppedLate: dashboardReducer.shoppedLate\r\n        })\r\n    }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateFilter: (data) => dispatch(actions.updateFilter(data)),\r\n  updateTaskStatus: (data) => dispatch(actions.updateTaskStatus(data)),\r\n  deleteTask: (data) => dispatch(actions.deleteTask(data)),\r\n  getLocations: (data) => dispatch(actions.getLocations(data)),\r\n  createTask: (data) => dispatch(actions.createTask(data)),\r\n  editTask: (data) => dispatch(actions.editTask(data)),\r\n  getTaskDetails: (data) => dispatch(actions.getTaskDetails(data)),\r\n  getTrackDetails: (data) => dispatch(actions.getTrackDetails(data)),\r\n  search: (data) => dispatch(actions.search(data)),\r\n  resetSearch: (data) => dispatch(actions.resetSearch(data)),\r\n  getShoppedLate: (data) => dispatch(actions.getShoppedLate(data))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));","import React, { Component } from 'react';\r\nimport DashboardList from '../../containers/Dashboard';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <DashboardList userData={this.props.userData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);;\r\n","//Get Feedback\r\nexport const GET_SUMMERY = 'GET_SUMMERY';\r\nexport const GET_SUMMERY_SUCCESS = 'GET_SUMMERY_SUCCESS';\r\nexport const GET_SUMMERY_ERROR = 'GET_SUMMERY_ERROR';\r\n\r\nexport const GET_FEEDBACK = 'GET_FEEDBACK';\r\nexport const GET_FEEDBACK_SUCCESS = 'GET_FEEDBACK_SUCCESS';\r\nexport const GET_FEEDBACK_ERROR = 'GET_FEEDBACK_ERROR';\r\n\r\nexport const FEEDBACK_SEARCH = 'FEEDBACK_SEARCH';\r\nexport const FEEDBACK_SEARCH_SUCCESS = 'FEEDBACK_SEARCH_SUCCESS';\r\nexport const FEEDBACK_SEARCH_ERROR = 'FEEDBACK_SEARCH_ERROR';\r\n\r\nexport const REPLY = 'REPLY';\r\nexport const REPLY_SUCCESS = 'REPLY_SUCCESS';\r\nexport const REPLY_ERROR = 'REPLY_ERROR';","import {\r\n\tGET_SUMMERY,\r\n  GET_SUMMERY_SUCCESS,\r\n  GET_SUMMERY_ERROR,\r\n\r\n  GET_FEEDBACK,\r\n  GET_FEEDBACK_SUCCESS,\r\n  GET_FEEDBACK_ERROR,\r\n\r\n  FEEDBACK_SEARCH, \r\n  FEEDBACK_SEARCH_SUCCESS,\r\n  FEEDBACK_SEARCH_ERROR,\r\n\r\n  REPLY,\r\n  REPLY_SUCCESS,\r\n  REPLY_ERROR\r\n} from \"./constants\";\r\n\r\nexport const getSummary = (data) => ({\r\n  type: GET_SUMMERY,\r\n  data\r\n});\r\n\r\nexport const listenGetSummerySuccess = (data) => ({\r\n  type: GET_SUMMERY_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenGetSummeryError = (data) => ({\r\n  type: GET_SUMMERY_ERROR,\r\n  data\r\n});\r\n\r\nexport const getFeedback = (data) => ({\r\n  type: GET_FEEDBACK,\r\n  data\r\n});\r\n\r\nexport const listenGetFeedbackSuccess = (data) => ({\r\n  type: GET_FEEDBACK_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenGetFeedbackError = (data) => ({\r\n  type: GET_FEEDBACK_ERROR,\r\n  data\r\n});\r\n\r\nexport const feedbackSearch = (data) => ({\r\n  type: FEEDBACK_SEARCH,\r\n  data\r\n});\r\n\r\nexport const listenFeedbackSearchSuccess = (data) => ({\r\n  type: FEEDBACK_SEARCH_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenFeedbackSearchError = (data) => ({\r\n  type: FEEDBACK_SEARCH_ERROR,\r\n  data\r\n});\r\n\r\nexport const reply = (data) => ({\r\n  type: REPLY,\r\n  data\r\n});\r\n\r\nexport const replySuccess = (data) => ({\r\n  type: REPLY_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const replyError = (data) => ({\r\n  type: REPLY_ERROR,\r\n  data\r\n});","import Cookies from 'js-cookie';\r\nimport config from '../config';\r\n//console.log('Cookie Config : ', config.cookie);\r\n\r\nexport const get = (name = 'foodjets_new_merchant') =>{\r\n\tif(config.cookie.hostname === 'http://console.dev.foodjets.com') {\r\n\t\tname = 'dev_'+name\r\n\t}\r\n\r\n  \treturn Cookies.getJSON(name);\r\n};\r\n\r\nexport const set = (data, name = 'foodjets_new_merchant') =>{\r\n\tif(config.cookie.hostname === 'http://console.dev.foodjets.com') {\r\n\t\tname = 'dev_'+name\r\n\t}\r\n\tif(!!config.cookie.domain)\r\n\t\tCookies.set(name, data, {domain: config.cookie.domain});\r\n\telse\r\n\t\tCookies.set(name, data);\r\n};\r\n\r\nexport const remove = (name = 'foodjets_new_merchant') =>{\r\n\tif(config.cookie.hostname === 'http://console.dev.foodjets.com') {\r\n\t\tname = 'dev_'+name\r\n\t}\r\n\r\n\tif(!!config.cookie.domain)\r\n\t\tCookies.remove(name, {domain: config.cookie.domain});\r\n\telse\r\n\t\tCookies.remove(name);\r\n};\r\n\r\nexport const setCookie = (data, name) =>{\r\n  \tCookies.set(name, data);\r\n};\r\n\r\nexport const setLifetimeCookie = (data, name) =>{\r\n\tCookies.set(name, data, { expires: 365 });\r\n};\r\n\r\n\r\nexport const removeCookie = (name) =>{\r\n  \tCookies.remove(name);\r\n};\r\n\r\nexport const getCookie = (name) =>{\r\n  \treturn Cookies.getJSON(name);\r\n};","import moment from 'moment-timezone';\r\nimport {getCookie} from '../../util/cookies';\r\nimport React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Row, Col, Form, Button } from 'reactstrap';\r\nimport {getDeliveryWindow} from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\n\r\nclass ReplyModal extends Component {\r\n \tconstructor(props) {\r\n        super(props);\r\n\r\n        let email = (this.props.taskDetails && this.props.taskDetails.email)?this.props.taskDetails.email:\"\";\r\n\r\n        this.state = {     \r\n            fields: {\r\n                to: email,\r\n                message: ''\r\n            },\r\n            errors: {\r\n                to: '',\r\n                message: ''\r\n            },   \t\r\n\t\t\treplyModalShow: true\r\n        }\r\n\r\n        this.handleReply = this.handleReply.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n    };\r\n\r\n    handleValidation(){\r\n        let isError = false;\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n\r\n        //To\r\n        if(!!!fields.to){\r\n            isError = true;\r\n            errors.to = 'Email is required.';\r\n        } else if(fields[\"to\"]) {\r\n            let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n            if(!reg.test(fields.to)) {\r\n                isError = true;\r\n                errors.to = 'Please enter a valid email address.';\r\n            }\r\n        };\r\n\r\n        //Message\r\n        if(!!!fields.message){\r\n            isError = true;\r\n            errors.message = 'Message is required.';\r\n        };\r\n\r\n       this.setState({ errors: errors });\r\n       return isError;\r\n    };\r\n\r\n    handleChange(e){    \r\n        const { name, value } = e.target\r\n        let fields = this.state.fields;\r\n        fields[name] = value; \r\n\r\n        let errors = {...this.state.errors};\r\n        errors[name] = \"\";\r\n               \r\n        this.setState({fields, errors: errors});\r\n    };\r\n\r\n    handleReply(e){\r\n        e.preventDefault();\r\n        let isError = this.handleValidation();\r\n\r\n        if(isError) {\r\n            return false;\r\n            console.log(\"Form has errors.\", this.state.errors);\r\n        } else {\r\n            let replyeData = {...this.state.fields};\r\n            let taskDetails = this.props.taskDetails || {};\r\n            let userData = getCookie('foodjets_merchant') || {};\r\n\r\n            replyeData['from'] = userData.org_email;\r\n            replyeData['last_name'] = taskDetails.cust_last_name;\r\n            replyeData['task_id'] = taskDetails.order_details.id;\r\n            replyeData['customer_message'] = taskDetails.comment;\r\n            replyeData['first_name'] = taskDetails.cust_first_name;\r\n            replyeData['order_number'] = taskDetails.tp_order_number;\r\n            replyeData[\"subject\"] = \"Raleys Response to Order Number: \"+taskDetails.tp_order_number;\r\n            replyeData['complete_after'] = moment.tz(parseInt(taskDetails.order_details.completeAfter) * 1000, taskDetails.order_details.time_zone).format('MM/DD/YYYY hh:mm a');\r\n            \r\n            this.props.reply(replyeData);\r\n        }\r\n    };\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n        this.setState({ replyModalShow: props.replyModalShow });\r\n    }; \r\n\r\n\trender() {\r\n        let starObj = [];\r\n        let activeFormBtn = false;\r\n\t\tconst { fields, errors, replyModalShow } = this.state;\r\n        let taskDetails = this.props.taskDetails || {};\r\n        let rate = (taskDetails && taskDetails.rating)?parseInt(taskDetails.rating):0;\r\n        let customerName = taskDetails.cust_first_name+' '+taskDetails.cust_last_name;     \r\n\r\n        if(isEmpty(errors.to) && isEmpty(errors.message) && !isEmpty(fields.to) && !isEmpty(fields.message)){\r\n            activeFormBtn = true;\r\n        };\r\n        \r\n        for (let i = 0; i < rate; i++) {\r\n            let key = \"star-sm-\"+i;\r\n            starObj.push(<img key={key} src=\"/assets/star-sm.svg\" />);\r\n        };\r\n\r\n\t\treturn (\r\n\t\t\t<Modal size=\"xl\" className=\"c-modal boxmod repMod \" show={replyModalShow} onHide={this.props.handleCloseModal}>\r\n\t            <Modal.Header closeButton>\r\n\t                <Modal.Title>Reply to Customer</Modal.Title>\r\n\t            </Modal.Header>\r\n\r\n                <Form autoComplete=\"off\" onSubmit= {this.handleReply}>\r\n    \t\t\t\t<Modal.Body>\r\n                        <Row noGutters >\r\n                            <Col md=\"6\" sm=\"12\" className=\"l_col\">\r\n                                <div className=\"merchant_box\">\r\n                                    <h4>Merchant</h4>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Order Number</label>\r\n                                        <input type=\"text\" placeholder=\"Order Number\" disabled={true} style={{background: 'none'}} className=\"t_box\" name=\"order_number\" defaultValue={taskDetails.tp_order_number} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"order-number\">Customer Name</label>\r\n                                        <input type=\"text\" placeholder=\"Customer Name\" disabled={true} style={{background: 'none'}} className=\"t_box\" name=\"customer_name\" defaultValue={customerName}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"store\">Date · Time</label>\r\n                                        {getDeliveryWindow(taskDetails.order_details.completeAfter, taskDetails.order_details.completeBefore, taskDetails.order_details.time_zone)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"order-number\">Customer Rating</label>\r\n                                        <span className=\"starwrap\">{starObj}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"merchant_box\">\r\n                                    <h4>Comments</h4>\r\n                                    <p>{taskDetails.comment}</p>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md=\"6\" sm=\"12\" className=\"r_col task-d\">\r\n                                <div className=\"merchant_box\">  \r\n                                    <h4>Email to Customer</h4>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"order-number\">To</label>\r\n                                        <input type=\"text\" placeholder=\"Email\" className=\"t_box\" name=\"to\" onChange={this.handleChange} value={fields.to} className={!!errors.to  ? \"t_box error\" : \"t_box\" } />\r\n                                    </div>\r\n                                    <textarea name=\"message\" placeholder=\"Message...\" rows=\"4\" onChange={this.handleChange.bind(this)} className={!!errors.message  ? \"feedMsg error\" : \"feedMsg\" } defaultValue={fields.message}></textarea>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" variant=\"primary\" className={(activeFormBtn)? \"active\" : \"\" }> {(this.props.isReplying)? 'Processing..' : 'Submit'}</Button>\r\n    \t\t\t\t</Modal.Footer>\t\r\n                </Form>\r\n\t        </Modal>\r\n\t\t)\r\n\t};\r\n};\r\n\r\nexport default ReplyModal;","import React, { Component } from 'react';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport Config from '../config';\r\n\r\nconst range         =   (from, to, step = 1)    =>  {\r\n    let i           =   from;\r\n    const range     =   [];\r\n    \r\n    while (i <= to) {\r\n        range.push(i);\r\n        i += step;\r\n    }\r\n    return range;\r\n}\r\n\r\nclass Pagination extends Component {\r\n    static propTypes = {\r\n        totalRecords    :   PT.number.isRequired,\r\n        pageLimit       :   PT.number,\r\n        pageNeighbours  :   PT.number,\r\n        onPageChanged   :   PT.func\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageLimit = Config.Pagination.itemsPerPage, pageNeighbours = 0, searchTag = '' } = props;\r\n    \r\n        this.pageLimit          =   typeof pageLimit === 'number' ? pageLimit : Config.Pagination.itemsPerPage;\r\n        this.totalRecords       =   typeof totalRecords === 'number' ? totalRecords : 0;\r\n        this.pageNeighbours     =   typeof pageNeighbours === 'number'\r\n                                    ? Math.max(0, Math.min(pageNeighbours, 2))\r\n                                    : 0;    \r\n                                   \r\n        this.totalPages         =   Math.ceil(this.totalRecords / this.pageLimit); \r\n        this.state              =   {\r\n            currentPage     :   1,\r\n            pageLimit       :   this.pageLimit,\r\n            totalRecords    :   this.totalRecords,\r\n            pageNeighbours  :   this.pageNeighbours,\r\n            totalPages      :   this.totalPages,\r\n            searchTag       :   searchTag\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let totalPages         =   Math.ceil(nextProps.totalRecords / nextProps.pageLimit);\r\n        if(this.props !== nextProps){\r\n            this.setState({\r\n                pageLimit       :   nextProps.pageLimit,\r\n                totalRecords    :   nextProps.totalRecords,\r\n                pageNeighbours  :   nextProps.pageNeighbours,\r\n                totalPages      :   totalPages\r\n            })\r\n            if(nextProps.totalRecords !== this.props.totalRecords)\r\n            {\r\n                this.gotoPage(1);\r\n            }\r\n        }\r\n    }\r\n  \r\n    gotoPage = page => {\r\n        const { onPageChanged = f => f }      =   this.props;\r\n        const currentPage                     =   Math.max(0, Math.min(page, this.state.totalPages));\r\n        \r\n        const paginationData = {\r\n            currentPage,\r\n            totalPages      :   this.state.totalPages,\r\n            pageLimit       :   this.state.pageLimit,\r\n            totalRecords    :   this.state.totalRecords\r\n        };\r\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n        window.scrollTo(0, 0);\r\n    }\r\n  \r\n    handleClick = page => evt => {\r\n      evt.preventDefault();\r\n      this.gotoPage(page);\r\n    }\r\n  \r\n    handleMoveLeft = evt => {\r\n      evt.preventDefault();\r\n      if(this.state.currentPage>1)\r\n        this.gotoPage(this.state.currentPage - 1);\r\n    }\r\n  \r\n    handleMoveRight = evt => {\r\n      evt.preventDefault();\r\n      if(this.state.currentPage<this.state.totalPages)\r\n        this.gotoPage(this.state.currentPage + 1);\r\n    }\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages        =   this.state.totalPages;\r\n        const currentPage       =   this.state.currentPage;\r\n        const pageNeighbours    =   this.state.pageNeighbours;\r\n        //const totalNumbers      =   (this.state.pageNeighbours * 2) + 3;\r\n        //const totalBlocks       =   totalNumbers + 2;\r\n        if(totalPages>4){\r\n            let startPage           =   Math.max(1, currentPage - pageNeighbours);\r\n            let endPage             =   startPage+4;\r\n            if(endPage>totalPages){\r\n                startPage           =   totalPages-4;\r\n                endPage             =   totalPages;\r\n            }\r\n            let pages               =   range(startPage, endPage);\r\n            return [...pages];\r\n        }else{\r\n            let pages               =   [];\r\n            for(let i=1; i<=totalPages; i++){\r\n                pages.push(i);\r\n            }\r\n            return [...pages];\r\n        }\r\n    }\r\n\r\n    render(){\r\n        //console.log('Total Records : ', this.state.totalRecords, ' Total Pages : ', this.state.totalPages);\r\n        if (!this.state.totalRecords || this.state.totalPages === 1) return null;\r\n        const currentPage           =   this.state.currentPage;\r\n        const pages                 =   this.fetchPageNumbers();\r\n        return (\r\n            (!this.props.isProcessing) ?\r\n            <ul className=\"pagination pull-right\">\r\n                {\r\n                    this.state.totalPages > 5?\r\n                    <li className=\"page-item\">\r\n                        <button className=\"page-link\" onClick={this.handleMoveLeft}>Prev</button>\r\n                    </li>:null\r\n                }\r\n                {\r\n                    pages.map((page, index) => {\r\n                        return (\r\n                            <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                                <button className=\"page-link\" onClick={ this.handleClick(page) }>{ page }</button>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    this.state.totalPages > 5?\r\n                    <li className=\"page-item\">\r\n                        <button className=\"page-link\" onClick={this.handleMoveRight}>Next</button>\r\n                    </li>:null\r\n                }\r\n            </ul>\r\n            : null\r\n        )\r\n    }  \r\n}\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport {getDateTime} from '../../Helper/common';\r\nimport {getTaskStatus, getDeliveryWindow} from '../../util/helper';\r\n\r\nclass TaskDetailsModal extends Component {\r\n \tconstructor(props) {\r\n        super(props);\r\n        this.state = {        \t\r\n\t\t\torderDetailsModalShow: true\r\n        }\r\n    };\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n        this.setState({ orderDetailsModalShow: props.orderDetailsModalShow });\r\n    }; \r\n\r\n\trender() {\r\n\t\tconst { orderDetailsModalShow } = this.state;\r\n        let customerFeedback = (this.props.taskDetails && this.props.taskDetails.comment)?this.props.taskDetails.comment:'';\r\n        let taskDetails = (this.props.taskDetails && this.props.taskDetails.order_details)?this.props.taskDetails.order_details:{};\r\n        let responseToCustomer = (taskDetails.reply)?taskDetails.reply.message:null;\r\n\r\n        let completionDetails = taskDetails.completionDetails || {};\r\n        let events = completionDetails.events || {};\r\n        \r\n        let mrchnt_pics = events.onflt_mrchnt_pics || '';\r\n        mrchnt_pics = (!!mrchnt_pics) ? mrchnt_pics.split(',') : [];\r\n\r\n        let recpnt_pics = events.onflt_recpnt_pics || '';\r\n        recpnt_pics = (!!recpnt_pics) ?recpnt_pics.split(',') : [];\r\n\r\n        let recpnt_sig = events.onflt_recpnt_sig || '';\r\n        let mrchnt_sig = events.onflt_mrchnt_sig || '';\r\n        let path = 'https://d15p8tr8p0vffz.cloudfront.net/';\r\n        const responsive = {\r\n            superLargeDesktop: {\r\n                // the naming can be any, depends on you.\r\n                breakpoint: { max: 4000, min: 3000 },\r\n                items: 5\r\n            }, desktop: {\r\n                breakpoint: { max: 3000, min: 1024 },\r\n                items: 2\r\n            }, tablet: {\r\n                breakpoint: { max: 1024, min: 464 },\r\n                items: 2\r\n            },mobile: {\r\n                breakpoint: { max: 464, min: 0 },\r\n                items: 1\r\n            }\r\n        };\r\n\r\n\t\treturn (\r\n\t\t\t<Modal size=\"md\" className=\"c-modal nofooter\" show={orderDetailsModalShow} onHide={this.props.handleCloseModal}>\r\n\t            <Modal.Header closeButton>\r\n\t                <Modal.Title>Task Details</Modal.Title>\r\n\t            </Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <Row noGutters>\r\n                        <Col md=\"6\" sm=\"12\" className=\"l_col\">\r\n                            <div className=\"merchant_box\">\r\n                                <div className=\"detail_p\">\r\n                                    <p><label>Task ID:</label> {taskDetails.id}</p>\r\n                                    <p><label>Task Status:</label> {getTaskStatus(taskDetails.tskStatus)}</p>\r\n                                    <p><label>Delivery Window:</label> {getDeliveryWindow(taskDetails.completeAfter, taskDetails.completeBefore, taskDetails.time_zone)}</p>\r\n                                    <p><label>Order Number:</label> {taskDetails.orderNumber}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"merchant_box\">\r\n                                <h4>Merchant info</h4>\r\n                                {!!taskDetails.merchant ?\r\n                                    <div className=\"detail_p\">\r\n                                        <p><label>Name:</label> <span>{taskDetails.merchant.name}</span>  </p>\r\n                                        <p><label>Phone:</label><span>{taskDetails.merchant.phone}</span></p>\r\n                                        <p><label>Address:</label><span>{taskDetails.merchant.address.number}, {taskDetails.merchant.address.street}, {taskDetails.merchant.address.postalCode}, {taskDetails.merchant.address.city}, {taskDetails.merchant.address.state}, {taskDetails.merchant.address.country}</span></p>\r\n                                        <p><label>Notes:</label><span>{ taskDetails.merchant.notes} </span></p>\r\n                                    </div>:null\r\n                                }\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"6\" sm=\"12\" className=\"r_col\">\r\n                            <div className=\"merchant_box minH\">\r\n                                <h4>Recipient info</h4> \r\n                                {!!taskDetails.merchant ?\r\n                                <div className=\"detail_p\">\r\n                                    <p><label>Name:</label> <span>{taskDetails.recipients.name}</span></p>\r\n                                    <p><label>Phone:</label> <span>{taskDetails.recipients.phone}</span></p>\r\n                                    {\r\n                                        (!!taskDetails.recpnt_email) ?\r\n                                        <p><label>Email:</label> <span>{taskDetails.recpnt_email}</span></p> : null\r\n                                    }\r\n                                    <p><label>Address:</label><span>{taskDetails.recipients.address.number}, {taskDetails.recipients.address.street}, {taskDetails.recipients.address.postalCode}, {taskDetails.recipients.address.city}, {taskDetails.recipients.address.state}, {taskDetails.recipients.address.country}</span></p>\r\n                                    <p><label>Alochol:</label> <span>{taskDetails.alcohol}</span></p>\r\n                                    <p><label>Tip: </label><span>{taskDetails.tip}</span></p>\r\n                                    <p><label>Notes:</label> <span>{taskDetails.recipients.notes}</span></p>\r\n                                </div>:null\r\n                                } \r\n                            </div>\r\n                        </Col>   \r\n                    </Row>\r\n\r\n                    <Row noGutters>\r\n                        <Col md=\"12\" sm=\"12\" className=\"c_info task-d\">\r\n                            <div className=\"merchant_box\">\r\n                            <h4>Driver Details</h4>                            \r\n                                <Row noGutters>\r\n                                    <Col md=\"6\" sm=\"12\">\r\n                                        <div className=\"detail_p\">\r\n                                            <p><label>Driver Name:</label> {taskDetails.driver_name}</p>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row> \r\n\r\n                                <Row noGutters>\r\n                                    <Col md=\"6\" sm=\"12\">\r\n                                        <h6>Merchant Task</h6>\r\n                                        <div className=\"detail_p\">\r\n                                        {\r\n                                            (!!events.work_in_progress_timestamp) ?\r\n                                            <p>\r\n                                                <label>Order Processing:</label> \r\n                                                {getDateTime((events.work_in_progress_timestamp * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.ready_timestamp) ?\r\n                                            <p>\r\n                                                <label>Order Ready:</label> \r\n                                                {getDateTime((events.ready_timestamp * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.merchant_start) ?\r\n                                            <p>\r\n                                                <label>Start:</label> \r\n                                                {getDateTime((events.merchant_start * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.merchant_eta) ?\r\n                                            <p>\r\n                                                <label>2 min eta:</label> \r\n                                                {getDateTime((events.merchant_eta * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.merchant_arrival) ?\r\n                                            <p>\r\n                                                <label>Arrival:</label> \r\n                                                {getDateTime((events.merchant_arrival * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        } \r\n                                        {\r\n                                            (!!events.merchant_complete) ?\r\n                                            <p>\r\n                                                <label>Complete:</label> \r\n                                                {getDateTime((events.merchant_complete * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }                                      \r\n                                        {\r\n                                            (!!events.merchant_worker_note) ?\r\n                                            <p>\r\n                                                <label>Complete:</label> \r\n                                                {events.merchant_worker_note}\r\n                                            </p> : null\r\n                                        }\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md=\"6\" sm=\"12\">\r\n                                        <h6>Recipient Task</h6>\r\n                                        <div className=\"detail_p\">\r\n                                        {\r\n                                            (!!events.recipient_start) ?\r\n                                            <p>\r\n                                                <label>Start:</label> \r\n                                                {getDateTime((events.recipient_start * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.recipient_eta) ?\r\n                                            <p>\r\n                                                <label>2 min eta:</label>\r\n                                                {getDateTime((events.recipient_eta * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }\r\n                                        {\r\n                                            (!!events.recipient_arrival) ?\r\n                                            <p>\r\n                                                <label>Arrival:</label> \r\n                                                {getDateTime((events.recipient_arrival * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        } \r\n                                        {\r\n                                            (!!events.recipient_complete) ?\r\n                                            <p>\r\n                                                <label>Complete:</label> \r\n                                                {getDateTime((events.recipient_complete * 1000), taskDetails.timezone, 'DD-MM-YYYY hh:mm A')}\r\n                                            </p> : null\r\n                                        }                                      \r\n                                        {\r\n                                            (!!events.recipient_worker_note) ?\r\n                                            <p>\r\n                                                <label>Complete:</label> \r\n                                                {events.recipient_worker_note}\r\n                                            </p> : null\r\n                                        }\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row noGutters className=\"sigPhotoRow\">                         \r\n                        <Col md=\"6\" sm=\"12\" className=\"l_col\">\r\n                            <div className=\"merchant_box sigbox\">\r\n                                <h4>Signature Details</h4> \r\n                                {\r\n                                    (!!mrchnt_sig || !!recpnt_sig) ? \r\n                                    <Row noGutters>\r\n                                        <Col md=\"6\" sm=\"12\">\r\n                                            <h6>Merchant Signature</h6>\r\n                                            { (!!mrchnt_sig) ? <img src={`${path}${mrchnt_sig}/282x.png`} /> : <p  className=\"noreply\" > No response yet</p> }\r\n                                        </Col>\r\n\r\n                                        <Col md=\"6\" sm=\"12\" className=\"sigimg\">\r\n                                            <h6>Recipient Signature</h6>\r\n                                            { (!!recpnt_sig) ? <img src={`${path}${recpnt_sig}/282x.png`} /> : <p  className=\"noreply\" > No response yet</p> }\r\n                                        </Col>\r\n                                    </Row>:<p  className=\"noreply\" > No response yet</p>\r\n                                }\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col md=\"6\" sm=\"12\" className=\"r_col\">\r\n                            <div className=\"merchant_box dPhoto\">\r\n                                <h4>Delivery Photo</h4> \r\n\r\n                                {\r\n                                    (recpnt_pics.length > 0 || mrchnt_pics > 0) ?\r\n                                    <Carousel responsive={responsive}>\r\n                                        {\r\n                                            (mrchnt_pics || []).map((pic, i) => {\r\n                                                return (\r\n                                                    <div key={`mrchnt_pics_${i}`} className=\"pr16\"><img src={`${path}${pic}/800x.png`} /></div>\r\n                                                )\r\n                                            })\r\n\r\n                                            (recpnt_pics || []).map((pic, i) => {\r\n                                                return (\r\n                                                    <div key={`recpnt_pics_${i}`} className=\"pr16\"><img src={`${path}${pic}/800x.png`} /></div>\r\n                                                )\r\n                                            })\r\n                                        }                                   \r\n                                    </Carousel>: <p  className=\"noreply\" > No response yet</p>\r\n                                }\r\n                            </div>    \r\n                        </Col>            \r\n                    </Row> \r\n\r\n                    <Row noGutters>\r\n                        <Col md=\"12\" sm=\"12\" className=\"c_info task-d\">\r\n                            <div className=\"merchant_box feedbackpan\">\r\n                                <h4>Feedback</h4>\r\n                                <Row noGutters>\r\n                                    <Col md=\"6\" sm=\"12\">\r\n                                        <h6>Customer Feedback</h6>\r\n                                        <p>{customerFeedback}</p>\r\n                                    </Col>\r\n                                    <Col md=\"6\" sm=\"12\">\r\n                                        <h6>Response to Customer </h6>\r\n                                        {\r\n                                            responseToCustomer?\r\n                                            <p>{responseToCustomer}</p>:\r\n                                            <p  className=\"noreply\" > No response yet</p>\r\n                                        }                                        \r\n                                    </Col>\r\n                                </Row>                                       \r\n                            </div>\r\n                        </Col>\r\n                    </Row>                   \r\n                </Modal.Body>\t\r\n\t        </Modal>\r\n\t\t)\r\n\t};\r\n};\r\n\r\nexport default TaskDetailsModal;","import moment from 'moment-timezone';\r\nimport ReplyModal from './replyModal';\r\nimport React, { Component } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport Pagination from '../../Helper/pagination';\r\nimport TaskDetailsModal from './taskDetailsModal';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport { avgCustomerFeedback } from '../../Helper/common';\r\n\r\nclass List extends Component {\r\n \tconstructor(props) {\r\n        super(props);\r\n        this.state = {     \r\n        \ttaskDetails:{},\t   \r\n        \trepliedIds: [], \r\n\t\t\treplyModalShow: false,\r\n        \tfilteredFeedbackData: [],\t\r\n\t\t\torderDetailsModalShow: false\r\n        }\r\n    };\r\n\r\n\thandleCloseModal(){\r\n\t\tthis.setState({ replyModalShow: false, orderDetailsModalShow: false });\r\n\t};\r\n\r\n\thandleOpenModal(e, type, ordObj){\r\n\t\te.stopPropagation();\r\n\t\t\r\n\t\tif(type === 'REPLY'){\r\n\t\t\tthis.setState({ replyModalShow: true, taskDetails: ordObj });\r\n\t\t} else if(type === 'ORDERDETAILS'){\r\n\t\t\tthis.setState({ orderDetailsModalShow: true, taskDetails: ordObj });\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif(props.replyResult && props.replyResult !== this.props.replyResult){\r\n\t\t\tlet repliedIds = this.state.repliedIds || [];\r\n            repliedIds.push(props.replyResult.task_id);\r\n\r\n\t\t\tthis.setState({ replyModalShow: false, orderDetailsModalShow: false, repliedIds: repliedIds });\r\n\t\t}\r\n\r\n\t\tthis.setState({ filteredFeedbackData: props.filteredFeedbackData });\r\n    }; \t\r\n\r\n\trender() {\r\n\t\tconst { replyModalShow, orderDetailsModalShow, taskDetails, repliedIds, filteredFeedbackData } = this.state;\r\n\t\tlet totalFeedBack = (this.props.feedbackSummeryData && this.props.feedbackSummeryData.total_feedback)?this.props.feedbackSummeryData.total_feedback:0; \r\n\t\tlet feedbackSummery = (this.props.feedbackSummeryData && this.props.feedbackSummeryData.rows)?this.props.feedbackSummeryData.rows:[]; \r\n\r\n\t\t//pagination start here\r\n\t\tlet itemsPerPage = 500;\r\n\t\tlet totalRecords = this.props.feedBackCount || 0;\r\n\r\n\t\tlet avgRating = 0;\r\n\t\tlet ratingPrcnt = 0;\r\n\t\tlet totalRatingPrcnt = 0;\r\n\r\n\t\tfeedbackSummery.map((el, index) => {\r\n\t\t\ttotalRatingPrcnt += (parseFloat(el.percentage));\r\n\t\t\tratingPrcnt += (parseFloat(el.rating) * parseFloat(el.percentage));\r\n\t\t});\r\n\r\n\t\tavgRating = parseFloat(ratingPrcnt / totalRatingPrcnt);\r\n\r\n\t\tlet avgStarObj = [];\r\n\t\tlet avgStarObj1 = [];\r\n\t\tlet avgRatingObj = avgCustomerFeedback(avgRating);\r\n\r\n\t\tfor(let s=1; s<=avgRatingObj.newwhole; s++){\r\n\t\t\tlet key = \"star-\"+s;\r\n\t\t\tavgStarObj.push(<img key={key} src=\"/assets/star.svg\" />);\r\n\t\t};\r\n\r\n\t\tif(avgRatingObj.fraction==.5){\r\n\t\t\tavgStarObj.push(<img key=\"star-h\" src=\"/assets/star-h.svg\" />);\r\n\t\t};\r\n\r\n\t\tfor(let s=1; s <= (5 - avgStarObj.length); s++){\r\n\t\t\tlet key = \"star-g-\"+s;\r\n\t\t\tavgStarObj1.push(<img key={key} src=\"/assets/star-g.svg\" />);\r\n\t\t};\r\n\r\n\t\t// console.log('!!!!repliedIds!!!!!', repliedIds);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n                    (!!!this.props.isLoading)?\r\n                    <div>                    \t              \t\t\t\r\n\t\t\t\t\t\t<section className=\"feedback_wrap\">\r\n\t\t\t\t\t\t\t<h4 className=\"titelFb\">Customer Feedback</h4>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(feedbackSummery.length > 0)?\r\n\t\t\t\t\t\t\t\t<div className=\"fbSecwrap\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"bstarPan\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"bstar_up\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>{(avgRating > 0)?avgRating.toFixed(2):0}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"big_star\">{avgStarObj}{avgStarObj1}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"bstar_down\">based on {totalFeedBack} ratings</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"statsbarPan\">\r\n\t\t\t\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tfeedbackSummery.map((el, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={`rate-${index}`} className=\"gBar\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>{el.rating} Stars</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"bar\"><ProgressBar now={el.percentage} /></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"totalP\">{el.feedback_count} Total</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>:null\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t<div className=\"filter_pan\">\r\n\t\t\t\t\t\t\t\t<span className=\"ftitle\">Filter by:</span>\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={this.props.allRatings} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"all\" className=\"c_box\" /> <span className=\"fwb\">All ratings</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={(this.props.filterByStart.includes('5'))} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"5\" className=\"c_box\" /> <span>5 Stars</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={(this.props.filterByStart.includes('4'))} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"4\" className=\"c_box\" /> <span>4 Stars</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={(this.props.filterByStart.includes('3'))} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"3\" className=\"c_box\" /> <span>3 Stars</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={(this.props.filterByStart.includes('2'))} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"2\" className=\"c_box\" /> <span>2 Stars</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"cbPan\">\r\n\t\t\t\t\t\t\t\t\t<input onChange={this.props.handleCheckboxFilter} checked={(this.props.filterByStart.includes('1'))} type=\"checkbox\" id=\"rating\" name=\"rating\" value=\"1\" className=\"c_box\" /> <span>1 Stars</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className={`table_sec feed feedbackTable ${this.props.isFiltering ? \"tableloder\":\"\"} `}>\r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Order Number</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Customer Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Date · Time</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Rating</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Comments</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Follow Up</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t \t(!isEmpty(filteredFeedbackData) && filteredFeedbackData.length > 0) ? \r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t(filteredFeedbackData.length > 0) && filteredFeedbackData.map((el, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet starObj = [];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet rate = (el.rating)?parseInt(el.rating):0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < rate; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstarObj.push(<img key={`star-sm-${i}`} src=\"/assets/star-sm.svg\" />);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// let date = moment(el.time_stamp).format(\"YYYY-MM-DD\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={`feedback-list-${index}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{el.tp_order_number} <span className=\"docmodbtn\" onClick={(e)  => this.handleOpenModal(e, 'ORDERDETAILS', el)}><img src=\"/assets/doc.svg\" /></span></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{el.cust_first_name} {el.cust_last_name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{el.time_stamp}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><div className=\"starRange\">{starObj}</div></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t<td abbr=\"tr\" className=\"acell\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t<label>{el.comment}</label> \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t(el.comment)?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t<span className=\"tTip\">{el.comment}</span>:null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(el.reply === \"true\" || (repliedIds.indexOf(el.order_details.id) > -1) )?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"fbReply\" style={{cursor: 'default'}}><img src=\"/assets/checkmark-black.svg\" /></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"fbReply\" onClick={(e)  => this.handleOpenModal(e, 'REPLY', el)}>Reply</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t:<tbody><tr className=\"no-records\"><td colSpan=\"6\">No Records</td></tr></tbody> \r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(!!replyModalShow) ?\r\n\t\t\t\t\t\t\t\t<ReplyModal reply={this.props.reply} isReplying={this.props.isReplying} replyModalShow={replyModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\r\n\t\t\t\t\t\t\t} \r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(!!orderDetailsModalShow) ?\r\n\t\t\t\t\t\t\t\t<TaskDetailsModal isReplying={this.props.isReplying} orderDetailsModalShow={orderDetailsModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\r\n\t\t\t\t\t\t\t} \r\n\t\t\t        \t</section>\t\r\n\t\t\t        \t\r\n\t\t\t        \t{\r\n\t\t\t\t\t\t\ttotalRecords >= itemsPerPage ?\r\n\t\t\t\t\t\t\t<div className=\"pagination_Pan\"><Pagination totalRecords={totalRecords} pageLimit={itemsPerPage} pageNeighbours={1} onPageChanged={this.props.changePage} /></div>:null\r\n\t                  \t}\t\t\t        \t\r\n\t\t        \t</div> : <div className=\"loader\">Loading....</div>\r\n\t\t        }\r\n        \t</div>       \t\r\n\t\t)\r\n\t};\r\n};\r\n\r\nexport default List;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport './calendar.css';\r\n\r\nexport default class Calendar extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state                                =  {\r\n         month                    :   '',\r\n         year                     :   '',\r\n         show              :  false,\r\n         noofdays          :  ''\r\n      }\r\n      this.monthName          =   ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n      this.weekDaysArr        =  [];\r\n      this.getMonthDays       =  this.getMonthDays.bind(this);\r\n      this.prevMonth          =  this.prevMonth.bind(this);\r\n      this.nextMonth          =  this.nextMonth.bind(this);\r\n      this.selectDate         =  this.selectDate.bind(this);\r\n      this.handleClick        =  this.handleClick.bind(this);\r\n      this.handleDateRange    =  this.handleDateRange.bind(this);\r\n      this.outerClick         =  this.outerClick.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      let date                =  new Date();\r\n      let month               =  date.getMonth();\r\n      let year                =  date.getFullYear();\r\n      let calendar            =  this.getMonthDays(month, year);\r\n      this.setState({         \r\n         month          :  month,\r\n         year           :  year,\r\n         calendar       :  calendar\r\n      }, function() {\r\n\r\n      })\r\n      document.addEventListener('click', this.outerClick)\r\n   }\r\n\r\n   outerClick(e) {\r\n      e.stopPropagation();\r\n      if(!!this.state.show && !this.node.contains(e.target) && e.target.getAttribute('data') !== 'ignore-outer-click') {\r\n         this.setState({\r\n            show: false\r\n         })\r\n      }\r\n   }\r\n\r\n   handleClick(){\r\n      this.setState({\r\n         show: !this.state.show\r\n      })\r\n   }\r\n\r\n   handleDateRange(days, type) {\r\n      let endDate          =  moment();\r\n      let startDate        =  moment().subtract((days - 1), \"days\");\r\n      //console.log('Date Range : ', days, startDate.format('YYYY-MM-DD'), endDate.format('YYYY-MM-DD'));\r\n      this.props.onDateRange({\r\n         startDate   :  startDate.format('YYYY-MM-DD'),\r\n         endDate     :  endDate.format('YYYY-MM-DD'),\r\n         noofdays    :  (type === 'Custom') ? days : ''\r\n      })\r\n   }\r\n\r\n   selectDate(date, month, week){\r\n      let year          =  this.state.year;\r\n      let fulldate      =  moment(`${year}-${(month + 1)}-${date}`).format('YYYY-MM-DD');\r\n      //console.log(date, month, week, fulldate);\r\n      this.props.onSelectDate(fulldate);\r\n   }\r\n\r\n   \r\n   getMonthDays(month, year, selWeek = ''){\r\n      let firstDate       =   new Date(year, month, 1);\r\n      let firstDay        =   firstDate.getDay();\r\n      let weekFirstDate   =   new Date(firstDate.setDate(firstDate.getDate()-firstDay));\r\n      let date            =   weekFirstDate;\r\n      let lastDate        =   new Date(year, month + 1, 0);\r\n      let lastDay         =   lastDate.getDay();\r\n      let weekLastDate    =   new Date(lastDate.setDate(lastDate.getDate()+(6-lastDay)));\r\n      let days            =   [];\r\n      let today           =   new Date();\r\n      \r\n      while (date.getTime() <= weekLastDate.getTime()) {\r\n          let chkCurrDate        =   false;\r\n          if(date.getDate() === new Date(date.getTime()).getDate().toString()\r\n              && today.getMonth() === new Date(date.getTime()).getMonth()\r\n              && today.getFullYear() === new Date(date.getTime()).getFullYear()\r\n          ){\r\n              chkCurrDate        =   true;\r\n          }\r\n          days.push({\r\n              date         :  date.getDate(),\r\n              month        :  date.getMonth(),\r\n              year         :  date.getFullYear(),\r\n              day          :  this.weekDaysArr[date.getDay()],\r\n              fulldate     :  moment(date.getTime()).format('YYYY-MM-DD'),\r\n              currentDate  :  chkCurrDate\r\n\r\n          });\r\n          date.setDate(date.getDate() + 1);\r\n      }\r\n\r\n      var i,j,chunk        =  7;\r\n      let calendarArr      =  [];\r\n      for (i=0,j=days.length; i<j; i+=chunk) {\r\n          let arr          =  days.slice(i,i+chunk);\r\n          calendarArr.push(arr);\r\n      }\r\n\r\n      let currentWeek      =  0;\r\n      if(selWeek === ''){\r\n          calendarArr.forEach((dateArr, k) => {\r\n              if(dateArr.some(date => date.date === today.getDate() && date.month === today.getMonth()))\r\n                  currentWeek     =   k;\r\n          })\r\n      } else {\r\n          currentWeek     =   selWeek;\r\n      }\r\n      \r\n      return {allDays: calendarArr, month: this.monthName[month], year: year, currentWeek: currentWeek};\r\n   }\r\n\r\n   prevMonth(week = ''){\r\n      let month                     =  this.state.month;\r\n      let year                      =  this.state.year;\r\n      if(this.state.month === 0){\r\n         month                      =  11;\r\n         year                       =  (year - 1);\r\n      }else{\r\n         month                      =  (month - 1);\r\n         year                       =  year;\r\n      }\r\n      let calendar                  =  this.getMonthDays(month, year, week);\r\n      this.setState({\r\n         month                      :   month,\r\n         year                       :   year,\r\n         calendar                   :  calendar\r\n      })\r\n   }\r\n\r\n   nextMonth(week = ''){\r\n      let month                     =  this.state.month;\r\n      let year                      =  this.state.year;\r\n      if(month === 11){\r\n         month                      =  0;\r\n         year                       =  (year + 1);\r\n      }else{\r\n         month                      =  (month + 1);\r\n         year                       =  year;\r\n      }\r\n      let calendar                  =  this.getMonthDays(month, year, week);\r\n      this.setState({\r\n         month                      :   month,\r\n         year                       :   year,\r\n         calendar                   :  calendar\r\n      })\r\n   }\r\n  \r\n   onChangeHandle = (e) => {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      this.setState({ [name]: value }, function () {\r\n      });\r\n   }\r\n   \r\n   componentWillReceiveProps(props) {\r\n      if(this.props.selectDate !== props.selectDate) {\r\n         let date                =  new Date(props.selectDate);\r\n         let month               =  date.getMonth();\r\n         let year                =  date.getFullYear();\r\n         let calendar            =  this.getMonthDays(month, year);\r\n         this.setState({         \r\n            month          :  month,\r\n            year           :  year,\r\n            calendar       :  calendar\r\n         }, function() {\r\n\r\n         })\r\n      }\r\n      if(this.state.noofdays !== props.noofdays) {\r\n         this.setState({\r\n            noofdays : props.noofdays\r\n         })\r\n      }\r\n      /* this.setState({\r\n         //show: false\r\n      }) */\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      document.removeEventListener('click', this.outerClick);\r\n   }\r\n\r\n   render() {\r\n      let calendar         =  this.state.calendar || {};\r\n      let selectDate       =  this.props.selectDate || '';\r\n      let startDate        =  this.props.startDate || '';\r\n      let currTimestamp    =  (!!startDate) ? moment(startDate).format('X') : '';\r\n      let endDate          =  this.props.endDate || '';\r\n      let endTimestamp     =  (!!endDate) ? moment(endDate).format('X') : '';\r\n      let tillDate         =  this.props.tillDate || '';\r\n      let tillTimestamp    =  (!!tillDate) ? moment(tillDate).format('X') : '';\r\n      let noofdays         =  this.props.noofdays || '';\r\n      return (      \r\n         <div ref={node => this.node = node} className={!this.state.show ? '': 'cOpen '}>\r\n            \r\n            <input type=\"text\" className={this.props.className} placeholder={this.props.placeholder} value={selectDate} readOnly onClick={this.handleClick} disabled={!!this.props.disabled}/>\r\n            \r\n            <div className={!this.state.show ? 'calendar hide': 'calendar '}>\r\n               <table>\r\n                  <thead>\r\n                  <tr>\r\n                     <th colSpan=\"5\">{calendar.month} {calendar.year}</th>\r\n                     <th colSpan=\"2\">\r\n                        <span className=\"aro_sec\">\r\n                           <a onClick={this.prevMonth}><img src=\"/assets/chevron_right.svg\" alt=\"left_arrow\"/></a>\r\n                           &nbsp;\r\n                           <a onClick={this.nextMonth}><img src=\"/assets/chevron-right.svg\" alt=\"right_arrow\"/></a>\r\n                        </span>\r\n                     </th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr className=\"blue_bg\">\r\n                     <td width=\"14.285%\">SU</td>\r\n                     <td width=\"14.285%\">MO</td>\r\n                     <td width=\"14.285%\">TU</td>\r\n                     <td width=\"14.285%\">WE</td>\r\n                     <td width=\"14.285%\">TH</td>\r\n                     <td width=\"14.285%\">FR</td>\r\n                     <td width=\"14.285%\">SA</td>\r\n                  </tr>\r\n                  {\r\n                     (!!calendar.allDays && calendar.allDays.length > 0) ?\r\n                     calendar.allDays.map((week, k) => {\r\n                        return (\r\n                           <tr key={k}>\r\n                           {\r\n                              week.map((days, i) => {\r\n                                 let timestamp        =  moment(days.fulldate).format('X');\r\n                                 let clsName          =  '';\r\n                                 //console.log(tillDate);\r\n                                 if(currTimestamp == timestamp)\r\n                                    clsName           =  'select start';\r\n                                 if(!!endTimestamp && timestamp < endTimestamp && currTimestamp < timestamp)\r\n                                    clsName           =  'select range';\r\n                                 if(!!endTimestamp && timestamp == endTimestamp && currTimestamp < timestamp)\r\n                                    clsName           =  'select end';\r\n                                 return (\r\n                                    (!!tillTimestamp && tillTimestamp < timestamp) ?\r\n                                    <td key={i} align=\"center\" className=\"disabled\">\r\n                                       {days.date}\r\n                                    </td> : <td key={i} align=\"center\" className={clsName} onClick={()   => this.selectDate(days.date, days.month, k)}>\r\n                                     {days.date}\r\n                                  </td>\r\n                                    \r\n                                 )\r\n                              })\r\n                           }\r\n                           </tr>\r\n                        )\r\n                     }) : null\r\n                  }\r\n                  </tbody>\r\n               </table>\r\n               <div className=\"cus_last_date\">\r\n                  <ul>\r\n                     <li>Date Range</li>\r\n                     <li onClick={() => this.handleDateRange(7, '')}>Last 7 days</li>\r\n                     <li onClick={() => this.handleDateRange(30, '')}>Last 30 days</li>\r\n                     <li onClick={() => this.handleDateRange(90, '')}>Last 90 days</li>\r\n                     <li className=\"d_flex_n\">\r\n                        Last <input type=\"text\" size=\"20\" value={this.state.noofdays} name=\"noofdays\" onChange={this.onChangeHandle}/> days\r\n                        {\r\n                           (!!this.state.noofdays && this.state.noofdays !== noofdays) ?\r\n                           <a data=\"ignore-outer-click\" onClick={() => this.handleDateRange(this.state.noofdays, 'Custom')}>\r\n                              <img data=\"ignore-outer-click\" src=\"/assets/checkmark_blue.svg\" alt=\"check\"/>\r\n                           </a> : \r\n                           (!!noofdays && !!this.state.noofdays) ? \r\n                           <img src=\"/assets/checkmark_blue.svg\" className=\"blackCheck\" alt=\"check\"/> \r\n                           : null\r\n                        }\r\n                     </li>\r\n                  </ul>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react';\r\nimport ReplyModal from './replyModal';\r\nimport moment from 'moment-timezone';\r\nimport { Card, Col, Row, Form } from 'reactstrap';\r\nimport TaskDetailsModal from './taskDetailsModal';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\n\r\nclass FeedBackAdvanceFilter extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttypeOpen: false,\r\n            showSearch: false,\r\n\t\t\tsearch: {\r\n                text                :   '',\r\n                merchant_address    :   '',\r\n                recipient_address   :   '',\r\n                start_time          :   '',\r\n                end_time            :   '',\r\n                type                :   'order-number',\r\n                field               :  'order_number',\r\n                label               :   'Order Number'\r\n            },\r\n            repliedIds: [],    \r\n            replyModalShow: false,\r\n            orderDetailsModalShow: false\r\n\t\t};\r\n\r\n\t\tthis.collapse = this.collapse.bind(this);\r\n\t\tthis.resetSearch = this.resetSearch.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\t\tthis.handleSelectbox = this.handleSelectbox.bind(this);    \r\n\t};\r\n\r\n\tcollapse(type) {\r\n        this.setState({ typeOpen: false });\r\n    }; \t\r\n\r\n\thandleSelectbox(cls) {\r\n        this.setState({ [cls]: !this.state[cls] });\r\n    };\r\n\r\n    resetSearch() {\r\n        this.setState({\r\n            search: {\r\n                text                :  '',\r\n                merchant_address    :  '',\r\n                recipient_address   :  '',\r\n                delivery_time       :  '',\r\n                start_date          :  '',\r\n                end_date            :  '',\r\n                type                :  'order-number',\r\n                field               :  'order_number',\r\n                label               :  'Order Number'\r\n            },\r\n            searchResultList            : []\r\n        });\r\n    };\r\n\r\n    changeSearchType(data) {\r\n        this.setState({ search: { type: data.type, label: data.label, field: data.field, text: '' }});\r\n    }; \r\n\r\n    handleSearch(e) {\r\n        let value = e.target.value;\r\n        this.setState({\r\n            search: { ...this.state.search, text: e.target.value }\r\n        }, function () {\r\n            if (value.length > 1){             \r\n                this.props.searchFilter({\r\n                    type: this.state.search.type,\r\n                    [this.state.search.field]: value,\r\n                    user_type: this.props.type\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    searchResultList: []\r\n                })\r\n            }\r\n        })\r\n    }; \r\n\r\n    handleCloseModal(){\r\n        this.setState({ replyModalShow: false, orderDetailsModalShow: false });\r\n    };\r\n\r\n    handleOpenModal(e, type, ordObj){\r\n        e.stopPropagation();\r\n        \r\n        if(type === 'REPLY'){\r\n            this.setState({ replyModalShow: true, taskDetails: ordObj });\r\n        } else if(type === 'ORDERDETAILS'){\r\n            this.setState({ orderDetailsModalShow: true, taskDetails: ordObj });\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(props) {\r\n        if(props.replyResult && props.replyResult !== this.props.replyResult){\r\n            let repliedIds = this.state.repliedIds || [];\r\n            repliedIds.push(props.replyResult.task_id);\r\n\r\n            this.setState({ replyModalShow: false, orderDetailsModalShow: false, repliedIds: repliedIds });\r\n        }\r\n\r\n        this.setState({ isSearching: props.isSearching, searchResultList: props.searchResultList, showSearch: props.showSearch });\r\n    };\r\n\r\n\trender() {\r\n\t\tconst { isSearching, searchResultList, replyModalShow, showSearch, orderDetailsModalShow, repliedIds, taskDetails } = this.state;\t\t\r\n        // console.log('!!!!repliedIds!!!!!', repliedIds);\r\n        \r\n\t\treturn (\r\n\t\t\t<div className={`searchMod_sec${(!!showSearch) ? '' : ' hide'}`}>\r\n\t\t\t\t<div className=\"s_bar\">\r\n              \t\t<label>Search by:</label>\r\n              \t\t<Form method=\"get\" action=\"\" autoComplete=\"off\">\r\n              \t\t\t<div className={`select-box ${this.state.typeOpen ? \" sopen\" : \" \"}`} onBlur={() => this.collapse('typeOpen')}>\r\n\t              \t\t\t<div className=\"s-result\" onClick={() => this.handleSelectbox('typeOpen')}>\r\n\t                            <input type=\"text\" autoComplete=\"off\" value={this.state.search.label} onChange={() => this.handleSelectbox('typeOpen')} name=\"searchType\"/>\r\n\t                        </div>\r\n\t\t\t\t\t\t\t<ul>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\r\n                                    type: 'order-number',\r\n                                    field: 'order_number',\r\n                                    label: 'Order Number'\r\n                                })}>Order Number</li>\r\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\r\n                                    type: 'name',\r\n                                    field: 'name',\r\n                                    label: 'Customer Name'\r\n                                })}>Customer Name</li>\r\n\t\t\t\t\t\t\t\t<li onClick={() => this.changeSearchType({\r\n                                    type: 'email',\r\n                                    field: 'email',\r\n                                    label: 'Customer Email'\r\n                                })}>Customer Email</li>\r\n\t\t\t\t\t\t\t</ul>\r\n                    \t</div>\r\n\r\n                    \t<div className=\"resboxwrap\">\r\n                    \t\t<div className=\"search_box\">\r\n                    \t\t\t<input type=\"text\"autoComplete=\"off\" placeholder=\"Search\" name=\"searchTxt\" value={this.state.search.text} onChange={this.handleSearch} />\r\n                    \t\t</div>\r\n\r\n                    \t\t<button onClick={this.resetSearch} className=\"reset_btn\" type=\"reset\">Reset</button>\r\n                     \t</div>\r\n              \t\t</Form>\r\n               </div>\r\n\r\n               {\r\n                    (!isEmpty(searchResultList) && searchResultList.length > 0) ? \r\n                    <div>\r\n                        <div className=\"table_sec feed\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Order Number</th>\r\n                                        <th>Customer Name</th>\r\n                                        <th>Date · Time</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Comments</th>\r\n                                        <th>Follow Up</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        (searchResultList.length > 0) && searchResultList.map((el, index) => {\r\n                                            let starObj = [];\r\n                                            let rate = (el.rating)?parseInt(el.rating):0;\r\n                                            \r\n                                            for (let i = 0; i < rate; i++) {\r\n                                                starObj.push(<img key={`star-sm-${i}`} src=\"/assets/star-sm.svg\" />);\r\n                                            }\r\n\r\n                                            // let date = moment(el.time_stamp).format(\"YYYY-MM-DD\");\r\n                                            return (\r\n                                                <tr key={`feedback-list-${index}`}>\r\n                                                    <td>{el.tp_order_number} <span className=\"docmodbtn\" onClick={(e)  => this.handleOpenModal(e, 'ORDERDETAILS', el.order_details)}><img src=\"/assets/doc.svg\" /></span></td>\r\n                                                    <td>{el.cust_first_name} {el.cust_last_name}</td>\r\n                                                    <td>{el.time_stamp}</td>\r\n                                                    <td><div className=\"starRange\">{starObj}</div></td>\r\n                                                    <td abbr=\"tr\" className=\"acell\">\r\n                                                        <label>{el.comment}</label>\r\n                                                        {\r\n                                                            (el.comment)?\r\n                                                            <span className=\"tTip\">{el.comment}</span>:null\r\n                                                        }\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            (el.reply === \"true\" || (repliedIds.indexOf(el.order_details.id) > -1))?\r\n                                                            <span className=\"fbReply\" style={{cursor: 'default'}}><img src=\"/assets/checkmark-black.svg\" /></span>\r\n                                                            :\r\n                                                            <span className=\"fbReply\" onClick={(e)  => this.handleOpenModal(e, 'REPLY', el)}>Reply</span>\r\n                                                        }   \r\n                                                    </td>\r\n                                                </tr>   \r\n                                            )\r\n                                        })\r\n                                    }                                           \r\n                                </tbody>\r\n                            </table>                        \r\n                        </div>\r\n\r\n                        <div className=\"resultCount\">{searchResultList.length} SEARCH RESULT(S)</div>\r\n                        <div className=\"t_result\"></div>\r\n                    </div> : <div className=\"noresult\">Type to search and relevant results will appear</div>\r\n                }   \r\n\r\n                {\r\n                    (!!replyModalShow) ?\r\n                    <ReplyModal reply={this.props.reply} isReplying={this.props.isReplying} replyModalShow={replyModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\r\n                } \r\n\r\n                {\r\n                    (!!orderDetailsModalShow) ?\r\n                    <TaskDetailsModal isReplying={this.props.isReplying} orderDetailsModalShow={orderDetailsModalShow} handleCloseModal={this.handleCloseModal.bind(this)} taskDetails={taskDetails} /> : null\r\n                }\r\n\t\t\t</div>\t\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default FeedBackAdvanceFilter;","import React from 'react';\r\nimport lodash from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport { Card, Col, Row, Form } from 'reactstrap';\r\nimport Calendar from '../../components/Calendar/calendar';\r\nimport FeedBackAdvanceFilter from './feedbackAdvanceFilter';\r\nimport {error as notifyerror} from '../../util/notify';\r\nimport { isEqual, isEmpty } from 'lodash';\r\n\r\nclass FeedBackFilter extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet endDate = moment().format('YYYY-MM-DD');\r\n\t\tlet startDate = moment().subtract(1, 'days').format('YYYY-MM-DD');\r\n\t\tthis.state = {\r\n\t\t\tarea: {},\r\n\t\t\tstores: [],\r\n\t\t\tstateTxt: '',\r\n\t\t \tareaTxt: '',\r\n\t\t \tstoreTxt: '',\r\n\t\t\tsOpen: false,\r\n\t\t\taOpen: false,\r\n\t\t\tstOpen: false,\t\r\n\t\t \tshowSearch: false,\r\n         \tshowFilter: false,\r\n\t\t\tfilteredList: {},\r\n\t\t\ttype: 'general',\r\n\t\t\tfilterKeys: {State:[], Area: [], Store: []},\r\n\t\t\tmakeSummeryFilterObj: {\r\n\t\t\t\ttype: 'date',\r\n\t\t\t\tend: endDate, \r\n\t\t\t\tstart: startDate\r\n\t\t\t},\r\n\t\t\tmakeFeedbackFilterObj: {\r\n\t\t\t\tpage: 1,\t\r\n\t\t\t\ttype: 'date',\r\n\t\t\t\tend: endDate,\r\n\t\t\t\tstart: startDate,\t\t\t\r\n\t\t\t\tfilter_rating_by: [],\r\n\t\t\t\torder_by: \"date_time\"\r\n\t\t\t},\r\n\t\t\tendDate: endDate,\r\n\t\t\tstartDate: startDate,\r\n\t\t\tnoofdays: '' \r\n\t\t}; \r\n\r\n\t\tthis.areaDropdownInput = React.createRef();\r\n\t\tthis.stateDropdownInput = React.createRef();\r\n\t\tthis.storeDropdownInput = React.createRef();   \r\n\t};\t\r\n\r\n\tupdateFeedbackSummery = () => {\r\n\t\tlet userType = this.state.type;\r\n\t\tlet makeSummeryFilterObj = {...this.state.makeSummeryFilterObj}; \r\n\t\tlet AreaArray = (this.state.filterKeys && this.state.filterKeys.Area) || [];\r\n\t\tlet StateArray = (this.state.filterKeys && this.state.filterKeys.State) || [];\r\n\t\tlet StoreArray = (this.state.filterKeys && this.state.filterKeys.Store) || [];\r\n\r\n\t\tdelete makeSummeryFilterObj.place;\r\n\t\tdelete makeSummeryFilterObj.store_id;\r\n\t\tmakeSummeryFilterObj.user_type = userType;\r\n\t\tif(StateArray.length > 0 || AreaArray.length > 0 && StoreArray.length > 0){\r\n\t\t\tif(makeSummeryFilterObj.type === 'store') {\r\n\t\t\t\tlet storeIds = [];\t\r\n\t\t\t\tStoreArray.forEach(function(skey) {\r\n\t\t\t\t\tstoreIds.push(skey.store_id);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tmakeSummeryFilterObj.store_id = storeIds;\r\n\t\t\t} else if(makeSummeryFilterObj.type === 'place') {\r\n\t\t\t\tlet placeObj = [];\t\r\n\t\t\t\tStateArray.forEach(function(skey) {\r\n\t\t\t\t\tlet areaIds = [];\r\n\t\t\t\t\tAreaArray.forEach(function(akey) {\r\n\t\t\t\t\t\tif(akey.state === skey.value){\r\n\t\t\t\t\t\t\tareaIds.push(akey.area_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tplaceObj.push({\r\n\t\t\t\t\t\tzone_id: areaIds,\r\n\t\t\t\t\t\tstate: skey.value\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmakeSummeryFilterObj.place = placeObj;\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// console.log('makeSummeryFilterObj', makeSummeryFilterObj);\r\n\t\tthis.setState({ makeSummeryFilterObj: makeSummeryFilterObj }, ()=> {\r\n\t\t\tthis.props.getSummary(makeSummeryFilterObj);\r\n\t\t});\r\n\t};\r\n\r\n\tupdateFeedbackList = (filterData) => {\r\n\t\tlet userType = this.state.type;\r\n\t\tlet makeFeedbackFilterObj = {...this.state.makeFeedbackFilterObj}; \r\n\t\tlet AreaArray = (this.state.filterKeys && this.state.filterKeys.Area) || [];\r\n\t\tlet StateArray = (this.state.filterKeys && this.state.filterKeys.State) || [];\r\n\t\tlet StoreArray = (this.state.filterKeys && this.state.filterKeys.Store) || [];\r\n\r\n\t\tdelete makeFeedbackFilterObj.place;\r\n\t\tdelete makeFeedbackFilterObj.store_id;\r\n\t\tmakeFeedbackFilterObj.user_type = userType;\r\n\t\tif(StateArray.length > 0 || AreaArray.length > 0 && StoreArray.length > 0){\r\n\t\t\tif(makeFeedbackFilterObj.type === 'store') {\r\n\t\t\t\tlet storeIds = [];\t\r\n\t\t\t\tStoreArray.forEach(function(skey) {\r\n\t\t\t\t\tstoreIds.push(skey.store_id);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tmakeFeedbackFilterObj.store_id = storeIds;\r\n\t\t\t} else if(makeFeedbackFilterObj.type === 'place') {\r\n\t\t\t\tlet placeObj = [];\t\r\n\t\t\t\tStateArray.forEach(function(skey) {\r\n\t\t\t\t\tlet areaIds = [];\r\n\t\t\t\t\tAreaArray.forEach(function(akey) {\r\n\t\t\t\t\t\tif(akey.state === skey.value){\r\n\t\t\t\t\t\t\tareaIds.push(akey.area_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tplaceObj.push({\r\n\t\t\t\t\t\tzone_id: areaIds,\r\n\t\t\t\t\t\tstate: skey.value\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmakeFeedbackFilterObj.place = placeObj;\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// console.log('getFeedback makeSummeryFilterObj', makeFeedbackFilterObj);\r\n\t\tthis.setState({ makeFeedbackFilterObj: makeFeedbackFilterObj }, ()=> {\r\n\t\t\t//console.log(makeFeedbackFilterObj);\r\n\t\t\tlet data\t\t=\t{\r\n\t\t\t\t...makeFeedbackFilterObj,\r\n\t\t\t\tfilter: filterData\r\n\t\t\t}\r\n\t\t\tthis.props.getFeedback(data);\r\n\t\t});\r\n\t};\r\n\r\n\thandleUpdateFilter\t=\t()\t=>\t{\t\t\r\n\t\tthis.updateFeedbackSummery();\r\n\t\tthis.updateFeedbackList({\r\n\t\t\tmakeFeedbackFilterObj: this.state.makeFeedbackFilterObj,\r\n\t\t\tmakeSummeryFilterObj: this.state.makeSummeryFilterObj,\r\n\t\t\tuser_type:this.props.userType,\r\n\t\t\ttype: this.state.type,\r\n\t\t\tfilterKeys: this.state.filterKeys\r\n\t\t});\r\n\t\tconsole.log('Feedback Update Filter : ', {\r\n\t\t\tmakeFeedbackFilterObj: this.state.makeFeedbackFilterObj,\r\n\t\t\tmakeSummeryFilterObj: this.state.makeSummeryFilterObj,\r\n\t\t\tuser_type:this.props.userType,\r\n\t\t\ttype: this.state.type,\r\n\t\t\tfilterKeys: this.state.filterKeys\r\n\t\t})\r\n\t}\r\n\t\r\n\thandleTypeChange(type) {\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tmakeFeedbackFilterObj.page = 1;\r\n\t\tthis.setState({ \r\n\t\t\ttype: type, \r\n\t\t\tallRatings: true, \r\n\t\t\tfilterByStart: [], \r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=>{\r\n\t\t\tthis.handleUpdateFilter();\r\n\r\n\t\t\tif(!isEmpty(this.state.advSearchData)){\r\n\t\t\t\tthis.props.feedbackSearch({ ...this.state.advSearchData, user_type: type });\r\n\t\t\t}\r\n\t\t});\r\n\r\n      \t//setFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: type, filterKeys: this.state.filterKeys || {}});\r\n\t};\r\n\r\n\thandleStateChange = (e, selectedState) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {};\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tlet selIndex = filterKeys.State.findIndex((item) => {\r\n\t\t\treturn item.value === selectedState.value;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.State.push({\r\n\t\t\t\tlabel: selectedState.label,\r\n\t\t\t\tvalue: selectedState.value\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tmakeSummeryFilterObj.type = 'place';\r\n\t\tmakeFeedbackFilterObj.type = 'place';\r\n\t\tthis.setState({\r\n\t\t\tstateTxt    :   '',\r\n\t\t\tfilterKeys: filterKeys,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=> {\r\n\t\t\tthis.stateDropdownInput.current.focus();\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\r\n\t\t//setFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: this.state.type, filterKeys: filterKeys });\r\n\t};\r\n\r\n\thandleAreaChange = (e, selectedArea) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {};\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tlet selIndex = filterKeys.Area.findIndex((item) => {\r\n\t\t\treturn item.value === selectedArea.delivery_zone_name;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.Area.push({\r\n\t\t\t\tarea_id: selectedArea.id,\r\n\t\t\t\tstate: selectedArea.state,\r\n\t\t\t\tvalue: selectedArea.delivery_zone_name,\t\t\t\t\r\n\t\t\t\tlabel: `${selectedArea.delivery_zone_name} (${selectedArea.state})`\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tmakeSummeryFilterObj.type = 'place';\r\n\t\tmakeFeedbackFilterObj.type = 'place';\r\n\t\tthis.setState({ \r\n\t\t\tareaTxt    :   '',\r\n\t\t\tfilterKeys: filterKeys,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=> {\r\n\t\t\tthis.areaDropdownInput.current.focus();\t\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\r\n\t\t//setFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: this.state.type, filterKeys: filterKeys });\r\n\t};\r\n\r\n\thandleStoreChange = (e, selectedStore) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {};\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tlet selIndex = filterKeys.Store.findIndex((item) => {\r\n\t\t\treturn item.value === selectedStore.label;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.Store.push({\r\n\t\t\t\tlabel: selectedStore.label,\r\n\t\t\t\tvalue: selectedStore.label,\r\n\t\t\t\tstore_id: selectedStore.data.store_id\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tmakeSummeryFilterObj.type = 'store';\r\n\t\tmakeFeedbackFilterObj.type = 'store';\r\n\t\tthis.setState({\r\n\t\t\tstoreTxt    :   '',\r\n\t\t\tfilterKeys: filterKeys,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=> {\r\n\t\t\tthis.storeDropdownInput.current.focus();\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\r\n\t\t//setFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: this.state.type, filterKeys: filterKeys });\r\n\t};\r\n\r\n\thandleRemoveFilter = (e, type, index) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filters = this.state.filterKeys || [];\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tfilters[type].splice(index, 1);\r\n\t\tif(type === 'State' && filters[type].length === 0){\r\n\t\t\tfilters.Area = [];\r\n\t\t\tfilters.Store = [];\r\n\t\t}\r\n\r\n\t\tif(type === 'Area' && filters[type].length === 0){\r\n\t\t\tfilters.Store = [];\r\n\t\t}\r\n\r\n\t\tlet selectedArea = (type !== 'Area') ? this.state.selectedArea : null;\r\n\t\tlet selectedState = (type !== 'State') ? this.state.selectedState : null;\r\n\t\tlet selectedStore = (type !== 'Store') ? this.state.selectedStore : null;\r\n\r\n\t\tmakeSummeryFilterObj.type = (this.state.filterKeys.State.length > 0)?'place':'date';\r\n\t\tmakeFeedbackFilterObj.type = (this.state.filterKeys.State.length > 0)?'place':'date';\r\n\r\n\t\tthis.setState({\r\n\t\t\tfilterKeys : filters,\r\n\t\t\tselectedArea: selectedArea,\r\n\t\t\tselectedState: selectedState,\r\n\t\t\tselectedStore: selectedStore,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=> {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\r\n\t\t//setFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: this.state.type, filterKeys: filters });\r\n\t};\r\n\r\n\tonSelectStartDate = (date) => {\r\n\t\tlet startDate = moment(date).format('X'); \r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj}; \r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};   \r\n\t\tlet endDate = moment(this.state.endDate).format('X');\r\n\t\tif(startDate > endDate){\r\n\t\t\tnotifyerror({message: 'Start date should be lower than end date'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tmakeSummeryFilterObj.start = date;\r\n\t\tmakeFeedbackFilterObj.start = date;\r\n\t\tthis.setState({\r\n\t\t\tstartDate: date,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=>{\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\tonSelectEndDate = (date) => {  \r\n\t\tlet endDate = moment(date).format('X');\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj}; \r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\t\tlet startDate= moment(this.state.startDate).format('X');  \r\n\r\n\t\tif(endDate < startDate){\r\n\t\t\tnotifyerror({message: 'End date should be greater than start date'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tmakeSummeryFilterObj.end = date;\r\n\t\tmakeFeedbackFilterObj.end = date;\r\n\t\tthis.setState({\r\n\t\t\tendDate: date,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=>{\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\tonDateRange = (date) => {\r\n\t\tlet makeSummeryFilterObj = {...this.state.makeSummeryFilterObj}; \r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tmakeSummeryFilterObj.end = date.endDate;\r\n\t\tmakeFeedbackFilterObj.end = date.endDate;\r\n\r\n\t\tmakeSummeryFilterObj.start = date.startDate;\r\n\t\tmakeFeedbackFilterObj.start = date.startDate;\r\n\t\tthis.setState({\r\n\t\t\tstartDate: date.startDate,\r\n\t\t\tendDate: date.endDate,\r\n\t\t\tnoofdays: date.noofdays,\r\n\t\t\tmakeSummeryFilterObj: makeSummeryFilterObj,\r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=>{\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\thandleSelectbox(type) {\t\r\n\t\tif (type === 'Area' && this.state.filterKeys.State.length === 0)\r\n\t\t\treturn;\r\n\t\tif (type === 'Store' && this.state.filterKeys.Area.length === 0)\r\n\t\t\treturn;\r\n\r\n\t\tif(type === 'Area') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsOpen: false,\r\n\t\t\t\tstOpen: false,\r\n\t\t\t\taOpen: !this.state.aOpen,\r\n\t\t\t\tshowSearch:false, \r\n\t\t\t\tshowFilter: false\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tif(type === 'State') {\r\n\t\t\tthis.setState({\r\n\t\t\t\taOpen: false,\r\n\t\t\t\tstOpen: false,\r\n\t\t\t\tsOpen: !this.state.sOpen,\r\n\t\t\t\tshowSearch:false, \r\n\t\t\t\tshowFilter: false\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tif(type === 'Store') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsOpen: false,\r\n\t\t\t\taOpen: false,\r\n\t\t\t\tstOpen: !this.state.stOpen,\r\n\t\t\t\tshowSearch:false, \r\n\t\t\t\tshowFilter: false\r\n\t\t\t})\r\n\t\t};\r\n\t};\r\n\r\n\tonChangeHandle(e) {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value }, function () { });\r\n\t};\r\n\r\n\thandleFilterOutsideClick = (e) => {\r\n\t\te.stopPropagation();\r\n\r\n\t\tif(this.nodeState.contains(e.target) || \r\n\t\te.target.getAttribute('data') === 'ignore-state-outer-click' ||\t\r\n\t\tthis.nodeArea.contains(e.target) ||\r\n\t\te.target.getAttribute('data') === 'ignore-area-outer-click' ||\t \r\n\t\tthis.nodeStore.contains(e.target) || \r\n\t\te.target.getAttribute('data') === 'ignore-store-outer-click' ||\t\r\n\t\tthis.nodeSearch.contains(e.target) ||\r\n\t\tthis.nodeSrchButton.contains(e.target) ||\r\n\t\tthis.nodeResSrchButton.contains(e.target) ||\r\n\t\te.target.getAttribute('data') === 'autosuggest'\r\n\t\t|| e.target.getAttribute('data') === 'ignore-outer-click'\r\n\t\t|| !!e.target.getAttribute('aria-hidden')){ \r\n\t\t\treturn;  \r\n\t\t};\r\n\r\n\t\tif(!!this.state.sOpen || !!this.state.aOpen || !!this.state.stOpen || !!this.state.showSearch) { \r\n\t\t\tthis.setState({ sOpen: false, aOpen: false, stOpen: false, showSearch: false, stateTxt:'', areaTxt: '', storeTxt: '' }); \r\n\t\t};\r\n  \t};\r\n\r\n\ttoggleCustomSearch() {\r\n\t\tthis.setState({\r\n\t\t\tsOpen: false,\r\n\t\t\taOpen: false,\r\n\t\t\tstOpen: false,\r\n\t\t\tshowFilter: false,\r\n\t\t\tshowSearch: !this.state.showSearch\t\t\t\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleResFilter() {\r\n\t\tthis.setState({ showSearch:false, showFilter: !this.state.showFilter });\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tthis.setState({\r\n\t\t\tarea: props.area || {},\r\n\t\t\tstores: props.stores || [],\r\n\t\t\t//filterKeys: props.filterKeys,\r\n\t\t\tfilteredList: props.filteredList,\r\n\t\t\t/* makeFeedbackFilterObj: {\r\n\t\t\t\t...this.props.makeFeedbackFilterObj,\r\n\t\t\t\tpageno: \r\n\t\t\t} */\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet filter     =  this.props.savedFilterData || {};\r\n\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfilterKeys  :  filter.filterKeys,\r\n\t\t\t\tmakeFeedbackFilterObj   :  {\r\n\t\t\t\t\t...filter.makeFeedbackFilterObj,\r\n\t\t\t\t\tstart: this.state.startDate,\r\n\t\t\t\t\tend: this.state.endDate\r\n\t\t\t\t},\r\n\t\t\t\tmakeSummeryFilterObj   :  {\r\n\t\t\t\t\t...filter.makeSummeryFilterObj,\r\n\t\t\t\t\tstart: this.state.startDate,\r\n\t\t\t\t\tend: this.state.endDate\r\n\t\t\t\t},\r\n\t\t\t\ttype        :  filter.type\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.handleUpdateFilter();\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n\t\t\tthis.setState({\r\n\t\t\t\ttype : type\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.handleUpdateFilter();\r\n\t\t\t})\r\n\t\t}\r\n  \t\tdocument.addEventListener('click', this.handleFilterOutsideClick);\r\n  \t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleFilterOutsideClick);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { filterKeys, area, sOpen, aOpen, stOpen, stateTxt, areaTxt, storeTxt, showSearch, showFilter } = this.state;\r\n\t\t//console.log('Filter Keys : ', filterKeys);\r\n\t\tlet statesLocalStorage =  JSON.parse(localStorage.getItem('states') || '[]');      \r\n\t\tlet states = statesLocalStorage.map((item) => {\r\n\t\t\treturn { label: item.value, value: item.id }\r\n\t\t});\r\n\t\tstates = lodash.orderBy(states, [state => state.value.toLowerCase()], ['asc']);\r\n\t\t\r\n\t\tlet stateCodeFilter = [];\r\n\t\tfilterKeys.State.forEach((state) => {\r\n\t\t\tstateCodeFilter.push(state.value);\r\n\t\t});\r\n\r\n\t\tlet zoneList = stateCodeFilter.map(state => {\r\n\t\t\treturn { state: state, zones: area[state] }\r\n\t\t});\t \r\n\r\n\t\tlet storeList = [];\r\n\t\tfilterKeys.Area.forEach((area) => {\t\t\r\n\t\t\tthis.state.stores.forEach((user) => {\r\n\t\t\t\tif((user.data.state === area.state) && (user.data.zone_id === area.area_id)){\r\n\t\t\t\t\tstoreList.push(user);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tlet stores = lodash.orderBy(storeList, [store => store.label.toLowerCase()], ['asc']);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<section className=\"con_top\">\r\n\t\t\t\t\t<div className=\"tab_pan-wrap\">\r\n\t\t\t\t\t\t<div className=\"tab_pan\">\r\n\t\t\t\t\t\t\t<span onClick={() => this.handleTypeChange('general')} className={(this.state.type === 'general') ? ' active' : ''}>Grocery</span>\r\n\t\t\t\t\t\t\t<span onClick={() => this.handleTypeChange('pharmacy')} className={(this.state.type === 'pharmacy') ? ' active' : ''}>Rx</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"res_btn\">\r\n                        <div className={`resfilter_btn ${showFilter ? \"showfilter\":\"\"} `} onClick={this.toggleResFilter.bind(this)}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Filter</div>\r\n                        <div ref={nodeResSrchButton => this.nodeResSrchButton = nodeResSrchButton} className={`searchmod_btn ${showSearch ? \"showpoint\":\"\"} `} onClick={this.toggleCustomSearch.bind(this)}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n                    </div>\r\n\r\n\t\t\t\t\t<Form method=\"get\" action=\"\" autoComplete=\"off\" className={`resfilter_box ${this.state.showFilter ? \"showfilterbox\":\"\"}`}>\r\n\t\t\t\t\t\t<div className=\"filter_label\">Filter by: </div>\r\n\r\n\t\t\t\t\t\t<div ref={nodeState => this.nodeState = nodeState} className={`select-box${sOpen ? \" sopen\" : \" \"}`}>\r\n\t\t\t                <div className=\"s-result\" onClick={() => this.handleSelectbox('State')}>\r\n\t\t\t                \t<input type=\"text\" ref={this.stateDropdownInput} autoComplete=\"off\" placeholder=\"State\" name=\"stateTxt\" value={stateTxt} onChange={this.onChangeHandle.bind(this)} />\r\n\t\t\t                </div>\r\n\t\t\t                <ul className={(filterKeys.State.length > 0) ? 'selected' : ''}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(states || []).map((state, i) => {\r\n\t\t\t\t\t\t\t\t\t\tlet selIndex = filterKeys.State.findIndex((stateItem) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (state.value === stateItem.value);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t(state.label.toLowerCase().includes(stateTxt.toLowerCase())) ?\r\n\t\t\t\t\t\t\t\t\t\t\t<li key={`state-l-${i}`} data='ignore-state-outer-click' onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t(selIndex > -1)?\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveFilter(e, 'State', selIndex)\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleStateChange(e, { ...state })\r\n\t\t\t\t\t\t\t\t\t\t\t}} className={(selIndex > -1)?\"selected\":\"\"}>{state.label}</li> \r\n\t\t\t\t\t\t\t\t\t\t\t:null\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div ref={nodeArea => this.nodeArea = nodeArea} className={`select-box${aOpen ? \" sopen\" : \" \"}`}>\r\n\t\t\t\t\t\t\t<div className={`s-result ${(filterKeys.State.length === 0) ? \"dis\":\" \"}`} onClick={() => this.handleSelectbox('Area')}>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" ref={this.areaDropdownInput} autoComplete=\"off\" disabled={(filterKeys.State.length === 0) ? true : false} placeholder=\"Area\" name=\"areaTxt\" value={areaTxt} onChange={this.onChangeHandle.bind(this)} />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<ul className={(filterKeys.Area.length > 0) ? 'selected' : ''}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(zoneList || []).map((item, i) => {\r\n\t\t\t\t\t\t\t\t\t\tlet zones = lodash.orderBy(item.zones, [zone => zone.delivery_zone_name.toLowerCase()], ['asc']);\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t(zones || []).map((zone, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet selIndex = filterKeys.Area.findIndex((areaItem) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (areaItem.state === item.state) && (areaItem.area_id === zone.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(zone.delivery_zone_name.toLowerCase().includes(areaTxt.toLowerCase())) ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={`area-l-${index}`} data='ignore-area-outer-click' onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(selIndex > -1)?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveFilter(e, 'Area', selIndex)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleAreaChange(e, { ...zone, state: item.state })\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} className={(selIndex > -1)?\"selected\":\"\"}>{zone.delivery_zone_name} ({item.state})</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:null\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div ref={nodeStore => this.nodeStore = nodeStore} className={`select-box${stOpen ? \" sopen\" : \" \"}`}>\r\n\t\t\t\t\t\t\t<div className={`s-result ${(filterKeys.Area.length === 0) ? \"dis\":\" \"}`} onClick={() => this.handleSelectbox('Store')}>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" ref={this.storeDropdownInput} autoComplete=\"off\" disabled={(filterKeys.Area.length === 0) ? true : false} placeholder=\"Store\" name=\"storeTxt\" value={storeTxt} onChange={this.onChangeHandle.bind(this)} />\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<ul className={(filterKeys.Store.length > 0) ? 'selected' : ''}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(stores || []).map((store, i) => {\r\n\t\t\t\t\t\t\t\t\t\tlet selIndex = filterKeys.Store.findIndex((storeItem) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (storeItem.store_id === store.data.store_id);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t(store.label.toLowerCase().includes(storeTxt.toLowerCase())) ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={`store-l-${i}`} data='ignore-store-outer-click' onClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(selIndex > -1)?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleRemoveFilter(e, 'Store', selIndex)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleStoreChange(e, { ...store })\r\n\t\t\t\t\t\t\t\t\t\t\t\t}} className={(selIndex > -1)?\"selected\":\"\"}>{store.label}</li> : null\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\r\n\t\t\t\t\t<div className=\"search_sec\">\r\n\t\t\t\t\t\t<div ref={nodeSrchButton => this.nodeSrchButton = nodeSrchButton} className={`searchmod_btn ${showSearch ? \"showpoint\" : \"\"} `} onClick={this.toggleCustomSearch.bind(this)}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"date_range_section\">\r\n\t\t\t\t\t<div className=\"filter_label\">Range: </div>\r\n\t\t\t\t\t<div className=\"InputFromTo\">\r\n\t\t\t\t\t\t<div className=\"DayPickerInput\">\r\n\t\t\t\t\t\t\t<Calendar\r\n\t\t\t\t\t\t\t\tselectDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\tstartDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\tendDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\tonDateRange={this.onDateRange}\r\n\t\t\t\t\t\t\t\tonSelectDate={this.onSelectStartDate}\r\n\t\t\t\t\t\t\t\tnoofdays={this.state.noofdays}\r\n\t\t\t\t\t\t\t\tclassName=\"t_box\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Start Date\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{' '}\r\n\r\n\t\t\t\t\t\t<span className=\"to\">to</span> {' '}\r\n\r\n\t\t\t\t\t\t<span className=\"InputFromTo-to\">\r\n\t\t\t\t\t\t\t<div className=\"DayPickerInput\">\r\n\t\t\t\t\t\t\t\t<Calendar\r\n\t\t\t\t\t\t\t\t\tselectDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\t\tstartDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\t\tendDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\t\tonSelectDate={this.onSelectEndDate}\r\n\t\t\t\t\t\t\t\t\tonDateRange={this.onDateRange}\r\n\t\t\t\t\t\t\t\t\tnoofdays={this.state.noofdays}\r\n\t\t\t\t\t\t\t\t\tclassName=\"t_box\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"End Date\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<div className=\"liveOrders\">{this.props.feedBackCount} Orders</div>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0) ?\r\n\t\t\t\t\t<section className=\"filter-tag_section\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.state.filterKeys.State.length > 0) ?\r\n\t\t\t\t\t\t\t\tthis.state.filterKeys.State.map((filter, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<span key={`state-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t\t\t\t\t\t\t\t\t\t<a onClick={(e) => this.handleRemoveFilter(e, 'State', index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}) : null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.state.filterKeys.Area.length > 0) ?\r\n\t\t\t\t\t\t\t\tthis.state.filterKeys.Area.map((filter, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<span key={`area-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t\t\t\t\t\t\t\t\t\t<a onClick={(e) => this.handleRemoveFilter(e, 'Area', index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}) : null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.state.filterKeys.Store.length > 0) ?\r\n\t\t\t\t\t\t\t\tthis.state.filterKeys.Store.map((filter, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<span key={`store-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t\t\t\t\t\t\t\t\t\t<a onClick={(e) => this.handleRemoveFilter(e, 'Store', index)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}) : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t:null\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div ref={nodeSearch => this.nodeSearch = nodeSearch}>\r\n\t\t\t\t\t<FeedBackAdvanceFilter\r\n\t\t\t\t\t\tshowSearch={showSearch}\r\n\t\t\t\t\t\treply={this.props.reply}\r\n\t\t\t\t\t\tisReplying={this.props.isReplying}\r\n\t\t\t\t\t\treplyResult={this.props.replyResult}\r\n\t\t\t\t\t\tisSearching={this.props.isSearching}\r\n\t\t\t\t\t\ttype={this.state.type}\r\n\t\t\t\t\t\tsearchFilter={this.props.searchFilter}\r\n\t\t\t\t\t\tsearchResultList={this.props.searchResultList}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>  \t\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default FeedBackFilter;","import React from 'react';\r\nimport List from './list';\r\nimport lodash from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport { isEqual, isEmpty } from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport FeedbackFilter from './feedbackFilter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setFilter, getFilter, clearFilter} from '../../Helper/common';\r\n\r\nclass FeedbackComponent extends React.Component {\r\n\tstatic propTypes = {\r\n\t\treply: PT.func,\r\n\t\tisLoading: PT.bool,\r\n\t\tisFiltering: PT.bool,\r\n\t\tisSearching: PT.bool,\r\n\t\tgetFeedback: PT.func,\r\n\t\tgetSummary: PT.func,\r\n\t\tgetLocations: PT.func,\r\n\t\tlocations: PT.object,\r\n\t\tfeedbackData: PT.array,\r\n\t\tfeedBackCount: PT.number,\r\n\t\tfeedbackSearch: PT.func,\r\n\t\tisReplying: PT.bool,\r\n\t\treplyResult: PT.object,\r\n\t\tfeedbackSummeryData: PT.object\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tfeedbackData: [],\r\n\t\tfeedBackCount: 0,\r\n\t\treplyResult: {},\r\n\t\tsearchResultList:  [],\r\n\t\tfeedbackSummeryData:  {}\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t/* let filter = getFilter('FeedBack');\r\n\t\tlet endDate = moment().format('YYYY-MM-DD');\r\n\t\tlet startDate = moment().subtract(1, 'days').format('YYYY-MM-DD'); */\r\n\r\n\t\tthis.state = {\t\r\n\t\t\tsOpen: false,\r\n\t\t\taOpen: false,\r\n\t\t\tstOpen: false,\t\r\n\t\t\t//type: (filter && filter.type)?filter.type:'general',\r\n\t\t\tallRatings: true, \r\n\t\t\t//endDate: endDate,\r\n          \tfilterByStart: [], \r\n          \tadvSearchData: {},\r\n\t\t\tshowSearch: false,\t\t\r\n\t\t \t//selectedState: null,\r\n\t\t \t//selectedArea: null,\r\n          \t//selectedStore: null,\r\n\t\t\t//startDate: startDate,\r\n\t\t\tfilteredFeedbackData: [],\r\n\t\t\t//filterKeys: !isEmpty(filter)?filter.filterKeys:{ State:[], Area: [], Store: [] },\r\n\t\t\t//noofdays: ''\r\n\t\t}; \r\n\r\n\t\tthis.searchFilter = this.searchFilter.bind(this);\r\n\t  \t//this.handleTypeChange = this.handleTypeChange.bind(this);\r\n\t};\r\n\r\n\t/* handleTypeChange(type) {\r\n\t\tlet makeSummeryFilterObj =  {...this.state.makeSummeryFilterObj};\r\n\t\tlet makeFeedbackFilterObj =  {...this.state.makeFeedbackFilterObj};\r\n\r\n\t\tmakeFeedbackFilterObj.page = 1;\r\n\t\tthis.setState({ \r\n\t\t\ttype: type, \r\n\t\t\tallRatings: true, \r\n\t\t\tfilterByStart: [], \r\n\t\t\tmakeFeedbackFilterObj: makeFeedbackFilterObj\r\n\t\t}, ()=>{\r\n\t\t\tthis.updateFeedbackSummery();\r\n\t\t\tthis.updateFeedbackList();\r\n\r\n\t\t\tif(!isEmpty(this.state.advSearchData)){\r\n\t\t\t\tthis.props.feedbackSearch({ ...this.state.advSearchData, user_type: type });\r\n\t\t\t}\r\n\t\t});\r\n\r\n      \tsetFilter('FeedBack', { makeFeedbackFilterObj: makeFeedbackFilterObj, makeSummeryFilterObj: makeSummeryFilterObj, user_type:this.props.userType, type: type, filterKeys: this.state.filterKeys || {}});\r\n\t}; */\r\n\r\n\tsearchFilter (searchData) {\r\n\t\tthis.setState({ advSearchData: searchData }, ()=> {\r\n\t\t\t//this.props.feedbackSearch({ ...searchData, user_type: this.state.type });\r\n\t\t\tthis.props.feedbackSearch({ ...searchData });\r\n\t\t});\r\n   \t};\r\n\r\n\thandleCheckboxFilter(event, type){\r\n\t\tevent.persist();\r\n\r\n\t\tif(event.target.checked && (event.target.value === \"all\")){\r\n\t\t\tthis.setState({ allRatings: true, filterByStart: [], filteredFeedbackData: this.props.feedbackData});\r\n\t\t} else {\r\n\t\t\tthis.setState({ allRatings: false });\r\n\r\n\t\t\tif(event.target.value !== \"all\") {\t\r\n\t\t\t\tlet filterByStart = this.state.filterByStart || {};\r\n\t\t\t\tlet selIndex = filterByStart.findIndex((item) => {\r\n\t\t\t\t\treturn item === event.target.value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(selIndex === -1) {\r\n\t\t\t\t\tfilterByStart.push(event.target.value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfilterByStart.splice(selIndex, 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({ filterByStart: filterByStart }, ()=> {\r\n\t\t\t\t\tlet sortedArray = lodash.filter((this.props.feedbackData)?this.props.feedbackData:[], (v) => lodash.includes(filterByStart, v.rating));\t\r\n\r\n\t\t\t\t\tthis.setState({ filteredFeedbackData: sortedArray });\r\n\t\t\t\t});\t\r\n\t\t\t} else {\t\r\n\t\t\t\tthis.setState({ filterByStart: [], filteredFeedbackData: this.props.feedbackData});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.state.filterByStart.length === 0){\r\n\t\t\tthis.setState({ allRatings: true, filterByStart: [], filteredFeedbackData: []}, ()=> {\r\n\t\t\t\tthis.setState({ filteredFeedbackData: this.props.feedbackData });\t\t\t\t\r\n\t\t\t});\r\n\t\t}\t\t\r\n\t};\r\n\r\n\tchangePage(data){\r\n\t\tconst { currentPage } =\tdata;\r\n\t\tlet savedFilterData\t\t\t=\t{...this.props.savedFilterData};\r\n\t\tlet makeFeedbackFilterObj\t=\tsavedFilterData.makeFeedbackFilterObj;\r\n\t\t//console.log('Api Data From Change Page : ', makeFeedbackFilterObj.page, currentPage, makeFeedbackFilterObj.page !== currentPage);\r\n\t\tif(makeFeedbackFilterObj.page !== currentPage) {\r\n\t\t\tmakeFeedbackFilterObj.page = currentPage;\r\n\t\t\tlet data\t=\t{\r\n\t\t\t\t...makeFeedbackFilterObj,\r\n\t\t\t\tfilter: savedFilterData\r\n\t\t\t}\r\n\t\t\tthis.props.getFeedback(data);\r\n\t\t}\r\n\t\t/* this.setState({ makeFeedbackFilterObj: makeFeedbackFilterObj, allRatings: true, filterByStart: []  }, ()=> {\r\n\t\t\tthis.updateFeedbackList();\r\n\t\t}); */\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t//console.log(props.locations)\r\n\t\t/* if(!!props.userType && !isEqual(this.props.userType, props.userType)) {\r\n\t\t \tlet filterKeys = this.state.filterKeys;\r\n\t\t\tlet type = (props.userType === 'admin') ? 'general' : props.userType;\r\n\r\n\t\t\tif(!!props.userType){\r\n\t\t\t\tlet filter = getFilter('FeedBack');\r\n\t\t\t\tif(!isEmpty(filter) && filter.user_type === props.userType) {\r\n\t\t\t\t\ttype       = filter.type;\r\n\t\t\t\t\tfilterKeys = filter.filterKeys;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tclearFilter('FeedBack');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.setState({ type: type, filterKeys: filterKeys });\r\n\t\t};\r\n\r\n\t\tthis.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount }); */\r\n\t\tthis.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount });\r\n\t};\r\n\r\n\tcomponentWillMount() {\t\t\r\n\t\tthis.props.getLocations();\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t//this.props.getLocations();\r\n\t \t/* let filterKeys = this.state.filterKeys;\r\n\t\tlet type = (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n\r\n\t\tif(!!this.props.userType){\r\n\t\t\tlet filter = getFilter('FeedBack');\r\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t\ttype        =  filter.type;\r\n\t\t\t\tfilterKeys  =  filter.filterKeys;\r\n\t\t\t} else {\r\n\t\t\t\tclearFilter('FeedBack');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.setState({ filteredFeedbackData: this.props.feedbackData, feedBackCount: this.props.feedBackCount, type: type, filterKeys: filterKeys });\r\n\r\n\t\tthis.updateFeedbackSummery();\r\n\t\tthis.updateFeedbackList(); */\r\n\t\t//this.setState({ filteredFeedbackData: props.feedbackData, feedBackCount: props.feedBackCount });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { type, makeFilterObj, filterKeys, startDate, endDate, noofdays, allRatings, filterByStart, filteredFeedbackData, feedBackCount } = this.state;\r\n\t \tlet locationData = this.props.locations || {};\r\n\t \tlet stores = locationData.stores || [];\r\n\t\tlet zones = locationData.zones || {};\r\n\t\tlet userType = this.props.userType || {};\r\n\t\tlet settingsData = this.props.settingsData || {};\r\n\t\t//console.log('Filter Loaded : ', this.props.isFilterLoaded && !isEmpty(this.props.locations));\r\n\t\treturn (\r\n\t\t\t<main className={`dash right_sec feedP${(userType !== 'admin') ? ' noAdmin' : ''}`}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.isFilterLoaded && !isEmpty(this.props.locations)) ? \r\n\t\t\t\t\t<FeedbackFilter \r\n\t\t\t\t\t\tuserType={this.props.userType}\r\n\t\t\t\t\t\t//type={type}\r\n\t\t\t\t\t\tarea={zones}\r\n\t\t\t\t\t\tstores={stores}\r\n\t\t\t\t\t\t//endDate={endDate}\r\n\t\t\t\t\t\t//startDate={startDate}\r\n\t\t\t\t\t\t//noofdays={noofdays}\r\n\t\t\t\t\t\t//filterKeys={filterKeys} \r\n\t\t\t\t\t\treply={this.props.reply}\r\n\t\t\t\t\t\tfeedBackCount={feedBackCount}\r\n\t\t\t\t\t\tsearchFilter={this.searchFilter}\r\n\t\t\t\t\t\tisReplying={this.props.isReplying}\r\n\t\t\t\t\t\treplyResult={this.props.replyResult}\r\n\t\t\t\t\t\tisSearching={this.props.isSearching} \r\n\t\t\t\t\t\tfilteredList={this.props.filteredList}\r\n\t\t\t\t\t\tgetFeedback={this.props.getFeedback} \r\n\t\t\t\t\t\tgetSummary={this.props.getSummary} \r\n\t\t\t\t\t\tsavedFilterData={this.props.savedFilterData}\r\n\t\t\t\t\t\t/* handleTypeChange={this.handleTypeChange}\t\t\t\t\r\n\t\t\t\t\t\tonDateRange = {this.onDateRange.bind(this)}\t\r\n\t\t\t\t\t\tonSelectEndDate = {this.onSelectEndDate.bind(this)} */\r\n\t\t\t\t\t\tsearchResultList={this.props.searchResultList || []} \r\n\t\t\t\t\t\t/* handleAreaChange = {this.handleAreaChange.bind(this)}\t\t\t\t\r\n\t\t\t\t\t\thandleStateChange = {this.handleStateChange.bind(this)}\r\n\t\t\t\t\t\thandleStoreChange = {this.handleStoreChange.bind(this)}\r\n\t\t\t\t\t\tonSelectStartDate = {this.onSelectStartDate.bind(this)}\t\r\n\t\t\t\t\t\thandleRemoveFilter = {this.handleRemoveFilter.bind(this)} */\r\n\t\t\t\t\t/> : null\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t            <List \r\n\t            \ttype={type}\r\n\t            \tendDate={endDate}\r\n\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\tallRatings={allRatings}\r\n\t\t\t\t\treply={this.props.reply}\r\n\t\t\t\t\tfilterByStart={filterByStart}\t\t            \r\n\t\t            feedBackCount={feedBackCount}\t\t\r\n\t\t            isLoading={this.props.isLoading} \r\n\t\t\t\t\tisReplying={this.props.isReplying}\r\n\t\t\t\t\treplyResult={this.props.replyResult}\r\n\t\t            isFiltering={this.props.isFiltering}   \r\n\t\t\t\t\tchangePage = {this.changePage.bind(this)}         \r\n\t\t            filteredFeedbackData={filteredFeedbackData || []} \r\n\t\t            feedbackSummeryData={this.props.feedbackSummeryData || {}} \r\n\t\t\t\t\thandleCheckboxFilter = {this.handleCheckboxFilter.bind(this)}\r\n\t            />  \r\n\t\t\t</main>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withRouter(FeedbackComponent);","//Header\r\nexport const GET_SETTINGS                               =   'GET_SETTINGS';\r\nexport const GET_SETTINGS_SUCCESS                       =   'GET_SETTINGS_SUCCESS';\r\nexport const GET_SETTINGS_ERROR                         =   'GET_SETTINGS_ERROR';\r\nexport const AUTHENTICATE                               =   'AUTHENTICATE';\r\nexport const AUTHENTICATE_SUCCESS                       =   'AUTHENTICATE_SUCCESS';\r\nexport const AUTHENTICATE_ERROR                         =   'AUTHENTICATE_ERROR';\r\nexport const SYNC_FILTER                                =   'SYNC_FILTER';","import {\r\n  GET_SETTINGS,\r\n  GET_SETTINGS_SUCCESS,\r\n  GET_SETTINGS_ERROR,\r\n  AUTHENTICATE,\r\n  AUTHENTICATE_SUCCESS,\r\n  AUTHENTICATE_ERROR,\r\n  SYNC_FILTER\r\n} from \"./constants\";\r\n\r\nexport const getSettings = (data) => ({\r\ntype: GET_SETTINGS,\r\ndata\r\n});\r\n\r\nexport const listenSettingsSuccess = (data) => ({\r\ntype: GET_SETTINGS_SUCCESS,\r\ndata\r\n});\r\n\r\nexport const listenSettingsError = (data) => ({\r\ntype: GET_SETTINGS_ERROR,\r\ndata\r\n});\r\n\r\nexport const authenticate = (data) => ({\r\n  type: AUTHENTICATE,\r\n  data\r\n});\r\n\r\nexport const listenAuthenticateSuccess = (data) => ({\r\n  type: AUTHENTICATE_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenAuthenticateError = (data) => ({\r\n  type: AUTHENTICATE_ERROR,\r\n  data\r\n});\r\n\r\nexport const syncFilter = (data) => ({\r\n  type: SYNC_FILTER,\r\n  data\r\n})","import React from 'react';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport FeedbackComponent from './feedback';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as headerActions from '../Header/actions';\r\nimport * as dashboardActions from '../Dashboard/actions';\r\n\r\nconst Feedback   = ({\r\n\treply,\r\n\tisLoading,\r\n\tisReplying,\r\n\treplyResult,\r\n\tlocations,\r\n\tuserType,\t\r\n\tsettingsData,\r\n\tgetSettings,\r\n\tgetSummary,\r\n\tgetFeedback,\r\n\tisFiltering,\r\n\tisSearching,\r\n\tgetLocations,\r\n\tfeedbackData,\r\n\tfeedBackCount,\r\n \tfeedbackSearch,\r\n \tsavedFilterData,\r\n\tsearchResultList,\r\n\tfeedbackSummeryData,\r\n\tisFilterLoaded\r\n}) => {\r\n\treturn (\r\n\t\t<FeedbackComponent reply={reply} isReplying={isReplying} replyResult={replyResult} getSettings={getSettings} getSummary={getSummary} getFeedback={getFeedback} feedbackSearch={feedbackSearch} userType={userType} settingsData={settingsData} savedFilterData={savedFilterData} getLocations={getLocations} feedbackData={feedbackData} feedBackCount={feedBackCount} feedbackSummeryData={feedbackSummeryData} searchResultList={searchResultList} locations={locations} isLoading={isLoading} isFiltering={isFiltering} isSearching={isSearching} isFilterLoaded={isFilterLoaded}/>\r\n\t)\r\n};\r\n\r\nFeedback.propTypes   = {\r\n\treply: PT.func,\r\n \tuserType: PT.string,\r\n\tisLoading: PT.bool,\r\n\tgetSummary: PT.func,\r\n\tgetSettings:PT.func,\r\n\tisFiltering: PT.bool,\r\n\tisSearching: PT.bool,\r\n\tsettingsData: PT.object,\r\n\tgetFeedback: PT.func,\r\n\tgetLocations: PT.func,\r\n\tlocations: PT.object,\r\n\tfeedbackData: PT.array,\r\n \tfeedbackSearch: PT.func,\r\n\tfeedBackCount: PT.number,\r\n\tsearchResultList: PT.array,\r\n\tsavedFilterData: PT.object,\r\n\tfeedbackSummeryData: PT.object,\r\n\tisReplying: PT.bool,\r\n\treplyResult: PT.object,\r\n\tisFilterLoaded: PT.bool\r\n}\r\n\r\nconst  mapStateToProps   = ({dashboardReducer, feedbackReducer, headerReducer}) => {\r\n\tlet feedBackList = (feedbackReducer.feedbackData && feedbackReducer.feedbackData.rows)?feedbackReducer.feedbackData.rows:[];\r\n\tlet searchResultList = (feedbackReducer.searchResultList && feedbackReducer.searchResultList.rows)?feedbackReducer.searchResultList.rows:[];\r\n\tlet feedBackCount = (feedbackReducer.feedbackData && feedbackReducer.feedbackData.count)?feedbackReducer.feedbackData.count:0;\r\n\t// console.log(headerReducer, 'feedbackReducer', feedbackReducer);\r\n\t//console.log('dashboardReducer', dashboardReducer.locations);\r\n\r\n\treturn ({\r\n\t\tfeedbackData: feedBackList,\r\n\t\tfeedBackCount: feedBackCount,\r\n\t \tuserType: headerReducer.userType,\r\n\t\tsearchResultList: searchResultList,\r\n\t\tisLoading: feedbackReducer.isLoading,\t\r\n\t\tlocations: dashboardReducer.locations,\r\n\t\tisFiltering: feedbackReducer.isFiltering,\r\n\t\tsettingsData: headerReducer.settingsData,\r\n\t\tisSearching: feedbackReducer.isSearching,\t\r\n\t\tisReplying: feedbackReducer.isReplying,\r\n\t\treplyResult: feedbackReducer.replyResult,\r\n\t\tfeedbackSummeryData: feedbackReducer.feedbackSummeryData,\r\n\t\tsavedFilterData: (headerReducer.filterData && headerReducer.filterData.feedback)?headerReducer.filterData.feedback:{},\r\n\t\tisFilterLoaded: headerReducer.isFilterLoaded\r\n\t});\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\treply: (data) => dispatch(actions.reply(data)),\r\n\tgetSummary: (data) => dispatch(actions.getSummary(data)),\r\n\tgetFeedback: (data) => dispatch(actions.getFeedback(data)),\r\n \tfeedbackSearch: (data) => dispatch(actions.feedbackSearch(data)),\r\n\tgetSettings: (data) => dispatch(headerActions.getSettings(data)),\r\n\tgetLocations: (data) => dispatch(dashboardActions.getLocations(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Feedback));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport FeedBackContainer from '../../containers/Feedbacks';\r\n\r\nclass FeedBack extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<FeedBackContainer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(FeedBack);\r\n","//Get Info\r\nexport const GET_INFO                   =   'GET_INFO';\r\nexport const GET_INFO_ERROR             =   'GET_INFO_ERROR';\r\nexport const GET_INFO_SUCCESS           =   'GET_INFO_SUCCESS';\r\n\r\n//Get Stores\r\nexport const GET_STORES                 =   'GET_STORES';\r\nexport const GET_STORES_ERROR           =   'GET_STORES_ERROR';\r\nexport const GET_STORES_SUCCESS         =   'GET_STORES_SUCCESS';\r\n\r\n//Update Profile\r\nexport const UPDATE_PROFILE             =   'UPDATE_PROFILE';\r\nexport const UPDATE_PROFILE_ERROR       =   'UPDATE_PROFILE_ERROR';\r\nexport const UPDATE_PROFILE_SUCCESS     =   'UPDATE_PROFILE_SUCCESS';\r\n\r\n//Change Password\r\nexport const CHANGE_PASS                =   'CHANGE_PASS';\r\nexport const CHANGE_PASS_ERROR          =   'CHANGE_PASS_ERROR';\r\nexport const CHANGE_PASS_SUCCESS        =   'CHANGE_PASS_SUCCESS';\r\n\r\n//Add Location\r\nexport const ADD_LOCATION               =   'ADD_LOCATION';\r\nexport const ADD_LOCATION_ERROR         =   'ADD_LOCATION_ERROR';\r\nexport const ADD_LOCATION_SUCCESS       =   'ADD_LOCATION_SUCCESS';\r\n\r\n//Edit Store\r\nexport const EDIT_STORE                 =   'EDIT_STORE';\r\nexport const EDIT_STORE_ERROR           =   'EDIT_STORE_ERROR';\r\nexport const EDIT_STORE_SUCCESS         =   'EDIT_STORE_SUCCESS';\r\n\r\n//Delete Store\r\nexport const DELETE_STORE               =   'DELETE_STORE';\r\nexport const DELETE_STORE_ERROR         =   'DELETE_STORE_ERROR';\r\nexport const DELETE_STORE_SUCCESS       =   'DELETE_STORE_SUCCESS';\r\n\r\n//Get Users\r\nexport const GET_USER                   =   'GET_USER';\r\nexport const GET_USER_ERROR             =   'GET_USER_ERROR';\r\nexport const GET_USER_SUCCESS           =   'GET_USER_SUCCESS';\r\n\r\n//Add Users\r\nexport const ADD_USER                   =   'ADD_USER';\r\nexport const ADD_USER_ERROR             =   'ADD_USER_ERROR';\r\nexport const ADD_USER_SUCCESS           =   'ADD_USER_SUCCESS';\r\n\r\n//Edit Users\r\nexport const EDIT_USER                  =   'EDIT_USER';\r\nexport const EDIT_USER_ERROR            =   'EDIT_USER_ERROR';\r\nexport const EDIT_USER_SUCCESS          =   'EDIT_USER_SUCCESS';\r\n\r\n//Delete Users\r\nexport const DELETE_USER                =   'DELETE_USER';\r\nexport const DELETE_USER_ERROR          =   'DELETE_USER_ERROR';\r\nexport const DELETE_USER_SUCCESS        =   'DELETE_USER_SUCCESS';\r\n\r\n//Suspend Users\r\nexport const SUSPEND_USER               =   'SUSPEND_USER';\r\nexport const SUSPEND_USER_ERROR         =   'SUSPEND_USER_ERROR';\r\nexport const SUSPEND_USER_SUCCESS       =   'SUSPEND_USER_SUCCESS';","import {\r\n  GET_INFO,\r\n  GET_INFO_ERROR,\r\n  GET_INFO_SUCCESS,\r\n  GET_STORES,\r\n  GET_STORES_ERROR,\r\n  GET_STORES_SUCCESS,\r\n  UPDATE_PROFILE,\r\n  UPDATE_PROFILE_ERROR,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  CHANGE_PASS,\r\n  CHANGE_PASS_ERROR,\r\n  CHANGE_PASS_SUCCESS,\r\n  ADD_LOCATION,\r\n  ADD_LOCATION_ERROR,\r\n  ADD_LOCATION_SUCCESS,\r\n  EDIT_STORE,\r\n  EDIT_STORE_ERROR,\r\n  EDIT_STORE_SUCCESS,\r\n  DELETE_STORE,\r\n  DELETE_STORE_ERROR,\r\n  DELETE_STORE_SUCCESS,\r\n  GET_USER,\r\n  GET_USER_ERROR,\r\n  GET_USER_SUCCESS,\r\n  ADD_USER,\r\n  ADD_USER_ERROR,\r\n  ADD_USER_SUCCESS,\r\n  EDIT_USER,\r\n  EDIT_USER_ERROR,\r\n  EDIT_USER_SUCCESS,\r\n  DELETE_USER,\r\n  DELETE_USER_ERROR,\r\n  DELETE_USER_SUCCESS,\r\n  SUSPEND_USER,\r\n  SUSPEND_USER_ERROR,\r\n  SUSPEND_USER_SUCCESS\r\n} from \"./constants\";\r\n\r\nexport const getInfo = (data) => ({\r\n  type: GET_INFO,\r\n  data\r\n});\r\n\r\nexport const listenGetInfoError = (data) => ({\r\n  type: GET_INFO_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenGetInfoSuccess = (data) => ({\r\n  type: GET_INFO_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getStores = (data) => ({\r\n  type: GET_STORES,\r\n  data\r\n});\r\n\r\nexport const listenStoresError = (data) => ({\r\n  type: GET_STORES_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenStoresSuccess = (data) => ({\r\n  type: GET_STORES_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const updateProfile = (data) => ({\r\n  type: UPDATE_PROFILE,\r\n  data\r\n});\r\n\r\nexport const listenUpdateProfileError = (data) => ({\r\n  type: UPDATE_PROFILE_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenUpdateProfileSuccess = (data) => ({\r\n  type: UPDATE_PROFILE_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const changePassword = (data) => ({\r\n  type: CHANGE_PASS,\r\n  data\r\n});\r\n\r\nexport const listenChangePasswordError = (data) => ({\r\n  type: CHANGE_PASS_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenChangePasswordSuccess = (data) => ({\r\n  type: CHANGE_PASS_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const addLocation = (data) => ({\r\n  type: ADD_LOCATION,\r\n  data\r\n});\r\n\r\nexport const listenAddLocationError = (data) => ({\r\n  type: ADD_LOCATION_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenAddLocationSuccess = (data) => ({\r\n  type: ADD_LOCATION_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const editStore = (data) => ({\r\n  type: EDIT_STORE,\r\n  data\r\n});\r\n\r\nexport const listenEditStoreError = (data) => ({\r\n  type: EDIT_STORE_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenEditStoreSuccess = (data) => ({\r\n  type: EDIT_STORE_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const deleteStore = (data) => ({\r\n  type: DELETE_STORE,\r\n  data\r\n});\r\n\r\nexport const listenDeleteStoreError = (data) => ({\r\n  type: DELETE_STORE_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenDeleteStoreSuccess = (data) => ({\r\n  type: DELETE_STORE_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getUsers = (data) => ({\r\n  type: GET_USER,\r\n  data\r\n});\r\n\r\nexport const listenGetUsersError = (data) => ({\r\n  type: GET_USER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenGetUserSuccess = (data) => ({\r\n  type: GET_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const addUser = (data) => ({\r\n  type: ADD_USER,\r\n  data\r\n});\r\n\r\nexport const listenAddUsersError = (data) => ({\r\n  type: ADD_USER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenAddUserSuccess = (data) => ({\r\n  type: ADD_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const editUser = (data) => ({\r\n  type: EDIT_USER,\r\n  data\r\n});\r\n\r\nexport const listenEditUsersError = (data) => ({\r\n  type: EDIT_USER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenEditUserSuccess = (data) => ({\r\n  type: EDIT_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const deleteUser = (data) => ({\r\n  type: DELETE_USER,\r\n  data\r\n});\r\n\r\nexport const listenDeleteUsersError = (data) => ({\r\n  type: DELETE_USER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenDeleteUserSuccess = (data) => ({\r\n  type: DELETE_USER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const suspendUser = (data) => ({\r\n  type: SUSPEND_USER,\r\n  data\r\n});\r\n\r\nexport const listenSuspendUsersError = (data) => ({\r\n  type: SUSPEND_USER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenSuspendUserSuccess = (data) => ({\r\n  type: SUSPEND_USER_SUCCESS,\r\n  data\r\n});","import React, { Component } from 'react';\r\nimport { isEmpty, isEqual } from 'lodash';\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.defaultError\t=\t{\r\n\t\t\tfirst_name\t:\tfalse,\r\n\t\t\tlast_name\t:\tfalse,\r\n\t\t\temail\t\t:\tfalse\r\n\t\t}\r\n        this.state      =   {\r\n\t\t\tformData\t:\t{\r\n\t\t\t\tfirst_name\t:\t'',\r\n\t\t\t\tlast_name\t:\t'',\r\n\t\t\t\temail\t\t:\t''\r\n\t\t\t},\r\n\t\t\t/* errors\t\t:\t{\r\n\t\t\t\tfirst_name\t:\tfalse,\r\n\t\t\t\tlast_name\t:\tfalse,\r\n\t\t\t\temail\t\t:\tfalse\r\n\t\t\t} */\r\n        }\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t//console.log('Component Did Mount');\r\n\t\tthis.props.getInfo();\r\n\t}\r\n\t\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t//console.log('componentWillReceiveProps');\r\n\t\t//console.log(props.profileData, this.props.profileData, !isEqual(props.profileData, this.props.profileData));\r\n\t\tif(!isEmpty(props.profileData) && !isEqual(props.profileData, this.props.profileData)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tformData : {...props.profileData}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleProfileSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet formData\t=\t{...this.state.formData} || {};\r\n\t\tdelete formData.show_report;\r\n\t\tlet validate\t=\tthis.validate();\r\n\t\tif(!validate.isError)\r\n\t\t\tthis.props.updateProfile(formData);\r\n\t}\r\n\t\r\n\tchangeHandle = (e) => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n        this.setState({\r\n\t\t\tformData:{\r\n\t\t\t\t...this.state.formData,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tvalidate = () => {\r\n\t\tlet formData\t=\tthis.state.formData || {};\r\n\t\t//let errors\t\t=\tthis.state.errors || {};\r\n\t\tlet errors\t\t\t=\t{...this.defaultError};\r\n\t\tlet isError\t\t=\tfalse;\r\n\t\tif(!!!formData.first_name) {\r\n\t\t\terrors.first_name\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\tif(!!!formData.last_name) {\r\n\t\t\terrors.last_name\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\tif(!!!formData.email) {\r\n\t\t\terrors.email\t\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\treturn {isError: isError, errors: errors};\r\n\t}\r\n\r\n    render() {\r\n\t\tlet formData\t\t=\tthis.state.formData || {};\r\n\t\tlet validate\t\t=\tthis.validate();\r\n\t\tlet errors\t\t\t=\tvalidate.errors || {};\r\n\t\tlet isDisabled\t\t=\tvalidate.isError;\r\n\t\t/* if(!!errors.first_name || !!errors.last_name || !!errors.email) {\r\n\t\t\tisDisabled\t\t=\ttrue;\r\n\t\t} */\r\n        return (\r\n            <div className=\"merchant_box\">\r\n                <form onSubmit={this.handleProfileSubmit}>\r\n                    <h4>Personal Info</h4>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"rname\">First Name</label>\r\n                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Enter first name\" className={`t_box${(!!errors.first_name) ? ' error' : ''}`} name=\"first_name\" value={formData.first_name} onChange={this.changeHandle}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"rname\">Last Name</label>\r\n                        <input type=\"text\" autoComplete=\"off\" placeholder=\"Enter last name\" className={`t_box${(!!errors.last_name) ? ' error' : ''}`} name=\"last_name\" value={formData.last_name} onChange={this.changeHandle}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"rname\">Email</label>\r\n                        <input type=\"email\" autoComplete=\"off\" placeholder=\"Enter Email\" className={`t_box${(!!errors.email) ? ' error' : ''}`} name=\"email\" value={formData.email} onChange={this.changeHandle}/>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <button type=\"submit\" disabled={isDisabled || this.props.isProcessing} variant=\"primary\" className={`btn btn-secondary${(!isDisabled && !this.props.isProcessing) ? ' active' :''}`}>{(!!this.props.isProcessing) ? 'Processing' : 'Submit'}</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { isEmpty, isEqual } from 'lodash';\r\nexport default class ChangePassword extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.defaultError\t=\t{\r\n\t\t\tpassword\t:\tfalse,\r\n\t\t\tproperty\t:\tfalse\r\n\t\t}\r\n        this.state      =   {\r\n\t\t\tformData\t:\t{\r\n\t\t\t\tpassword\t\t:\t'',\r\n\t\t\t\tconf_password\t:\t''\r\n\t\t\t}\r\n        }\r\n\t}\r\n\t\r\n\tcomponentWillReceiveProps(props) {\r\n\t\tif(!!this.props.isProcessing && !props.isProcessing) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tformData\t:\t{\r\n\t\t\t\t\tpassword\t\t:\t'',\r\n\t\t\t\t\tconf_password\t:\t''\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet formData\t=\t{...this.state.formData} || {};\r\n\t\tdelete formData.conf_password;\r\n\t\tlet validate\t=\tthis.validate();\r\n\t\tif(!validate.isError)\r\n\t\t\tthis.props.changePassword(formData);\r\n\t}\r\n\t\r\n\tchangeHandle = (e) => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n        this.setState({\r\n\t\t\tformData:{\r\n\t\t\t\t...this.state.formData,\r\n\t\t\t\t[name]: value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tvalidate = () => {\r\n\t\tlet formData\t=\tthis.state.formData || {};\r\n\t\tlet errors\t\t=\t{...this.defaultError};\r\n\t\tlet isError\t\t=\tfalse;\r\n\t\tif(!!!formData.password) {\r\n\t\t\terrors.password\t\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\tif(!!!formData.conf_password) {\r\n\t\t\terrors.conf_password=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\tif(!!formData.password && !!formData.conf_password && formData.password !== formData.conf_password) {\r\n\t\t\terrors.conf_password=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n\t\t}\r\n\t\treturn {isError: isError, errors: errors};\r\n\t}\r\n\r\n    render() {\r\n\t\tlet formData\t\t=\tthis.state.formData || {};\r\n\t\tlet validate\t\t=\tthis.validate();\r\n\t\tlet errors\t\t\t=\tvalidate.errors;\r\n\t\tlet isDisabled\t\t=\tvalidate.isError;\r\n        return (\r\n\t\t\t<div className=\"merchant_box\">\r\n\t\t\t\t<h4>Password</h4>\r\n                <form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"rname\">New Password</label>\r\n\t\t\t\t\t\t<input type=\"Password\" autoComplete=\"off\" placeholder=\"Enter new password\" className={`t_box${(!!errors.password) ? ' error' : ''}`} name=\"password\" value={formData.password} onChange={this.changeHandle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"rname\">Confirm New Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" autoComplete=\"off\" placeholder=\"Re-enter new password\" className={`t_box${(!!errors.conf_password) ? ' error' : ''}`} name=\"conf_password\" value={formData.conf_password} onChange={this.changeHandle}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<button type=\"submit\" disabled={isDisabled || this.props.isProcessing} variant=\"primary\" className={`btn btn-secondary${(!isDisabled && !this.props.isProcessing) ? ' active' :''}`}>{(!!this.props.isProcessing) ? 'Processing' : 'Submit'}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {success as notifysuccess} from '../../util/notify';\r\nimport {isEmpty} from 'lodash';\r\n\r\nclass CustomContext extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            visible     :   false,\r\n            x           :   0,\r\n            y           :   0\r\n        };\r\n        this.contextDiv = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        var self            =   this;       \r\n        document.addEventListener(\"click\", function(event){\r\n            event.stopPropagation();\r\n            self.props.hideContextMenu();\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        //console.log('Context Props : ', props);\r\n        this.setState({\r\n            visible     :   props.visible,\r\n            x           :   props.x,\r\n            y           :   props.y,\r\n            store       :   props.store\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"click\", function(){\r\n            //console.log('Hide Context Menu ', this.state);\r\n        });\r\n    }\r\n\r\n    render() {     \r\n        //console.log('Context Menu : ', this.props);\r\n        var myStyle     =   {\r\n            \"position\"  :   \"absolute\",\r\n            \"top\"       :   `${this.state.y}px`,\r\n            \"left\"      :   `${this.state.x+5}px`\r\n        }\r\n        let store           =   this.props.store || {};\r\n        return (\r\n            (!isEmpty(this.props.store)) ?\r\n            <div id=\"cmenu\" ref={this.contextDiv}>\r\n                {\r\n                    this.state.visible ? \r\n                    <div className=\"custom-context\" id=\"text\" style={myStyle}>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.edit(store)}>Edit</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.delete(store.id)}>Delete</div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div> : null\r\n        )\r\n    }\r\n}\r\nexport default CustomContext;","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { addressFormater } from '../../util/helper';\r\nimport {error as notifyerror, success as notifysuccess} from '../../util/notify';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport {findIndex as _findIndex, isEmpty, isEqual} from 'lodash';\r\nimport moment from 'moment-timezone';\r\n\r\nclass EditLocation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.errors   =   {\r\n            store            :   false,\r\n            address          :   false,\r\n            phone            :   false,\r\n            store_id         :   false,\r\n            note             :   false,\r\n            invalidAddress   :   false\r\n        }\r\n        this.state              =   {\r\n           /* errors   :   {\r\n               store            :   false,\r\n               address          :   false,\r\n               phone            :   false,\r\n               store_id         :   false,\r\n               note             :   false,\r\n               invalidAddress   :   false\r\n           }, */\r\n           formData :   {\r\n                phone           :   '',\r\n                store           :   '',\r\n                note            :   '',\r\n                store_id        :   '',\r\n                address         :   ''\r\n           },\r\n           location     : {}\r\n        }\r\n        this.handleClose            =   this.handleClose.bind(this);\r\n        this.handleAddressChange    =   this.handleAddressChange.bind(this);\r\n    } \r\n \r\n    handleAddressChange = address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({\r\n            /* errors: {\r\n                ...this.state.errors,\r\n                invalidAddress:(!!address) ? false : true\r\n            }, */\r\n            invalidAddress:(!!address) ? false : true,\r\n            formData: {...this.state.formData, address:address},\r\n            location: {}\r\n        });\r\n    };\r\n\r\n    handleAddressSelect = address => {\r\n        let timestamp = moment().unix();\r\n        //console.log('Timestamp : ', timestamp);\r\n        let self    =   this;\r\n        let data = {\r\n            zipcode: '',\r\n            state_code: '',\r\n            latitude: '',\r\n            longitude: '',\r\n            address: ''\r\n        };\r\n        geocodeByAddress(address)\r\n        .then((results) => {\r\n            //console.log(address, results, results[0].formatted_address);\r\n            data.address    =   results[0].formatted_address || '';\r\n            data.place_id   =   results[0].place_id;\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let timezone    =   '';\r\n            fetch(`https://maps.googleapis.com/maps/api/timezone/json?location=${lat},${lng}&timestamp=${timestamp}&key=AIzaSyCwMjYiTDbntZTUuxDczjOTH3Mk1vD-9_w`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                //console.log('Data : ', res);\r\n                timezone    =   res.timeZoneId;\r\n                let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n                if(matchExp.test(data.address)){\r\n                    let delAddData = this.props.deliveryAddress;\r\n                    let addressArray = addressFormater(data.address);\r\n                    //console.log('Address : ', data.address, addressArray);\r\n                    if(!isEmpty(addressArray) && addressArray.validAdrs){\r\n                        data.latitude = lat;\r\n                        data.longitude = lng;\r\n                        data.address = addressArray.address;\r\n                        data.zipcode = addressArray.zipcode;\r\n                        data.state_code = addressArray.state_code;\r\n                        data.city = addressArray.city;\r\n                        data.country = addressArray.country;\r\n                        data.number = addressArray.number;\r\n                        data.street = addressArray.street;\r\n                        data.timezone   =   timezone;\r\n\r\n                        //console.log('AddressBox ###########', data);\r\n                        //this.setState({ address: addressArray.address }); \r\n                        self.setState({\r\n                            /* errors: {\r\n                                ...self.state.errors,\r\n                                invalidAddress:false\r\n                            }, */\r\n                            invalidAddress:false,\r\n                            location: data,\r\n                            formData: {...self.state.formData, address:data.address}\r\n                        }); \r\n                    } else {\r\n                        notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                        self.setState({\r\n                            /* errors: {\r\n                                ...self.state.errors,\r\n                                invalidAddress:true\r\n                            }, */\r\n                            location: {},\r\n                            invalidAddress:true,\r\n                            formData: {...this.state.formData, address:''}\r\n                            //recipient_address: ''\r\n                        }); \r\n                    }             \r\n                } else {\r\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                    self.setState({\r\n                        /* errors: {\r\n                            ...self.state.errors,\r\n                            invalidAddress:true\r\n                        }, */\r\n                        location: {},\r\n                        invalidAddress:true,\r\n                        formData: {...this.state.formData, address:''}\r\n                    }); \r\n                }\r\n            });\r\n        })\r\n        .catch(error => {\r\n            self.setState({\r\n                /* errors: {\r\n                    ...self.state.errors,\r\n                    invalidAddress:true\r\n                }, */\r\n                location: {},\r\n                invalidAddress:true,\r\n                formData: {...this.state.formData, address:''}\r\n            });\r\n            //console.log('Error', error);\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            show: props.show\r\n        })\r\n        if(!isEqual(props.selStore, this.props.selStore)) {\r\n            //console.log('Store Updated : ', props.selStore);\r\n            let store       =   props.selStore || {};\r\n            this.setState({                \r\n                formData :   {\r\n                    phone           :   store.phone,\r\n                    store           :   store.store,\r\n                    note            :   store.note,\r\n                    store_id        :   store.store_id,\r\n                    address         :   store.address\r\n                },\r\n                location     : {\r\n                    longitude : store.longitude,\r\n                    latitude :store.latitude,\r\n                    address : store.address,\r\n                    zipcode : store.postalCode,\r\n                    state_code : store.state,\r\n                    city : store.city,\r\n                    country : store.country,\r\n                    number : store.number,\r\n                    street : store.street,\r\n                    timezone: store.timeZone \r\n                }\r\n            })\r\n        }\r\n        //console.log('Processing : ', !!!props.isProcessing && props.isProcessing !== this.props.isProcessing);\r\n        if(!!!props.isProcessing && props.isProcessing !== this.props.isProcessing) {\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({show: false});\r\n        this.props.handleClose();\r\n    }\r\n\r\n    onChangeHandle = (e) => {\r\n        let self                    =   this;\r\n        let formData                =   { ...this.state.formData};\r\n        const name                  =   e.target.name;\r\n        const value\t\t            =   e.target.value\r\n        formData[name]              =   value;\r\n        this.setState({ formData: formData });\r\n    }\r\n\r\n    handleEditStore    =   (e)  =>  {\r\n        e.preventDefault();\r\n        let location        =   {...this.state.location};\r\n        let formData        =   {...this.state.formData};\r\n        let selStore        =   {...this.props.selStore};\r\n        let data        =   {\r\n            address:location.address,\r\n            number:location.number,\r\n            street:location.street,\r\n            city:location.city,\r\n            state:location.state_code,\r\n            country:location.country,\r\n            postalCode:location.zipcode,\r\n            latitude:location.latitude,\r\n            longitude:location.longitude,\r\n            timeZone:location.timezone,\r\n            phone:formData.phone,\r\n            store:formData.store,\r\n            note:formData.note,\r\n            place_id:location.place_id,\r\n            store_id:formData.store_id,\r\n            sms: selStore.sms,\r\n            id:selStore.id\r\n        }\r\n        //console.log('Store Edit : ', data);\r\n        this.props.editStore(data);\r\n    }\r\n\r\n    validateForm() {\r\n        let formData        =   this.state.formData || {};\r\n        let errors          =   {\r\n            store            :   false,\r\n            address          :   false,\r\n            phone            :   false,\r\n            store_id         :   false,\r\n            note             :   false\r\n        };\r\n        //console.log(this.state.location);\r\n        let isError         =   false;\r\n        if(!!!formData.store){\r\n            errors.store        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.store_id){\r\n            errors.store_id        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.address || isEmpty(this.state.location)){\r\n            errors.address        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.phone){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!formData.phone && (formData.phone.length !== 10 || isNaN(formData.phone))){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!formData.phone && formData.phone < 1){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        return {isError: isError, errors: errors};\r\n    }\r\n\r\n    render() {\r\n        let show                    =   this.props.show || false;\r\n        let formData                =   this.state.formData || {};\r\n        let validate                =   this.validateForm();\r\n        let isDisabled              =   validate.isError;\r\n        let errors                  =   validate.errors || {};\r\n        //console.log('Render : ', this.props.isProcessing);\r\n        const rsSrchStyles = {\r\n            input: {\r\n                width: '260px',\r\n                padding: '0px 15px 0px 35px',\r\n                color: '#333',\r\n                margin:'0'\r\n            },\r\n            autocompleteContainer: {\r\n                borderRadius: '0 0 3px 3px',\r\n                zIndex: '999',\r\n                background: 'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\r\n                position: 'relative',\r\n                border: '1px solid #e8e8e8',\r\n                boxShadow:'1px 5px 10px rgba(68,68,68,0.2)',\r\n            },\r\n            autocompleteItem: {\r\n                textAlign: 'left',\r\n                fontSize: '12px',\r\n                padding: '5px 8px 5px 30px',\r\n                lineHeight:'20px',\r\n                color: '#999',\r\n                background: '10px 8px #fff',\r\n                margin: '0',\r\n                borderTop:'none',\r\n                borderBottom: '1px solid #ccc',\r\n                background: 'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\r\n            },\r\n            autocompleteItemActive: { color: '#E44500' }\r\n        };\r\n\r\n        //const renderFunc    =   ;\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" data=\"ignore-outer-click\" show={show} onHide={this.props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Location</Modal.Title>\r\n                </Modal.Header>\r\n                <form onSubmit={this.handleEditStore}>\r\n                    <Modal.Body>\r\n                        <Row noGutters>\r\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"delivery\">Store</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Store\" className={`t_box${(!!errors.store) ? ' error' : ''}`} name=\"store\" onChange={this.onChangeHandle} value={formData.store}/>\r\n                                </div>\r\n                                <div className=\"form-group pr\">\r\n                                    <label htmlFor=\"address\">Address</label>\r\n                                    <PlacesAutocomplete\r\n                                        value={formData.address}\r\n                                        onChange={this.handleAddressChange}\r\n                                        onSelect={this.handleAddressSelect}\r\n                                        styles={rsSrchStyles}\r\n                                    >\r\n                                        {\r\n                                            ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                            <div>\r\n                                                <input\r\n                                                {...getInputProps({\r\n                                                    placeholder: 'Enter Address',\r\n                                                    className:  `t_box${(!!errors.address) ? ' error' : ''}`,\r\n                                                })}\r\n                                                />\r\n                                                <div className=\"autocomplete-dropdown-container\">\r\n                                                {loading && <div>Loading...</div>}\r\n                                                {suggestions.map(suggestion => {\r\n                                                    const className = suggestion.active\r\n                                                    ? 'suggestion-item--active'\r\n                                                    : 'suggestion-item';\r\n                                                    // inline style for demonstration purpose\r\n                                                    const style = suggestion.active\r\n                                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                    return (\r\n                                                    <div\r\n                                                        {...getSuggestionItemProps(suggestion, {\r\n                                                        className,\r\n                                                        style,\r\n                                                        })}\r\n                                                    >\r\n                                                        <span>{suggestion.description}</span>\r\n                                                    </div>\r\n                                                    );\r\n                                                })}\r\n                                                </div>\r\n                                            </div>\r\n                                            )\r\n                                        }\r\n                                    </PlacesAutocomplete>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Phone No\" className={`t_box${(!!errors.phone) ? ' error' : ''}`} name=\"phone\" onChange={this.onChangeHandle} value={formData.phone}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"store-id\">Store ID</label>\r\n                                    <input type=\"text\" className={`t_box${(!!errors.store_id) ? ' error' : ''}`} name=\"store_id\" onChange={this.onChangeHandle} value={formData.store_id}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"notes\">Driver Notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"note\" onChange={this.onChangeHandle} value={formData.note}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" disabled={isDisabled || !!this.props.isProcessing} className={(!this.props.isProcessing && !isDisabled) ? 'active' : ''} variant=\"primary\">\r\n                            {(!!this.props.isProcessing) ? 'Processing..' : 'Submit'}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default EditLocation;","import React, { Component } from 'react';\r\nimport CustomContext from './contextMenu';\r\nimport EditLocation from '../Modals/editLocation';\r\nexport default class Stores extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state\t\t=\t{\t\t\t\r\n\t\t\tvisible         :   false,\r\n\t\t\tx               :   '',\r\n\t\t\ty               :   '',\r\n\t\t\tstore\t\t\t:\t{},\r\n\t\t\tselStore\t\t:\t{}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getStores();\r\n\t}\r\n\r\n\thandleContextMenu = (e, item) => {\r\n\t\te.preventDefault();\r\n        const clickX               =  e.clientX;\r\n        const clickY               =  e.pageY;\r\n        this.setState({\r\n            visible     :  true,\r\n            x           :  clickX,\r\n            y           :  clickY,\r\n            store    \t:  item\r\n        });\r\n\t}\r\n\r\n\thideContextMenu\t=\t() => {\r\n        this.setState({\r\n            visible :   false,\r\n            x       :   0,\r\n\t\t\ty       :   0,\r\n\t\t\tstore\t:\t''\r\n        });\r\n\t}\r\n\r\n\t/* handleShowLocation\t= () => {\r\n\t\tthis.setState({\r\n\t\t\tshow: true\r\n\t\t})\r\n\t}; */\r\n\r\n\teditStore = (store) => {\r\n\t\t//console.log('Edit Store : ', id);\r\n\t\tthis.setState({\r\n\t\t\tshow\t\t:\ttrue,\r\n\t\t\tselStore\t:\tstore\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteStore = (id) => {\r\n\t\tif(window.confirm('Do you really want to delete this store?')) {\r\n\t\t\tthis.props.deleteStore(id);\t\r\n\t\t}\r\n\t}\r\n\r\n\thandleClose\t=\t()\t=> {\r\n\t\tthis.setState({\r\n\t\t\tshow: false\r\n\t\t})\r\n\t};\r\n\r\n    render() {\r\n\t\tlet stores\t\t\t=\tthis.props.storesList || [];\r\n        return (\r\n\t\t\t<div className=\"stores_pan\">\r\n\t\t\t\t<div className=\"table_sec\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(!this.props.isLoading) ?\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<th colSpan=\"4\" className=\"t-titel\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"status_count\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"g_total\">Total Stores: {stores.length}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr className=\"t-heading\">\r\n\t\t\t\t\t\t\t\t<th>Store</th>\r\n\t\t\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t\t\t<th>Notes</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(stores.length > 0) ?\r\n\t\t\t\t\t\t\t\tstores.map((item, i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={i} onContextMenu={(e) => this.handleContextMenu(e, item)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{item.store}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"acell\"><label>{item.address}</label><span className=\"tTip\">{item.address}</span></td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{item.phone}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"acell\"> {(item.note) ? <span className=\"tTip\">{item.note}</span> : ''} <label>{item.note}</label></td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: <tr className=\"no-records\"><td style={{textAlign:\"center\"}} colSpan=\"4\">No Records</td></tr>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t: <div className=\"loader\">Loading....</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<CustomContext\r\n                    visible             =   {this.state.visible}\r\n                    x                   =   {this.state.x}\r\n                    y                   =   {this.state.y}\r\n                    store            \t=   {this.state.store}\r\n                    edit\t\t\t\t=   {this.editStore}\r\n                    delete\t\t\t\t=   {this.deleteStore}\r\n                    hideContextMenu     =   {this.hideContextMenu}\r\n                />\r\n\t\t\t\t<EditLocation\r\n\t\t\t\t\tshow\t\t\t=\t{this.state.show}\r\n\t\t\t\t\thandleClose\t\t=\t{this.handleClose}\r\n\t\t\t\t\tisProcessing\t=\t{this.props.isProcessing}\r\n\t\t\t\t\teditStore\t\t=\t{this.props.editStore}\r\n\t\t\t\t\tselStore\t\t=\t{this.state.selStore}\r\n\t\t\t\t/>\t\t\t\t\t\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { addressFormater } from '../../util/helper';\r\nimport {error as notifyerror, success as notifysuccess} from '../../util/notify';\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\nimport {findIndex as _findIndex, isEmpty, isEqual} from 'lodash';\r\nimport moment from 'moment-timezone';\r\n\r\nclass AddLocation extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.errors   =   {\r\n            store            :   false,\r\n            address          :   false,\r\n            phone            :   false,\r\n            store_id         :   false,\r\n            note             :   false,\r\n            invalidAddress   :   false\r\n        }\r\n        this.state              =   {\r\n           /* errors   :   {\r\n               store            :   false,\r\n               address          :   false,\r\n               phone            :   false,\r\n               store_id         :   false,\r\n               note             :   false,\r\n               invalidAddress   :   false\r\n           }, */\r\n           formData :   {\r\n                phone           :   '',\r\n                store           :   '',\r\n                note            :   '',\r\n                store_id        :   '',\r\n                address         :   ''\r\n           },\r\n           location     : {}\r\n        }\r\n        this.handleClose            =   this.handleClose.bind(this);\r\n        this.handleAddressChange    =   this.handleAddressChange.bind(this);\r\n    } \r\n \r\n    handleAddressChange = address => {\r\n        //console.log('Recipient Address', recipient_address);\r\n        this.setState({\r\n            /* errors: {\r\n                ...this.state.errors,\r\n                invalidAddress:(!!address) ? false : true\r\n            }, */\r\n            invalidAddress:(!!address) ? false : true,\r\n            formData: {...this.state.formData, address:address},\r\n            location: {}\r\n        });\r\n    };\r\n\r\n    handleAddressSelect = address => {\r\n        let timestamp = moment().unix();\r\n        let self    =   this;\r\n        let data = {\r\n            zipcode: '',\r\n            state_code: '',\r\n            latitude: '',\r\n            longitude: '',\r\n            address: ''\r\n        };\r\n        geocodeByAddress(address)\r\n        .then((results) => {\r\n            //console.log(results);\r\n            data.address    =   results[0].formatted_address || '';\r\n            data.place_id   =   results[0].place_id;\r\n            return getLatLng(results[0]);\r\n        })\r\n        .then(({ lat, lng }) => {\r\n            //console.log(lat, lng, data.address);\r\n            let timezone    =   '';\r\n            fetch(`https://maps.googleapis.com/maps/api/timezone/json?location=${lat},${lng}&timestamp=${timestamp}&key=AIzaSyCwMjYiTDbntZTUuxDczjOTH3Mk1vD-9_w`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                //console.log('Data : ', res);\r\n                timezone    =   res.timeZoneId;\r\n                let matchExp = /(\\d+) (.+?), (.+?), (.+?) ([0-9]{5})/g;\r\n                if(matchExp.test(data.address)){\r\n                    let delAddData = this.props.deliveryAddress;\r\n                    let addressArray = addressFormater(data.address);\r\n                    //console.log('Address : ', data.address, addressArray);\r\n                    if(!isEmpty(addressArray) && addressArray.validAdrs){\r\n                        data.latitude = lat;\r\n                        data.longitude = lng;\r\n                        data.address = addressArray.address;\r\n                        data.zipcode = addressArray.zipcode;\r\n                        data.state_code = addressArray.state_code;\r\n                        data.city = addressArray.city;\r\n                        data.country = addressArray.country;\r\n                        data.number = addressArray.number;\r\n                        data.street = addressArray.street;\r\n                        data.timezone   =   timezone;\r\n\r\n                        //console.log('AddressBox ###########', data);\r\n                        //this.setState({ address: addressArray.address }); \r\n                        self.setState({\r\n                            /* errors: {\r\n                                ...self.state.errors,\r\n                                invalidAddress:false\r\n                            }, */\r\n                            invalidAddress:false,\r\n                            location: data,\r\n                            formData: {...self.state.formData, address:data.address}\r\n                        }); \r\n                    } else {\r\n                        notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                        self.setState({\r\n                            /* errors: {\r\n                                ...self.state.errors,\r\n                                invalidAddress:true\r\n                            }, */\r\n                            location: {},\r\n                            invalidAddress:true,\r\n                            formData: {...this.state.formData, address:''}\r\n                            //recipient_address: ''\r\n                        }); \r\n                    }             \r\n                } else {\r\n                    notifyerror('Oops, that does not seem like a valid address. Please try again.');\r\n                    self.setState({\r\n                        /* errors: {\r\n                            ...self.state.errors,\r\n                            invalidAddress:true\r\n                        }, */\r\n                        location: {},\r\n                        invalidAddress:true,\r\n                        formData: {...this.state.formData, address:''}\r\n                    }); \r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            self.setState({\r\n                /* errors: {\r\n                    ...self.state.errors,\r\n                    invalidAddress:true\r\n                }, */\r\n                location: {},\r\n                invalidAddress:true,\r\n                formData: {...this.state.formData, address:''}\r\n            });\r\n            //console.log('Error', error);\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            show: props.show\r\n        })\r\n        //console.log('Processing : ', !!!props.isProcessing && props.isProcessing !== this.props.isProcessing);\r\n        if(!!!props.isProcessing && props.isProcessing !== this.props.isProcessing) {\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    handleClose() {        \r\n        this.errors   =   {\r\n            store            :   false,\r\n            address          :   false,\r\n            phone            :   false,\r\n            store_id         :   false,\r\n            note             :   false,\r\n            invalidAddress   :   false\r\n        }\r\n\r\n        this.setState({\r\n            show: false,\r\n            formData :   {\r\n                phone           :   '',\r\n                store           :   '',\r\n                note            :   '',\r\n                store_id        :   '',\r\n                address         :   ''\r\n           },\r\n           location     : {}\r\n        });\r\n        this.props.handleClose();\r\n    }\r\n\r\n    onChangeHandle = (e) => {\r\n        let self                    =   this;\r\n        let formData                =   { ...this.state.formData};\r\n        const name                  =   e.target.name;\r\n        const value\t\t            =   e.target.value\r\n        formData[name]              =   value;\r\n        this.setState({ formData: formData });\r\n    }\r\n\r\n    handleCreateLocation    =   (e)  =>  {\r\n        e.preventDefault();\r\n        let location        =   {...this.state.location};\r\n        let formData        =   {...this.state.formData};\r\n        let data        =   {\r\n            address:location.address,\r\n            number:location.number,\r\n            street:location.street,\r\n            city:location.city,\r\n            state:location.state_code,\r\n            country:location.country,\r\n            postalCode:location.zipcode,\r\n            latitude:location.latitude,\r\n            longitude:location.longitude,\r\n            timeZone:location.timezone,\r\n            phone:formData.phone,\r\n            store:formData.store,\r\n            note:formData.note,\r\n            place_id:location.place_id,\r\n            store_id:formData.store_id\r\n        }\r\n        this.props.addLocation(data);\r\n    }\r\n\r\n    validateForm() {\r\n        let formData        =   this.state.formData || {};\r\n        let errors          =   {\r\n            store            :   false,\r\n            address          :   false,\r\n            phone            :   false,\r\n            store_id         :   false,\r\n            note             :   false\r\n        };\r\n        //console.log(this.state.location);\r\n        let isError         =   false;\r\n        if(!!!formData.store){\r\n            errors.store        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.store_id){\r\n            errors.store_id        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.address || isEmpty(this.state.location)){\r\n            errors.address        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!!formData.phone){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!formData.phone && (formData.phone.length !== 10 || isNaN(formData.phone))){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        if(!!formData.phone && formData.phone < 1){\r\n            errors.phone        =   true;\r\n            isError             =   true;\r\n        }\r\n        return {isError: isError, errors: errors};\r\n    }\r\n\r\n    render() {\r\n        let show                    =   this.props.show || false;\r\n        let formData                =   this.state.formData || {};\r\n        let validate                =   this.validateForm();\r\n        let isDisabled              =   validate.isError;\r\n        let errors                  =   validate.errors || {};\r\n        const rsSrchStyles = {\r\n            input: {\r\n                width: '260px',\r\n                padding: '0px 15px 0px 35px',\r\n                color: '#333',\r\n                margin:'0'\r\n            },\r\n            autocompleteContainer: {\r\n                borderRadius: '0 0 3px 3px',\r\n                zIndex: '999',\r\n                background: 'url(/static/images/pow_google.jpg) no-repeat right bottom #fff',\r\n                position: 'relative',\r\n                border: '1px solid #e8e8e8',\r\n                boxShadow:'1px 5px 10px rgba(68,68,68,0.2)',\r\n            },\r\n            autocompleteItem: {\r\n                textAlign: 'left',\r\n                fontSize: '12px',\r\n                padding: '5px 8px 5px 30px',\r\n                lineHeight:'20px',\r\n                color: '#999',\r\n                background: '10px 8px #fff',\r\n                margin: '0',\r\n                borderTop:'none',\r\n                borderBottom: '1px solid #ccc',\r\n                background: 'url(/static/images/location_google.png) no-repeat 10px 8px #fff'\r\n            },\r\n            autocompleteItemActive: { color: '#E44500' }\r\n        };\r\n\r\n        //const renderFunc    =   ;\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" data=\"ignore-outer-click\" show={show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Store</Modal.Title>\r\n                </Modal.Header>\r\n                <form onSubmit={this.handleCreateLocation}>\r\n                    <Modal.Body>\r\n                        <Row noGutters>\r\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"delivery\">Store</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Store\" className={`t_box${(!!errors.store) ? ' error' : ''}`} name=\"store\" onChange={this.onChangeHandle} value={formData.store}/>\r\n                                </div>\r\n                                <div className=\"form-group pr\">\r\n                                    <label htmlFor=\"address\">Address</label>\r\n                                    <PlacesAutocomplete\r\n                                        value={formData.address}\r\n                                        onChange={this.handleAddressChange}\r\n                                        onSelect={this.handleAddressSelect}\r\n                                        styles={rsSrchStyles}\r\n                                    >\r\n                                        {\r\n                                            ({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                            <div>\r\n                                                <input\r\n                                                {...getInputProps({\r\n                                                    placeholder: 'Enter Address',\r\n                                                    className:  `t_box${(!!errors.address) ? ' error' : ''}`,\r\n                                                })}\r\n                                                />\r\n                                                <div className=\"autocomplete-dropdown-container\">\r\n                                                {loading && <div>Loading...</div>}\r\n                                                {suggestions.map(suggestion => {\r\n                                                    const className = suggestion.active\r\n                                                    ? 'suggestion-item--active'\r\n                                                    : 'suggestion-item';\r\n                                                    // inline style for demonstration purpose\r\n                                                    const style = suggestion.active\r\n                                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                    return (\r\n                                                    <div\r\n                                                        {...getSuggestionItemProps(suggestion, {\r\n                                                        className,\r\n                                                        style,\r\n                                                        })}\r\n                                                    >\r\n                                                        <span>{suggestion.description}</span>\r\n                                                    </div>\r\n                                                    );\r\n                                                })}\r\n                                                </div>\r\n                                            </div>\r\n                                            )\r\n                                        }\r\n                                    </PlacesAutocomplete>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Phone No\" className={`t_box${(!!errors.phone) ? ' error' : ''}`} name=\"phone\" onChange={this.onChangeHandle} value={formData.phone}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"store-id\">Store ID</label>\r\n                                    <input type=\"text\" className={`t_box${(!!errors.store_id) ? ' error' : ''}`} name=\"store_id\" onChange={this.onChangeHandle} value={formData.store_id}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"notes\">Driver Notes</label>\r\n                                    <input type=\"text\" className=\"t_box\" name=\"note\" onChange={this.onChangeHandle} value={formData.note}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" disabled={isDisabled || !!this.props.isProcessing} className={(!this.props.isProcessing && !isDisabled) ? 'active' : ''} variant=\"primary\">\r\n                            {(!!this.props.isProcessing) ? 'Processing..' : 'Submit'}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default AddLocation;","import React, { Component } from 'react';\r\nimport {success as notifysuccess} from '../../util/notify';\r\nimport {isEmpty} from 'lodash';\r\n\r\nclass CustomContext extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state      =   {\r\n            visible     :   false,\r\n            x           :   0,\r\n            y           :   0\r\n        };\r\n\r\n        this.contextDiv = React.createRef();\r\n    };\r\n\r\n    componentDidMount(){\r\n        var self            =   this;       \r\n        document.addEventListener(\"click\", function(event){\r\n            event.stopPropagation();\r\n            self.props.hideContextMenu();\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            visible     :   props.visible,\r\n            x           :   props.x,\r\n            y           :   props.y,\r\n            itemObj     :  props.itemObj\r\n        })\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"click\", function(){});\r\n    };\r\n\r\n    render() {   \r\n        var myStyle = {\r\n            \"position\"  :   \"absolute\",\r\n            \"top\"       :   `${this.state.y}px`,\r\n            \"left\"      :   `${this.state.x+5}px`\r\n        };\r\n\r\n        return (\r\n            (!isEmpty(this.state.itemObj)) ?\r\n            <div id=\"cmenu\" ref={this.contextDiv}>\r\n                {\r\n                    this.state.visible ? \r\n                    <div className=\"custom-context\" id=\"text\" style={myStyle}>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.handleShowUserModel('EDIT', this.state.itemObj.id)}>Edit User</div>\r\n                        <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.handleShowUserModel('DELETE', this.state.itemObj.id)}>Delete User</div>\r\n\r\n                        {\r\n                            (this.state.itemObj.active === \"true\")?\r\n                            <div data=\"ignore-outer-click\" className=\"custom-context-item\" onClick={() => this.props.handleShowUserModel('SUSPEND', this.state.itemObj.id)}>Suspended User</div>\r\n                            :<div data=\"ignore-outer-click\" className=\"custom-context-item\" style={{color: '#B6B6B6'}}>Suspended User</div>\r\n                        }\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div> : null\r\n        )\r\n    }\r\n}\r\nexport default CustomContext;","import React, { Component } from 'react';\r\nimport moment from 'moment-timezone';\r\nimport CustomContext from './userContextMenu';\r\n\r\nexport default class Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n\t\t\tx: '',\r\n\t\t\ty: '',\t\t\r\n\t\t\titemObj: null,\r\n\t\t\tvisible: false\r\n\t\t};\r\n\r\n\t\tthis.handleContextMenu = this.handleContextMenu.bind(this);\r\n\t};\r\n\r\n\thandleContextMenu(event, itemObj) {\r\n\t\tlet self = this;\r\n\t\tevent.preventDefault();        \r\n\t\tconst clickX =  event.clientX;\r\n\t\tconst clickY =  event.pageY;\r\n\t\tself.setState({\r\n\t\t\tvisible     :  true,\r\n\t\t\tx           :  clickX,\r\n\t\t\ty           :  clickY,\r\n\t\t\titemObj     :  itemObj\r\n\t\t});\r\n\t};\r\n\r\n\thideContextMenu = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible     :  false,\r\n\t\t\tx:0,\r\n\t\t\ty:0\r\n\t\t});\r\n\t};\r\n\r\n    render() {\r\n    \tlet userObj = this.props.usersList || {};\r\n    \tlet userCount = userObj.count || 0;\r\n    \tlet activeUserCount = userObj.active_count || 0;\r\n    \tlet inActiveUserCount = userObj.inactive_count || 0;\r\n    \tlet users = (userObj && userObj.users) || [];\r\n\r\n        return (\r\n\t\t\t<div className=\"users_pan\">\r\n\t\t\t\t<CustomContext\r\n\t\t\t\t\tvisible             =   {this.state.visible}\r\n\t\t\t\t\tx                   =   {this.state.x}\r\n\t\t\t\t\ty                   =   {this.state.y}\r\n\t\t\t\t\titemObj             =   {this.state.itemObj}\t\t\t\t\r\n\t\t\t\t\thideContextMenu     =   {this.hideContextMenu}\r\n\t\t\t\t\thandleShowUserModel =   {this.props.handleShowUserModel}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"table_sec\">\r\n\t\t\t\t{\r\n\t\t\t\t\t(!this.props.isLoading)?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t \t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th colSpan=\"6\" className=\"t-titel\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"status_count\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"g_total\">Total Users: {userCount}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"g_users\">Active Users: {activeUserCount}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"g_users\">Suspended Users: {inActiveUserCount}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t \t</thead>\r\n\r\n\t\t\t\t\t\t \t<tbody>\r\n\t\t\t\t\t\t\t\t<tr className=\"t-heading\">\r\n\t\t\t\t\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t\t<th style={{textAlign: 'left'}}>Last Login: Date/Time</th>\r\n\t\t\t\t\t\t\t\t\t<th>User Type</th>\r\n\t\t\t\t\t\t\t\t\t<th>Suspended</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(users.length > 0) ?\r\n\t\t\t\t\t\t\t\t\t\tusers.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tlet date = moment(item.created_at).format(\"MM/DD - hh:mma\");\r\n\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={index} className={(item.active === 'false') ? 'dis' : ''} onContextMenu={(e) => this.handleContextMenu(e, item)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.first_name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.last_name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{textAlign: 'left'}}>{date}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{textTransform: 'capitalize'}}>{item.user_type}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(item.active === 'true') ? 'False' : 'True'}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t: <tr className=\"no-records\"><td style={{textAlign:\"center\"}} colSpan=\"6\">No Records</td></tr>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</table>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className=\"loader\">Loading....</div>\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport {getCookie} from '../../util/cookies';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport { Row, Col, Form, Button, FormFeedback } from 'reactstrap';\r\n\r\nclass AddUserModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            values: {},\r\n            errors: {}\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChecked = this.handleChecked.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n    };\r\n\r\n    handleValidation(){\r\n        let isError = false;\r\n        let values = this.state.values;\r\n        let errors = this.state.errors;\r\n\r\n        //First Name\r\n        if (!!!values.first_name) {\r\n            isError = true;\r\n            errors.first_name = 'First name is required.';\r\n        }; \r\n\r\n        //First Name\r\n        if (!!!values.last_name) {\r\n            isError = true;\r\n            errors.last_name = 'Last name is required.';\r\n        }; \r\n\r\n        //Email\r\n        if(!!!values.email){\r\n            isError = true;\r\n            errors.email = 'Email is required.';\r\n        } else if(values.email) {\r\n            let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n            if(!reg.test(values.email)) {\r\n                isError = true;\r\n                errors.email = 'Please enter a valid email address.';\r\n            }\r\n        }; \r\n\r\n        //User Type\r\n        if(!!!values.user_type){\r\n            isError = true;\r\n            errors.user_type = 'User type is required.';\r\n        };\r\n\r\n       this.setState({ errors: errors });\r\n       return isError;\r\n    };\r\n\r\n    handleChange(e){    \r\n        const { name, value } = e.target\r\n        let values = this.state.values;\r\n        values[name] = value; \r\n\r\n        let errors = {...this.state.errors};\r\n        errors[name] = \"\";\r\n               \r\n        this.setState({values, errors: errors});\r\n    };\r\n\r\n    handleChecked(e) {\r\n        const { name, checked } = e.target;\r\n        let values = this.state.values;\r\n        values[name] = checked; \r\n\r\n        this.setState({values});\r\n    };\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        let id = this.state.values.id || null;\r\n        let isError = this.handleValidation();\r\n\r\n        if(isError) {\r\n            return false;\r\n            console.log(\"Form has errors.\", this.state.errors);\r\n        } else {\r\n            let postData = {...this.state.values};           \r\n            postData['active'] = postData.active.toString();\r\n            postData['show_report'] = postData.show_report.toString();\r\n\r\n            if (!id) {\r\n                let userData = getCookie('foodjets_merchant') || {}; \r\n\r\n                postData['org_id'] = userData.org_id;\r\n                postData['org_name'] = userData.org_name;\r\n                postData['org_user_email'] = userData.org_email;\r\n                this.props.addUserData(postData);\r\n            } else {\r\n                this.props.updateUserData(postData);\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(props) {        \r\n        this.setState({ values: props.initialData, errors: props.initialUserErrorData });\r\n    };\r\n\r\n    render() {\r\n        let activeFormBtn = false;\r\n        const { errors, values } = this.state;\r\n\r\n        if(isEmpty(errors.first_name) && isEmpty(errors.last_name) && isEmpty(errors.email) && isEmpty(errors.user_type) && !isEmpty(values.first_name) && !isEmpty(values.last_name) && !isEmpty(values.email) && !isEmpty(values.user_type)){\r\n            activeFormBtn = true;\r\n        };\r\n\r\n        return (\r\n            <Modal size=\"md\" className=\"c-modal\" data=\"ignore-outer-click\" show={this.props.show} onHide={() => { this.props.handleShowUserModel('CLOSE') }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{(this.props.action === 'EDIT')?'Edit User':'Add User'}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Form autoComplete=\"off\" onSubmit= {this.handleSubmit}>\r\n                    <Modal.Body>\r\n                        <Row noGutters>\r\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"first_name\">First Name</label>\r\n                                    <input type=\"text\" placeholder=\"Enter First Name\" className={!!errors.first_name  ? \"t_box error\" : \"t_box\" } name=\"first_name\" onChange={this.handleChange} value={values.first_name} />\r\n\r\n                                    {errors.first_name && ( <FormFeedback style={{display: 'block'}}> {errors.first_name}</FormFeedback>  )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"last_name\">Last Name</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Last Name\" className={!!errors.last_name  ? \"t_box error\" : \"t_box\" } name=\"last_name\" onChange={this.handleChange} value={values.last_name} />\r\n\r\n                                    {errors.last_name && ( <FormFeedback style={{display: 'block'}}> {errors.last_name}</FormFeedback>  )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type=\"email\" placeholder=\"Enter Email\" className={!!errors.email  ? \"t_box error\" : \"t_box\" } name=\"email\" onChange={this.handleChange} value={values.email} />\r\n\r\n                                    {errors.email && ( <FormFeedback style={{display: 'block'}}> {errors.email}</FormFeedback>  )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group dselect\">\r\n                                    <label htmlFor=\"user_type\">User Type</label>\r\n                                    <select className={!!errors.user_type  ? \"s_box error\" : \"s_box\" } name=\"user_type\" onChange={this.handleChange} value={values.user_type}>\r\n                                        <option value=\"\">-- Select User Type --</option>\r\n                                        <option key={1} value=\"general\">General</option>\r\n                                        <option key={2} value=\"pharmacy\">Pharmacy</option>\r\n                                        <option key={3} value=\"admin\">Admin</option>\r\n                                    </select>\r\n\r\n                                    {errors.user_type && ( <FormFeedback style={{display: 'block'}}> {errors.user_type}</FormFeedback>  )}\r\n                                </div>\r\n\r\n                                {\r\n                                    (values.user_type && values.user_type === 'admin')?\r\n                                    <div className=\"form-group\">\r\n                                        <span className=\"c_boxgroup sreport\">\r\n                                            <label htmlFor=\"show_report\">Show Report</label>\r\n                                            <input type=\"checkbox\" id=\"show_report\" name=\"show_report\" className=\"c_box\" onChange={this.handleChecked} checked={values.show_report} />\r\n                                        </span>\r\n                                    </div>:null\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" className={(activeFormBtn)? \"active\" : \"\" } variant=\"primary\" disabled={!!this.props.isUserUpdating}>{(this.props.isUserUpdating)? 'Processing..' : 'Confirm'}</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    };\r\n};\r\n\r\nexport default AddUserModal;","import React from 'react';\r\nimport lodash from 'lodash';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Profile from './profile';\r\nimport ChangePassword from './changePassword';\r\nimport Stores from './stores';\r\nimport AddLocation from '../Modals/addLocation';\r\nimport Users from './users';\r\nimport AddUserModal from '../Modals/addUserModal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nclass SettingComponent extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tisLoading: PT.bool,\r\n\t\taddUser: PT.func,\r\n\t\teditUser: PT.func,\r\n\t\tgetUsers: PT.func,\r\n\t\tdeleteUser: PT.func,\r\n\t\tsuspendUser: PT.func,\r\n\t\tusersList: PT.object,\r\n\t\tprofileData: PT.object,\r\n\t\tisUserLoading: PT.bool,\r\n\t\tisUserUpdating: PT.bool\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tusersList: {},\r\n\t\tprofileData: {},\r\n\t \taddUser: () => { },\r\n\t \teditUser: () => { },\r\n\t \tgetUsers: () => { },\r\n\t \tsuspendUser: () => { },\r\n\t \tdeleteUser: () => { },\r\n\t \tisUserLoading: false,\r\n\t \tisUserUpdating: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttype\t\t:\t'General',\r\n\t\t\tshow\t\t:\tfalse,\r\n\t\t\tshowUserModel :\tfalse,\r\n\t\t\tuserAction: null,\r\n\t\t\tinitialUserErrorData: {\r\n\t\t\t\tfirst_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                user_type: ''\r\n\t\t\t},\r\n\t\t\tinitialUserData: {\r\n\t\t\t\tfirst_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                user_type: 'general',\r\n                active: true,\r\n                show_report: false\r\n\t\t\t}\r\n\t\t}; \r\n\r\n\t\tthis.handleShowUserModel = this.handleShowUserModel.bind(this);\r\n\t};\r\n\r\n\thandleShowLocation\t= () => {\r\n\t\tthis.setState({\r\n\t\t\tshow: true\r\n\t\t})\r\n\t};\r\n\r\n\thandleShowUserModel(action, id) {\r\n\t\tid = id || null;\r\n\t\taction = action || null;\r\n\r\n\t\tif (action === 'ADD') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserAction: action,\r\n\t\t\t\tshowUserModel: true,\r\n\t\t\t\tinitialUserErrorData: {\r\n\t\t\t\t\tfirst_name: '',\r\n\t                last_name: '',\r\n\t                email: '',\r\n\t                user_type: ''\r\n\t\t\t\t},\r\n\t\t\t\tinitialUserData: {\r\n\t\t\t\t\tfirst_name: '',\r\n\t                last_name: '',\r\n\t                email: '',\r\n\t                user_type: 'general',\r\n\t                active: true,\r\n\t                show_report: false\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (action === 'EDIT') {\r\n\t\t\tlet userObj = this.props.usersList || {};\r\n\t\t\tlet users = (userObj && userObj.users) || [];\r\n\t\t\tlet team = lodash.find(users, { id: id });\r\n\t\t\tif (typeof team === 'object') {\r\n\t\t\t\tlet initialData = lodash.pick(team, ['id', 'first_name', 'last_name', 'email', 'user_type', 'active', 'show_report']);\r\n\r\n\t\t\t\tinitialData.active = (initialData.active === 'true')?true:false;\r\n\t\t\t\tinitialData.show_report = (initialData.show_report === 'true')?true:false;\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tuserAction: action,\r\n\t\t\t\t\tshowUserModel: true,\r\n\t\t\t\t\tinitialUserData: initialData,\r\n\t\t\t\t\tinitialUserErrorData: {\r\n\t\t\t\t\t\tfirst_name: '',\r\n\t\t                last_name: '',\r\n\t\t                email: '',\r\n\t\t                user_type: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('The document not found');\r\n\t\t\t}\r\n\t\t} else if (action === 'SUSPEND') {\r\n\t\t\tconfirmAlert({\r\n\t\t\t\ttitle: \"Suspend this user's account?\",\r\n\t\t\t\tmessage: 'This user will not be able to access their account until their account is reinstated.',\r\n\t\t\t\tcloseOnClickOutside: false,\r\n\t\t\t\tbuttons: [\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Cancel',\r\n\t\t\t\t\t\tonClick: () => console.log('Click No')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Suspend',\r\n\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\tlet userObj = this.props.usersList || {};\r\n\t\t\t\t\t\t\tlet users = (userObj && userObj.users) || [];\r\n\t\t\t\t\t\t\tlet team = lodash.find(users, { id: id });\r\n\t\t\t\t\t\t\tif (typeof team === 'object') {\r\n\t\t\t\t\t\t\t\tlet initialData = lodash.pick(team, ['id', 'first_name', 'last_name', 'email', 'user_type', 'show_report']);\r\n\r\n\t\t\t\t\t\t\t\tinitialData.active = 'false';\r\n\t\t\t\t\t\t\t\tthis.props.suspendUser(initialData);\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('The document not found');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t          \t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\t\t\r\n\t\t} else if (action === 'DELETE') {\r\n\t\t\tconfirmAlert({\r\n\t\t\t\ttitle: \"Delete this user's account?\",\r\n\t\t\t\tmessage: 'Deleting an account will permanently removed it from your database.',\r\n\t\t\t\tcloseOnClickOutside: false,\r\n\t\t\t\tbuttons: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Cancel',\r\n\t\t\t\t\t\tonClick: () => console.log('Click No')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Delete',\r\n\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\tthis.props.deleteUser(id);\t\r\n\t\t\t          \t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t]\r\n\t\t\t});\t\t\t\t\r\n\t\t} else if (action === 'CLOSE') { // close\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserAction: action,\r\n\t\t\t\tshowUserModel: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\tselect = (value) => {\r\n\t\tthis.setState({ type : value }, ()=> {\r\n\t\t\tif(value === 'Users'){\r\n\t\t\t\tthis.props.getUsers();\r\n\t\t\t};\r\n\t\t})\r\n\t};\r\n\r\n\thandleClose\t=\t()\t=> {\r\n\t\tthis.setState({\r\n\t\t\tshow: false\r\n\t\t})\r\n\t};\r\n\r\n\tcomponentWillReceiveProps(props) {    \r\n        if(props.isUserUpdating && props.isUserUpdating !== this.props.isUserUpdating){\r\n         \tthis.handleShowUserModel('CLOSE');\r\n        };\r\n    };\r\n\r\n\trender() {\r\n\t\tconst { userType } = this.props;\t\t\r\n\t\tconst { type, showUserModel, userAction, initialUserData, initialUserErrorData } = this.state;\r\n\t\treturn (\r\n\t\t\t<main className=\"dash right_sec settingp\">\r\n\t\t\t \t<section className=\"con_top\">\r\n\t\t\t\t \t{\r\n\t\t\t\t \t\t(userType && userType === 'admin')?\r\n\t\t\t \t\t\t<ul className=\"settingtmenu\">\r\n\t\t\t\t\t\t\t<li className={(type === 'General') ? 'active' : ''} onClick={() => this.select('General')}><img src=\"/assets/general_ico.svg\" alt=\"Stores\" /> General</li>\r\n\t\t\t\t\t\t\t<li className={(type === 'Users') ? 'active' : ''} onClick={() => this.select('Users')}><img src=\"/assets/useres_ico.svg\" alt=\"Stores\" /> Users</li>\r\n\t\t\t\t\t\t\t<li className={(type === 'Stores') ? 'active' : ''} onClick={() => this.select('Stores')}><img src=\"/assets/stores_ico.svg\" alt=\"Stores\" /> Stores</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<ul className=\"settingtmenu\">\r\n\t\t\t\t\t\t\t<li className={(type === 'General') ? 'active' : ''} onClick={() => this.select('General')}><img src=\"/assets/general_ico.svg\" alt=\"Stores\" /> General</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t \t}\t\t\t\t\t\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t (this.state.type === 'Stores') ?\r\n\t\t\t\t\t\t<button onClick={this.handleShowLocation} type=\"button\" className=\"btn btn_blue userbtn\">Add Store <img src=\"/assets/plus.svg\" alt=\"\" /></button>\r\n\t\t\t\t\t\t: null \r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.type === 'Users') ?\r\n\t\t\t\t\t\t<button onClick={()=>{ this.handleShowUserModel('ADD') }} type=\"button\" className=\"btn btn_blue userbtn\">Add User <img src=\"/assets/plus.svg\" alt=\"\" /></button>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<AddLocation\r\n\t\t\t\t\t\tshow\t\t\t=\t{this.state.show}\r\n\t\t\t\t\t\thandleClose\t\t=\t{this.handleClose}\r\n\t\t\t\t\t\tisProcessing\t=\t{this.props.isLocProcessing}\r\n\t\t\t\t\t\taddLocation\t\t=\t{this.props.addLocation}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<AddUserModal action={userAction} isUserUpdating={this.props.isUserUpdating} addUserData={this.props.addUser} updateUserData={this.props.editUser} show={showUserModel} handleShowUserModel={this.handleShowUserModel} initialData={initialUserData} initialUserErrorData={initialUserErrorData} />\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"setting_wrap\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.type === 'General') ?\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"general_pan\">\r\n\t\t\t\t\t\t\t<Profile\r\n\t\t\t\t\t\t\t\tprofileData\t\t\t=\t{this.props.profileData}\r\n\t\t\t\t\t\t\t\tisProcessing\t\t=\t{this.props.isProcessing}\r\n\t\t\t\t\t\t\t\tupdateProfile\t\t=\t{this.props.updateProfile}\r\n\t\t\t\t\t\t\t\tgetInfo\t\t\t\t=\t{this.props.getInfo}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ChangePassword\r\n\t\t\t\t\t\t\t\tisProcessing\t\t=\t{this.props.isPassProcessing}\r\n\t\t\t\t\t\t\t\tchangePassword\t\t=\t{this.props.changePassword}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.type === 'Users') ?\r\n\t\t\t\t\t\t<Users action={userAction} isLoading={this.props.isUserLoading} usersList={this.props.usersList} handleShowUserModel={this.handleShowUserModel} />\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(this.state.type === 'Stores') ?\r\n\t\t\t\t\t\t<Stores\r\n\t\t\t\t\t\t\tisLoading\t\t=\t{this.props.isStoreLoading}\r\n\t\t\t\t\t\t\tisProcessing\t=\t{this.props.isStoreProcessing}\r\n\t\t\t\t\t\t\tstoresList\t\t=\t{this.props.storesList}\r\n\t\t\t\t\t\t\tgetStores\t\t=\t{this.props.getStores}\r\n\t\t\t\t\t\t\teditStore\t\t=\t{this.props.editStore}\r\n\t\t\t\t\t\t\tdeleteStore\t\t=\t{this.props.deleteStore}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</section>\r\n\t\t\t</main>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withRouter(SettingComponent);","import React from 'react';\r\nimport * as actions from './actions';\r\nimport { connect } from 'react-redux';\r\nimport SettingComponent from './setting';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Setting   = ({\r\n\tisLoading,\r\n\tisStoreLoading,\r\n\tisStoreProcessing,\r\n\tisPassProcessing,\r\n\tisProcessing,\r\n\tprofileData,\r\n\tgetInfo,\r\n\tuserType,\r\n\tgetStores,\r\n\tstoresList,\r\n\teditStore,\r\n\tdeleteStore,\r\n\tupdateProfile,\r\n\tchangePassword,\r\n\taddLocation,\r\n\tisLocProcessing,\r\n\taddUser,\r\n\teditUser,\r\n\tgetUsers,\r\n\tsuspendUser,\r\n\tdeleteUser,\r\n\tusersList,\r\n\tisUserLoading,\r\n\tisUserUpdating\r\n}) => {\r\n\treturn (\r\n\t\t<SettingComponent\r\n\t\t\tisLoading\t\t\t=\t{isLoading}\r\n\t\t\tisStoreLoading\t\t=\t{isStoreLoading}\r\n\t\t\tisStoreProcessing\t=\t{isStoreProcessing}\r\n\t\t\tisPassProcessing\t=\t{isPassProcessing}\r\n\t\t\tisProcessing\t\t=\t{isProcessing}\r\n\t\t\tprofileData\t\t\t=\t{profileData}\r\n\t\t\tgetInfo\t\t\t\t=\t{getInfo}\r\n\t\t\tuserType\t\t\t\t=\t{userType}\r\n\t\t\tgetStores\t\t\t=\t{getStores}\r\n\t\t\tstoresList\t\t\t=\t{storesList}\r\n\t\t\teditStore\t\t    =\t{editStore}\r\n\t\t\tdeleteStore\t\t    =\t{deleteStore}\r\n\t\t\tupdateProfile\t\t=\t{updateProfile}\r\n\t\t\tchangePassword\t\t=\t{changePassword}\r\n\t\t\taddLocation\t\t\t=\t{addLocation}\r\n\t\t\tisLocProcessing\t\t=\t{isLocProcessing}\r\n\t\t\taddUser\t\t        =\t{addUser}\r\n\t\t\teditUser\t\t    =\t{editUser}\r\n\t\t\tgetUsers\t\t    =\t{getUsers}\r\n\t\t\tdeleteUser\t\t    =\t{deleteUser}\r\n\t\t\tsuspendUser\t\t    =\t{suspendUser}\r\n\t\t\tusersList\t\t    =\t{usersList}\r\n\t\t\tisUserLoading\t\t=\t{isUserLoading}\r\n\t\t\tisUserUpdating\t\t=\t{isUserUpdating}\r\n\t\t/>\r\n\t)\r\n};\r\n\r\nSetting.propTypes   \t=\t{\r\n\tisStoreLoading\t\t:\tPT.bool,\r\n\tisStoreProcessing\t:\tPT.bool,\r\n\tisLoading\t\t\t:\tPT.bool,\r\n\tisPassProcessing\t:\tPT.bool,\r\n\tisProcessing\t\t:\tPT.bool,\r\n\tprofileData\t\t\t:\tPT.object,\r\n\tstoresList\t\t\t:\tPT.array,\r\n\tisLocProcessing\t\t:\tPT.bool,\r\n\taddUser             :   PT.func,\r\n\teditUser            :   PT.func,\r\n\tgetUsers            :   PT.func,\r\n\tdeleteUser          :   PT.func,\r\n\tsuspendUser         :   PT.func,\r\n\tusersList           :   PT.object,\r\n\tisUserLoading       :   PT.bool,\r\n\tisUserUpdating      :   PT.bool,\r\n\tuserType            :   PT.string\r\n};\r\n\r\nconst mapStateToProps   =\t({settingReducer, headerReducer}) => {\t\r\n\treturn ({\r\n\t\tisStoreLoading\t\t:\tsettingReducer.isStoreLoading,\r\n\t\tisStoreProcessing\t:\tsettingReducer.isStoreProcessing,\r\n\t\tisLoading\t\t\t:\tsettingReducer.isLoading,\r\n\t\tisPassProcessing\t:\tsettingReducer.isPassProcessing,\r\n\t\tisProcessing\t\t:\tsettingReducer.isProcessing,\r\n\t\tprofileData\t\t\t:\tsettingReducer.profileData,\r\n\t\tstoresList\t\t\t:\tsettingReducer.storesList,\r\n\t\tisLocProcessing\t\t:\tsettingReducer.isLocProcessing,\r\n\t\tusersList\t\t    :\tsettingReducer.usersList,\r\n\t\tuserType            :   headerReducer.userType,\r\n\t\tisUserLoading\t\t:\tsettingReducer.isUserLoading,\r\n\t\tisUserUpdating\t    :\tsettingReducer.isUserUpdating\r\n\t});\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgetInfo\t\t\t:\t(data) => dispatch(actions.getInfo(data)),\r\n\tgetStores\t\t:\t(data) => dispatch(actions.getStores(data)),\r\n\tgetUsers\t\t:\t(data) => dispatch(actions.getUsers(data)),\r\n\taddUser\t\t    :\t(data) => dispatch(actions.addUser(data)),\r\n\teditUser\t\t:\t(data) => dispatch(actions.editUser(data)),\r\n\tsuspendUser\t\t:\t(data) => dispatch(actions.suspendUser(data)),\r\n\tdeleteUser\t\t:\t(data) => dispatch(actions.deleteUser(data)),\r\n\tupdateProfile\t:\t(data) => dispatch(actions.updateProfile(data)),\r\n\tchangePassword\t:\t(data) => dispatch(actions.changePassword(data)),\r\n\taddLocation\t\t:\t(data) => dispatch(actions.addLocation(data)),\r\n\teditStore\t\t:\t(data) => dispatch(actions.editStore(data)),\r\n\tdeleteStore\t\t:\t(data) => dispatch(actions.deleteStore(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Setting));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsContainer from '../../containers/Settings';\r\n\r\nclass Setting extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<SettingsContainer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Setting);\r\n","//Get Report\r\nexport const GET_REPORT                 =   'GET_REPORT';\r\nexport const GET_REPORT_ERROR           =   'GET_REPORT_ERROR';\r\nexport const GET_REPORT_SUCCESS         =   'GET_REPORT_SUCCESS';\r\n\r\n//Get Orders\r\nexport const GET_ORDER                  =   'GET_ORDER';\r\nexport const GET_ORDER_ERROR            =   'GET_ORDER_ERROR';\r\nexport const GET_ORDER_SUCCESS          =   'GET_ORDER_SUCCESS';\r\n\r\n//Get Late Orders\r\nexport const GET_LATE_ORDER             =   'GET_LATE_ORDER';\r\nexport const SORT_LATE_ORDERS           =   'SORT_LATE_ORDERS';\r\nexport const GET_LATE_ORDER_ERROR       =   'GET_LATE_ORDER_ERROR ';\r\nexport const GET_LATE_ORDER_SUCCESS     =   'GET_LATE_ORDER_SUCCESS';","import {\r\n\tGET_REPORT,\r\n\tGET_REPORT_ERROR,\r\n\tGET_REPORT_SUCCESS,\r\n\tGET_ORDER,\r\n\tGET_ORDER_ERROR,\r\n  GET_ORDER_SUCCESS,\r\n  GET_LATE_ORDER,\r\n  SORT_LATE_ORDERS,\r\n  GET_LATE_ORDER_ERROR,\r\n  GET_LATE_ORDER_SUCCESS\r\n} from \"./constants\";\r\n\r\nexport const getReport = (data) => ({\r\n  type: GET_REPORT,\r\n  data\r\n});\r\n\r\nexport const listenGetReportError = (data) => ({\r\n  type: GET_REPORT_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenGetReportSuccess = (data) => ({\r\n  type: GET_REPORT_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getOrder = (data) => ({\r\n  type: GET_ORDER,\r\n  data\r\n});\r\n\r\nexport const listenGetOrderError = (data) => ({\r\n  type: GET_ORDER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenGetOrderSuccess = (data) => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const getLateOrders = (data) => ({\r\n  type: GET_LATE_ORDER,\r\n  data\r\n});\r\n\r\nexport const sortLateOrders = (data) => ({\r\n  type: SORT_LATE_ORDERS,\r\n  data\r\n});\r\n\r\nexport const listenLateOrders = (data) => ({\r\n  type: GET_LATE_ORDER_ERROR,\r\n  data\r\n});\r\n\r\nexport const listenLateOrdersSuccess = (data) => ({\r\n  type:  GET_LATE_ORDER_SUCCESS,\r\n  data\r\n});","import { Form } from 'reactstrap';\r\nimport moment from 'moment-timezone';\r\nimport {sortBy as _sortBy, isEmpty} from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport AreaFilter from '../Filter/areaFilter';\r\nimport StateFilter from '../Filter/stateFilter';\r\nimport StoreFilter from '../Filter/storeFilter';\r\nimport {error as notifyerror} from '../../util/notify';\r\nimport Calendar from '../../components/Calendar/calendar';\r\n\r\nclass Filter extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.tillDate\t=  moment().format('YYYY-MM-DD');\r\n\t\tthis.state = {\r\n\t\t\tsOpen: false,\r\n\t\t\taOpen: false,\r\n\t\t\tstOpen: false,\r\n\t\t \tshowFilter: false,\r\n\t \t \tshowSearch: false,\r\n\t \t \tfilterKeys: {State:[], Area: [], Store: []},\r\n         \tendDate:  moment().format('YYYY-MM-DD'),\r\n\t \t \tstartDate:  moment().subtract(1, 'months').format('YYYY-MM-DD'),\r\n\t\t};\r\n\r\n\t\tthis.toggleResFilter = this.toggleResFilter.bind(this);\r\n\t   \tthis.handleRemoveFilter = this.handleRemoveFilter.bind(this);\r\n\t};\r\n\r\n\ttoggleResFilter() {\r\n\t\tthis.setState({\r\n\t\t\tshowSearch:false,\r\n\t\t\tshowFilter: !this.state.showFilter\r\n\t\t});\r\n\t};\r\n\r\n\thandleStateChange = (e, selectedState) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {};\r\n\t\tlet selIndex = filterKeys.State.findIndex((item) => {\r\n\t\t\treturn item.value === selectedState.value;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.State.push({\r\n\t\t\t\tlabel:  selectedState.label,\r\n\t\t\t\tvalue:  selectedState.value\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tfilterKeys.State = _sortBy(filterKeys.State, 'value');\r\n\t\tthis.setState({\r\n\t\t\tfilterKeys: filterKeys\r\n\t\t}, () => {\r\n\t\t\t// this.props.getReport();\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t}\r\n\r\n\thandleAreaChange = (e, selectedArea) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {};\r\n\t\tlet selIndex = filterKeys.Area.findIndex((item) => {\r\n\t\t\treturn item.value === selectedArea.delivery_zone_name;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.Area.push({\r\n\t\t\t\tid:  selectedArea.id,\r\n\t\t\t\tstate:  selectedArea.state,\r\n\t\t\t\tvalue:  selectedArea.delivery_zone_name,\r\n\t\t\t\tlabel:  `${selectedArea.delivery_zone_name} (${selectedArea.state})`\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfilterKeys.Area = _sortBy(filterKeys.Area, 'value');\r\n\t\tthis.setState({\r\n\t\t\tfilterKeys: filterKeys\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\thandleStoreChange = (e, selectedStore) => {\r\n\t\te.stopPropagation();\r\n\t\tlet filterKeys = this.state.filterKeys || {}; \r\n\t\tlet selIndex = filterKeys.Store.findIndex((item) => {\r\n\t\t\treturn item.value === selectedStore.label;\r\n\t\t});\r\n\r\n\t\tif(selIndex === -1) {\r\n\t\t\tfilterKeys.Store.push({\r\n\t\t\t\tid: selectedStore.data.id,\r\n\t\t\t\tstore_id:  selectedStore.data.store_id,\r\n\t\t\t\tlabel: selectedStore.label,\r\n\t\t\t\tvalue: selectedStore.label\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfilterKeys.Store = _sortBy(filterKeys.Store, 'value');\r\n\t\tthis.setState({\r\n\t\t\tfilterKeys: filterKeys\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\thandleRemoveFilter(e, type, index) {\r\n\t\te.stopPropagation();\r\n\t\tlet filters = this.state.filterKeys || [];\r\n\t\tfilters[type].splice(index, 1);\r\n\t\tif(type === 'State' && filters[type].length === 0){\r\n\t\t\tfilters.Area = [];\r\n\t\t\tfilters.Store = [];\r\n\t\t};\r\n\r\n\t\tif(type === 'Area' && filters[type].length === 0){\r\n\t\t\tfilters.Store = [];\r\n\t\t};\r\n\r\n\t\tlet selectedState = (type !== 'State') ? this.state.selectedState : null;\r\n\t\tlet selectedArea = (type !== 'Area') ? this.state.selectedArea : null;\r\n\t\tlet selectedStore = (type !== 'Store') ? this.state.selectedStore : null;\r\n\r\n\t\tthis.setState({\r\n\t\t\tfilterKeys : filters,\r\n\t\t\tselectedArea: selectedArea,\r\n\t\t\tselectedState: selectedState,\r\n\t\t\tselectedStore: selectedStore\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\tonSelectStartDate = (date) => {\r\n\t\tlet startDate = moment(date).format('X');      \r\n\t\tlet endDate = moment(this.state.endDate).format('X');\r\n\t\tif(startDate > endDate){\r\n\t\t\tnotifyerror({message: 'Start date should be lower than end date'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tlet daysDiff\t=\tmoment(this.state.endDate).diff(moment(date), 'days')\r\n\t\tif(daysDiff > 366) {\r\n\t\t\tnotifyerror({message: 'Date range should not be greater than 1 year'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.setState({\r\n\t\t\tstartDate   :  date\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t})\r\n\t};\r\n\r\n\tonSelectEndDate = (date) => {\r\n\t\tlet startDate = moment(this.state.startDate).format('X');      \r\n\t\tlet endDate = moment(date).format('X');\r\n\t\tif(!!!this.state.startDate) {\r\n\t\t\tnotifyerror({message: 'Please select start date first'});\r\n\t\t\treturn false;\r\n\t\t};\t\t\r\n\t\t\r\n\t\tlet daysDiff\t=\tmoment(date).diff(this.state.startDate, 'days');\r\n\t\tif(daysDiff > 366) {\r\n\t\t\tnotifyerror({message: 'Date range should not be greater than 1 year'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tif(endDate < startDate){\r\n\t\t\tnotifyerror({message: 'End date should be greater than start date'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.setState({\r\n\t\t\tendDate:  date\r\n\t\t}, () => {         \r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\tonDateRange = (date) => {\t\t\r\n\t\tlet daysDiff\t=\tmoment(date.endDate).diff(moment(date.startDate), 'days')\r\n\t\tif(daysDiff > 365) {\r\n\t\t\tnotifyerror({message: 'Date range should not be greater than 1 year'});\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.setState({\r\n\t\t\tstartDate: date.startDate,\r\n\t\t\tendDate: date.endDate\r\n\t\t}, () => {         \r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t});\r\n\t};\r\n\r\n\thandleUpdateFilter() {\r\n\t\tlet filterKeys =  this.state.filterKeys || {};\r\n\t\tlet value_one        \t=\t'';\r\n\t\tlet value_two        \t=\t'';\r\n\t\tlet storeName        \t=\t{};\r\n\t\tlet data\t\t\t\t=\t{}\r\n  \r\n\t\tif(filterKeys.Store.length === 0 && filterKeys.Area.length === 0 && filterKeys.State.length > 0) {\r\n\t\t   \tlet states           =  (filterKeys.State || []).map(item => {\r\n\t\t\t   return {state: item.value, zone_id: []};\r\n\t\t\t});\r\n\t\t\tif(states.length > 0){\r\n\t\t\t\t\tdata\t\t\t=\t{\r\n\t\t\t\t\t\ttype\t\t:\t'place',\r\n\t\t\t\t\t\tplace\t\t:\tstates\r\n\t\t\t\t\t}\r\n\t\t\t\t//value_one         =  'state';\r\n\t\t\t\t//value_two         =  states;\r\n\t\t\t}\r\n\t\t}\r\n  \r\n\t\tif(filterKeys.Store.length === 0 && filterKeys.Area.length > 0) {         \r\n\t\t\tlet zones           =  [];\r\n\t\t\t(filterKeys.Area || []).map((item) => {\r\n\t\t\t\tlet index\t\t=\tzones.findIndex((z) => z.state === item.state);\r\n\t\t\t\t//console.log(filterKeys.Area, index);\r\n\t\t\t\tif(index > -1){\r\n\t\t\t\t\tzones[index].zone_id.push(item.id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tzones.push({\r\n\t\t\t\t\t\tstate: item.state,\r\n\t\t\t\t\t\tzone_id : [item.id]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(zones.length > 0){\r\n\t\t\t\tdata\t\t\t=\t{\r\n\t\t\t\t\ttype\t\t:\t'place',\r\n\t\t\t\t\tplace\t\t:\tzones\r\n\t\t\t\t}\r\n\t\t\t\t//type         \t\t=  'place';\r\n\t\t\t\t//place         \t=  zones; \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n  \r\n\t\tif(filterKeys.Store.length > 0) {\r\n\t\t\tlet store            =  [];\r\n\t\t\t(filterKeys.Store || []).forEach(item => {\r\n\t\t\t\tstore.push(item.store_id.toString());\r\n\t\t\t\tstoreName[item.store_id]   = item.label;\r\n\t\t\t})\r\n\t\t\tif(store.length > 0){\r\n\t\t\t\tdata\t\t\t=\t{\r\n\t\t\t\t\ttype\t\t:\t'store',\r\n\t\t\t\t\tstore_id\t:\tstore\r\n\t\t\t\t}\r\n\t\t\t\t//type         \t\t=  'store';\r\n\t\t\t\t//store_id         \t=  store;\r\n\t\t\t}\r\n\t\t}\r\n  \r\n\t\tlet startDate           =  this.state.startDate;\r\n\t\tlet endDate             =  this.state.endDate;\r\n\t\tif(!!startDate && !!endDate) {\r\n\t\t\tstartDate           =  startDate;\r\n\t\t\tendDate            \t=  endDate;\r\n\t\t} else {\r\n\t\t\tif(!!!startDate && !!!endDate) {\r\n\t\t\t\tstartDate            =  moment().subtract(1, 'months').format('YYYY-MM-DD');\r\n\t\t\t\tendDate            =  moment().format('YYYY-MM-DD');\r\n\t\t\t}\r\n\t\t\tif(!!startDate && !!!endDate) {\r\n\t\t\t\tstartDate         =  startDate;\r\n\t\t\t\tendDate         =  startDate;\r\n\t\t\t}\r\n\t\t\tif(!!endDate && !!!startDate) {\r\n\t\t\t\tstartDate         =  endDate;\r\n\t\t\t\tendDate         =  endDate;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tstartDate      :  value_one,\r\n\t\t\t\tendDate        :  value_two\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tdata.start\t\t\t=\tstartDate;\r\n\t\tdata.end\t\t\t=\tendDate;\r\n\t\tdata.user_type\t\t=\tthis.state.type;\r\n\t\tif(!!!data.type) {\r\n\t\t   \tdata.type    =  'date';\r\n\t\t}\r\n\t\t//console.log('Filter Data : ', data);\r\n\t\t/* setFilter('reports', {\r\n\t\t\tuser_type   :  this.props.userType,\r\n\t\t\ttype        :  this.props.type,\r\n\t\t\tstartDate   :  startDate,\r\n\t\t\tendDate     :  endDate,\r\n\t\t\tfilterKeys  :  filterKeys\r\n\t\t}); */\r\n\t\tthis.props.getReport(data, {\r\n\t\t\tuser_type   :  this.props.userType,\r\n\t\t\ttype        :  this.state.type,\r\n\t\t\tstartDate   :  startDate,\r\n\t\t\tendDate     :  endDate,\r\n\t\t\tfilterKeys  :  filterKeys\r\n\t\t});\r\n\t}\r\n\r\n\thandleTypeChange = (type) => {\r\n\t\tthis.setState({\r\n\t\t\ttype: type\r\n\t\t}, () => {\r\n\t\t\tthis.handleUpdateFilter();\r\n\t\t})\r\n\t\t/* this.props.handleTypeChange(type, {\r\n\t\t\tuser_type   :  this.props.userType,\r\n\t\t\ttype        :  type,\r\n\t\t\tstartDate   :  this.state.startDate,\r\n\t\t\tendDate     :  this.state.endDate,\r\n\t\t\tfilterKeys  :  this.state.filterKeys\r\n\t\t}) */\r\n\t}\r\n\r\n\tcomponentDidMount() {    \r\n\t\tlet filter     =  this.props.filterData;\r\n\t\t//console.log('Filter Did Mount : ', filter);\r\n\t\t//let filterKeys =  this.state.filterKeys;\r\n\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t//type        =  filter.type;\r\n\t\t\tlet filterKeys  =  filter.filterKeys;\r\n\t\t\t//let fromDate    =  filter.startDate || this.state.startDate;\r\n\t\t\t//let toDate      =  filter.endDate || this.state.endDate;\r\n\t\t\tlet fromDate    =  this.state.startDate;\r\n\t\t\tlet toDate      =  this.state.endDate;\r\n\t\t\tthis.setState({\r\n\t\t\t\tfilterKeys  :  filterKeys,\r\n\t\t\t\tstartDate   :  fromDate,\r\n\t\t\t\tendDate     :  toDate,\r\n\t\t\t\ttype        :  filter.type\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.handleUpdateFilter();\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n\t\t\tthis.setState({\r\n\t\t\t\ttype : type\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.handleUpdateFilter();\r\n\t\t\t})\r\n\t\t}\t\r\n   \t};\r\n\r\n\trender() {\r\n\t\tconst { showFilter, showSearch } = this.state;\r\n\r\n\t\tlet stateFilter = [];\r\n\t\tlet stateCodeFilter = [];\r\n\t\tthis.state.filterKeys.State.forEach((state) => {\r\n\t\t\tstateFilter.push(state.label);\r\n\t\t\tstateCodeFilter.push(state.value);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<section className=\"con_top\">\r\n\t\t\t\t\t<div className=\"tab_pan-wrap\">\r\n\t\t\t\t\t  \t<div className=\"tab_pan\">\r\n\t\t\t\t\t     \t<span onClick={() => this.handleTypeChange('general')} className={(this.state.type === 'general') ? ' active' : ''}>Grocery</span>\r\n\t\t\t\t\t     \t<span onClick={() => this.handleTypeChange('pharmacy')} className={(this.state.type === 'pharmacy') ? ' active' : ''}>Rx</span>\r\n\t\t\t\t\t  \t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"res_btn\">\r\n\t\t\t\t\t  \t<div className={`resfilter_btn ${showFilter ? \"showfilter\" : \"\"} `} onClick={this.toggleResFilter}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Filter</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Form method=\"get\" action=\"\" autoComplete=\"off\" className={`resfilter_box ${showFilter ? \"showfilterbox\":\"\"}`}>\r\n\t\t\t\t\t  \t<div className=\"filter_label\">Filter by: </div>\r\n\t\t\t\t\t  \t<StateFilter\r\n\t\t\t\t\t\t\tstateFilter={stateFilter}\r\n\t\t\t\t\t\t\tstates={this.state.filterKeys.State}\r\n\t\t\t\t\t\t\thandleStateChange={this.handleStateChange}\r\n\t\t\t\t\t\t\thandleRemoveFilter={this.handleRemoveFilter}\r\n\t\t\t\t\t  \t/>\r\n\t\t\t\t\t\t<AreaFilter\r\n\t\t\t\t\t\t\tarea={this.state.filterKeys.Area}\r\n\t\t\t\t\t\t\tstates={this.state.filterKeys.State}\r\n\t\t\t\t\t\t\tzones={this.props.zones}\r\n\t\t\t\t\t\t\tstateCodeFilter={stateCodeFilter}\r\n\t\t\t\t\t\t\thandleAreaChange={this.handleAreaChange}\r\n\t\t\t\t\t\t\thandleRemoveFilter={this.handleRemoveFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<StoreFilter\r\n\t\t\t\t\t\t\tstore={this.state.filterKeys.Store}\r\n\t\t\t\t\t\t\tarea={this.state.filterKeys.Area}\r\n\t\t\t\t\t\t\tstores={this.props.stores}\r\n\t\t\t\t\t\t\thandleStoreChange={this.handleStoreChange}\r\n\t\t\t\t\t\t\thandleRemoveFilter={this.handleRemoveFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className=\"date_range_section\">\r\n\t               \t<div className=\"filter_label\">Range: </div>\r\n\t               \t<div className=\"InputFromTo\">\r\n\t                  \t<div className=\"DayPickerInput\">\r\n\t                     \t<Calendar\r\n\t\t\t\t\t\t\t\tselectDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\tstartDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\tendDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\tonSelectDate={this.onSelectStartDate}\r\n\t\t\t\t\t\t\t\tonDateRange={this.onDateRange}\r\n\t\t\t\t\t\t\t\tclassName=\"t_box\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Start Date\"\r\n\t\t\t\t\t\t\t\ttillDate={this.tillDate}\r\n\t                     \t/>\r\n\t                  \t</div>\r\n\t                  \t{' '}\r\n\t                  \t<span className=\"to\">to</span> {' '}\r\n\t                  \t<span className=\"InputFromTo-to\">\r\n\t                     \t<div className=\"DayPickerInput\">\r\n\t\t                        <Calendar\r\n\t\t\t\t\t\t\t\t\tselectDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\t\tstartDate={this.state.startDate}\r\n\t\t\t\t\t\t\t\t\tendDate={this.state.endDate}\r\n\t\t\t\t\t\t\t\t\tonSelectDate={this.onSelectEndDate}\r\n\t\t\t\t\t\t\t\t\tonDateRange={this.onDateRange}\r\n\t\t\t\t\t\t\t\t\tclassName=\"t_box\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"End Date\"\r\n\t\t\t\t\t\t\t\t\tdisabled={!!!this.state.startDate}\r\n\t\t\t\t\t\t\t\t\ttillDate={this.tillDate}\r\n\t\t                        />\r\n\t                     \t</div>\r\n\t                  \t</span>\r\n\t               \t</div>\r\n\t            </section>\r\n\t\t\t\t{/*<div className=\"liveOrders\">313 Live Orders</div>*/}\r\n\t            {\r\n\t\t            (this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0) ?\r\n\t\t            <section className=\"filter-tag_section\">\r\n\t\t               \t{\r\n\t\t                  \t(this.state.filterKeys.State.length > 0) ?\r\n\t\t                     this.state.filterKeys.State.map((filter, index) => {\r\n\t\t                        return (\r\n\t\t                           <span key={`state-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t                              \t<a onClick={(e) => this.handleRemoveFilter(e, 'State', index)}>\r\n\t                                 \t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t                              \t</a>\r\n\t\t                           </span>\r\n\t\t                        )\r\n\t                     \t}) : null\r\n\t\t               \t}\r\n\r\n\t\t               \t{\r\n\t\t                  \t(this.state.filterKeys.Area.length > 0) ?\r\n\t                     \tthis.state.filterKeys.Area.map((filter, index) => {\r\n\t\t                        return (\r\n\t\t                           \t<span key={`area-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t                              \t<a onClick={(e) => this.handleRemoveFilter(e, 'Area', index)}>\r\n\t                                 \t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t                              \t</a>\r\n\t\t                           \t</span>\r\n\t\t                        )\r\n\t                     \t}) : null\r\n\t\t               \t}\r\n\r\n\t\t               \t{\r\n\t\t                  \t(this.state.filterKeys.Store.length > 0) ?\r\n                     \t\tthis.state.filterKeys.Store.map((filter, index) => {\r\n\t\t                        return (\r\n\t\t                           \t<span key={`store-tag-${index}`} className=\"f-tag\">{filter.label}\r\n\t\t                              \t<a onClick={(e) => this.handleRemoveFilter(e, 'Store', index)}>\r\n\t                                 \t\t<img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n\t\t                              \t</a>\r\n\t\t                           \t</span>\r\n\t\t                        )\r\n\t                     \t}) : null\r\n\t\t               \t}\r\n\t\t            </section>:null\r\n\t         \t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nclass Reruns extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { } = this.state;\r\n\t\tconst { reportData } = this.props;\r\n\t\tlet rerunData = reportData.rerunData || {};\t\t\r\n\t\tlet reRunOrders = rerunData.rerun || [];\r\n\t\tlet chngRerunTotalPercent = rerunData.chng_rerun_total_percent || 0;\r\n\r\n\t\treturn (\r\n\t\t\t<Col md=\"6\" sm=\"12\" className=\"pr10\">\r\n\t\t\t\t<div className=\"stats_box\">\r\n\t\t\t\t\t<h3 className=\"sec_titel\">Reruns</h3>\r\n\t\t\t\t\t<div className=\"rwrap\">\r\n\t\t\t\t\t\t<div className=\"rinfo\">\r\n\t\t\t\t\t\t\t<h4>Total Reruns</h4>\r\n\t\t\t\t\t\t\t<h2>{rerunData.total_rerun || 0}</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(chngRerunTotalPercent > 0)?\r\n\t\t\t\t\t\t\t\t\t<span className=\"rup\">+{chngRerunTotalPercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(chngRerunTotalPercent < 0)?\r\n\t\t\t\t\t\t\t\t\t<span className=\"gdown\">{chngRerunTotalPercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(chngRerunTotalPercent === 0)?\r\n\t\t\t\t\t\t\t\t\t<span className=\"gup\">+0%</span>:null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t \t&nbsp; last 30 days\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"rtable\">\r\n\t\t\t\t\t\t\t<div className=\"rtRow rtlabel\">\r\n\t\t\t\t\t\t\t\t<span className=\"rtCol\">Store ID</span>\r\n\t\t\t\t\t\t\t\t<span className=\"rtCol\">Reruns</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"rtDeta\">\r\n\t\t\t\t\t\t\t\t<Scrollbars>\r\n\t\t\t\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t\t\t\t(reRunOrders || []).map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t                        <div key={`state-tag-${index}`} className=\"rtRow\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rtCol\">{item.store_name} #{item.store_id}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"rtCol\">{item.order_count}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t                        )\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Scrollbars>\t\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Reruns;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport moment from 'moment-timezone';\r\nimport {isEqual} from 'lodash';\r\n\r\nclass DailyView extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t\tthis.maxOrders\t\t=\t0\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t//let { ordersData  }\t=\tthis.props.reportData;\r\n\t\t//console.log('Did Mount : ', this.props.reportData);\r\n\t\tlet { reportData, showBy  }\t=\tthis.props;\r\n\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\r\n\t\tthis.arrangeGraphData(ordersData, showBy);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t//console.log('Will Receive Props : ', props.reportData, this.props.reportData);\r\n\t\tif(props.showBy !== this.props.showBy || !isEqual(props.reportData, this.props.reportData)){\r\n\t\t\tlet { reportData, showBy  }\t=\tprops;\r\n\t\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\r\n\t\t\tthis.arrangeGraphData(ordersData, showBy);\r\n\t\t}\r\n\t\t/* console.log('Daily Props : ', this.props, props);\r\n\t\tlet { reportData, showBy  }\t=\tprops;\r\n\t\tlet ordersData\t\t\t\t=\t(!!reportData) ? reportData.ordersData : {};\r\n\t\tthis.arrangeGraphData(ordersData, showBy); */\r\n\t\t/*let { reportData }\t=\tprops;\r\n\t\tconsole.log('Daily Graph Data'); */\r\n\t}\r\n\r\n\tarrangeGraphData(ordersData, showBy) {\t\t\r\n\t\t//console.log('showBy : ', showBy);\r\n\t\tif(!!ordersData && !!ordersData.orders) {\r\n\t\t\tlet orderList\t\t=\tordersData.orders || [];\r\n\t\t\tlet maxOrders\t\t=\tthis.maxOrders;\r\n\t\t\t//maxOrders\t\t\t=\tMath.ceil(Math.max(...orderList.map(item => item.order_count))/500) * 500;\r\n\t\t\tmaxOrders\t\t\t=\tMath.max(...orderList.map(item => item.order_count));\r\n\t\t\tmaxOrders\t\t\t=\tMath.ceil(maxOrders/6)*6;\r\n\t\t\t//console.log('Max', maxOrders);\r\n\t\t\t//console.log('Show by ', showBy);\r\n\t\t\tlet dailyArr\t\t=\t[];\r\n\t\t\tif(showBy === 'date') {\r\n\t\t\t\tdailyArr\t\t\t\t=\torderList.map((item) => {\r\n\t\t\t\t\tlet formattedDate\t=\t(!!item.D) ? moment(item.D, 'YYYYMMDD').format('MMM DD') : '';\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tlabel: formattedDate,\r\n\t\t\t\t\t\tpercentage: (item.order_count * 100)/maxOrders\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif(showBy === 'store') {\r\n\t\t\t\tdailyArr\t\t\t\t=\torderList.map((item) => {\r\n\t\t\t\t\tlet addrArr\t\t\t=\t(item.address || '').split(',');\r\n\t\t\t\t\taddrArr.splice(addrArr.length - 2, 2);\r\n\t\t\t\t\tlet address\t\t\t=\taddrArr.join(', ');\r\n\t\t\t\t\t//console.log('Address : ', addrArr, address);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tlabel: address,\r\n\t\t\t\t\t\tpercentage: (item.order_count * 100)/maxOrders\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tlet slab\t\t=\t(maxOrders > 0)? maxOrders/6 : 0;\r\n\t\t\tlet slabArr\t\t=\t[];\r\n\t\t\tlet count\t\t=\t0;\r\n\t\t\tfor(let i=0; i<=6; i++){\r\n\t\t\t\tslabArr.push(count);\r\n\t\t\t\tcount\t\t=\tcount + parseInt(slab);\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tdailyArr : dailyArr,\r\n\t\t\t\tslabArr : slabArr\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { dailyArr, slabArr } = this.state;\r\n\t\t//console.log(dailyArr);\r\n\t\treturn (\r\n\t\t\t<div className=\"resscroll\">\r\n\t\t\t\t<div className=\"cLabel\">\r\n\t\t\t\t\t<div className=\"fcol\">{(this.props.showBy === 'date') ? 'Date' : 'Stores'}</div>\r\n\t\t\t\t\t<div className=\"mcol\"></div>\r\n\t\t\t\t\t<div className=\"lcol\">Value</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cval\">\r\n\t\t\t\t\t<div className=\"scrollpan\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(!!dailyArr && dailyArr.length > 0) ?\r\n\t\t\t\t\t\t\t<Scrollbars>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdailyArr.map((item, k) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={k} className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"fcol\">{item.label}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: `${item.percentage}%`}}></span></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"lcol\">{item.order_count}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{/* <div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 19</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '100%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,503</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 18</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '80%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,403</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 17</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '85%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,331</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 16</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '60%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,031</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 15</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 14</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '99.5%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,499</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 13</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '50%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">1,314</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 12</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '85%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,331</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 11</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '60%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,031</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 10</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t<div className=\"cValueRow\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"fcol\">May 9</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mcol\"><span className=\"hBar\" style={{width: '75%'}}></span></div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"lcol\">2,435</div>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t\t\t\t: null\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"cGrid\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(!!slabArr && slabArr.length > 0) ?\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"mcol\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tslabArr.map((item, i) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<span key={i}>{item}</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{/* <span>0</span>\r\n\t\t\t\t\t\t\t\t<span>500</span>\r\n\t\t\t\t\t\t\t\t<span>1000</span>\r\n\t\t\t\t\t\t\t\t<span>1500</span>\r\n\t\t\t\t\t\t\t\t<span>2000</span>\r\n\t\t\t\t\t\t\t\t<span>2500</span> */}\r\n\t\t\t\t\t\t\t</div> : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default DailyView;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass TotalScore extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { } = this.state;\r\n\t\tconst { reportData } = this.props;\r\n\t\tlet reportTotal = reportData.reportTotal || {};\r\n\t\tlet chngTotOrdersPercent = reportTotal.chng_tot_orders_percent || 0;\r\n\t\tlet chngShoppingLatePercent = reportTotal.chng_shopping_late_percent || 0;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"stats_Ubox mb24 dflex\">\r\n\t\t\t\t<div className=\"uppan\">\r\n\t\t\t\t\t<h4>Total Orders</h4>\r\n\t\t\t\t\t<h2>{reportTotal.total_orders}</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngTotOrdersPercent > 0)?\r\n\t\t\t\t\t\t\t<span className=\"gup\">+{chngTotOrdersPercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngTotOrdersPercent < 0)?\r\n\t\t\t\t\t\t\t<span className=\"rdown\">{chngTotOrdersPercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngTotOrdersPercent === 0)?\r\n\t\t\t\t\t\t\t<span className=\"gup\">+0%</span>:null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t \t&nbsp; last 30 days\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/*\r\n\t\t\t\t<div className=\"uppan\">\r\n\t\t\t\t\t<h4>Total Revenue</h4>\r\n\t\t\t\t\t<h2>$80,812</h2>\r\n\t\t\t\t\t<p><span className=\"gup\">+25%</span> last 30 days</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"uppan\">\r\n\t\t\t\t\t<h4>New Customers</h4>\r\n\t\t\t\t\t<h2>1,231</h2>\r\n\t\t\t\t\t<p><span className=\"gup\">+50%</span> last 30 days</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t*/}\r\n\t\t\t\t<div className=\"uppan\">\r\n\t\t\t\t\t<h4>Shopped Late</h4>\r\n\t\t\t\t\t<h2>{(reportTotal.shopping_late_percent > 0)?reportTotal.shopping_late_percent.toFixed(2):0}%</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngShoppingLatePercent > 0)?\r\n\t\t\t\t\t\t\t<span className=\"rup\">+{chngShoppingLatePercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngShoppingLatePercent < 0)?\r\n\t\t\t\t\t\t\t<span className=\"gdown\">{chngShoppingLatePercent.toFixed(2)}%</span>:null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(chngShoppingLatePercent === 0)?\r\n\t\t\t\t\t\t\t<span className=\"gup\">+0%</span>:null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t \t&nbsp; last 30 days\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default TotalScore;","import React, { Component } from 'react';\r\nimport moment from 'moment-timezone';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {groupBy as _groupBy} from 'lodash';\r\nimport 'zingchart/es6';\r\nimport ZingChart from 'zingchart-react';\r\nimport 'zingchart-react/dist/modules/zingchart-depth.min.js';\r\n\r\nclass MonthlyView extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { reportData } = this.props;\r\n\t\tlet ordersData = (reportData.ordersData && reportData.ordersData.orders)?reportData.ordersData.orders:[];\r\n\r\n\t\tlet totalOrder = 0;\r\n\t\tlet monthNameArray = [];\t\r\n\t\tlet monthlyTotalOrderArray = [];\r\n\r\n\t\tlet orderGrpedArray = _groupBy(ordersData, function(order) { return moment(order.D).format(\"MMM 'YY\")});\r\n\t\tObject.keys(orderGrpedArray).forEach(function(key) {\r\n\t\t\tlet orderObj = orderGrpedArray[key] || [];\r\n\r\n\t\t\tmonthNameArray.push(key);\r\n\r\n\t\t\tlet monthlyOrder = 0;\r\n\t\t\torderObj.map(order => {\r\n\t\t\t\ttotalOrder += parseFloat(order.order_count);\r\n\t\t\t\tmonthlyOrder += parseFloat(order.order_count);\r\n\t\t\t});\r\n\r\n\t\t\tmonthlyTotalOrderArray.push(monthlyOrder);\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\ttype: \"area\",\r\n\t\t\tscaleY: {\r\n\t\t\t\t\"guide\": {\r\n\t\t\t\t\t\"line-style\": \"dashed\",\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tscaleX: {\r\n\t\t\t\t\"max-labels\": 12,\r\n\t\t\t\tlabels: monthNameArray\r\n\t\t\t},\r\n\t\t\tplot: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\t\"font-family\": \"Source Sans Pro\",\r\n\t\t\t\t\t\"font-size\": \"16px\",\r\n\t\t\t\t\t\"line-height\": \"18px\",\r\n\t\t\t\t\t\"font-weight\": \"600\",\r\n\t\t\t\t\t\"text\": \"%v orders <br><span style='font-weight: 600; font-size: 14px; line-height: 18px; letter-spacing: 0.1em; color:#B6B6B6'>%data-days</span>\",\r\n\t\t\t\t\t\"text-align\": \"center\",\r\n\t\t\t\t\t\"border-radius\": 4,\r\n\t\t\t\t\t\"padding\": \"8px 16px\",\r\n\t\t\t\t\t\"background-color\": \"#fff\",\r\n\t\t\t\t\t\"color\": \"#545454\",\r\n\t\t\t\t\t\"box-shadow\": \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\r\n\t\t\t\t\t\"border\":\"1px solid #E0E0E0\",\r\n\t\t\t\t\t\"callout\": true\r\n\t\t\t  \t}\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\tvalues: monthlyTotalOrderArray,\r\n\t\t\t\t\"data-days\": monthNameArray\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"ariachart\">\r\n\t\t\t\t<ZingChart data={config}/>\r\n\t\t\t</div>\t\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default MonthlyView;","import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport Pagination from '../../Helper/pagination';\r\nimport {isEmpty} from 'lodash';\r\nimport {getDetails} from './orderDetailsTemplate';\r\n\r\nclass LateOrdersModal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLateOrderModal: false,\r\n            showDetails: false\r\n        };\r\n    };\r\n\r\n    openDetailsWindow = (uuid) => {\r\n\t\tthis.props.getTaskDetails({uuid: uuid})\r\n\t\tthis.setState({\r\n            showDetails: true\r\n\t\t})\r\n\t}\r\n\r\n    backToList = () => {\r\n\t\tthis.setState({\r\n            showDetails: false\r\n\t\t})\r\n\t}\r\n\r\n    changePage = (data) => {\r\n        const { currentPage }\t=\tdata;\r\n        //console.log('Change Page : ', !!this.props.lateOrder && !isEmpty(this.props.lateOrder) && currentPage !== this.props.lateOrder.pageno, currentPage, this.props.lateOrder.pageno);\r\n        if(!!this.props.lateOrder && !isEmpty(this.props.lateOrder) && currentPage !== this.props.lateOrder.pageno) {\r\n            this.props.pageChangeLateOrders({\r\n                page: currentPage,\r\n                order_by : this.props.lateOrder.sortBy,\r\n                format  : this.props.lateOrder.format\r\n            });\r\n            //this.props.getLateOrders(currentPage);\r\n        }\r\n    }\r\n\r\n    sortBy = (value) => {\r\n        //console.log(this.props.lateOrder.sortBy, value);\r\n        let format  =   'asc';//this.state.format || \r\n        if(this.props.lateOrder.sortBy === value)\r\n            format  =   (this.props.lateOrder.format === 'desc') ? 'asc' : 'desc';\r\n        this.props.sortLateOrders({\r\n            page: this.props.lateOrder.pageno,\r\n            order_by : value,\r\n            format : format,\r\n            //format : (value === 'time_diff') ? 'desc' : 'asc'\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        //console.log('Tasks : ', this.props.isLoading);\r\n        let lateOrders          =   this.props.lateOrder || {};\r\n        let sortByValue         =   lateOrders.sortBy || 'complete_before';\r\n        let format              =   lateOrders.format || 'complete_before';\r\n        let tasks               =   lateOrders.tasks || {};\r\n        let states              =   JSON.parse(localStorage.getItem('states') || '{}');\r\n        \r\n        let itemsPerPage        =   500;\r\n        let totalRecords        =   lateOrders.count || 0;\r\n        let taskDetails         =   this.props.taskDetails || {};\r\n        return (\r\n            (this.state.showDetails) ? \r\n            <Modal size=\"md\" className=\"c-modal lomod\" show={this.state.showDetails} onHide={this.props.handleCloseModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Late Orders</Modal.Title>\r\n                </Modal.Header>\r\n                <a onClick={this.backToList} className=\"backorder\" ><img src=\"/assets/arrow-left.svg\" /> Go back</a>\r\n                {getDetails(taskDetails)} \r\n            </Modal>\r\n            :\r\n            <Modal size=\"lg\" className=\"c-modal lorderMod\" show={this.props.showLateOrderModal} onHide={this.props.handleCloseModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Late Orders</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                    (!this.props.isLoading) ?\r\n                        <Row noGutters>\r\n                            {\r\n                                (lateOrders.listType === 'Uncategorized') ? \r\n                                    <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                        <div className=\"liveOrders\">{lateOrders.count} Results</div>\r\n                                        <div className=\"table_sec\">\r\n                                            <table>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"9\" className=\"t-titel\">\r\n                                                            <div className=\"status_count\">\r\n                                                                <span className=\"fc_black\">Total: {tasks.total}</span>\r\n                                                                <span className=\"fc_green\">0-20 mins: {tasks.b}</span>\r\n                                                                <span className=\"fc_yellow\">20-30 min: {tasks.c}</span>\r\n                                                                <span className=\"fc_read\">30+ min: {tasks.d}</span>\r\n                                                            </div>\r\n                                                        </th>\r\n                                                    </tr>                                                \r\n                                                </thead>\r\n                                                <GetTableRows orderList={tasks.orders} openDetailsWindow={this.openDetailsWindow} sortBy={this.sortBy} sortByValue={sortByValue} format={format}/>\r\n                                            </table>                          \r\n                                        </div>\r\n                                    </Col>\r\n                                : null\r\n                            }\r\n\r\n                            {\r\n                                (lateOrders.listType === 'Statewise') ? \r\n                                    <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                        <div className=\"liveOrders\">{lateOrders.count} Results</div>\r\n                                        {\r\n                                            Object.keys(tasks || {}).map((item, i) => {\r\n                                                let task        =   tasks[item] || {};\r\n                                                return (                                                    \r\n                                                    <div key={i} className=\"table_sec\">\r\n                                                        <table>\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th colSpan=\"9\" className=\"t-titel\"><span className=\"tName\">{task.name}</span>\r\n                                                                        <div className=\"status_count\">\r\n                                                                            <span className=\"fc_black\">Total: {task.total}</span>\r\n                                                                            <span className=\"fc_green\">0-20 mins: {task.b}</span>\r\n                                                                            <span className=\"fc_yellow\">20-30 min: {task.c}</span>\r\n                                                                            <span className=\"fc_read\">30+ min: {task.d}</span>\r\n                                                                        </div>\r\n                                                                    </th>\r\n                                                                </tr>\r\n                                                            \r\n                                                            </thead>\r\n                                                            <GetTableRows orderList={task.orders} openDetailsWindow={this.openDetailsWindow} sortBy={this.sortBy} sortByValue={sortByValue} format={format}/>\r\n                                                        </table>                          \r\n                                                    </div>                                                \r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Col>\r\n                                : null\r\n                            }\r\n\r\n                            {                                \r\n                                (lateOrders.listType === 'Zonewise') ? \r\n                                \r\n                                <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                    <div className=\"liveOrders\">{lateOrders.count} Results</div>\r\n                                    {\r\n                                        Object.keys(lateOrders.tasks || {}).map((item, i) => {\r\n                                            let zone     =  lateOrders.tasks[item] || [];\r\n                                            let state    =   states.find(s => {\r\n                                                return s.id === item;\r\n                                            })\r\n                                            return (\r\n                                                <div key={i}>\r\n                                                    <h3 className=\"title\">{state.value || item}</h3>\r\n                                                    <div className=\"table_sec\">\r\n                                                {    \r\n                                                    zone.map((z, index) => {\r\n                                                        let orderList  =  z.orders || [];\r\n                                                        return (\r\n                                                            <table key={index}>\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th colSpan=\"9\" className=\"t-titel\"><span className=\"tName\">{z.name} ({item})</span>\r\n                                                                            <div className=\"status_count\">\r\n                                                                                <span className=\"fc_black\">Total: {z.total}</span>\r\n                                                                                <span className=\"fc_green\">0-20 mins: {z.b}</span>\r\n                                                                                <span className=\"fc_yellow\">20-30 min: {z.c}</span>\r\n                                                                                <span className=\"fc_read\">30+ min: {z.d}</span>\r\n                                                                            </div>\r\n                                                                        </th>\r\n                                                                    </tr>\r\n                                                                \r\n                                                                </thead>\r\n                                                                <GetTableRows orderList={orderList} openDetailsWindow={this.openDetailsWindow} sortBy={this.sortBy} sortByValue={sortByValue} format={format}/>\r\n                                                            </table>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Col>\r\n                                : null\r\n                            }\r\n                        </Row>\r\n                        : <Row noGutters>\r\n                            <Col md=\"12\" sm=\"12\" className=\"c_info\">\r\n                                <div className=\"loader\">Loading....</div>\r\n                            </Col>\r\n                        </Row>\r\n                    }                   \r\n                    {\r\n                        (!isEmpty(tasks) && totalRecords >= itemsPerPage) ?\r\n                        <div style={{display: (this.props.isLoading) ? 'none' : ''}} className=\"pagination_Pan\"><Pagination totalRecords={totalRecords} pageLimit={itemsPerPage} pageNeighbours={1} onPageChanged={this.changePage} isProcessing={this.props.isProcessing}/></div>:null\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default LateOrdersModal;\r\n\r\nfunction GetTableRows(props){\r\n    let orderList   =   props.orderList || [];\r\n    let sortBy      =   props.sortByValue;\r\n    let format      =   props.format;\r\n    return (        \r\n        <tbody>\r\n            <tr className=\"t-heading\">\r\n                <th className={(sortBy === 'order_number') ? `sortby ${format}`: ''} onClick={() => props.sortBy('order_number')}>Order Number</th>\r\n                <th className={(sortBy === 'time_diff') ? `sortby ${format}`: ''} onClick={() => props.sortBy('time_diff')}>Late by (min)</th>\r\n                <th className={(sortBy === 'store') ? `sortby ${format}`: ''} onClick={() => props.sortBy('store')}>Store</th>\r\n                <th className={(sortBy === 'cust_name') ? `sortby ${format}`: ''} onClick={() => props.sortBy('cust_name')}>Customer Name</th>\r\n                <th className={(sortBy === 'created_at') ? `sortby ${format}`: ''} onClick={() => props.sortBy('created_at')}>Order Time</th>\r\n                <th className={(sortBy === 'complete_after' || sortBy === 'complete_before') ? `sortby ${format}`: ''} onClick={() => props.sortBy('complete_before')}>Last Del Window</th>\r\n                <th className={(sortBy === 'recpnt_task_start_time') ? `sortby ${format}`: ''} onClick={() => props.sortBy('recpnt_task_start_time')}>Driver to Recipient</th>\r\n                <th className={(sortBy === 'delivery_time') ? `sortby ${format}`: ''} onClick={() => props.sortBy('delivery_time')}>Delivery Time</th>\r\n                <th className={(sortBy === 'driver_wait') ? `sortby ${format}`: ''} onClick={() => props.sortBy('driver_wait')}>Driver Wait</th>\r\n            </tr>\r\n            {\r\n                (orderList.length > 0) ?\r\n                (orderList || []).map((order, oIndex) => {\r\n                    return (                                                                \r\n                        <tr key={oIndex}>\r\n                            <td abbr=\"tr\">\r\n                                <span className={`round ${order.lateClass}`}></span>{order.order_number}\r\n                                &nbsp;\r\n                                <span title=\"View Details\" onClick={() => props.openDetailsWindow(order.uuid)} className=\"docmodbtn\"><img src=\"/assets/doc.svg\" /></span>\r\n                            </td>\r\n                            <td abbr=\"tr\">{(order.time_diff > 0) ? order.time_diff : 0}</td>\r\n                            <td abbr=\"tr\">{order.store}</td>\r\n                            <td abbr=\"tr\">{order.customer_name}</td>\r\n                            <td abbr=\"tr\" className=\"acell\" ><span className=\"tTip\">{order.created_at}</span> <label>{order.created_at}</label></td>\r\n                            <td abbr=\"tr\" className=\"acell\" ><span className=\"tTip\">{order.complete_before}</span> <label>{order.complete_before}</label></td>\r\n                            <td abbr=\"tr\" className=\"acell\" ><span className=\"tTip\">{order.recpnt_task_start_time}</span> <label>{order.recpnt_task_start_time}</label></td>\r\n                            <td abbr=\"tr\" className=\"acell\" ><span className=\"tTip\">{order.delivery_time}</span> <label>{order.delivery_time}</label></td>\r\n                            <td abbr=\"tr\">{order.driver_wait}</td>\r\n                        </tr>\r\n                    )\r\n                }) : <tr>\r\n                    <td colSpan=\"9\">No Record(s)</td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport LateOrdersModal from '../Modals/lateOrdersModal';\r\n//import OrderDetails from './orderDetailsModal';\r\n\r\nclass OnTimeReport extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowLateOrderModal: false,\r\n\t\t\t//detailsShow       :   false\r\n\t\t};\r\n\t};\r\n\r\n\t/* openDetailsWindow = (uuid) => {\r\n\t\tthis.props.getTaskDetails({uuid: uuid})\r\n\t\tthis.setState({\r\n\t\t   detailsShow: true\r\n\t\t})\r\n\t } */ \r\n\r\n\thandleCloseModal(){\r\n\t\tthis.setState({ showLateOrderModal: false });\r\n\t};\r\n\r\n\thandleOpenModal = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tthis.setState({ showLateOrderModal: true });\r\n\t\tthis.props.getLateOrders();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { showLateOrderModal } = this.state;\r\n\t\tconst { reportData, startDate, endDate } = this.props;\r\n\t\tlet reportTotal = reportData.reportTotal || {};\r\n\t\treturn (\r\n\t\t\t<Col md=\"6\" sm=\"12\" className=\"pl10\">\r\n\t\t\t\t<div className=\"stats_box\">\r\n\t\t\t\t\t<h3 className=\"sec_titel\">On Time Report</h3>\r\n\t\t\t\t\t<div className=\"otrWrap\">\r\n\t\t\t\t\t\t<div className=\"otrInfo\">\r\n\t\t\t\t\t\t\t<h4>Total Orders</h4>\r\n\t\t\t\t\t\t\t<h2>{reportTotal.total_orders}</h2>\r\n\r\n\t\t\t\t\t\t\t<div className=\"toWrap\">\r\n\t\t\t\t\t\t\t\t<div className=\"otrData otRound\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"ortlabel\"><span>On Time</span> {reportTotal.on_time_percentage}%</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"ortText\">{reportTotal.total_orders - reportTotal.late_orders} Responses</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"otrData lateRound\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"ortlabel\"><span>Late</span>  {reportTotal.late_percentage}%</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"ortText\">{reportTotal.late_orders} Responses</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<a className=\"vlOrder\" style={{cursor: 'pointer'}} onClick = {(e)=>this.handleOpenModal(e)}>View Late Orders</a>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"otrChart\">\r\n\t\t\t\t\t\t\t<div className=\"chart_wrap\">\r\n\t\t\t\t\t\t\t\t<svg viewBox=\"0 0 36 36\" className=\"circular-chart orange_c\">\r\n\t\t\t\t\t\t\t\t\t<path className=\"circle-bg\"\r\n\t\t\t\t\t\t\t\t\td=\"M18 2.0845\r\n\t\t\t\t\t\t\t\t\t\ta 15.9155 15.9155 0 0 1 0 31.831\r\n\t\t\t\t\t\t\t\t\t\ta 15.9155 15.9155 0 0 1 0 -31.831\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<path className=\"circle\"\r\n\t\t\t\t\t\t\t\t\tstrokeDasharray={`${reportTotal.on_time_percentage}, ${reportTotal.late_percentage}`}\r\n\t\t\t\t\t\t\t\t\td=\"M18 2.0845\r\n\t\t\t\t\t\t\t\t\t\ta 15.9155 15.9155 0 0 1 0 31.831\r\n\t\t\t\t\t\t\t\t\t\ta 15.9155 15.9155 0 0 1 0 -31.831\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t\t\t<span className=\"cText\">{reportTotal.on_time_percentage}%<span>On Time</span></span>\r\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t(!!showLateOrderModal) ?\r\n\t\t\t\t\t<LateOrdersModal\r\n\t\t\t\t\t\tshowLateOrderModal={showLateOrderModal}\r\n\t\t\t\t\t\thandleCloseModal={this.handleCloseModal.bind(this)}\r\n\t\t\t\t\t\tlateOrder={this.props.lateOrder}\r\n\t\t\t\t\t\tgetLateOrders={this.props.getLateOrders}\r\n\t\t\t\t\t\tgetTaskDetails={this.props.getTaskDetails}\r\n\t\t\t\t\t\ttaskDetails={this.props.taskDetails}\r\n\t\t\t\t\t\tsortLateOrders={this.props.sortLateOrders}\r\n\t\t\t\t\t\tisLoading={this.props.isLoading}\r\n\t\t\t\t\t\tpageChangeLateOrders={this.props.pageChangeLateOrders}\r\n\t\t\t\t\t/> : null\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\t/* (!!this.state.detailsShow) ?\r\n\t\t\t\t\t<OrderDetails\r\n\t\t\t\t\t\tshow                =   {this.state.detailsShow}\r\n\t\t\t\t\t\ttaskDetails         =   {this.props.taskDetails}\r\n\t\t\t\t\t\thandleClose         =   {this.handleClose}\r\n\t\t\t\t\t/> : null */\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t</Col>\t\t\t\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default OnTimeReport;","import Reruns from './reruns';\r\nimport DailyView from './dailyView';\r\nimport TotalScore from './totalScore';\r\nimport MonthlyView from './monthlyView';\r\nimport OnTimeReport from './onTimeReport';\r\nimport React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport 'zingchart/es6';\r\nimport ZingChart from 'zingchart-react';\r\nimport 'zingchart-react/dist/modules/zingchart-depth.min.js';\r\n\r\nclass ReportGrid extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttype: 'Daily',\r\n\t\t\toptOpen: false,\r\n\t\t\tshowBy: 'date',\r\n\t\t\tshowByTxt: 'Show by Date'\r\n\t\t};\r\n\t};\r\n\r\n\tselect = (value) => {\r\n\t\tthis.setState({ type : value }, function(){\r\n\t\t\tthis.getOrder();\r\n\t\t});\r\n\t};\r\n\r\n\tonChangeHandle(e) {\r\n\t\tif(e === 'date'){\r\n\t\t\tthis.setState({ showBy: e, showByTxt: 'Show by Date', optOpen: !this.state.optOpen }, function(){\r\n\t\t\t\tthis.getOrder();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({ showBy: e, showByTxt: 'Show by Store', optOpen: !this.state.optOpen }, function(){\r\n\t\t\t\tthis.getOrder();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thandleSelectbox(type) {\t\t\r\n\t\tthis.setState({ optOpen: !this.state.optOpen });\r\n\t};\r\n\r\n\thandleOutsideClick = (e) => {\r\n\t\te.stopPropagation();\r\n\r\n\t\tif(this.nodeState.contains(e.target) || e.target.getAttribute('data') === 'ignore-outer-click'){ \r\n\t\t\treturn;  \r\n\t\t};\r\n\r\n\t\tif(!!this.state.optOpen) { \r\n\t\t\tthis.setState({ optOpen: false}); \r\n\t\t};\r\n  \t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet showBy\t\t=\tthis.props.showBy;\t\t\r\n\t\tlet showByTxt\t=\tthis.state.showByTxt;\r\n\t\tlet type\t\t=\t(showBy === 'month') ? 'Monthly' : 'Daily';\r\n\t\tif(showBy === 'month'){\t\t\t\r\n\t\t\tshowBy\t\t=\t'date';\t\r\n\t\t\tshowByTxt\t=\t'Show by Date';\r\n\t\t}\telse {\t\t\t\t\r\n\t\t\tshowByTxt\t=\t(showBy === 'date') ? 'Show by Date' : 'Show by Store';\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\ttype\t\t:\ttype,\r\n\t\t\tshowBy\t\t:\tshowBy,\r\n\t\t\tshowByTxt\t:\tshowByTxt\r\n\t\t})\r\n  \t\tdocument.addEventListener('click', this.handleOutsideClick);\r\n  \t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleOutsideClick);\r\n\t};\r\n\r\n\tgetOrder = () => {\t\t\r\n\t\tlet showBy\t=\t'';\r\n\t\tif(this.state.type === 'Monthly') {\r\n\t\t\tshowBy\t=\t'month';\r\n\t\t} else {\r\n\t\t\tshowBy\t=\tthis.state.showBy;\r\n\t\t}\r\n\t\tthis.props.getOrder(showBy);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { type, optOpen, showBy, showByTxt } = this.state;\r\n\t\t//console.log(showByTxt);\r\n\t\treturn (\r\n\t\t\t<section className=\"content\">\r\n\t\t\t\t<TotalScore reportData={this.props.reportData} />\t\t\t\t\r\n\r\n\t\t\t\t<div className=\"stats_box mb24\">\r\n\t\t\t\t\t<div className=\"barchartPan\">\r\n\t\t\t\t\t\t<div className=\"bcpTop\">\r\n\t\t\t\t\t\t\t<div className=\"lcol\">Orders</div>\r\n\t\t\t\t\t\t\t<div className=\"rcol\">\r\n\t\t\t\t\t\t\t\t<span onClick={() => this.select('Daily')} className={(type === 'Daily') ? 'active' : ''}>Daily View</span>\r\n\t\t\t\t\t\t\t\t<span onClick={() => this.select('Monthly')} className={(type === 'Monthly') ? 'active' : ''}>Monthly View</span>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(type === 'Monthly') ?\r\n\t\t\t\t\t\t\t\t<div className=\"dropPan\">\r\n\t\t\t\t\t\t\t\t\t<div ref={nodeState => this.nodeState = nodeState} className=\"mText\">Last 12 months</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<div className=\"dropPan\">\r\n\t\t\t\t\t\t\t\t\t<div ref={nodeState => this.nodeState = nodeState} className={`select-box${optOpen ? \" sopen\" : \" \"}`}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"s-result\" onClick={() => this.handleSelectbox(type)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sVal\">{showByTxt}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t<li onClick={() => this.onChangeHandle('date')} data='ignore-outer-click' className={(showBy === 'date') ? 'active' : ''}>Show by Date</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li onClick={() => this.onChangeHandle('store')} data='ignore-outer-click' className={(showBy === 'store') ? 'active' : ''}>Show by Store</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(!this.props.isOrderLoading) ?\r\n\t\t\t\t\t\t\t<div className={`bcpButtom${(showBy === 'store') ? ' byStore': ''}`}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(type === 'Daily') ?\r\n\t\t\t\t\t\t\t\t\t<DailyView reportData={this.props.reportData} showBy={showBy}/>:null\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(type === 'Monthly') ?\r\n\t\t\t\t\t\t\t\t\t<MonthlyView reportData={this.props.reportData} />:null\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div> : <div className=\"loader\"></div>\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Row noGutters>\r\n            \t\t<Reruns reportData={this.props.reportData} />\r\n            \t\t<OnTimeReport\r\n\t\t\t\t\t\tstartDate={this.props.startDate}\r\n\t\t\t\t\t\tendDate={this.props.endDate}\r\n\t\t\t\t\t\treportData={this.props.reportData}\r\n\t\t\t\t\t\tisLoading={this.props.isLateOrderLoading}\r\n\t\t\t\t\t\tgetLateOrders={this.props.getLateOrders}\r\n\t\t\t\t\t\tlateOrder={this.props.lateOrder}\t\t\t\t\t\t\r\n\t\t\t\t\t\tgetTaskDetails={this.props.getTaskDetails}\r\n\t\t\t\t\t\ttaskDetails={this.props.taskDetails}\r\n\t\t\t\t\t\tsortLateOrders={this.props.sortLateOrders}\r\n\t\t\t\t\t\tpageChangeLateOrders={this.props.pageChangeLateOrders}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Row>\r\n\t\t\t</section>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default ReportGrid;","import React from 'react';\r\nimport lodash from 'lodash';\r\nimport Filter from './filter';\r\nimport ReportGrid from './reportGrid';\r\nimport moment from 'moment-timezone';\r\nimport { isEqual, isEmpty } from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ReportComponent extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tisLoading: PT.bool,\r\n\t\tgetReport: PT.func,\r\n\t\tuserType: PT.string,\r\n\t\tgetLocations: PT.func,\r\n\t\tsettingsData: PT.object\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tisLoading: false,\r\n\t\tgetReport: () => { },\r\n\t\tgetLocations: () => { },\r\n\t\tsettingsData: () => { }\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\t\r\n\t\t\ttype:'general',\t\t\t\r\n\t \t \t/* filterData: {\r\n\t \t \t\ttype: 'date'\r\n\t\t\t  }, */\r\n\t\t\tfilterData: {show_by: 'date'},\r\n         \tendDate:  moment().format('YYYY-MM-DD'),\r\n\t\t\tstartDate:  moment().subtract(1, 'months').format('YYYY-MM-DD')\r\n\t\t};\r\n\r\n\t\t//this.handleTypeChange = this.handleTypeChange.bind(this);\r\n\t};\r\n\r\n\t/* handleTypeChange(type, filterData) {\r\n\t\tthis.setState({ type: type }, () => {\r\n\t\t\tlet data = {...this.state.filterData};\r\n\t\t\tdata.user_type = type;\r\n\t\t\t//console.log(filterData);\r\n\t\t\tthis.getReport(data, filterData);\r\n      \t});\r\n\t}; */\r\n\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t/* if(!!props.userType) {\r\n\t\t\tlet type       \t=\t(props.userType === 'admin') ? 'general' : props.userType;\r\n\t\t\tlet filter\t\t=\tprops.filterData.reports || {};\r\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t   type        :  filter.type\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t//clearFilter('history');\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttype: type\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}; */\r\n\t};\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.getLocations();\r\n\t};\r\n\r\n\t/* componentWillMount() {\r\n\t\tthis.props.getSettings();\r\n\t}; */\r\n\r\n\tgetReport = (data, selFilterData) => {\r\n\t\tlet filterData = {...this.state.filterData};\r\n\t\tlet searchData\t=\t{\r\n\t\t\t...data,\r\n\t\t\tshow_by: filterData.show_by\r\n\t\t};\r\n\t\t//console.log('!!!!!!!!!!!!', searchData);\r\n\r\n\t\tthis.setState({\r\n\t\t\tfilterData: searchData\r\n\t\t}, () => {\r\n\t\t\tsearchData.filter\t\t=\t{key: 'reports', value: JSON.stringify(selFilterData)};\r\n\t\t\tthis.props.getReport(searchData);\r\n\t\t});\r\n   \t};\r\n\t\r\n\tgetOrder = (showBy) => {\r\n\t\tlet filterData = {...this.state.filterData};\r\n\t\tfilterData.show_by = showBy;\r\n\t\tthis.setState({\r\n\t\t\tfilterData: {...filterData}\r\n\t\t}, () => {\r\n\t\t\tthis.props.getOrder(filterData);\r\n\t\t});\r\n\t\t//console.log('showBy : ', showBy);\r\n\t}\r\n\r\n\tgetLateOrders = () => {\r\n\t\tlet filterData = {...this.state.filterData};\r\n\t\tdelete filterData.show_by;\t\t\r\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\r\n\t\tfilterData.page\t\t\t=\t1;\r\n\t\tfilterData.order_by\t\t=\t'complete_after';\r\n\t\tfilterData.format\t\t=\t'desc';\r\n\t\t//console.log(filterData);\t\t\r\n\t\tthis.props.getLateOrders(filterData);\r\n\t}\r\n\r\n\tpageChangeLateOrders = (srchData) => {\r\n\t\tlet filterData = {...this.state.filterData};\r\n\t\tdelete filterData.show_by;\t\t\r\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\r\n\t\t//filterData.page\t\t\t=\t(!!page)? page : 1;\r\n\t\tlet data\t\t=\t{\r\n\t\t\t...filterData,\r\n\t\t\t...srchData\r\n\t\t}\r\n\t\t//filterData.order_by\t\t=\t'time_diff';\r\n\t\t//console.log(filterData);\t\t\r\n\t\tthis.props.getLateOrders(data);\r\n\t}\r\n\r\n\tsortLateOrders = (sortBy) => {\r\n\t\tlet filterData = {...this.state.filterData};\r\n\t\tdelete filterData.show_by;\r\n\t\tfilterData.filter\t\t=\tthis.props.filterData.reports;\r\n\t\t//console.log(this.props.unsortedLateOrders, this.props.lateOrder.count);\r\n\t\tlet data\t\t=\t{\r\n\t\t\tsearchData: {\r\n\t\t\t\t...filterData,\r\n\t\t\t\t...sortBy\r\n\t\t\t},\r\n\t\t\tunsortedLateOrders : this.props.unsortedLateOrders,\r\n\t\t\tcount : this.props.lateOrder.count\r\n\t\t}\r\n\t\t//console.log(filterData);\t\t\r\n\t\tthis.props.sortLateOrders(data);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { startDate, endDate } = this.state;\r\n\t\tlet userType = this.props.userType || {};\r\n\t\tlet locationData = this.props.locations || {};\r\n\r\n\t\tlet zones = locationData.zones || {};\r\n\t\tlet stores = locationData.stores || [];\r\n\t\tlet taskType = locationData.taskType || '';\r\n\t\tlet locations = locationData.locations || [];\r\n\t\tlet filterData\t=\tthis.props.filterData.reports || {};\r\n\t\t//console.log('PRops : ', this.props.isFilterLoaded, this.props.showReport);\r\n\t\treturn (\r\n\t\t\t(this.props.isFilterLoaded)? \r\n\t\t\t\t(!!this.props.showReport && this.props.showReport === 'true')?\r\n\t\t\t\t<main className={`dash right_sec statsp ${(userType !== 'admin') ? ' noAdmin' : ''}`}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(!!filterData) ?\r\n\t\t\t\t\t\t<Filter \r\n\t\t\t\t\t\t\t//type={type}\r\n\t\t\t\t\t\t\tzones={zones}\r\n\t\t\t\t\t\t\tstores={stores}\r\n\t\t\t\t\t\t\ttaskType={taskType}\r\n\t\t\t\t\t\t\tlocations={locations}\r\n\t\t\t\t\t\t\tgetReport={this.getReport}\r\n\t\t\t\t\t\t\thandleTypeChange={this.handleTypeChange} \r\n\t\t\t\t\t\t\tuserType={this.props.userType}\r\n\t\t\t\t\t\t\tfilterData={filterData}\r\n\t\t\t\t\t\t/> : null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t(!!!this.props.isLoading)?\r\n\t\t\t\t\t\t<ReportGrid\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendDate={endDate}\r\n\t\t\t\t\t\t\treportData={this.props.reportData}\r\n\t\t\t\t\t\t\tgetOrder={this.getOrder}\r\n\t\t\t\t\t\t\tshowBy={this.state.filterData.show_by}\r\n\t\t\t\t\t\t\tisOrderLoading={this.props.isOrderLoading}\r\n\t\t\t\t\t\t\tisLateOrderLoading={this.props.isLateOrderLoading}\r\n\t\t\t\t\t\t\tgetLateOrders={this.getLateOrders}\r\n\t\t\t\t\t\t\tlateOrder={this.props.lateOrder}\r\n\t\t\t\t\t\t\tgetTaskDetails={this.props.getTaskDetails}\r\n\t\t\t\t\t\t\ttaskDetails={this.props.taskDetails}\r\n\t\t\t\t\t\t\tsortLateOrders={this.sortLateOrders}\r\n\t\t\t\t\t\t\tpageChangeLateOrders={this.pageChangeLateOrders}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: \r\n\t\t\t\t\t\t<div className=\"loader\">Loading....</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</main> : <main className={`dash right_sec statsp deniedp`}><div className=\"aDenied\">Access Denied</div></main>\r\n\t\t\t: <main className={`dash right_sec statsp`}>\r\n\t\t\t\t<div className=\"loader\">Loading....</div>\r\n\t\t\t</main>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default withRouter(ReportComponent);","import React from 'react';\r\nimport * as actions from './actions';\r\nimport ReportComponent from './report';\r\nimport { connect } from 'react-redux';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as dashboardActions from '../Dashboard/actions';\r\nimport * as headerActions from '../Header/actions';\r\n\r\nconst Report   = ({\r\n\tuserType,\r\n\tisLoading,\r\n\tisOrderLoading,\r\n\tlocations,\r\n\tgetReport,\r\n\tgetOrder,\r\n\treportData,\r\n\tsettingsData,\r\n\tgetLocations,\r\n\tshowReport,\r\n\tisLateOrderLoading,\r\n\tgetLateOrders,\r\n\tlateOrder,\r\n\tunsortedLateOrders,\r\n\tsortLateOrders,\r\n\t//getSettings,\r\n\tfilterData,\r\n\tisFilterLoaded,\r\n\ttaskDetails,\r\n\tgetTaskDetails\r\n}) => {\r\n\treturn (\r\n\t\t<ReportComponent\r\n\t\t\tisLoading={isLoading}\r\n\t\t\tisOrderLoading={isOrderLoading}\r\n\t\t\tuserType={userType}\r\n\t\t\tgetReport={getReport}\r\n\t\t\tgetOrder={getOrder}\r\n\t\t\tgetLocations={getLocations}\r\n\t\t\treportData={reportData}\r\n\t\t\tlocations={locations}\r\n\t\t\tsettingsData={settingsData}\r\n\t\t\tshowReport={showReport}\r\n\t\t\tisLateOrderLoading={isLateOrderLoading}\r\n\t\t\tgetLateOrders={getLateOrders}\r\n\t\t\tlateOrder={lateOrder}\r\n\t\t\tunsortedLateOrders={unsortedLateOrders}\r\n\t\t\tsortLateOrders={sortLateOrders}\r\n\t\t\t//getSettings={getSettings}\r\n\t\t\tfilterData={filterData}\r\n\t\t\tisFilterLoaded={isFilterLoaded}\r\n\t\t\ttaskDetails={taskDetails}\r\n\t\t\tgetTaskDetails={getTaskDetails}\r\n\t\t/>\r\n\t)\r\n};\r\n\r\nReport.propTypes   = {\r\n\tisLoading: PT.bool,\r\n\tisOrderLoading: PT.bool,\r\n\tuserType: PT.string,\r\n\tgetLocations: PT.func,\r\n\tsettingsData: PT.object,\r\n\tgetReport: PT.func,\r\n\tgetOrder: PT.func,\r\n\tshowReport: PT.string,\r\n\tisLateOrderLoading: PT.bool,\r\n\tgetLateOrders: PT.func,\r\n\tlateOrder: PT.object,\r\n\tunsortedLateOrders: PT.array,\r\n\tsortLateOrders: PT.func,\r\n\t//getSettings: PT.func,\r\n\tfilterData: PT.object,\r\n\tisFilterLoaded: PT.bool,\r\n\ttaskDetails: PT.object,\r\n\tgetTaskDetails: PT.func\r\n}\r\n\r\nconst mapReportToProps   = ({dashboardReducer, reportReducer, headerReducer}) => {\r\n\t//console.log('reportReducer', reportReducer.isLateOrderLoading);\r\n\t\r\n\treturn ({\r\n\t \tuserType: headerReducer.userType,\r\n\t\tisLoading: reportReducer.isLoading,\r\n\t\tisOrderLoading: reportReducer.isOrderLoading,\r\n\t\treportData: reportReducer.reportData,\r\n\t\tlocations: dashboardReducer.locations,\r\n\t\tsettingsData: headerReducer.settingsData,\r\n\t\tshowReport: headerReducer.showReport,\r\n\t\tisLateOrderLoading: reportReducer.isLateOrderLoading,\r\n\t\tlateOrder: reportReducer.lateOrder,\r\n\t\tunsortedLateOrders: reportReducer.unsortedLateOrders,\r\n\t\tfilterData: headerReducer.filterData,\r\n\t\tisFilterLoaded: headerReducer.isFilterLoaded,\r\n\t\ttaskDetails   : dashboardReducer.taskDetails\r\n\t});\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgetReport: (data) => dispatch(actions.getReport(data)),\r\n\tgetOrder: (data) => dispatch(actions.getOrder(data)),\r\n\tgetLocations: (data) => dispatch(dashboardActions.getLocations(data)),\r\n\t//getSettings: (data) => dispatch(headerActions.getSettings(data)),\r\n\tgetLateOrders: (data) => dispatch(actions.getLateOrders(data)),\r\n\tsortLateOrders: (data) => dispatch(actions.sortLateOrders(data)),\r\n\tgetTaskDetails      : (data) => dispatch(dashboardActions.getTaskDetails(data))\r\n});\r\n\r\nexport default connect(mapReportToProps, mapDispatchToProps)(withRouter(Report));","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReportsContainer from '../../containers/Reports';\r\n\r\nclass Reports extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<ReportsContainer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Reports);\r\n","//Login\r\nexport const DO_LOGIN                               =   'DO_LOGIN';\r\nexport const DO_LOGIN_SUCCESS                       =   'DO_LOGIN_SUCCESS';\r\nexport const DO_LOGIN_ERROR                         =   'DO_LOGIN_ERROR';","import {\r\n        DO_LOGIN,\r\n        DO_LOGIN_SUCCESS,\r\n        DO_LOGIN_ERROR\r\n} from \"./constants\";\r\n\r\nexport const doLogin = (data) => ({\r\n  type: DO_LOGIN,\r\n  data\r\n});\r\n\r\nexport const listenLoginSuccess = (data) => ({\r\n  type: DO_LOGIN_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenLoginError = (data) => ({\r\n  type: DO_LOGIN_ERROR,\r\n  data\r\n});","import React, { Component } from 'react';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport {getCookie} from '../../util/cookies';\r\nimport {isEmpty} from 'lodash';\r\nclass LoginForm extends Component{\r\n   static propTypes = {\r\n\t\tisFetching           :  PT.bool,\r\n\t\tisProcessing         :  PT.bool,\r\n\t\tisError              :  PT.bool,\r\n\t\tisSuccess            :  PT.bool,\r\n\t\tloginData            :  PT.object,\r\n\t\tdoLogin              :  PT.func\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tisFetching           :  false,\r\n\t\tisProcessing         :  false,\r\n\t\tisError              :  false,\r\n\t\tisSuccess            :  false,\r\n\t\tstates               :  [],\r\n\t\tdoLogin              :  () => {}\r\n\t}\r\n\r\n   constructor(props){\r\n      super(props);\r\n   \r\n      this.state          =   {\r\n         msg             :   '',\r\n         remember: false,\r\n         typePass: 'password',\r\n         defaultError:{\r\n            password\t:\tfalse,\r\n            email\t:\tfalse\r\n         }\r\n      }\r\n    //  this.handleSubmit          =  this.handleSubmit.bind(this);\r\n      this.handleRem          =  this.handleRem.bind(this);\r\n      this.toggleShowpass  = this.toggleShowpass.bind(this);\r\n    \r\n   }\r\n\r\n   componentWillMount() {\r\n      /* let loginData = getCookie() || {};\r\n      console.log('Login Data : ', loginData); */\r\n      let user          = {};\r\n      let currentCookie = getCookie('foodjets_merchant') || {};\r\n      user              = currentCookie || {};\r\n     \r\n      if(!isEmpty(user)) {\r\n         window.location.href='/dashboard';\r\n      }\r\n   }\r\n\r\n   handleRem(e) {\r\n      let target  =    e.target;\r\n      this.setState({\r\n          [e.target.name]: !this.state[e.target.name],\r\n      });\r\n  } \r\n\r\n\r\n\r\n  toggleShowpass(){\r\n      this.setState({\r\n         typePass: this.state.typePass === 'password' ? 'text' : 'password'\r\n      })\r\n  }\r\n\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n     \r\n     \r\n      const email         =   this.email.value;\r\n      const password      =   this.password.value;\r\n      const  remember        =   this.state.remember;\r\n\r\n      const data          =   {\r\n                                 email:email,\r\n                                 password:password,\r\n                                 remember          \r\n                              }\r\n                            \r\n   let validate\t=\tthis.validate(data);\r\n   let  type = e.type;\r\n  \r\n   if(!validate.errors.password && !validate.errors.email && type == \"submit\"  )\r\n   this.props.doLogin(data);\r\n     // this.props.changePassword(formData);\r\n\r\n      \r\n   }\r\n   \r\n\r\n   validate = (data) => {\r\n\t\tlet formData\t=\tdata || {};\r\n\t\tlet errors\t\t=\t{...this.state.defaultError};\r\n\t\tlet isError\t\t=\tfalse;\r\n\t\tif(!!!formData.password) {\r\n\t\t\terrors.password\t\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      } \r\n      else if(formData.password.length<4 && formData.password.length>0) {\r\n         errors.password\t\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n      else {\r\n         errors.password\t\t=\tfalse;\r\n\t\t\tisError\t\t\t\t=\tfalse;\r\n      }\r\n\t\tif(!!!formData.email) {\r\n\t\t\terrors.email=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n      else if(!this.validateEmail(formData.email)) {\r\n         errors.email=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n      else {\r\n         errors.email=\tfalse;\r\n\t\t\tisError\t\t\t\t=\tfalse;\r\n      }\r\n\r\n    \r\n      this.setState({\r\n         defaultError: errors\r\n      });\r\n\t\treturn {isError: isError, errors: errors};\r\n   }\r\n\r\n   \r\n   validateEmail =(email) =>{\r\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email));\r\n  }\r\n\r\n   componentWillReceiveProps(props){\r\n     \r\n      if(!!props.isSuccess){\r\n         window.location.href='/dashboard';\r\n      }\r\n   }\r\n\r\n   render(){\r\n      let errors\t\t=\t{...this.state.defaultError};\r\n\t\t//let isDisabled\t\t=\tvalidate.isError;\r\n      return (\r\n         <div className=\"login_p\">\r\n            <div className=\"log_left\">\r\n               <h4>Welcome</h4>\r\n               <p>Sign in to your account</p>\r\n               <form onSubmit={this.handleSubmit}>\r\n                  <div className=\"input-group\">\r\n                     <input className={`t-email ltbox ${(!!errors.email) ? ' error' : ''}`} type=\"text\" ref={(input) => this.email = input} onChange={(e)=>this.handleSubmit(e,\"data\")} placeholder=\"Email address\" /*defaultValue=\"admin\"*/ />\r\n                  </div>\r\n                  <div className=\"input-group\">\r\n                     <span className=\"pass_wrap\"><input className={`t-pass ltbox ${(!!errors.password) ? ' error' : ''}`}type={this.state.typePass} ref={(input) => this.password = input} onChange={(e)=>this.handleSubmit(e,\"data\")} placeholder=\"Password\" />\r\n                     <Link onClick={this.toggleShowpass} className={this.state.typePass === 'text' ? \"showpass\":\"\"}><img src=\"/assets/eye.svg\" alt=\"eye_img\" /></Link></span>\r\n                  </div>\r\n                  <div className=\"f-pass\">\r\n                     <span className=\"remember_pan\"><input type=\"checkbox\" id=\"remember\" name=\"remember\" className=\"c_box\" checked={this.state.remember} onChange={(e)=>this.handleRem(e)}/> <label htmlFor=\"remember\">Remember Me</label></span> <Link className=\"btn btn-link px-0\" to='/forgot-password'>Forgot your password?</Link>\r\n                  </div>\r\n                  <div className=\"sbtn_pan\">\r\n                     <button className=\"sbtn\" disabled={!!this.props.isProcessing}>{(!!this.props.isProcessing) ? 'Processing....' : 'Sign In'}</button>\r\n                  </div>\r\n                  {\r\n                     (!!this.props.isError) ? \r\n                     <div className=\"aleart_pan\">\r\n                        <div className={`alert_box${(this.props.loginData.message === \"That's not the right password. Sorry!\") ? '' : ' hide'}`}>\r\n                           {/* Sorry, that password isn’t right. We can help you <Link to='/forgot-password'>recover your password.</Link> */}\r\n                           Sorry that email and password combination isn’t right.\r\n                        </div>\r\n                        <div className={`alert_box${(this.props.loginData.message === \"We can't find an account with that email.\") ? '' : ' hide'}`}>\r\n                           {/* Sorry, that email isn’t right. We can help you <Link to='/forgot-password'>recover your email address.</Link> */}\r\n                           Sorry that email and password combination isn’t right.\r\n                        </div>\r\n                        \r\n                     </div> : null\r\n                  }\r\n               </form>\r\n            </div>\r\n            <div className=\"log_right\">\r\n               <img src=\"/assets/Sign-in-bg.svg\" alt=\"login_img\" />\r\n            </div>\r\n         </div>               \r\n      )\r\n   }\r\n}\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport LoginForm from './login';\r\n\r\nconst Login = ({\r\n                      isProcessing,\r\n                      isError,\r\n                      isSuccess,\r\n                      doLogin,\r\n                      loginData\r\n  }) => {\r\n    return (\r\n      <LoginForm\r\n        isProcessing={isProcessing}\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        doLogin={doLogin}\r\n        loginData={loginData}\r\n      />\r\n    )\r\n };\r\n\r\n Login.propTypes   = {\r\n  isProcessing: PT.bool,\r\n  isError: PT.bool,\r\n  isSuccess: PT.bool,\r\n  doLogin:PT.func,\r\n  loginData:PT.object\r\n }\r\n\r\n const  mapStateToProps   = ({loginReducer}) => {\r\n   return ({\r\n      isProcessing: loginReducer.isProcessing,\r\n      isError: loginReducer.isError,\r\n      isSuccess: loginReducer.isSuccess,\r\n      loginData: loginReducer.loginData\r\n    })\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  doLogin: (data) => dispatch(actions.doLogin(data))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));","import React, { Component } from 'react';\r\nimport LoginForm from '../../containers/Login';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <LoginForm/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);;\r\n","//Login\r\nexport const FORGOT_PASSWORD                               =   'FORGOT_PASSWORD';\r\nexport const FORGOT_PASSWORD_SUCCESS                       =   'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_ERROR                         =   'FORGOT_PASSWORD_ERROR';\r\nexport const FORGOT_PASSWORD_RESET                         = 'FORGOT_PASSWORD_RESET';","import {\r\n        FORGOT_PASSWORD,\r\n        FORGOT_PASSWORD_SUCCESS,\r\n        FORGOT_PASSWORD_ERROR,\r\n        FORGOT_PASSWORD_RESET\r\n} from \"./constants\";\r\n\r\nexport const forgotPassword = (data) => ({\r\n  type: FORGOT_PASSWORD,\r\n  data\r\n});\r\n\r\n\r\nexport const forgotPasswordreset = () => ({\r\n\r\ntype: FORGOT_PASSWORD_RESET,\r\n\r\n});\r\n\r\nexport const listenForgotPasswordSuccess = (data) => ({\r\n  type: FORGOT_PASSWORD_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenForgotPasswordError = (data) => ({\r\n  type: FORGOT_PASSWORD_ERROR,\r\n  data\r\n});","import React, { Component } from 'react';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ForgotPasswordForm extends Component{\r\n   static propTypes = {\r\n\t\tisProcessing         :  PT.bool,\r\n\t\tisError              :  PT.bool,\r\n\t\tisSuccess            :  PT.bool,\r\n\t\tforgotPasswordData   :  PT.object,\r\n\t\tforgotPassword       :  PT.func\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tisFetching           :  false,\r\n\t\tisProcessing         :  false,\r\n\t\tisError              :  false,\r\n\t\tisSuccess            :  false,\r\n\t\tstates               :  [],\r\n\t\tforgotPassword       :  () => {}\r\n\t}\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state          =   {\r\n         msg             :   '',\r\n         defaultError:{\r\n            email\t:\tfalse\r\n         },\r\n         isSuccess:null,\r\n      }\r\n      this.handleSubmit          =  this.handleSubmit.bind(this);\r\n   }\r\n    \r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const email         =   this.email.value;\r\n      const data          =   {\r\n                                 email:email\r\n                              }\r\n\r\n    let validate\t=\tthis.validate(data);\r\n   if(!validate.errors.email && e.type==\"submit\")\r\n      this.props.forgotPassword(data);\r\n   }\r\n\r\n\r\n   validate = (data) => {\r\n\t\tlet formData\t=\tdata || {};\r\n\t\tlet errors\t\t=\t{...this.state.defaultError};\r\n\t\tlet isError\t\t=\tfalse;\r\n\t\t\r\n\t\tif(!!!formData.email) {\r\n\t\t\terrors.email=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n      else if(!this.validateEmail(formData.email)) {\r\n         errors.email=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n      else {\r\n         errors.email=\tfalse;\r\n\t\t\tisError\t\t\t\t=\tfalse;\r\n      }\r\n\r\n      console.log(\"errors\",errors);\r\n      this.setState({\r\n         defaultError: errors\r\n      });\r\n\t\treturn {isError: isError, errors: errors};\r\n   }\r\n\r\n   validateEmail =(email) =>{\r\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email));\r\n  }\r\n  componentDidMount() {\r\n       this.props.forgotPasswordreset(); \r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n         console.log(\"recive\",props);\r\n  }\r\n\r\n   render(){\r\n      let errors\t\t=\t{...this.state.defaultError};\r\n      return (\r\n         <div className=\"login_p\">\r\n           \r\n            <div className=\"log_left forgot-l\">               \r\n               {\r\n                     (!!!this.props.isSuccess) ?  \r\n                     <div>\r\n                        <h4>Recover My Password</h4>\r\n                        <p>Enter the email address associated<br /> with your account</p>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                           <div className=\"input-group\">\r\n                              <input className={`t-email ltbox ${(!!errors.email) ? ' error' : ''}`} type=\"text\" ref={(input) => this.email = input} onChange={(e)=>this.handleSubmit(e)}  placeholder=\"Email address\" /*defaultValue=\"admin\"*/ />\r\n                              {(this.props.isError) ? <div className=\"invalid-msg\">{this.props.forgotPasswordData.message}</div> :\"\" }\r\n                           </div>\r\n                           <div className=\"sbtn_pan\">\r\n                              <button className=\"sbtn\" disabled={!!this.props.isProcessing && (!!errors.email)}>{(!!this.props.isProcessing) ? 'Processing....' : 'Recover My Password'}</button>\r\n                           </div>\r\n                        </form>\r\n                     </div> : \r\n                     <div className=\"aftersend\">\r\n                        <h4>Recovery Link Sent!</h4>\r\n                        <p>Click on the link sent to <br /> your email to recover your password</p>\r\n                        <div className=\"sbtn_pan\">\r\n                           <Link className=\"sbtn\" to='/login'>Back to Login</Link>\r\n                        </div>\r\n                     </div>\r\n               }\r\n            </div>\r\n            \r\n            <div className=\"log_right forgot-r\">\r\n               <img src=\"/assets/unlock.svg\" alt=\"login_img\" />\r\n            </div>\r\n         </div>               \r\n      )\r\n   }\r\n}\r\nexport default withRouter(ForgotPasswordForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport ForgotPasswordForm from './forgotPassword';\r\n\r\nconst ForgotPassword = ({\r\n                      isProcessing,\r\n                      isError,\r\n                      isSuccess,\r\n                      forgotPassword,\r\n                      forgotPasswordData,\r\n                      forgotPasswordreset\r\n  }) => {\r\n    return (\r\n      <ForgotPasswordForm\r\n        isProcessing={isProcessing}\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        forgotPassword={forgotPassword}\r\n        forgotPasswordData={forgotPasswordData}\r\n        forgotPasswordreset ={forgotPasswordreset}\r\n      />\r\n    )\r\n };\r\n\r\n ForgotPassword.propTypes   = {\r\n  isProcessing: PT.bool,\r\n  isError: PT.bool,\r\n  isSuccess: PT.bool,\r\n  forgotPassword:PT.func,\r\n  forgotPasswordreset:PT.func,\r\n  forgotPasswordData:PT.object\r\n }\r\n\r\n const  mapStateToProps   = ({forgotPasswordReducer}) => {\r\n   return ({\r\n      isProcessing: forgotPasswordReducer.isProcessing,\r\n      isError: forgotPasswordReducer.isError,\r\n      isSuccess: forgotPasswordReducer.isSuccess,\r\n      forgotPasswordData: forgotPasswordReducer.forgotPasswordData\r\n    })\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  forgotPassword: (data) => dispatch(actions.forgotPassword(data)),\r\n  forgotPasswordreset: () => dispatch(actions.forgotPasswordreset())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ForgotPassword));","import React, { Component } from 'react';\r\nimport ForgotPasswordForm from '../../containers/ForgotPassword';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ForgotPassword extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ForgotPasswordForm/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ForgotPassword);;\r\n","//Login\r\nexport const RESET_PASSWORD                               =   'RESET_PASSWORD';\r\nexport const RESET_PASSWORD_SUCCESS                       =   'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_ERROR                         =   'RESET_PASSWORD_ERROR';\r\nexport const RESET_PASSWORD_NOTMATCH                         =   'RESET_PASSWORD_NOTMATCH';","import {\r\n        RESET_PASSWORD,\r\n        RESET_PASSWORD_SUCCESS,\r\n        RESET_PASSWORD_ERROR,\r\n        RESET_PASSWORD_NOTMATCH\r\n} from \"./constants\";\r\n\r\nexport const resetPassword = (data) => ({\r\n  type: RESET_PASSWORD,\r\n  data\r\n});\r\n\r\nexport const listenresetPasswordSuccess = (data) => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenresetPasswordError = (data) => ({\r\n  type: RESET_PASSWORD_ERROR,\r\n  data\r\n});\r\nexport const passwordnotmatch = (data) => ({\r\n  type: RESET_PASSWORD_NOTMATCH,\r\n  data\r\n});","import React, { Component } from 'react';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RsetpasswordForm extends Component{\r\n   static propTypes = {\r\n\t\tisProcessing         :  PT.bool,\r\n\t\tisError              :  PT.bool,\r\n\t\tisSuccess            :  PT.bool,\r\n\t\tforgotPasswordData   :  PT.object,\r\n\t\tforgotPassword       :  PT.func\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tisFetching           :  false,\r\n\t\tisProcessing         :  false,\r\n\t\tisError              :  false,\r\n\t\tisSuccess            :  false,\r\n\t\tstates               :  [],\r\n\t\tforgotPassword       :  () => {}\r\n\t}\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state          =   {\r\n         msg             :   '',\r\n         key             :\"\",\r\n         match           : false,\r\n         defaultError:{\r\n            password\t:\tfalse,\r\n            Confirmpass\t:\tfalse\r\n         }\r\n      }\r\n      this.handleSubmit          =  this.handleSubmit.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      console.log(this.props);\r\n     this.setState({\r\n      key: window.location.href.split('/').slice(-2)[1]\r\n     });\r\n     \r\n   }\r\n    \r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n     \r\n      if(this.password.value != this.confirmpassword.value && e.type==\"submit\" ) {\r\n       \r\n            this.props.passwordnotmatch();\r\n            return;\r\n            \r\n      }\r\n      const password         =   this.password.value;\r\n      const confirmpassword         =   this.confirmpassword.value;\r\n      const  key             =     this.state.key;\r\n      const data          =   {\r\n                                password,\r\n                                key\r\n                              }\r\n          if(!this.validate({password,confirmpassword}).errors.password && !this.validate({password,confirmpassword}).errors.Confirmpass && e.type==\"submit\"  )\r\n      this.props.resetPassword(data);\r\n   }\r\n\r\n   validate = (data) => {\r\n\t\tlet formData\t=\tdata || {};\r\n\t\tlet errors\t\t=\t{...this.state.defaultError};\r\n\t\tlet isError\t\t=\tfalse;\r\n\t\tif(!!!formData.password) {\r\n\t\t\terrors.password\t\t=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      } \r\n    \r\n      else {\r\n         errors.password\t\t=\tfalse;\r\n\t\t\tisError\t\t\t\t=\tfalse;\r\n      }\r\n\r\n\t\tif(!!!formData.confirmpassword) {\r\n\t\t\terrors.Confirmpass=\ttrue;\r\n\t\t\tisError\t\t\t\t=\ttrue;\r\n      }\r\n     \r\n      else {\r\n         errors.Confirmpass=\tfalse;\r\n\t\t\tisError\t\t\t\t=\tfalse;\r\n      }\r\n\r\n      console.log(\"errors\",errors);\r\n      this.setState({\r\n         defaultError: errors\r\n      });\r\n\t\treturn {isError: isError, errors: errors};\r\n   }\r\n\r\n   componentWillReceiveProps (props) {\r\n      console.log(\"recive\",props);\r\n   }\r\n\r\n   render(){\r\n      let errors\t\t=\t{...this.state.defaultError};\r\n      return (\r\n         <div className=\"login_p\">\r\n            <div className=\"log_left forgot-l\">               \r\n               {\r\n                     (!!!this.props.isSuccess) ?  \r\n                     <div>\r\n                        <h4>Reset Password</h4>\r\n                        <p>Set your new password for your account</p>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                           <div className=\"input-group\">\r\n                              <input className={`t-pass ltbox ${(!!errors.password) ? ' error' : ''}`}type=\"password\" ref={(input) => this.password = input} onChange={(e)=>this.handleSubmit(e)} placeholder=\"New password\" /*defaultValue=\"admin\"*/ />\r\n                           </div>\r\n                           <div className=\"input-group\">\r\n                              <input className={`t-pass ltbox ${(!!errors.Confirmpass) ? ' error' : ''}`} type=\"password\" ref={(input) => this.confirmpassword = input} onChange={(e)=>this.handleSubmit(e)} placeholder=\"Confirm password\" /*defaultValue=\"admin\"*/ />\r\n                           </div>\r\n                           <div className=\"sbtn_pan\">\r\n                              <button className=\"sbtn\" disabled={!!this.props.isProcessing}>{(!!this.props.isProcessing) ? 'Processing....' : 'Reset My Password'}</button>\r\n                           </div>\r\n                           {this.props.isError ?  <div className=\"aleart_pan\">\r\n                                \r\n                                <div className=\"alert_box\">\r\n                              {this.props.errMassage}\r\n                                </div>\r\n                                {/* <div className={`alert_box${(this.props.loginData.message === \"We can't find an account with that email.\") ? '' : ' hide'}`}>\r\n                                Sorry, that email isn’t right. We can help you <Link to='/forgot-password'>recover your email address.</Link>\r\n                                </div> */}\r\n  \r\n                                </div> :\"\" }\r\n                             \r\n                             \r\n                        </form>\r\n                     </div> : \r\n                     <div className=\"aftersend\">\r\n                        <h4>Password successfully changed!</h4>\r\n                        <div className=\"sbtn_pan\">\r\n                           <Link className=\"sbtn\" to='/login'>Back to Login</Link>\r\n                        </div>\r\n                     </div>\r\n               }\r\n            </div>\r\n            <div className=\"log_right forgot-r\">\r\n               <img src=\"/assets/unlock.svg\" alt=\"login_img\" />\r\n            </div>\r\n         </div>               \r\n      )\r\n   }\r\n}\r\nexport default withRouter(RsetpasswordForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport RsetpasswordForm from './resetPassword';\r\n\r\nconst ResetPassword = ({\r\n                      isProcessing,\r\n                      isError,\r\n                      isSuccess,\r\n                      resetPassword,\r\n                      passwordnotmatch,\r\n                      resetPasswordData,\r\n                      errMassage\r\n  }) => {\r\n    return (\r\n      <RsetpasswordForm\r\n        isProcessing={isProcessing}\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        resetPassword={resetPassword}\r\n        passwordnotmatch = {passwordnotmatch}\r\n        resetPasswordData={resetPasswordData}\r\n        errMassage = {errMassage}\r\n      />\r\n    )\r\n };\r\n\r\n ResetPassword.propTypes   = {\r\n  isProcessing: PT.bool,\r\n  isError: PT.bool,\r\n  isSuccess: PT.bool,\r\n  resetPassword:PT.func,\r\n  passwordnotmatch:PT.func,\r\n  resetPasswordData:PT.object,\r\n  errMassage: PT.string\r\n }\r\n\r\n const  mapStateToProps   = ({resetPasswordReducer}) => {\r\n   console.log(resetPasswordReducer);\r\n   return ({\r\n      isProcessing: resetPasswordReducer.isProcessing,\r\n      isError: resetPasswordReducer.isError,\r\n      isSuccess: resetPasswordReducer.isSuccess,\r\n      forgotPasswordData: resetPasswordReducer.resetPasswordData,\r\n      errMassage: resetPasswordReducer.errMassage\r\n    })\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetPassword: (data) => dispatch(actions.resetPassword(data)),\r\n  passwordnotmatch: () =>  dispatch(actions.passwordnotmatch())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ResetPassword));","import React, { Component } from 'react';\r\nimport ResetPassword from '../../containers/ResetPassword';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ForgotPassword extends Component {\r\n\r\ncomponentDidMount(){\r\n  console.log(this.props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ResetPassword/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ResetPassword);\r\n","import React, { Component } from 'react';\r\n//import HomeContainer from '../../containers/Home';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {isEmpty} from 'lodash';\r\nimport {get as getDomainCookie, getCookie, setCookie} from '../../util/cookies';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {   \r\n    let user          = {};\r\n    let currentCookie = getCookie('foodjets_merchant') || {};\r\n    user              = currentCookie || {};\r\n    if(!isEmpty(user)) {\r\n      window.location.href='/dashboard';\r\n    } else {\r\n        window.location.href='/login';\r\n    }\r\n    /* if(typeof window !== 'undefined') {\r\n       let user    =  localStorage.getItem('user');\r\n       if(!_.isEmpty(user)) {\r\n          window.location.href='/dashboard';\r\n       } else {\r\n          window.location.href='/login';\r\n       }\r\n    } */\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        Loading....\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);;\r\n","import React, { Component } from 'react';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\nimport {removeCookie, remove as removeDomainCookie} from '../../util/cookies';\r\nimport {\r\n   Row,\r\n   Container,\r\n   Col\r\n} from 'reactstrap';\r\n\r\nclass HeaderContainer extends Component{\r\n   static propTypes = {\r\n\t\tisFetching           :  PT.bool,\r\n\t\tisProcessing         :  PT.bool,\r\n\t\tisError              :  PT.bool,\r\n\t\tisSuccess            :  PT.bool,\r\n\t\tsettingsData         :  PT.object,\r\n\t\tgetSettings          :  PT.func,\r\n\t\tauthenticateData     :  PT.object,\r\n\t\tauthenticate         :  PT.func,\r\n\t\tuserData             :  PT.object\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tisFetching           :  false,\r\n\t\tisProcessing         :  false,\r\n\t\tisError              :  false,\r\n\t\tisSuccess            :  false,\r\n      settingsData         :  {},\r\n      userType             :  '',\r\n      authenticateData     :  {},\r\n      userData             :  {},\r\n\t\tgetSettings          :  () => {}\r\n\t}\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state          =   {\r\n         userData       :  this.props.userData,\r\n         loginHeader : false,\r\n      }\r\n   }\r\n\r\n   componentWillMount(){\r\n      //console.log('Header Will Mount : ', this.props);\r\n      let currentPage      =  this.props.currentPage || '';\r\n      let userData         =  this.state.userData || {};\r\n      //console.log('Header User : ', userData);\r\n      if(!isEmpty(userData)) {\r\n         document.title    =  `${userData.org_name} Dashboard`;\r\n      }\r\n      if(!isEmpty(userData)  && currentPage !== '/forgot-password' && currentPage !== '/login') {\r\n         this.props.authenticate({token: userData.token});\r\n      }\r\n      if(currentPage !== '/' && currentPage !== '/forgot-password' && currentPage !== '/login'){\r\n         this.props.getSettings();\r\n         this.setState({\r\n            loginHeader:true\r\n         })\r\n      }\r\n   }\r\n\r\n   /* componentDidMount() {   \r\n      //console.log('Header Did Mount', this.props);\r\n      let currentPage      =  this.props.currentPage || '';\r\n      let userData         =  this.state.userData || {};\r\n      //console.log('Header User : ', userData);\r\n      if(!isEmpty(userData)) {\r\n         document.title    =  `${userData.org_name} Dashboard`;\r\n      }\r\n      if(!isEmpty(userData)  && currentPage !== '/forgot-password' && currentPage !== '/login') {\r\n         this.props.authenticate({token: userData.token});\r\n      }\r\n      if(currentPage !== '/' && currentPage !== '/forgot-password' && currentPage !== '/login'){\r\n         this.props.getSettings();\r\n         this.setState({\r\n            loginHeader:true\r\n         })\r\n      }   \r\n   } */\r\n\r\n   componentWillReceiveProps(props){\r\n      //console.log('Header Props : ', props);\r\n      if((!isEmpty(props.authenticateData) && props.authenticateData.status === false) || !!props.isAuthenticateError){\r\n         localStorage.removeItem('user');\r\n         localStorage.removeItem('states');\r\n        // removeCookie('foodjets_merchant');\r\n         removeDomainCookie();\r\n         removeCookie('foodjets_merchant');\r\n         window.location.href='/login';\r\n      }\r\n   }\r\n   \r\n\r\n   render(){\r\n      let userData      =  this.state.userData || {};\r\n      let currentPage   =  this.props.currentPage || '';\r\n      let fullname      =  '';\r\n      if(currentPage !== '/' && currentPage !== '/forgot-password' && currentPage !== '/login') {\r\n         if(this.props.userType === 'admin')\r\n            fullname       =  'Admin View';\r\n         if(this.props.userType === 'general')\r\n            fullname       =  'General View';\r\n         if(this.props.userType === 'pharmacy')\r\n            fullname       =  'Pharmacy View';\r\n\r\n            \r\n            \r\n      }\r\n      return (           \r\n         <header className={this.state.loginHeader?'':'logHeader'}>\r\n            <Container fluid className=\"p-0\">\r\n               <Row noGutters>\r\n                  <Col xs=\"6\" md=\"8\" sm=\"6\" className=\"text-left h_left\">\r\n                  {\r\n                     (!!this.state.loginHeader) ?\r\n                        (!!this.props.logo && !!this.props.logo.image) ? \r\n                        <img src={`${this.props.logo.path}${this.props.logo.image}`}  className=\"Dash_logo\" alt=\"Logo\" />\r\n                        :<img src=\"/assets/m_logo.svg\" className=\"login_logo\" alt=\"Logo\" />\r\n                     : <img src=\"/assets/foodjets.svg\" className=\"login_logo\" alt=\"Logo\" />\r\n                  }\r\n                     {/* <img src=\"/assets/f-logo.svg\" className=\"f_logo\" alt=\"Logo\" /> */}\r\n                  </Col>\r\n                  <Col xs=\"6\" md=\"4\" sm=\"6\" className=\"h_right text-right\">\r\n                     {fullname} \r\n                  </Col>\r\n               </Row>\r\n            </Container>\r\n         </header>\r\n      )\r\n   }\r\n}\r\nexport default withRouter(HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport HeaderContainer from './header';\r\n\r\nconst Header = ({\r\n                      isProcessing,\r\n                      isError,\r\n                      isSuccess,\r\n                      isAuthenticateError,\r\n                      getSettings,\r\n                      settingsData,\r\n                      userType,\r\n                      authenticate,\r\n                      authenticateData,\r\n                      userData,\r\n                      currentPage,\r\n                      logo\r\n  }) => {\r\n    return (\r\n      <HeaderContainer\r\n        isProcessing={isProcessing}\r\n        isError={isError}\r\n        isSuccess={isSuccess}\r\n        isAuthenticateError={isAuthenticateError}\r\n        getSettings={getSettings}\r\n        settingsData={settingsData}\r\n        userType={userType}\r\n        authenticate={authenticate}\r\n        authenticateData={authenticateData}\r\n        userData={userData}\r\n        currentPage={currentPage}\r\n        logo={logo}\r\n      />\r\n    )\r\n };\r\n\r\n Header.propTypes   = {\r\n  isProcessing: PT.bool,\r\n  isError: PT.bool,\r\n  isSuccess: PT.bool,\r\n  isAuthenticateError: PT.bool,\r\n  getSettings:PT.func,\r\n  settingsData:PT.object,\r\n  userType:PT.string,\r\n  authenticate:PT.func,\r\n  authenticateData:PT.object,\r\n  userData:PT.object,\r\n  logo:PT.object,\r\n  currentPage:PT.string\r\n }\r\n\r\n const  mapStateToProps   = ({headerReducer}, ownProps) => {\r\n   return ({\r\n      isProcessing: headerReducer.isProcessing,\r\n      isError: headerReducer.isError,\r\n      isSuccess: headerReducer.isSuccess,\r\n      isAuthenticateError: headerReducer.isAuthenticateError,\r\n      settingsData: headerReducer.settingsData,\r\n      logo: headerReducer.logo,\r\n      userType: headerReducer.userType,\r\n      authenticateData: headerReducer.authenticateData,\r\n      userData: ownProps.userData,\r\n      currentPage: ownProps.currentPage\r\n    })\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSettings: (data) => dispatch(actions.getSettings(data)),\r\n  authenticate: (data) => dispatch(actions.authenticate(data))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React, { Component } from 'react';\r\nimport HeaderContainer from '../../../containers/Header';\r\n\r\n\r\nclass Header extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return ( \r\n            <HeaderContainer userData={this.props.user} currentPage={this.props.currentPage}/>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass toastModal extends Component {\r\n \tconstructor(props) {\r\n        super(props);\r\n        this.state = {        \t\r\n\t\t\ttoastModalShow: true,\r\n        }\r\n    };\r\n    handleCloseModal(){\r\n\t\tthis.setState({ toastModalShow: false });\r\n\t};\r\n\tcomponentWillReceiveProps(props) {\r\n        this.setState({ toastModalShow: props.toastModalShow });\r\n    }; \r\n\r\n\trender() {\r\n\t\tconst { toastModalShow } = this.state;\r\n        let taskDetails = this.props.taskDetails || {};\r\n\r\n        console.log('taskDetails', taskDetails);\r\n\r\n\t\treturn (\r\n\t\t\t<Modal size=\"sm\" className=\"tost-modal\" show={toastModalShow} onHide={this.props.handleCloseModal}>\r\n\t            <Modal.Body>\r\n                    <Row noGutters>\r\n                        <Col md=\"12\" sm=\"12\" className=\"\">\r\n                            <h4>Welcome to a Fresh, Simpler Dashboard</h4>\r\n                            <p>We’re still working on making the experience the best it can be for you so we would love to hear your feedback.</p>\r\n                            <ul>\r\n                                <li><img src=\"/assets/sun_ico.svg\" alt=\"ico\" /> New light theme for easier navigation</li>\r\n                                <li><img src=\"/assets/customers_ico.svg\" alt=\"ico\" /> Revamped Feedback page with option to respond to customers</li>\r\n                                <li><img src=\"/assets/tostsearch_ico.svg\" alt=\"ico\" /> Improved search functionality to find what you need faster</li>\r\n                            </ul>\r\n                        </Col>    \r\n                    </Row>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type=\"submit\" className=\"sbtn\" variant=\"primary\" onClick={(e)  => this.handleCloseModal()}>\r\n                        Start\r\n                    </Button>\r\n\t\t\t\t</Modal.Footer>\t\r\n\t        </Modal>\r\n\t\t)\r\n\t};\r\n};\r\n\r\nexport default toastModal;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ToastModal from '../../../containers/Modals/toastModal';\r\nimport Config from '../../../config';\r\nimport { connect } from 'react-redux';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport {removeCookie, remove as removeDomainCookie} from '../../../util/cookies';\r\n\r\nclass Sidebar extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state              =   {\r\n            userData: {},\r\n            toastModalShow: false\r\n        }\r\n    }\r\n\r\n    handleCloseModal = () =>{\r\n         this.setState({ toastModalShow: false });\r\n     };\r\n\r\n     handleOpenModal = () => {\r\n        this.setState({ toastModalShow: true });\r\n     }\r\n\r\n    handlecollapse(i) {\r\n        let element = document.querySelector(\".section_wrap\");\r\n        element.classList.toggle(\"close-pan\");\r\n    }\r\n    componentDidMount(){\r\n        var w = window.innerWidth;\r\n        if(w<1025){\r\n            let element = document.querySelector(\".section_wrap\");\r\n            element.classList.add(\"close-pan\"); \r\n        }\r\n    }\r\n    handleLogout() {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('states');\r\n        removeCookie('foodjets_merchant');\r\n        removeDomainCookie();\r\n        window.location.href    =   '/login';\r\n    }\r\n    \r\n    render() {\r\n        const { toastModalShow} = this.state;\r\n        const {userData, userType, currentPage } = this.props;\r\n        return ( \r\n            <aside id=\"sideBar\" className=\"left_nav\">\r\n                <span className=\"colaps\" onClick={() => this.handlecollapse()}></span>\r\n                <div className=\"navaria\">\r\n                <div className=\"t_menu\">\r\n                \r\n                <div className=\"user_sec\">\r\n                    {/* <figure><img src=\"/assets/user.jpg\" alt=\"\" /></figure> */}\r\n                    <div className=\"user-name\">\r\n                        Hello<span>{userData.first_name} {userData.last_name}</span>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav\">\r\n                    <li className={(currentPage === '/dashboard') ? 'active' : ''}><Link to=\"/dashboard\"><img src=\"/assets/Dashboard.svg\" /> Live Dashboard</Link></li>\r\n                    <li className={(currentPage === '/task-history') ? 'active' : ''}><Link to=\"/task-history\"><img src=\"/assets/Tasks.svg\" /> All Tasks</Link></li>\r\n                    <li className={(currentPage === '/feedback') ? 'active' : ''}><Link to=\"/feedback\"><img src=\"/assets/Feedback.svg\"/> Feedback</Link></li>\r\n                    {\r\n                        (!!this.props.showReport && this.props.showReport === 'true')?\r\n                        <li className={(currentPage === '/reports') ? 'active' : ''}><Link to=\"/reports\"><img src=\"/assets/Stats.svg\" /> Reports</Link></li>:null\r\n                    }\r\n\r\n                    <li className={(currentPage === '/settings') ? 'active' : ''}><Link to=\"/settings\"><img src=\"/assets/settings.svg\" />  Settings</Link></li>\r\n                    {/* <li className=\"\"><a onClick={this.handleOpenModal}><img src=\"/assets/settings.svg\" />  New Version</a></li> */}\r\n                </ul>\r\n                </div>\r\n                <div className=\"b_menu\">\r\n                    {/* <a href={Config.cookie.hostname} className=\"ex-link\">Switch To Older Version</a> */}\r\n                    <a onClick={this.handleLogout} className=\"logout-btn\">Sign Out</a>\r\n                    <div className=\"poweredby\">\r\n                        <span>Powered by</span>\r\n                        <img src=\"/assets/foodjets.svg\" />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    (!!toastModalShow) ?\r\n                    <ToastModal toastModalShow={toastModalShow} handleCloseModal={this.handleCloseModal} /> : null\r\n                } \r\n                </div>\r\n                <div className=\"nav_bg\" onClick={() => this.handlecollapse()}></div>\r\n            </aside>\r\n        )\r\n    }\r\n};\r\n\r\nconst loadHeaderData = ({ userData, userType, currentPage, showReport }) => {\r\n    return (\r\n        <Sidebar userData={userData} userType={userType} currentPage={currentPage} showReport={showReport}/>\r\n    );\r\n};\r\n\r\nloadHeaderData.propTypes = {\r\n    userData: PT.object,\r\n    userType: PT.string,\r\n    currentPage: PT.string,\r\n    showReport: PT.string\r\n};\r\n\r\nconst mapStateToProps = ({ headerReducer }, ownProps) => {\r\n    return {\r\n        userData: ownProps.user,\r\n        currentPage: ownProps.currentPage,\r\n        userType: headerReducer.userType,\r\n        showReport: headerReducer.showReport\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(loadHeaderData);","//History\r\nexport const GET_HISTORY                        =   'GET_HISTORY';\r\nexport const GET_HISTORY_SUCCESS                =   'GET_HISTORY_SUCCESS';\r\nexport const GET_HISTORY_ERROR                  =   'GET_HISTORY_ERROR';\r\n\r\n//Export CSV\r\nexport const EXPORT_CSV_TASK_HISTORY            =   'EXPORT_CSV_TASK_HISTORY';\r\nexport const EXPORT_CSV_TASK_HISTORY_SUCCESS    =   'EXPORT_CSV_TASK_HISTORY_SUCCESS';\r\nexport const EXPORT_CSV_TASK_HISTORY_ERROR      =   'EXPORT_CSV_TASK_HISTORY_ERROR';","import {\r\n  GET_HISTORY,\r\n  GET_HISTORY_SUCCESS,\r\n  GET_HISTORY_ERROR,\r\n\r\n  EXPORT_CSV_TASK_HISTORY,\r\n  EXPORT_CSV_TASK_HISTORY_SUCCESS,\r\n  EXPORT_CSV_TASK_HISTORY_ERROR\r\n} from \"./constants\";\r\n\r\nexport const getHistory = (data) => {\r\n  return ({\r\n    type: GET_HISTORY,\r\n    data\r\n  });\r\n}\r\n\r\nexport const listenHistorySuccess = (data) => ({\r\n  type: GET_HISTORY_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenHistoryError = (data) => ({\r\n  type: GET_HISTORY_ERROR,\r\n  data\r\n});\r\n\r\nexport const exportTaskCsv = (data) => {\r\n  //console.log('Actions : ', data);\r\n  return ({\r\n    type: EXPORT_CSV_TASK_HISTORY,\r\n    data\r\n  });\r\n}\r\n\r\nexport const listenExportTaskCsvSuccess = (data) => ({\r\n  type: EXPORT_CSV_TASK_HISTORY_SUCCESS,\r\n  data\r\n});\r\n\r\nexport const listenExportTaskCsvError = (data) => ({\r\n  type: EXPORT_CSV_TASK_HISTORY_ERROR,\r\n  data\r\n});","import React, { Component } from 'react';\r\nimport { Form } from 'reactstrap';\r\nimport moment from 'moment-timezone';\r\nimport CustomFilter from '../Dashboard/customFilter';\r\nimport EditTask from '../Modals/editTaskModal';\r\nimport TaskDetails from '../Modals/taskDetailsModal';\r\nimport MapDetails from '../Modals/mapDetailsModal';\r\nimport TrackDetails from '../Modals/trackDetailsModal';\r\nimport Calendar from '../../components/Calendar/calendar';\r\nimport StateFilter from '../Filter/stateFilter';\r\nimport AreaFilter from '../Filter/areaFilter';\r\nimport StoreFilter from '../Filter/storeFilter';\r\nimport {error as notifyerror} from '../../util/notify';\r\nimport {sortBy as _sortBy, isEmpty, remove as _remove} from 'lodash';\r\nimport {setFilter, getFilter, clearFilter} from '../../Helper/common';\r\n\r\nclass Filter extends Component{\r\n   constructor(props) {\r\n      super(props);\r\n      this.state     =   {\r\n         startDate   :   new Date(),\r\n         from        :  undefined,\r\n         to          :  undefined,         \r\n         editShow        :   false,\r\n         detailsShow     :   false,\r\n         mapShow         :   false,\r\n         trackShow       :   false,\r\n         visible         :   false,\r\n         show                 :  false,\r\n         selectedState        :  null,\r\n         selectedArea         :  null,\r\n         selectedStore        :  null,\r\n         filterKeys           :  {State:[], Area: [], Store: []},\r\n         storeTxt: '',\r\n         stOpen: false,\r\n         showSearch: false,\r\n         showFilter: false,\r\n         filteredList: {},\r\n         startDate      :  moment().subtract(1, 'months').format('YYYY-MM-DD'),\r\n         endDate        :  moment().format('YYYY-MM-DD'),\r\n         pageno         :  1,\r\n         noofdays       :  '',\r\n         type           :  ''\r\n\r\n      }\r\n      \r\n      this.handleChange       =  this.handleChange.bind(this);\r\n      this.handleFromChange   =  this.handleFromChange.bind(this);\r\n      this.handleToChange     =  this.handleToChange.bind(this);\r\n      this.timings                  =  [];\r\n      this.handleExportTaskCsv      =  this.handleExportTaskCsv.bind(this);\r\n      this.handleSearchClose        =  this.handleSearchClose.bind(this);\r\n      this.handleRemoveFilter       =  this.handleRemoveFilter.bind(this);\r\n      this.onChangeHandle           =  this.onChangeHandle.bind(this);\r\n      this.toggleCustomSearch       =  this.toggleCustomSearch.bind(this);\r\n      this.toggleResFilter          =  this.toggleResFilter.bind(this);\r\n      this.openEditWindow             =   this.openEditWindow.bind(this);\r\n      this.openDetailsWindow          =   this.openDetailsWindow.bind(this);\r\n      this.openMapWindow              =   this.openMapWindow.bind(this);\r\n      this.openTrackWindow            =   this.openTrackWindow.bind(this);\r\n      this.deleteTask                 =   this.deleteTask.bind(this);\r\n      this.updateTask                 =   this.updateTask.bind(this);\r\n      this.handleClose                =   this.handleClose.bind(this);\r\n   }\r\n\r\n   onSelectStartDate = (date) => {\r\n      let startDate        =  moment(date).format('X');      \r\n      let endDate          =  moment(this.state.endDate).format('X');\r\n      //console.log(startDate, endDate, startDate > endDate);\r\n      if(startDate > endDate){\r\n         notifyerror({message: 'Start date should be lower than end date'});\r\n         return false;\r\n      }\r\n      this.setState({\r\n         startDate   :  date\r\n      }, () => {\r\n         this.handleGetHistory();\r\n      })\r\n   }\r\n\r\n   onSelectEndDate = (date) => {\r\n      let startDate        =  moment(this.state.startDate).format('X');      \r\n      let endDate          =  moment(date).format('X');\r\n      //console.log(startDate, endDate, endDate < startDate);\r\n      if(!!!this.state.startDate) {\r\n         notifyerror({message: 'Please select start date first'});\r\n         return false;\r\n      }\r\n      if(endDate < startDate){\r\n         notifyerror({message: 'End date should be greater than start date'});\r\n         return false;\r\n      }\r\n      this.setState({\r\n         endDate   :  date\r\n      }, () => {\r\n         this.handleGetHistory();\r\n      })\r\n\r\n   }\r\n\r\n   onDateRange = (date) => {\r\n      this.setState({\r\n         startDate   :  date.startDate,\r\n         endDate     :  date.endDate,\r\n         noofdays    :  date.noofdays\r\n      }, () => {\r\n         this.handleGetHistory();\r\n      })\r\n   }\r\n\r\n   handleGetHistory() {\r\n      let filterKeys       =  this.state.filterKeys || {};\r\n      let value_one        =  '';\r\n      let value_two        =  '';\r\n      let storeName        =  {};\r\n\r\n      if(filterKeys.Store.length === 0 && filterKeys.Area.length === 0 && filterKeys.State.length > 0) {\r\n         let states           =  (filterKeys.State || []).map(item => item.value);\r\n         if(states.length > 0){\r\n            value_one         =  'state';\r\n            value_two         =  states;\r\n         }\r\n      }\r\n\r\n      if(filterKeys.Store.length === 0 && filterKeys.Area.length > 0) {         \r\n         let zones           =  [];\r\n         (filterKeys.Area || []).map((item) => {\r\n            if(!!zones[item.state]){\r\n               zones[item.state].zone_id.push(item.id)\r\n            } else {\r\n               zones.push({\r\n                  state: item.state,\r\n                  zone_id : [item.id]\r\n               })\r\n            }\r\n         });\r\n\r\n         //console.log('Zones : ', zones);\r\n         if(zones.length > 0){\r\n            value_one         =  'zone';\r\n            value_two         =  zones;  \r\n         }\r\n      }\r\n\r\n      if(filterKeys.Store.length > 0) {\r\n         let store            =  [];\r\n         (filterKeys.Store || []).forEach(item => {\r\n            store.push(item.store_id.toString());\r\n            storeName[item.store_id]   = item.label;\r\n         })\r\n         if(store.length > 0){\r\n            value_one         =  'store-id';\r\n            value_two         =  store;\r\n         }\r\n      }\r\n\r\n      let startDate           =  this.state.startDate;\r\n      let endDate             =  this.state.endDate;\r\n      if(!!startDate && !!endDate) {\r\n         startDate            =  startDate;\r\n         endDate            =  endDate;\r\n      } else {\r\n         if(!!!startDate && !!!endDate) {\r\n            startDate            =  moment().subtract(1, 'months').format('YYYY-MM-DD');\r\n            endDate            =  moment().format('YYYY-MM-DD');\r\n         }\r\n         if(!!startDate && !!!endDate) {\r\n            startDate         =  startDate;\r\n            endDate         =  startDate;\r\n         }\r\n         if(!!endDate && !!!startDate) {\r\n            startDate         =  endDate;\r\n            endDate         =  endDate;\r\n         }\r\n         this.setState({\r\n            startDate      :  value_one,\r\n            endDate        :  value_two\r\n         })\r\n      }\r\n\r\n      let data             =  {\r\n         start       :  startDate,\r\n         end         :  endDate,\r\n         value_one   :  (!!value_one) ? value_one : 'date',\r\n         value_two   :  value_two,\r\n         pageno      :  1,\r\n         type        :  this.state.type\r\n      }\r\n      if(value_one === 'store-id') {\r\n         data.storeName    =  storeName;\r\n      }\r\n      //console.log('Parent Props : ', this.state.type, this.props.filterData);\r\n      this.props.getHistory(data, {\r\n         user_type   :  this.props.userType,\r\n         type        :  this.state.type,\r\n         startDate   :  startDate,\r\n         endDate     :  endDate,\r\n         filterKeys  :  filterKeys,\r\n         pageno      :  1\r\n      });\r\n   }\r\n\r\n   handleStateChange = (e, selectedState) => {\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {};\r\n      let selIndex            =  filterKeys.State.findIndex((item) => {\r\n         return item.value === selectedState.value;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.State.push({\r\n            label    :  selectedState.label,\r\n            value    :  selectedState.value\r\n         })\r\n      }\r\n      filterKeys.State     =  _sortBy(filterKeys.State, 'value');\r\n      this.setState({\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n            this.handleGetHistory();\r\n      });\r\n   }\r\n\r\n   handleAreaChange           =  (e, selectedArea) => {\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {};\r\n      let selIndex            =  filterKeys.Area.findIndex((item) => {\r\n         return item.value === selectedArea.delivery_zone_name;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.Area.push({\r\n            label    :  `${selectedArea.delivery_zone_name} (${selectedArea.state})`,\r\n            value    :  selectedArea.delivery_zone_name,\r\n            state    :  selectedArea.state,\r\n            id       :  selectedArea.id\r\n         })\r\n      }\r\n      filterKeys.Area     =  _sortBy(filterKeys.Area, 'value');\r\n      this.setState({\r\n         //selectedArea,\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n            this.handleGetHistory();\r\n      });\r\n   };\r\n   \r\n   handleStoreChange          =  (e, selectedStore) => {\r\n      e.stopPropagation();\r\n      let filterKeys          =  this.state.filterKeys || {}; \r\n      let selIndex            =  filterKeys.Store.findIndex((item) => {\r\n         return item.value === selectedStore.label;\r\n      })\r\n      if(selIndex === -1) {\r\n         filterKeys.Store.push({\r\n            store_id :  selectedStore.data.store_id,\r\n            id       :  selectedStore.data.id,\r\n            label    :  selectedStore.label,\r\n            value    :  selectedStore.label,\r\n         })\r\n      }\r\n      filterKeys.Store     =  _sortBy(filterKeys.Store, 'value');\r\n      this.setState({\r\n         //selectedStore,\r\n         filterKeys: filterKeys\r\n      }, () => {\r\n            this.handleGetHistory();\r\n      });\r\n   };\r\n\r\n   openEditWindow(uuid, mrchnt_address, recpnt_address){\r\n      this.props.getTaskDetails({uuid: uuid})\r\n      this.setState({\r\n         editShow        :   true,\r\n         mrchnt_address  :   mrchnt_address,\r\n         recpnt_address  :   recpnt_address\r\n      })\r\n   }\r\n\r\n   openDetailsWindow(uuid){\r\n      this.props.getTaskDetails({uuid: uuid})\r\n      this.setState({\r\n         detailsShow: true\r\n      })\r\n   }    \r\n\r\n   openMapWindow(uuid){\r\n      this.props.getTaskDetails({uuid: uuid});\r\n      this.setState({\r\n         mapShow: true\r\n      })\r\n   }\r\n \r\n   openTrackWindow(e, data){\r\n      e.stopPropagation();\r\n      this.setState({\r\n         trackShow: true,\r\n         currentUrl: data.current_url,\r\n         trackDriver: data.track_driver\r\n      })\r\n   }\r\n\r\n   updateTask(uuid, status){\r\n      if(window.confirm('Do you really want to update status of this task?')) {\r\n         this.props.updateTaskStatus({uuid: uuid, status: status});\r\n      }\r\n   }\r\n\r\n   deleteTask(uuid){\r\n      if(window.confirm('Do you really want to delete this task?')) {\r\n         this.props.deleteTask({uuid: uuid});\r\n      }\r\n   }\r\n   \r\n   handleClose(){\r\n      //console.log('Handle Close');\r\n         this.setState({\r\n            visible     :  false,\r\n            show        :  false,\r\n            editShow    :  false,            \r\n            mapShow     :  false,\r\n            detailsShow :  false,\r\n            trackShow   :  false\r\n         })\r\n   }\r\n\r\n   toggleCustomSearch() {\r\n      this.setState({\r\n         showFilter  :  false,\r\n         showSearch  :  !this.state.showSearch,\r\n         sOpen       :  false,\r\n         aOpen       :  false,\r\n         stOpen      :  false\r\n\r\n      })\r\n   }\r\n\r\n   toggleResFilter() {\r\n      this.setState({\r\n         showSearch:false,\r\n         showFilter: !this.state.showFilter\r\n      })\r\n   }\r\n   \r\n   handleExportTaskCsv() {\r\n      this.props.exportTaskCsv(this.props.filterData);\r\n   };\r\n\r\n   handleSearchClose() {\r\n      this.setState({\r\n         show: false\r\n      }, function (){\r\n\r\n      })\r\n   }\r\n\r\n   timing(start, end) {\r\n      //console.log('Start End : ', start, end);\r\n      let today = moment().format('MM/DD/YYYY');\r\n      let now = moment().unix();\r\n      let gap = 30 * 60;\r\n      let key = \"\";\r\n      let stimestamp = moment(today+' '+start, 'MM/DD/YYYY H:mm').unix();\r\n      let etimestamp = moment(today+' '+end, 'MM/DD/YYYY H:mm').unix();\r\n      let from = [];\r\n      let to = [];\r\n      for(let i=stimestamp; i<etimestamp; i=i+gap) {\r\n         from.push({\r\n            label :  moment(i*1000).format('hh:mm A'),\r\n            value :  moment(i*1000).format('HH:mm:ss')\r\n         });\r\n         to.push({\r\n            label :  moment((i+gap)*1000).format('hh:mm A'),\r\n            value :  moment((i+gap)*1000).format('HH:mm:ss')\r\n         });\r\n         if(now >= i && now <= i+gap ) {\r\n            key = moment(i*1000).format('hh:mm A')+'-'+moment((i+gap)*1000).format('hh:mm A');\r\n         }\r\n      }\r\n      return {from:from, to:to, key: key};\r\n   }\r\n   \r\n   showFromMonth() {\r\n      const { from, to } = this.state;\r\n      if (!from) {\r\n      return;\r\n      }\r\n      if (moment(to).diff(moment(from), 'months') < 2) {\r\n      this.to.getDayPicker().showMonth(from);\r\n      }\r\n   }\r\n\r\n   handleFromChange(from) {\r\n      // Change the from date and focus the \"to\" input field\r\n      this.setState({ from });\r\n   }\r\n\r\n   handleToChange(to) {\r\n      this.setState({ to }, this.showFromMonth);\r\n   } \r\n\r\n\r\n\r\n   handleChange = recipient_location => {\r\n      this.setState({ recipient_location });\r\n   };\r\n\r\n   componentDidMount() {\r\n      let self             =  this;\r\n      this.timings         =  this.timing(this.props.settingsData.start_time, this.props.settingsData.end_time);                \r\n      let fromDate         =  this.state.startDate;\r\n      let toDate           =  this.state.endDate;\r\n      let pageno           =  this.state.pageno || 1;\r\n      let filterKeys =  this.state.filterKeys;\r\n\t\tlet filter     =  this.props.savedFilterData;\r\n      //console.log('Filter Did Mount : ', filter);\r\n      if(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n         filterKeys  =  filter.filterKeys;\r\n         //fromDate    =  filter.startDate || fromDate;\r\n         //toDate      =  filter.endDate || toDate;\r\n         this.setState({\r\n            filterKeys  :  filter.filterKeys,\r\n            startDate   :  fromDate,\r\n            endDate     :  toDate,\r\n            type        :  filter.type\r\n         }, () => {\r\n            this.handleGetHistory();\r\n         })\r\n      } else {\r\n         let type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n         this.setState({\r\n            type : type\r\n         }, () => {\r\n            this.handleGetHistory();\r\n         })\r\n      }\r\n      document.addEventListener('click', this.handleClick);\r\n   }\r\n     \r\n   handleClick = (e) => {\r\n      e.stopPropagation();\r\n      if(this.nodeSearch.contains(e.target)\r\n         || this.nodeSrchButton.contains(e.target)\r\n         || this.nodeResSrchButton.contains(e.target)\r\n         || e.target.getAttribute('data') === 'autosuggest'\r\n         || e.target.getAttribute('data') === 'ignore-outer-click'\r\n         || !!e.target.getAttribute('aria-hidden')\r\n         //|| !!!this.state.showSearch\r\n         )\r\n         return;\r\n      if(!!this.state.showSearch) {\r\n         this.setState({\r\n            showSearch  :  false\r\n         })\r\n      }\r\n   }\r\n  \r\n   handleRemoveFilter(e, type, index) {\r\n      //console.log('handle remove');\r\n      e.stopPropagation();\r\n      let filters          =  this.state.filterKeys || [];\r\n      if(type === 'State') {\r\n         let stateCode     =  filters[type][index].value;\r\n         _remove(filters.Area, function (area) {\r\n            return area.state === stateCode;\r\n         });\r\n      }\r\n      filters[type].splice(index, 1);\r\n      if(type === 'State' && filters[type].length === 0){\r\n         filters.Area      =  [];\r\n         filters.Store     =  [];\r\n      }\r\n      if(type === 'Area' && filters[type].length === 0){\r\n         filters.Store     =  [];\r\n      }\r\n      let selectedState    =  (type !== 'State') ? this.state.selectedState : null;\r\n      let selectedArea     =  (type !== 'Area') ? this.state.selectedArea : null;\r\n      let selectedStore    =  (type !== 'Store') ? this.state.selectedStore : null;\r\n      this.setState({\r\n         filterKeys : filters,\r\n         selectedState: selectedState,\r\n         selectedArea: selectedArea,\r\n         selectedStore: selectedStore\r\n      }, () => {\r\n         this.handleGetHistory();\r\n      });\r\n   }\r\n\r\n  \r\n   onChangeHandle(e) {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      this.setState({ [name]: value }, function () {\r\n      });\r\n   }\r\n  \r\n   componentWillReceiveProps(props) {\r\n      if(props.csvUrl && props.csvUrl !== this.props.csvUrl){\r\n         window.open(props.csvUrl.Location.filepath);\r\n      }\r\n      this.setState({ filteredList: props.filteredList });\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      document.removeEventListener('click', this.handleClick);\r\n   }\r\n\r\n   handleTypeChange = (type) => {\r\n      this.setState({\r\n         type: type\r\n      }, () => {\r\n         this.handleGetHistory();\r\n      })\r\n   }\r\n\r\n   render(){\r\n      //console.log('Type : ', this.state.type);\r\n      let taskHistory         =   this.props.taskHistory || {};\r\n      let taskCount           =   0;\r\n      if (!isEmpty(taskHistory)) {\r\n         taskCount            =   taskHistory.task_count || 0;\r\n      }\r\n      const { from, to }   =  this.state;\r\n      const modifiers      =  { start: from, end: to };\r\n      let locations              =  this.props.locations || [];      \r\n      let stateFilter = [];\r\n      let stateCodeFilter = [];\r\n      this.state.filterKeys.State.forEach((state) => {\r\n         stateFilter.push(state.label);\r\n         stateCodeFilter.push(state.value);\r\n      });\r\n      return (  \r\n         <div>\r\n            <section className=\"con_top\">\r\n               <div className=\"tab_pan-wrap\">\r\n                  <div className=\"tab_pan\">\r\n                     <span onClick={() => this.handleTypeChange('general')} className={(this.state.type === 'general') ? ' active' : ''}>Grocery</span>\r\n                     <span onClick={() => this.handleTypeChange('pharmacy')} className={(this.state.type === 'pharmacy') ? ' active' : ''}>Rx</span>\r\n                  </div>\r\n               </div>\r\n               <div className=\"res_btn\">\r\n                  <div className={`resfilter_btn ${this.state.showFilter ? \"showfilter\" : \"\"} `} onClick={this.toggleResFilter}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Filter</div>\r\n                  <div ref={nodeResSrchButton => this.nodeResSrchButton = nodeResSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\" : \"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n               </div>\r\n               <Form method=\"get\" action=\"\" autoComplete=\"off\" className={`resfilter_box ${this.state.showFilter ? \"showfilterbox\":\"\"}`}>\r\n                  <div className=\"filter_label\">Filter by: </div>\r\n                  <StateFilter\r\n                     stateFilter={stateFilter}\r\n                     states={this.state.filterKeys.State}\r\n                     handleStateChange={this.handleStateChange}\r\n                     handleRemoveFilter={this.handleRemoveFilter}\r\n                  />\r\n                  <AreaFilter\r\n                     area={this.state.filterKeys.Area}\r\n                     states={this.state.filterKeys.State}\r\n                     zones={this.props.zones}\r\n                     stateCodeFilter={stateCodeFilter}\r\n                     handleAreaChange={this.handleAreaChange}\r\n                     handleRemoveFilter={this.handleRemoveFilter}\r\n                  />\r\n                  <StoreFilter\r\n                     store={this.state.filterKeys.Store}\r\n                     area={this.state.filterKeys.Area}\r\n                     stores={this.props.stores}\r\n                     handleStoreChange={this.handleStoreChange}\r\n                     handleRemoveFilter={this.handleRemoveFilter}\r\n                  />\r\n               </Form>\r\n               <div className=\"search_sec\">\r\n                  <div ref={nodeSrchButton => this.nodeSrchButton = nodeSrchButton} className={`searchmod_btn ${this.state.showSearch ? \"showpoint\" : \"\"} `} onClick={this.toggleCustomSearch}><img src=\"/assets/search-ico.svg\" alt=\"Search_ico\" /> Search</div>\r\n                  {\r\n                     this.props.isTaskCsvExporting?\r\n                     <button type=\"button\" className=\"btn btn-info btn-lg btn_blue\">Exporting...</button>:<button type=\"button\" onClick={this.handleExportTaskCsv} className=\"btn btn-info btn-lg btn_blue\">Export CSV</button>\r\n                  }\r\n                  \r\n               </div>\r\n            </section>\r\n            <section className=\"date_range_section\">\r\n               <div className=\"filter_label\">Range: </div>\r\n               <div className=\"InputFromTo\">\r\n                  <div className=\"DayPickerInput\">\r\n                     <Calendar\r\n                        selectDate={this.state.startDate}\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        noofdays={this.state.noofdays}\r\n                        onSelectDate={this.onSelectStartDate}\r\n                        onDateRange={this.onDateRange}\r\n                        className=\"t_box\"\r\n                        placeholder=\"Start Date\"\r\n                     />\r\n                  </div>\r\n                  {' '}\r\n                  <span className=\"to\">to</span> {' '}\r\n                  <span className=\"InputFromTo-to\">\r\n                     <div className=\"DayPickerInput\">\r\n                        <Calendar\r\n                           selectDate={this.state.endDate}\r\n                           startDate={this.state.startDate}\r\n                           endDate={this.state.endDate}\r\n                           noofdays={this.state.noofdays}\r\n                           onSelectDate={this.onSelectEndDate}\r\n                           onDateRange={this.onDateRange}\r\n                           className=\"t_box\"\r\n                           placeholder=\"End Date\"\r\n                           disabled={!!!this.state.startDate}\r\n                        />\r\n                     </div>\r\n                  </span>\r\n               </div>\r\n            </section>\r\n            {\r\n               (taskCount > 0) ? <div className=\"liveOrders\">{taskCount} Tasks</div> : null\r\n            }\r\n            {\r\n            (this.state.filterKeys.State.length > 0 || this.state.filterKeys.Area.length > 0 || this.state.filterKeys.Store.length > 0) ?\r\n            <section className=\"filter-tag_section\">\r\n               {\r\n                  (this.state.filterKeys.State.length > 0) ?\r\n                     this.state.filterKeys.State.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'State', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n               {\r\n                  (this.state.filterKeys.Area.length > 0) ?\r\n                     this.state.filterKeys.Area.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Area', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n               {\r\n                  (this.state.filterKeys.Store.length > 0) ?\r\n                     this.state.filterKeys.Store.map((filter, index) => {\r\n                        return (\r\n                           <span key={index} className=\"f-tag\">{filter.label}\r\n                              <a onClick={(e) => this.handleRemoveFilter(e, 'Store', index)}>\r\n                                 <img src=\"/assets/cancel-ico.svg\" alt=\"close\" />\r\n                              </a>\r\n                           </span>\r\n                        )\r\n                     }) : null\r\n               }\r\n            </section>:null\r\n         }\r\n            <div\r\n               ref={nodeSearch => this.nodeSearch = nodeSearch}>\r\n               <CustomFilter\r\n                  filteredList={this.state.filteredList}\r\n                  settingsData={this.props.settingsData}\r\n                  timings={this.timings}\r\n                  searchFilter={this.props.searchFilter}\r\n                  resetSearch={this.props.resetSearch}\r\n                  showSearch={this.state.showSearch}\r\n                  getTaskDetails={this.props.getTaskDetails}\r\n                  taskDetails={this.props.taskDetails}\r\n                  deleteTask={this.props.deleteTask}\r\n                  updateTaskStatus={this.props.updateTaskStatus}\r\n                  editTask={this.props.editTask}\r\n                  getTrackDetails={this.props.getTrackDetails}\r\n                  openEditWindow={this.openEditWindow}\r\n                  openDetailsWindow={this.openDetailsWindow}\r\n                  openMapWindow={this.openMapWindow}\r\n                  deleteTask={this.deleteTask}\r\n                  updateTask={this.updateTask}\r\n                  openTrackWindow={this.openTrackWindow}\r\n                  section='All Tasks'\r\n               />\r\n               {\r\n                  (!!this.state.editShow) ?\r\n                     <EditTask\r\n                        taskDetails={this.props.taskDetails}\r\n                        show={this.state.editShow}\r\n                        timings={this.props.timings}\r\n                        settingsData={this.props.settingsData}\r\n                        editTask={this.props.editTask}\r\n                        mrchnt_address={this.state.mrchnt_address}\r\n                        recpnt_address={this.state.recpnt_address}\r\n                        handleClose={this.handleClose}\r\n                     /> : null\r\n               }\r\n               {\r\n                  //(!!this.state.trackShow) ?\r\n                  <TrackDetails\r\n                     show={this.state.trackShow}\r\n                     currentUrl={this.state.currentUrl}\r\n                     trackDriver={this.state.trackDriver}\r\n                     handleClose={this.handleClose}\r\n                  /> //: null\r\n               }\r\n               {\r\n                  (!!this.state.detailsShow) ?\r\n                     <TaskDetails\r\n                        show={this.state.detailsShow}\r\n                        taskDetails={this.props.taskDetails}\r\n                        handleClose={this.handleClose}\r\n                     /> : null\r\n               }\r\n               {\r\n                  (!!this.state.mapShow) ?\r\n                     <MapDetails\r\n                        show={this.state.mapShow}\r\n                        taskDetails={this.props.taskDetails}\r\n                        handleClose={this.handleClose}\r\n                     /> : null\r\n               }\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\nexport default Filter;","import React, {Component} from 'react';\r\nimport { getStatusClass } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\n\r\nexport default class StateWiseList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let taskList                  =  this.props.taskList || {};\r\n      return (\r\n         (!this.props.isProcessing) ? \r\n         Object.keys(taskList || {}).map((item, i) => {\r\n            let orderList = taskList[item].orders || [];\r\n            //console.log(item, orderList);\r\n            return (\r\n               <div key={i} className=\"table_sec\">\r\n                  <table>\r\n                     <thead>\r\n                        <tr>\r\n                           <th colSpan=\"7\" className=\"t-titel\">{item}</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        <tr className=\"t-heading\">\r\n                           <th>Order Number</th>\r\n                           <th>Delivery Window</th>\r\n                           <th>Merchant Address</th>\r\n                           <th>Recipient Address</th>\r\n                           <th>Driver</th>\r\n                           <th>Task Status</th>\r\n                           <th></th>\r\n                        </tr>\r\n                        {\r\n                           orderList.map((order, oIndex) => {\r\n                              //console.log('Onfleet : ', order);\r\n                              let clsName = getStatusClass(order.tsk_status);\r\n                              let merchant_address = `${order.mrchnt_address.number} ${order.mrchnt_address.street}, ${order.mrchnt_address.city}`;\r\n                              let recipient_address = `${order.recpnt_address.number} ${order.recpnt_address.street}, ${order.recpnt_address.city}`;\r\n                              return (\r\n                                 <tr\r\n                                 key={oIndex}\r\n                                 onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                       order_number: order.order_number,\r\n                                       order_id: order.id,\r\n                                       order_uuid: order.uuid,\r\n                                       tsk_status:order.tsk_status,\r\n                                       mrchnt_address: merchant_address,\r\n                                       recpnt_address: recipient_address\r\n                                 })}>\r\n                                    <td>{order.order_number}</td>\r\n                                    <td>{order.complete_after} - {order.complete_before}</td>\r\n                                    <td className=\"acell\">\r\n                                          <label>{merchant_address}</label>\r\n                                          <span className=\"tTip\">{merchant_address}</span>\r\n                                    </td>\r\n                                    <td className=\"acell\">\r\n                                          <label>{recipient_address}</label>\r\n                                          <span className=\"tTip\">{recipient_address}</span>\r\n                                    </td>\r\n                                    <td>{order.driver_name}</td>\r\n                                    <td>\r\n                                          <span className={clsName}>{order.tsk_status}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                       {\r\n                                          (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                          <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                current_url: order.current_url,\r\n                                                track_driver: order.track_driver\r\n                                          })}>{order.track_driver}</a> : null\r\n                                       }\r\n                                       {/* <a href=\"/dashboard\">{order.track_driver}</a> */}\r\n                                    </td>\r\n                                 </tr>\r\n                              )\r\n                           })\r\n                        }\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n            )\r\n         }) : <div className=\"loader\">Loading....</div>\r\n      )\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport { getStatusClass } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\n\r\nexport default class ZoneWiseList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let taskList                  =  this.props.taskList || {};\r\n      return (\r\n         (!this.props.isProcessing) ? \r\n         Object.keys(taskList || {}).map((item, i) => {\r\n            let cities = taskList[item] || [];\r\n            return (\r\n               <div key={i}>\r\n                  <h3 className=\"title\">{item}</h3>\r\n                  {\r\n                  cities.map((city, index) => {\r\n                        let orderList = city.orders || [];\r\n                        return (\r\n                           <div key={index} className=\"table_sec\">\r\n                              <table>\r\n                                 <thead>\r\n                                    <tr>\r\n                                       <th colSpan=\"7\" className=\"t-titel\">{city.name}</th>\r\n                                    </tr>\r\n                                 </thead>\r\n                                 <tbody>\r\n                                    <tr className=\"t-heading\">\r\n                                       <th>Order Number</th>\r\n                                       <th>Delivery Window</th>\r\n                                       <th>Merchant Address</th>\r\n                                       <th>Recipient Address</th>\r\n                                       <th>Driver</th>\r\n                                       <th>Task Status</th>\r\n                                       <th></th>\r\n                                    </tr>\r\n                                    {\r\n                                       orderList.map((order, oIndex) => {\r\n                                          //console.log('Onfleet : ', order);\r\n                                          let clsName = getStatusClass(order.tsk_status);\r\n                                          let merchant_address = `${order.mrchnt_address.number} ${order.mrchnt_address.street}, ${order.mrchnt_address.city}`;\r\n                                          let recipient_address = `${order.recpnt_address.number} ${order.recpnt_address.street}, ${order.recpnt_address.city}`;\r\n                                          return (\r\n                                             <tr\r\n                                             key={oIndex}\r\n                                             onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                                   order_number: order.order_number,\r\n                                                   order_id: order.id,\r\n                                                   order_uuid: order.uuid,\r\n                                                   tsk_status:order.tsk_status,\r\n                                                   mrchnt_address: merchant_address,\r\n                                                   recpnt_address: recipient_address\r\n                                             })}>\r\n                                                <td>{order.order_number}</td>\r\n                                                <td>{order.complete_after} - {order.complete_before}</td>\r\n                                                <td className=\"acell\">\r\n                                                      <label>{merchant_address}</label>\r\n                                                      <span className=\"tTip\">{merchant_address}</span>\r\n                                                </td>\r\n                                                <td className=\"acell\">\r\n                                                      <label>{recipient_address}</label>\r\n                                                      <span className=\"tTip\">{recipient_address}</span>\r\n                                                </td>\r\n                                                <td>{order.driver_name}</td>\r\n                                                <td>\r\n                                                      <span className={clsName}>{order.tsk_status}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                   {\r\n                                                      (!!order.track_driver && order.tsk_status !== 'Completed') ? \r\n                                                      <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                                            current_url: order.current_url,\r\n                                                            track_driver: order.track_driver\r\n                                                      })}>{order.track_driver}</a> : null\r\n                                                   }\r\n                                                   {/* <a href=\"/dashboard\">{order.track_driver}</a> */}\r\n                                                </td>\r\n                                             </tr>\r\n                                          )\r\n                                       })\r\n                                    }\r\n                                 </tbody>\r\n                              </table>\r\n                           </div>\r\n                        )\r\n                  })\r\n                  }\r\n               </div>\r\n            )\r\n         }) : <div className=\"loader\">Loading....</div>\r\n      )\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport { getStatusClass, getTaskStatus } from '../../util/helper';\r\nimport { getDateTime, getSysDateTime } from '../../Helper/common';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\n\r\nexport default class UncategorizedList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   render() {\r\n      let taskList                  =  this.props.taskList || {};\r\n      return (\r\n         (!this.props.isProcessing) ? \r\n         <div className=\"table_sec\">\r\n               <table>\r\n                  <thead>\r\n                     <tr>\r\n                        <th colSpan=\"7\" className=\"t-titel\">All Tasks</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     <tr className=\"t-heading\">\r\n                        <th>Order Number</th>\r\n                        <th>Delivery Window</th>\r\n                        <th>Merchant Address</th>\r\n                        <th>Recipient Address</th>\r\n                        <th>Driver</th>\r\n                        <th>Task Status</th>\r\n                        <th></th>\r\n                     </tr>\r\n                     {\r\n                        taskList.map((order, oIndex) => {\r\n                           let status              =  getTaskStatus(order.tskStatus);\r\n                           let clsName             =  getStatusClass(status);\r\n                           let merchant_address    =  `${order.merchant.address.number} ${order.merchant.address.street}, ${order.merchant.address.city}`;\r\n                           let recipient_address   =  `${order.recipients.address.number} ${order.recipients.address.street}, ${order.recipients.address.city}`;\r\n                           let completeafter       =  '';\r\n                           let completebefore      =  '';\r\n                           if(order.timezone !== '') {\r\n                              completeafter = getDateTime(parseInt(order.completeAfter) * 1000, order.timezone, 'MM/DD · hh:mma');\r\n                              completebefore = getDateTime(parseInt(order.completeBefore) * 1000, order.timezone, 'hh:mma');\r\n                           } else {\r\n                              completeafter = getSysDateTime(parseInt(order.completeAfter) * 1000, 'MM/DD · hh:mma');\r\n                              completebefore = getSysDateTime(parseInt(order.completeBefore) * 1000, 'hh:mma');\r\n                           }\r\n                           return (\r\n                           <tr\r\n                              key={oIndex}\r\n                              onContextMenu={(e) => this.props.handleContextMenu(e, {\r\n                                    order_number: order.orderNumber,\r\n                                    order_id: order.id,\r\n                                    order_uuid: order.uuid,\r\n                                    tsk_status:order.tskStatus,\r\n                                    mrchnt_address: merchant_address,\r\n                                    recpnt_address: recipient_address\r\n                              })}>\r\n                                 <td>{order.orderNumber}</td>\r\n                                 <td>{completeafter} - {completebefore}</td>\r\n                                 <td className=\"acell\">\r\n                                       <label>{merchant_address}</label>\r\n                                       <span className=\"tTip\">{merchant_address}</span>\r\n                                 </td>\r\n                                 <td className=\"acell\">\r\n                                       <label>{recipient_address}</label>\r\n                                       <span className=\"tTip\">{recipient_address}</span>\r\n                                 </td>\r\n                                 <td>{order.driver_name}</td>\r\n                                 <td>\r\n                                       <span className={clsName}>{status}</span>\r\n                                 </td>\r\n                                 <td>\r\n                                    {\r\n                                       (!!order.track_driver && status !== 'Completed') ? \r\n                                       <a onClick={(e)  => this.props.openTrackWindow(e, {\r\n                                             current_url: order.current_url,\r\n                                             track_driver: order.track_driver\r\n                                       })}>{order.track_driver}</a> : null\r\n                                    }\r\n                                 </td>\r\n                              </tr>\r\n                           )\r\n                        })\r\n                     }\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         : <div className=\"loader\">Loading....</div>\r\n      )\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport { getStatusClass } from '../../util/helper';\r\nimport { isEmpty, isEqual, map as _map } from 'lodash';\r\nimport CustomContext from '../Modals/contextMenu';\r\nimport EditTask from '../Modals/editTaskModal';\r\nimport TaskDetails from '../Modals/taskDetailsModal';\r\nimport MapDetails from '../Modals/mapDetailsModal';\r\nimport TrackDetails from '../Modals/trackDetailsModal';\r\nimport Pagination from '../../Helper/pagination';\r\nimport StateWiseList from './stateWiseList';\r\nimport ZoneWiseList from './zoneWiseList';\r\nimport UncategorizedList from './uncategorizedList';\r\n\r\nexport default class TaskList extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state                  =   {\r\n                                          editShow          :   false,\r\n                                          detailsShow       :   false,\r\n                                          mapShow           :   false,\r\n                                          trackShow         :   false,\r\n                                          visible           :   false,\r\n                                          x                 :   '',\r\n                                          y                 :   '',\r\n                                          tasks             :   {},\r\n                                          isLoading         :   true,\r\n                                          mrchnt_address    :   '',\r\n                                          recpnt_address    :   '',\r\n                                          filteredList      :   [],\r\n                                          //totalRecords      :  0,\r\n                                          //itemsPerPage      :  100\r\n                                      };\r\n      this.handleContextMenu      =   this.handleContextMenu.bind(this);\r\n      this.openEditWindow         =   this.openEditWindow.bind(this);\r\n      this.openDetailsWindow      =   this.openDetailsWindow.bind(this);\r\n      this.openMapWindow          =   this.openMapWindow.bind(this);\r\n      this.openTrackWindow        =   this.openTrackWindow.bind(this);\r\n      this.deleteTask             =   this.deleteTask.bind(this);\r\n      this.updateTask             =   this.updateTask.bind(this);\r\n      this.handleClose            =   this.handleClose.bind(this);\r\n   }\r\n\r\n   handleContextMenu(event, order) {\r\n       let self                   =  this;\r\n       event.preventDefault();        \r\n       const clickX               =  event.clientX;\r\n       const clickY               =  event.pageY;\r\n       self.setState({\r\n           visible     :  true,\r\n           x           :  clickX,\r\n           y           :  clickY,\r\n           selOrder    :  {...order}\r\n       });\r\n   }\r\n\r\n   hideContextMenu = () => {\r\n      this.setState({\r\n         visible     :  false,\r\n         x:0,\r\n         y:0\r\n      });\r\n   }\r\n\r\n   openEditWindow(uuid, mrchnt_address, recpnt_address){\r\n      this.props.getTaskDetails({uuid: uuid})\r\n      this.setState({\r\n         editShow        :   true,\r\n         mrchnt_address  :   mrchnt_address,\r\n         recpnt_address  :   recpnt_address\r\n      })\r\n   }\r\n\r\n   openDetailsWindow(uuid){\r\n      this.props.getTaskDetails({uuid: uuid})\r\n      this.setState({\r\n         detailsShow: true\r\n      })\r\n   }    \r\n\r\n   openMapWindow(uuid){\r\n      this.props.getTaskDetails({uuid: uuid});\r\n      this.setState({\r\n         mapShow: true\r\n      })\r\n   }\r\n\r\n   openTrackWindow(e, data){\r\n      e.stopPropagation();\r\n      this.setState({\r\n         trackShow: true,\r\n         currentUrl: data.current_url,\r\n         trackDriver: data.track_driver\r\n      })\r\n   }\r\n\r\n   updateTask(uuid, status){\r\n      if(window.confirm('Do you really want to update status of this task?')) {\r\n         this.props.updateTaskStatus({uuid: uuid, status: status});\r\n      }\r\n   }\r\n\r\n   deleteTask(uuid){\r\n       if(window.confirm('Do you really want to delete this task?')) {\r\n           this.props.deleteTask({uuid: uuid});\r\n       }\r\n   }\r\n   \r\n   handleClose(){\r\n       //console.log('Handle Close');\r\n       this.setState({\r\n           visible     :   false,\r\n           editShow    :   false,            \r\n           mapShow     :   false,\r\n           detailsShow :   false,\r\n           trackShow   :   false\r\n       })\r\n   }\r\n\r\n   /* componentWillReceiveProps(props) {\r\n      if(!isEmpty(props)){\r\n         this.setState()\r\n      }\r\n   } */\r\n\r\n   /* shouldComponentUpdate(props){\r\n      console.log(!isEqual(props.filterData, this.props.filterData), this.props isEmpty(this.props.filterData));\r\n      if(isEmpty(this.props.filterData) || !isEqual(props.filterData, this.props.filterData)){\r\n         return true;\r\n      } else {\r\n         return false;\r\n      }\r\n      //return true;\r\n   } */\r\n\r\n   changePage = (data) => {\r\n      //console.log('Current Page : ', this.props.filterData);\r\n      const { currentPage }\t=\tdata;\r\n      //console.log('Current Page : ', currentPage, this.props.filterData, this.props.filterData.pageno);\r\n\t\t//const offset\t\t\t\t\t\t\t\t\t=\t(currentPage - 1) * pageLimit;\r\n      //const limit\t\t\t\t\t\t\t\t\t\t=\t(offset + pageLimit);\r\n      let filterData          =  {...this.props.filterData};\r\n      filterData.pageno       =  currentPage;\r\n      if(currentPage !== this.props.filterData.pageno)\r\n         this.props.getHistory(filterData, this.props.savedFilterData);\r\n      /* this.setState({currentPage:currentPage}, function(){         \r\n         if(this.state.searchText !== '')\r\n            this.props.getCustomerList({searchType:this.state.searchType, searchText:this.state.searchText, currentPage:this.state.currentPage});\r\n      }); */\r\n   }\r\n\r\n   render() {\r\n      //console.log('Task History List : ', this.props.isProcessing);\r\n      let taskHistory         =   this.props.taskHistory || {};\r\n      let taskList            =   {};\r\n      let taskCount           =   0;\r\n      let listType            =  '';\r\n      if (!isEmpty(taskHistory)) {\r\n         taskList             =   taskHistory.tasks || {};\r\n         taskCount            =   taskHistory.task_count || 0;\r\n         listType             =  taskHistory.list_type;\r\n      }\r\n      let itemsPerPage            =  500;\r\n      let totalRecords            =  taskCount;\r\n      //console.log(this.props.taskHistory, listType);\r\n      //console.log(taskList.length > 0, taskList);\r\n      return (\r\n         (!isEmpty(this.props.taskHistory)) ? \r\n         <div>                       \r\n            <CustomContext\r\n               visible             =   {this.state.visible}\r\n               x                   =   {this.state.x}\r\n               y                   =   {this.state.y}\r\n               selOrder            =   {this.state.selOrder}\r\n               openEditWindow      =   {this.openEditWindow}\r\n               openDetailsWindow   =   {this.openDetailsWindow}\r\n               openMapWindow       =   {this.openMapWindow}\r\n               deleteTask          =   {this.deleteTask}\r\n               updateTask          =   {this.updateTask}\r\n               hideContextMenu     =   {this.hideContextMenu}\r\n            />\r\n            {\r\n               (!isEmpty(taskList)) ? \r\n               <section className=\"content\" style={{minHeight:'400px'}}>\r\n                  {\r\n                     //(taskList.length > 0) ? \r\n                     (listType === 'date') ?\r\n                     <UncategorizedList\r\n                        taskList             =  {taskList}\r\n                        handleContextMenu    =  {this.handleContextMenu}\r\n                        openTrackWindow    =  {this.openTrackWindow}\r\n                        isProcessing      =  {this.props.isProcessing}\r\n                     /> : null\r\n                  }\r\n                  {\r\n                     (listType === 'state') ?\r\n                     <StateWiseList\r\n                        taskList             =  {taskList}\r\n                        handleContextMenu    =  {this.handleContextMenu}\r\n                        openTrackWindow    =  {this.openTrackWindow}\r\n                        isProcessing      =  {this.props.isProcessing}\r\n                     /> : null\r\n                  }\r\n                  {\r\n                     (listType === 'zone') ?\r\n                     <ZoneWiseList\r\n                        taskList             =  {taskList}\r\n                        handleContextMenu    =  {this.handleContextMenu}\r\n                        openTrackWindow    =  {this.openTrackWindow}\r\n                        isProcessing      =  {this.props.isProcessing}\r\n                     /> : null\r\n                  }\r\n                  {\r\n                     (listType === 'store-id') ?\r\n                     <ZoneWiseList\r\n                        taskList             =  {taskList}\r\n                        handleContextMenu    =  {this.handleContextMenu}\r\n                        openTrackWindow    =  {this.openTrackWindow}\r\n                        isProcessing      =  {this.props.isProcessing}\r\n                     /> : null\r\n                  }\r\n                  {\r\n\t\t\t\t\t\t\ttotalRecords >= itemsPerPage ?\r\n                     <div className=\"pagination_Pan\"><Pagination totalRecords={totalRecords} pageLimit={itemsPerPage} pageNeighbours={1} onPageChanged={this.changePage} isProcessing={this.props.isProcessing}/></div>:null\r\n                  }\r\n               </section>\r\n               : <section className=\"content\"><div className=\"no-records\">No Records</div></section>\r\n            }            \r\n            {\r\n               (!!this.state.editShow) ?\r\n               <EditTask\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  show                =   {this.state.editShow}\r\n                  taskType            =   {this.props.taskType}\r\n                  stores              =   {this.props.stores}\r\n                  locations           =   {this.props.locations}\r\n                  pharmacy            =   {this.props.pharmacy}\r\n                  timings             =   {this.props.timings}\r\n                  settingsData        =   {this.props.settingsData}\r\n                  editTask            =   {this.props.editTask}\r\n                  mrchnt_address      =   {this.state.mrchnt_address}\r\n                  recpnt_address      =   {this.state.recpnt_address}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }\r\n            {\r\n               /* (!!this.state.trackShow) ? */\r\n               <TrackDetails\r\n                  show                =   {this.state.trackShow}\r\n                  currentUrl          =   {this.state.currentUrl}\r\n                  trackDriver         =   {this.state.trackDriver}\r\n                  handleClose         =   {this.handleClose}\r\n               /> /* : null */\r\n            }\r\n            {\r\n               (!!this.state.detailsShow) ?\r\n               <TaskDetails\r\n                  show                =   {this.state.detailsShow}\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }                    \r\n            {\r\n               (!!this.state.mapShow) ?\r\n               <MapDetails\r\n                  show                =   {this.state.mapShow}\r\n                  taskDetails         =   {this.props.taskDetails}\r\n                  handleClose         =   {this.handleClose}\r\n               /> : null\r\n            }\r\n         </div>\r\n         : <div className=\"loader\">Loading....</div>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport { PropTypes as PT } from 'prop-types';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {isEmpty} from 'lodash';\r\nimport Filter from './filter';\r\nimport TaskList from './taskList';\r\nimport { isEqual } from 'lodash';\r\nimport moment from 'moment-timezone';\r\nimport {getFilter, clearFilter, setFilter} from '../../Helper/common';\r\n\r\nclass TaskHistory extends Component {\r\n   static propTypes  =  {\r\n      userData       :  PT.object,\r\n      isFetching     :  PT.bool,\r\n      isProcessing   :  PT.bool,\r\n      isError        :  PT.bool,\r\n      isSuccess      :  PT.bool,\r\n      history        :  PT.object,\r\n      getHistory     :  PT.func,\r\n      exportTaskCsv  :  PT.func,\r\n      isTaskCsvExporting: PT.bool\r\n   }\r\n\r\n   static defaultProps     =  {\r\n      userData       :  {},\r\n      isFetching     :  false,\r\n      isProcessing   :  false,\r\n      isError        :  false,\r\n      isSuccess      :  false,\r\n      history        :  {},\r\n      getHistory     :  () => { },\r\n      exportTaskCsv  :  () => { },\r\n      isTaskCsvExporting :  false\r\n   }\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      this.state                    =  {\r\n               org_id         :  (!!this.props.userData) ? this.props.userData.org_id : '',\r\n               selectedState  :  null,\r\n               selectedArea   :  null,\r\n               selectedStore  :  null,\r\n               filterKeys     :  {State:[], Area: [], Store: []},\r\n               type           :  'general',\r\n               searchTxt      :  '',\r\n               sOpen          :  false,\r\n               selOrder       :  {},\r\n               filterData     :  {}\r\n            }\r\n      this.timings                  =  [];\r\n      //this.handleTypeChange         =  this.handleTypeChange.bind(this);\r\n      this.searchFilter             =  this.searchFilter.bind(this);\r\n   }\r\n\r\n   /* handleTypeChange(type, selFilterData) {\r\n      this.setState({\r\n         type        :  type\r\n      }, () => {\r\n         let filterData                =  {...this.state.filterData};\r\n         filterData.type               =  type;\r\n         filterData.pageno             =  1;\r\n         this.getHistory(filterData, selFilterData);\r\n      })\r\n   } */\r\n\r\n   searchFilter (searchData) {\r\n      this.props.search({\r\n         ...searchData,\r\n         user_type: this.state.type,\r\n         dateType: 'range'\r\n      })\r\n   }\r\n   \r\n   componentWillReceiveProps(props) {\r\n      // && !isEqual(this.props.userType, props.userType)\r\n      /* if(!!props.userType) {   \r\n         let type       =  (props.userType === 'admin') ? 'general' : props.userType;\r\n         let filter\t\t=\tprops.filterData.history || {};\r\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t\ttype        =  filter.type;\r\n\t\t\t}\r\n         this.setState({\r\n            type: type\r\n         })\r\n      } */\r\n   }\r\n\r\n   /* componentWillMount(){      \r\n      this.props.getSettings();\r\n   } */\r\n\r\n   componentDidMount() {\r\n      this.props.getLocations();      \r\n      /* if(!!this.props.userType) {\r\n         let filter\t\t=\tthis.props.filterData.history || {};\r\n         let type       =  (this.props.userType === 'admin') ? 'general' : this.props.userType;\r\n\t\t\tif(!isEmpty(filter) && filter.user_type === this.props.userType) {\r\n\t\t\t\ttype        =  filter.type;\r\n\t\t\t}\r\n         this.setState({\r\n            type: type\r\n         })\r\n      } */\r\n   }\r\n   \r\n   /* componentWillReceiveProps(props){      \r\n      console.log('Check Processing : ', this.props.isEditTaskProcessing != props.isEditTaskProcessing && !props.isEditTaskProcessing && !!this.props.isEditTaskProcessing)\r\n      if(this.props.isEditTaskProcessing != props.isEditTaskProcessing && !props.isEditTaskProcessing && !!this.props.isEditTaskProcessing) {\r\n         console.log('isEditTaskProcessing : ', this.props.isEditTaskProcessing);\r\n         console.log('Filter Data : ', this.props.filterData);\r\n         this.getHistory(this.state.filterData, this.props.filterData);\r\n      }\r\n   } */\r\n\r\n   getHistory = (data, selFilterData) => {\r\n      this.setState({\r\n         filterData  :  {...data}\r\n      }, () => {\r\n         data.filter\t\t=\t{key: 'history', value: JSON.stringify(selFilterData)};\r\n         //console.log('Data : ', data);\r\n         this.props.getHistory(data);\r\n      })\r\n   }\r\n\r\n   render() {\r\n      let locationData           =  this.props.locations || {};\r\n      let pharmacy               =  (!!locationData.pharmacy) ? locationData.pharmacy : false;\r\n      let stores                 =  locationData.stores || [];\r\n      let locations              =  locationData.locations || [];\r\n      let taskType               =  locationData.taskType || '';\r\n      let zones                  =  locationData.zones || {};\r\n      let userType               =  this.props.userType || '';\r\n      let filterData             =\tthis.props.filterData.history || {};\r\n      return (\r\n         <main className={`dash right_sec taskp ${(userType !== 'admin') ? ' noAdmin' : ''}`}>\r\n            {\r\n               (this.props.isFilterLoaded) ? \r\n               <Filter\r\n                  //handleTypeChange     =  {this.handleTypeChange}\r\n                  getHistory           =  {this.getHistory}\r\n                  taskHistory          =  {this.props.taskHistory}\r\n                  //type                 =  {this.state.type}\r\n                  stores               =  {stores}\r\n                  zones                =  {zones}\r\n                  handleStateChange    =  {this.handleStateChange}\r\n                  handleAreaChange     =  {this.handleAreaChange}\r\n                  handleStoreChange    =  {this.handleStoreChange}\r\n                  searchFilter         =  {this.searchFilter}\r\n                  resetSearch          =  {this.props.resetSearch}\r\n                  handleRemoveFilter   =  {this.handleRemoveFilter}\r\n                  getLocations         =  {this.props.getLocations}\r\n                  taskType             =  {taskType}\r\n                  locations            =  {locations}\r\n                  pharmacy             =  {pharmacy}\r\n                  timings              =  {this.timings}\r\n                  filterData           =  {this.state.filterData}\r\n                  userData             =  {this.props.userData}\r\n                  settingsData         =  {this.props.settingsData}\r\n                  createTask           =  {this.props.createTask}\r\n                  filteredList         =  {this.props.filteredList}\r\n                  getTaskDetails       =  {this.props.getTaskDetails}\r\n                  taskDetails          =  {this.props.taskDetails}\r\n                  deleteTask           =  {this.props.deleteTask}\r\n                  updateTaskStatus     =  {this.props.updateTaskStatus}\r\n                  editTask             =  {this.props.editTask}\r\n                  getTrackDetails      =  {this.props.getTrackDetails}\r\n                  isTaskProcessing     =  {this.props.isTaskProcessing}\r\n                  exportTaskCsv        =  {this.props.exportTaskCsv}\r\n                  csvUrl               =  {this.props.csvUrl}\r\n                  isTaskCsvExporting   =  {this.props.isTaskCsvExporting}\r\n                  userType             =  {userType}\r\n\t\t\t\t\t\tsavedFilterData      =  {filterData}\r\n               /> : null\r\n            }\r\n            {\r\n               (!isEmpty(this.state.filterData)) ? \r\n               <TaskList\r\n                  getHistory        =  {this.getHistory}\r\n                  taskHistory       =  {this.props.taskHistory}\r\n                  type              =  {this.state.type}\r\n                  org_id            =  {this.state.org_id}\r\n                  searchTxt         =  {this.state.searchTxt}\r\n                  taskType          =  {taskType}\r\n                  stores            =  {stores}\r\n                  locations         =  {locations}\r\n                  pharmacy          =  {pharmacy}\r\n                  timings           =  {this.timings}\r\n                  getTaskDetails    =  {this.props.getTaskDetails}\r\n                  taskDetails       =  {this.props.taskDetails}\r\n                  deleteTask        =  {this.props.deleteTask}\r\n                  updateTaskStatus  =  {this.props.updateTaskStatus}\r\n                  editTask          =  {this.props.editTask}\r\n                  settingsData      =  {this.props.settingsData}\r\n                  getTrackDetails   =  {this.props.getTrackDetails}\r\n                  filterData        =  {this.state.filterData}\r\n                  isProcessing      =  {this.props.isProcessing}\r\n                  savedFilterData   =  {this.props.filterData}\r\n               />: <div className=\"loader\">Loading....</div>\r\n            }\r\n         </main>\r\n      )\r\n   }\r\n}\r\nexport default withRouter(TaskHistory);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {PropTypes as PT} from 'prop-types';\r\nimport * as actions from './actions';\r\nimport * as dashboardActions from '../Dashboard/actions';\r\nimport * as headerActions from '../Header/actions';\r\nimport TaskHistory from './taskHistory';\r\n\r\nconst TaskHistoryContainer = ({\r\n  userData,\r\n  getLocations,\r\n  locations,\r\n  settingsData,\r\n  userType,\r\n  isProcessing,\r\n  isError,\r\n  isSuccess,\r\n  getHistory,\r\n  taskHistory,\r\n  getTaskDetails,\r\n  taskDetails,\r\n  deleteTask,\r\n  editTask,\r\n  updateTaskStatus,\r\n  getTrackDetails,\r\n  search,\r\n  resetSearch,\r\n  filteredList,\r\n  exportTaskCsv,\r\n  csvUrl,\r\n  isTaskCsvExporting,\r\n\tgetSettings,\r\n  filterData,\r\n  isFilterLoaded,\r\n  isEditTaskProcessing\r\n}) => {\r\n  return (\r\n    <TaskHistory\r\n      userData          = {userData}\r\n      getLocations      = {getLocations}\r\n      locations         = {locations}\r\n      settingsData      = {settingsData}\r\n      userType          = {userType}\r\n      isProcessing      = {isProcessing}\r\n      isError           = {isError}\r\n      isSuccess         = {isSuccess}\r\n      getHistory        = {getHistory}\r\n      taskHistory       = {taskHistory}\r\n      getTaskDetails    = {getTaskDetails}\r\n      taskDetails       = {taskDetails}\r\n      deleteTask        = {deleteTask}\r\n      editTask          = {editTask}\r\n      updateTaskStatus  = {updateTaskStatus}\r\n      getTrackDetails   = {getTrackDetails}\r\n      search            = {search}\r\n      resetSearch       = {resetSearch}\r\n      filteredList      = {filteredList}\r\n      exportTaskCsv     = {exportTaskCsv}\r\n      csvUrl            = {csvUrl}\r\n      isTaskCsvExporting= {isTaskCsvExporting}\r\n\t\t\tgetSettings       = {getSettings}\r\n\t\t\tfilterData        = {filterData}\r\n\t\t\tisFilterLoaded    = {isFilterLoaded}\r\n\t\t\tisEditTaskProcessing    = {isEditTaskProcessing}\r\n    />\r\n  )\r\n};\r\n\r\n TaskHistoryContainer.propTypes   = {\r\n  userData          : PT.object,\r\n  getLocations      : PT.func,\r\n  locations         : PT.object,\r\n  isProcessing      : PT.bool,\r\n  isError           : PT.bool,\r\n  isSuccess         : PT.bool,\r\n  getHistory        : PT.func,\r\n  settingsData      : PT.object,\r\n  userType          : PT.string,\r\n  taskHistory       : PT.object,\r\n  getTaskDetails    : PT.func,\r\n  getTrackDetails   : PT.func,\r\n  deleteTask        : PT.func,\r\n  editTask          : PT.func,\r\n  updateTaskStatus  : PT.func,\r\n  search            : PT.func,\r\n  resetSearch       : PT.func,\r\n  exportTaskCsv     : PT.func,\r\n  csvUrl            : PT.object,\r\n  isTaskCsvExporting : PT.bool,\r\n\tgetSettings       : PT.func,\r\n  filterData        : PT.object,\r\n  isFilterLoaded    : PT.bool,\r\n  isEditTaskProcessing    : PT.bool\r\n }\r\n\r\n  const  mapStateToProps   = ({dashboardReducer, taskHistoryReducer, headerReducer}, ownProps) => {\r\n    return ({\r\n      userData      : ownProps.userData,\r\n      userType      : headerReducer.userType,\r\n      locations     : dashboardReducer.locations,\r\n      settingsData  : headerReducer.settingsData,\r\n      isProcessing  : taskHistoryReducer.isProcessing,\r\n      isError       : taskHistoryReducer.isError,\r\n      isSuccess     : taskHistoryReducer.isSuccess,\r\n      taskHistory   : taskHistoryReducer.taskHistory,\r\n      taskDetails   : dashboardReducer.taskDetails,\r\n      filteredList  : dashboardReducer.filteredList,\r\n      csvUrl        : taskHistoryReducer.csvUrl,\r\n      isTaskCsvExporting : taskHistoryReducer.isTaskCsvExporting,\r\n      filterData    : headerReducer.filterData,\r\n      isFilterLoaded    : headerReducer.isFilterLoaded,\r\n      isEditTaskProcessing    : dashboardReducer.isEditTaskProcessing\r\n    })\r\n  }\r\n\r\n\r\nconst mapDispatchToProps  = dispatch => ({\r\n  updateTaskStatus    : (data) => dispatch(dashboardActions.updateTaskStatus(data)),\r\n  deleteTask          : (data) => dispatch(dashboardActions.deleteTask(data)),\r\n  getLocations        : (data) => dispatch(dashboardActions.getLocations(data)),\r\n  editTask            : (data) => dispatch(dashboardActions.editTask(data)),\r\n  getTaskDetails      : (data) => dispatch(dashboardActions.getTaskDetails(data)),\r\n  getTrackDetails     : (data) => dispatch(dashboardActions.getTrackDetails(data)),\r\n  search              : (data) => dispatch(dashboardActions.search(data)),\r\n  resetSearch         : (data) => dispatch(dashboardActions.resetSearch(data)),\r\n  getSettings         : (data) => dispatch(headerActions.getSettings(data)),\r\n  getHistory          : (data) => dispatch(actions.getHistory(data)),\r\n  exportTaskCsv       : (data) => dispatch(actions.exportTaskCsv(data))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskHistoryContainer));","import React, { Component } from 'react';\r\nimport TaskHistoryContainer from '../../containers/TaskHistory';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass TaskHistory extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TaskHistoryContainer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TaskHistory);;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\nimport Dashboard from './components/Dashboard';\r\nimport Feedback from './components/Feedbacks';\r\nimport Settings from './components/Settings';\r\nimport Reports from './components/Reports';\r\nimport Login from './components/Login';\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport Home from './components/Home';\r\nimport Header from './components/common/Header';\r\nimport Sidebar from './components/common/Sidebar';\r\nimport TaskHistory from './components/TaskHistory';\r\nimport {get as getDomainCookie, getCookie, setCookie} from './util/cookies';\r\nimport Config from './config';\r\nimport {\r\n  Container\r\n} from 'reactstrap';\r\n\r\nexport const routes = [{\r\n    path: '/',\r\n    exact: true,\r\n    component: Home\r\n  }, {\r\n    path: '/login',\r\n    component: Login,\r\n    \r\n  }, \r\n  {\r\n    path: '/reset-password/:id',\r\n    component: ResetPassword,\r\n    \r\n  },\r\n  {\r\n    path: '/forgot-password',\r\n    component: ForgotPassword,\r\n    \r\n  }];\r\n\r\nexport const privateRoutes = [{\r\n  path: '/dashboard',\r\n  component: Dashboard\r\n}, {\r\n  path: '/feedback',\r\n  component: Feedback\r\n}, {\r\n  path: '/reports',\r\n  component: Reports\r\n}, {\r\n  path: '/settings',\r\n  component: Settings\r\n}, {\r\n  path: '/task-history',\r\n  component: TaskHistory\r\n}\r\n];\r\n\r\nexport default function Router() {\r\n  //console.log(getCookie('foodjets_merchant'), getDomainCookie());\r\n  let user          = {};\r\n  if(typeof window !== 'undefined') {\r\n    let newCookie     = getDomainCookie() || {};\r\n    let currentCookie = getCookie('foodjets_merchant') || {};\r\n    //user              = newCookie || {};\r\n    user              = currentCookie || {};\r\n    if(newCookie.token != currentCookie.token) {\r\n    //  setCookie(newCookie, 'foodjets_merchant');\r\n      let states      = JSON.parse(localStorage.getItem('states') || '[]');\r\n      //console.log('States : ', states, Config, Config.states, !!states, states.length === 0);\r\n      if(states.length === 0)\r\n        localStorage.setItem('states', JSON.stringify(Config.states || []));\r\n      //window.location.reload();\r\n    }\r\n  }\r\n  //console.log('Routes User : ', user);\r\n  /* if(typeof window !== 'undefined' && !isEmpty(localStorage.getItem('user'))) {\r\n    user            = JSON.parse(localStorage.getItem('user'));\r\n  } */\r\n  let location      = useLocation();\r\n  let currentPage   = location.pathname;\r\n  //console.log(location.pathname, currentPage, currentPage !== '/' && currentPage !== '/login', window.location.pathname);\r\n  return (\r\n    <React.Fragment>\r\n      <Header user={user} currentPage={currentPage}/>\r\n      <Container fluid className=\"p-0 section_wrap\" >\r\n        {\r\n          (currentPage !== '/' && currentPage !== '/login' && currentPage !== '/forgot-password' && !currentPage.includes(\"/reset-password\") ) ? <Sidebar user={user} currentPage={currentPage}/> : null\r\n        }\r\n        {/* <input type=\"checkbox\" name=\"check\" /> Yes */}\r\n        <Switch>\r\n          {privateRoutes.map((route) => (\r\n            <PrivateRoute key={route.path} path={route.path} component={route.component} userData={user} />\r\n          ))}\r\n          {routes.map(route => (\r\n            <Route key={`index ${route.path}`} {...route} />\r\n          ))}\r\n        </Switch>\r\n      </Container>\r\n    </ React.Fragment>  \r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  let obj       = { component: Component, ...rest };\r\n  let user      = obj.userData;\r\n  //console.log('Private Route : ', !isEmpty(user));\r\n  if(!isEmpty(user)) {\r\n    return (\r\n      <Route key={obj.path} path={obj.path} component={() => <obj.component userData={user} />} />\r\n    )\r\n  } else {\r\n    //console.log('Unauthorised');\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/login\"\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n//import 'https://use.typekit.net/yzo8xnv.css';\r\nimport './css/fonts.css';\r\nimport './css/style.css';\r\nimport './css/fonts.css';\r\nimport './css/fontawesome.css';\r\nimport Router from './routes';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (     \r\n        <div className=\"app header-fixed aside-menu-fixed sidebar-lg-show pace-done sidebar-lg-show\">\r\n              <div id=\"notify\" className=\"notify\"></div>\r\n              <Router/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n/*\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  console.log('Apps : ', localStorage.getItem('states'))\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        (false) ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n*/","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    loginData:{}\r\n};\r\n\r\nconst LoginReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'DO_LOGIN':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false, loginData: {} };\r\n        case 'DO_LOGIN_SUCCESS':\r\n        console.log('Reducer : ', action.data);\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, loginData:action.data};\r\n        case 'DO_LOGIN_ERROR':\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, loginData:action.data};\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport default LoginReducer;","const initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    forgotPasswordData:{}\r\n};\r\n\r\nconst ForgotPasswordReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FORGOT_PASSWORD_RESET':\r\n            return { ...state, isProcessing:false, isError:false, isSuccess:false, forgotPasswordData: {} };\r\n        case 'FORGOT_PASSWORD':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false, forgotPasswordData: {} };\r\n        case 'FORGOT_PASSWORD_SUCCESS':\r\n        console.log('Reducer : ', action.data);\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, forgotPasswordData:action.data};\r\n        case 'FORGOT_PASSWORD_ERROR':\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, forgotPasswordData:action.data};\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport default ForgotPasswordReducer;","const initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    resetPasswordData:{},\r\n    errMassage       :\"\"\r\n};\r\n\r\nconst resetPasswordReducer   =   (state=initialState, action) => {\r\n   \r\n    switch(action.type) {\r\n        case 'RESET_PASSWORD':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false, resetPasswordData: {},\r\n            errMassage :\"\" };\r\n        case 'RESET_PASSWORD_SUCCESS':\r\n        console.log('Reducer : ', action.data);\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, resetPasswordData:action.data, errMassage :\"\" };\r\n        case 'RESET_PASSWORD_ERROR':\r\n           \r\n            let msg = action.data.message;\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, resetPasswordData:{}, errMassage :msg };\r\n\r\n            case 'RESET_PASSWORD_NOTMATCH':\r\n           \r\n                let msgreset = \"Password does not match\";\r\n                return {...state, isProcessing:false, isError:true, isSuccess:false, resetPasswordData:{}, errMassage :msgreset };\r\n            \r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport default resetPasswordReducer;","const initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    settingsData:{},\r\n    userType:'',\r\n    authenticateData: {},\r\n    showReport: 'false',\r\n    filterData: {},\r\n    isFilterLoaded: false\r\n};\r\n\r\nconst HomeReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_SETTINGS':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false, isFilterLoaded: false, logo:{}, filterData: {} };\r\n        case 'GET_SETTINGS_SUCCESS':\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, isFilterLoaded: true, logo:action.data.logo, settingsData:action.data.settings, userType: action.data.userType, showReport: action.data.showReport, filterData: action.data.filterData}\r\n        case 'GET_SETTINGS_ERROR':\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, isFilterLoaded: true, logo:{}, settingsData:{}, userType: '', showReport: 'false'};\r\n        case 'AUTHENTICATE':\r\n            return { ...state, isAuthenticateError:false };\r\n        case 'AUTHENTICATE_SUCCESS':\r\n            return {...state, isAuthenticateError:false, authenticateData:action.data};\r\n        case 'AUTHENTICATE_ERROR':\r\n            return {...state, isAuthenticateError:true, authenticateData:{}};\r\n        case 'SYNC_FILTER':\r\n            let filterData  =   state.filterData;\r\n            filterData[action.data.key]     =   action.data.value;\r\n            //console.log('Update Reducer : ', filterData);\r\n            return {...state, filterData: filterData}\r\n        \r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default HomeReducer;","//import Config from '../../config';\r\nconst initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    isTaskError: false,\r\n    isTaskSuccess: false,\r\n    isTaskProcessing: false,\r\n    isEditTaskError: false,\r\n    isEditTaskSuccess: false,\r\n    isEditTaskProcessing: false,\r\n    isDetailsError: false,\r\n    isDetailsSuccess: false,\r\n    isDetailsProcessing: false,\r\n    isDeleteError: false,\r\n    isDeleteSuccess: false,\r\n    isDeleteProcessing: false,\r\n    locations:{},\r\n    taskDetails:{},\r\n    filteredList: {},\r\n    shoppedLate: {summary: {total_orders: 0, shopped_late: 0, shopping_late_percent: 0}, type: 'default'}\r\n};\r\n\r\nconst DashboardReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        //Locations & Zones List\r\n        case 'GET_LOCATIONS':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false };\r\n        case 'GET_LOCATIONS_SUCCESS':\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, locations:action.data};\r\n        case 'GET_LOCATIONS_ERROR':\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, locations:{}};\r\n        \r\n        //Create Task\r\n        case 'CREATE_TASK':\r\n            return { ...state, isTaskProcessing:true, isTaskError:false, isTaskSuccess:false };\r\n        case 'CREATE_TASK_SUCCESS':\r\n            return {...state, isTaskProcessing:false, isTaskError:false, isTaskSuccess:true};\r\n        case 'CREATE_TASK_ERROR':\r\n            return {...state, isTaskProcessing:false, isTaskError:true, isTaskSuccess:false};        \r\n        \r\n        //Edit Task\r\n        case 'EDIT_TASK':\r\n            return { ...state, isEditTaskProcessing:true, isEditTaskError:false, isEditTaskSuccess:false };\r\n        case 'EDIT_TASK_SUCCESS':\r\n            return {...state, isEditTaskProcessing:false, isEditTaskError:false, isEditTaskSuccess:true};\r\n        case 'EDIT_TASK_ERROR':\r\n            return {...state, isEditTaskProcessing:false, isEditTaskError:true, isEditTaskSuccess:false};\r\n\r\n        \r\n        //Task Details\r\n        case 'GET_TASK_DETAILS':\r\n            return { ...state, isDetailsProcessing:true, isDetailsError:false, isDetailsSuccess:false, taskDetails: {} };\r\n        case 'GET_TASK_DETAILS_SUCCESS':\r\n            return {...state, isDetailsProcessing:false, isDetailsError:false, isDetailsSuccess:true, taskDetails: action.data};\r\n        case 'GET_TASK_DETAILS_ERROR':\r\n            return {...state, isDetailsProcessing:false, isDetailsError:true, isDetailsSuccess:false, taskDetails: {}};\r\n\r\n        //Delete Task\r\n        case 'DELETE_TASK':\r\n            return { ...state, isDeleteProcessing:true, isDeleteError:false, isDeleteSuccess:false };\r\n        case 'DELETE_TASK_SUCCESS':\r\n            return {...state, isDeleteProcessing:false, isDeleteError:false, isDeleteSuccess:true};\r\n        case 'DELETE_TASK_ERROR':\r\n            return {...state, isDeleteProcessing:false, isDeleteError:true, isDeleteSuccess:false};\r\n\r\n        //Update Task Status\r\n        case 'UPDATE_TASK_STATUS':\r\n            return { ...state, isDeleteProcessing:true, isDeleteError:false, isDeleteSuccess:false };\r\n        case 'UPDATE_TASK_STATUS_SUCCESS':\r\n            return {...state, isDeleteProcessing:false, isDeleteError:false, isDeleteSuccess:true};\r\n        case 'UPDATE_TASK_STATUS_ERROR':\r\n            return {...state, isDeleteProcessing:false, isDeleteError:true, isDeleteSuccess:false};\r\n\r\n        \r\n        //Update Task Status\r\n        case 'TASK_SEARCH':\r\n            return { ...state, isSearching:true };\r\n        case 'RESET_TASK_SEARCH':\r\n            return {...state, filteredList: {} };\r\n        case 'TASK_SEARCH_SUCCESS':\r\n            return {...state, isSearching:false, filteredList: action.data };\r\n        case 'TASK_SEARCH_ERROR':\r\n            return {...state, isSearching:false, filteredList: {} };\r\n\r\n        \r\n        //Shopped Late\r\n        case 'GET_SHOPPEDLATE':\r\n            return { ...state, shoppedLate:{...initialState.shoppedLate} };\r\n        case 'GET_SHOPPEDLATE_ERROR':\r\n            return {...state, shoppedLate: {...initialState.shoppedLate} };\r\n        case 'GET_SHOPPEDLATE_SUCCESS':\r\n            return {...state, shoppedLate: action.data };\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport default DashboardReducer;","//import Config from '../../config';\r\nconst initialState = {\r\n    isFetching: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isProcessing: false,\r\n    taskHistory:{},\r\n    csvUrl: {},\r\n    isTaskCsvExporting: false\r\n};\r\n\r\nconst taskHistoryReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_HISTORY':\r\n            return { ...state, isProcessing:true, isError:false, isSuccess:false};\r\n        case 'GET_HISTORY_SUCCESS':\r\n            return {...state, isProcessing:false, isError:false, isSuccess:true, taskHistory:action.data};\r\n        case 'GET_HISTORY_ERROR':\r\n            return {...state, isProcessing:false, isError:true, isSuccess:false, taskHistory:{}};\r\n\r\n        case 'EXPORT_CSV_TASK_HISTORY':\r\n            return { ...state, isTaskCsvExporting:true, isError:false, isSuccess:false };\r\n        case 'EXPORT_CSV_TASK_HISTORY_SUCCESS':\r\n            return {...state, isTaskCsvExporting:false, isError:false, isSuccess:true, csvUrl: action.data};\r\n        case 'EXPORT_CSV_TASK_HISTORY_ERROR':\r\n            return {...state, isTaskCsvExporting:false, isError:true, isSuccess:false, csvUrl: {}};\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport default taskHistoryReducer;","//import Config from '../../config';\r\nconst initialState = {\r\n    locations:{},\r\n    feedbackData: {},\r\n    isReplying: false,\r\n    isLoading: false,\r\n    isSearching: false,\r\n    isFiltering: false,\r\n    replyResult: {},\r\n    searchResultList: {},\r\n    feedbackSummeryData: {}\r\n};\r\n\r\nconst FeedbackReducer   =   (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_SUMMERY':\r\n            return { ...state, isLoading:true };\r\n        case 'GET_SUMMERY_SUCCESS':\r\n            return {...state, isLoading:false, feedbackSummeryData:action.data};\r\n        case 'GET_SUMMERY_ERROR':\r\n            return {...state, isLoading:false, feedbackSummeryData:{}};\r\n\r\n        case 'GET_FEEDBACK':\r\n            return { ...state, isFiltering:true};\r\n        case 'GET_FEEDBACK_SUCCESS':\r\n            return {...state, isFiltering:false, feedbackData:action.data};\r\n        case 'GET_FEEDBACK_ERROR':\r\n            return {...state, isFiltering:false, feedbackData:{}};\r\n\r\n        case 'FEEDBACK_SEARCH':\r\n            return { ...state, isSearching:true };\r\n        case 'FEEDBACK_SEARCH_SUCCESS':\r\n            return {...state, isSearching:false, searchResultList: action.data };\r\n        case 'FEEDBACK_SEARCH_ERROR':\r\n            return {...state, isSearching:false, searchResultList: {} };\r\n\r\n        case 'REPLY':\r\n            return { ...state, isReplying:true };\r\n        case 'REPLY_SUCCESS':\r\n            return {...state, isReplying:false, replyResult: action.data };\r\n        case 'REPLY_ERROR':\r\n            return {...state, isReplying:false, replyResult: {} };\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default FeedbackReducer;","const initialState = {\r\n    profileData         :   {},\r\n    isLoading           :   false,\r\n    isProcessing        :   false,\r\n    isPassProcessing    :   false,\r\n    isStoreLoading      :   false,\r\n    isStoreProcessing   :   false,\r\n    isLocProcessing     :   false,\r\n    isUserLoading       :   false,\r\n    isUserUpdating      :   false,\r\n    storesList          :   [],\r\n    usersList           :   {}\r\n};\r\n\r\nconst SettingReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_INFO':\r\n            return { ...state, isLoading:true, profileData:{} };\r\n        case 'GET_INFO_ERROR':\r\n            return {...state, isLoading:false, profileData:{}};\r\n        case 'GET_INFO_SUCCESS':\r\n            return {...state, isLoading:false, profileData:action.data};        \r\n        \r\n        case 'GET_STORES':\r\n            return { ...state, isStoreLoading:true };\r\n        case 'GET_STORES_ERROR':\r\n            return {...state, isStoreLoading:false, storesList:{}};\r\n        case 'GET_STORES_SUCCESS':\r\n            return {...state, isStoreLoading:false, storesList:action.data};\r\n        \r\n        case 'UPDATE_PROFILE':\r\n            return { ...state, isProcessing:true };\r\n        case 'UPDATE_PROFILE_ERROR':\r\n            return {...state, isProcessing:false};\r\n        case 'UPDATE_PROFILE_SUCCESS':\r\n            return {...state, isProcessing:false};\r\n        \r\n        case 'CHANGE_PASS':\r\n            return { ...state, isPassProcessing:true };\r\n        case 'CHANGE_PASS_ERROR':\r\n            return {...state, isPassProcessing:false};\r\n        case 'CHANGE_PASS_SUCCESS':\r\n            return {...state, isPassProcessing:false};\r\n        \r\n        case 'ADD_LOCATION':\r\n            return { ...state, isLocProcessing:true };\r\n        case 'ADD_LOCATION_ERROR':\r\n            return {...state, isLocProcessing:false};\r\n        case 'ADD_LOCATION_SUCCESS':\r\n            return {...state, isLocProcessing:false};\r\n\r\n        case 'EDIT_STORE':\r\n            return { ...state, isStoreProcessing:true };\r\n        case 'EDIT_STORE_ERROR':\r\n            return { ...state, isStoreProcessing:false };\r\n        case 'EDIT_STORE_SUCCESS':\r\n            return { ...state, isStoreProcessing:false };\r\n\r\n        case 'DELETE_STORE':\r\n            return { ...state };\r\n        case 'DELETE_STORE_ERROR':\r\n            return { ...state, storesList:{} };\r\n        case 'DELETE_STORE_SUCCESS':\r\n            return { ...state, storesList: action.data };\r\n\r\n        case 'GET_USER':\r\n            return { ...state, isUserLoading:true };\r\n        case 'GET_USER_ERROR':\r\n            return {...state, isUserLoading:false, usersList:{}};\r\n        case 'GET_USER_SUCCESS':\r\n            return {...state, isUserLoading:false, usersList: action.data};\r\n\r\n        case 'ADD_USER':\r\n            return { ...state, isUserUpdating:true };\r\n        case 'ADD_USER_ERROR':\r\n            return { ...state, isUserUpdating:false, usersList:{} };\r\n        case 'ADD_USER_SUCCESS':\r\n            return { ...state, isUserUpdating:false, usersList: action.data };\r\n\r\n        case 'EDIT_USER':\r\n            return { ...state, isUserUpdating:true };\r\n        case 'EDIT_USER_ERROR':\r\n            return { ...state, isUserUpdating:false, usersList:{} };\r\n        case 'EDIT_USER_SUCCESS':\r\n            return { ...state, isUserUpdating:false, usersList: action.data };\r\n\r\n        case 'DELETE_USER':\r\n            return { ...state, isUserUpdating:true };\r\n        case 'DELETE_USER_ERROR':\r\n            return { ...state, isUserUpdating:false, usersList:{} };\r\n        case 'DELETE_USER_SUCCESS':\r\n            return { ...state, isUserUpdating:false, usersList: action.data };\r\n\r\n        case 'SUSPEND_USER':\r\n            return { ...state, isUserUpdating:true };\r\n        case 'SUSPEND_USER_ERROR':\r\n            return { ...state, isUserUpdating:false, usersList:{} };\r\n        case 'SUSPEND_USER_SUCCESS':\r\n            return { ...state, isUserUpdating:false, usersList: action.data };\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default SettingReducer;","//import Config from '../../config';\r\nconst initialState = {\r\n    reportData: {},\r\n    isLoading: false,\r\n    isOrderLoading: false,\r\n    isLateOrderLoading: false,\r\n    lateOrder: {}\r\n};\r\n\r\nconst ReportReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'GET_REPORT':\r\n            return { ...state, isLoading:true };\r\n        case 'GET_REPORT_ERROR':\r\n            return {...state, isLoading:false, reportData:{}};\r\n        case 'GET_REPORT_SUCCESS':\r\n            return {...state, isLoading:false, reportData: action.data};\r\n\r\n        case 'GET_ORDER':\r\n            return { ...state, isOrderLoading: true };\r\n        case 'GET_ORDER_ERROR':\r\n            return {...state, isOrderLoading: false /* reportData:{} */};\r\n        case 'GET_ORDER_SUCCESS':\r\n            //console.log('Report Data : ', state.reportData);\r\n            return {...state, isOrderLoading:false, reportData: {...state.reportData, ordersData: action.data}};\r\n        \r\n        case 'GET_LATE_ORDER':\r\n            return { ...state, isLateOrderLoading:true, /* lateOrder: {} */};\r\n        case 'SORT_LATE_ORDERS':\r\n            return { ...state,  isLateOrderLoading:true };\r\n        case 'GET_LATE_ORDER_ERROR ':\r\n            return {...state, isLateOrderLoading:false, unsortedLateOrders: {}, lateOrder:{}};\r\n        case 'GET_LATE_ORDER_SUCCESS':        \r\n            return {...state, isLateOrderLoading:false, unsortedLateOrders:action.data.unsortedLateOrders, lateOrder:action.data.arrangedTasks};\r\n\r\n        //Default\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default ReportReducer;","import { combineReducers } from 'redux';\r\nimport loginReducer from '../containers/Login/reducer';\r\nimport forgotPasswordReducer from '../containers/ForgotPassword/reducer';\r\nimport resetPasswordReducer from '../containers/ResetPassword/reducer';\r\nimport headerReducer from '../containers/Header/reducer';\r\nimport dashboardReducer from '../containers/Dashboard/reducer';\r\nimport taskHistoryReducer from '../containers/TaskHistory/reducer';\r\nimport feedbackReducer from '../containers/Feedbacks/reducer';\r\nimport settingReducer from '../containers/Settings/reducer';\r\nimport reportReducer from '../containers/Reports/reducer';\r\n\r\nexport default combineReducers({\r\n\tloginReducer,\r\n\tforgotPasswordReducer,\r\n\tresetPasswordReducer,\r\n\theaderReducer,\r\n\ttaskHistoryReducer,\r\n\tdashboardReducer,\r\n\tfeedbackReducer,\r\n\tsettingReducer,\r\n\treportReducer\r\n})","import Config from '../config';\r\nimport axios from \"axios\";\r\nimport {getCookie} from '../util/cookies';\r\n\r\nlet baseAPIUrl          =   Config.ApiUrl;\r\nlet baseAPIUrl2         =   Config.ApiUrl2;\r\n//console.log('Config : ', baseAPIUrl);\r\nexport function callApi(...params) {\r\n    let method          =   params[0];\r\n    let url             =   params[1] || '';\r\n    let postData        =   params[2] || {};\r\n    let userData            =   getCookie('foodjets_merchant') || {};\r\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\r\n    let reqHeaders      =   {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                'Access-Control-Allow-Origin': '*'\r\n                            };\r\n    if(!!userData.token) {\r\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\r\n    }\r\n    \r\n    let instance = axios.create({\r\n        headers: reqHeaders\r\n    });\r\n\r\n    let result          =   '';\r\n    let bodydata        =   {};\r\n    switch(method) {\r\n        case'POST': \r\n            bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.post(baseAPIUrl+url, bodydata);\r\n        break;\r\n\r\n        case'PUT': \r\n            bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.put(baseAPIUrl+url, bodydata);\r\n        break;\r\n\r\n        case'DELETE': \r\n            bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.delete(baseAPIUrl+url, bodydata);\r\n        break;\r\n        \r\n        case'GET':\r\n            result      =   instance.get(baseAPIUrl+url);\r\n        break;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function callApiV2(...params) {\r\n    let method          =   params[0];\r\n    let url             =   params[1] || '';\r\n    let postData        =   params[2] || {};\r\n    let userData            =   getCookie('foodjets_merchant') || {};\r\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\r\n    let reqHeaders      =   {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                'Access-Control-Allow-Origin': '*'\r\n                            };\r\n    if(!!userData.token) {\r\n        reqHeaders.Authorization    =   \"Bearer \" + userData.token;\r\n    }\r\n    \r\n    let instance = axios.create({\r\n        headers: reqHeaders\r\n    });\r\n\r\n    let result          =   '';\r\n    switch(method) {\r\n        case'POST': \r\n            let bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.post(baseAPIUrl2+url, bodydata);\r\n        break;\r\n\r\n        case'PUT': \r\n            bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.put(baseAPIUrl2+url, bodydata);\r\n        break;\r\n\r\n        case'DELETE': \r\n            bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.delete(baseAPIUrl2+url, bodydata);\r\n        break;\r\n        \r\n        case'GET':        \r\n            result      =   instance.get(baseAPIUrl2+url);\r\n        break;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function callOnFleetApi(...params) {\r\n    let method          =   params[0];\r\n    let url             =   params[1] || '';\r\n    let postData        =   params[2] || {};\r\n    let userData            =   getCookie('foodjets_merchant') || {};\r\n    //let userData        =   JSON.parse(localStorage.getItem('user') || '{}');\r\n    let reqHeaders      =   {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                'Access-Control-Allow-Origin': '*'\r\n                            };\r\n    if(!!userData.token) {\r\n        //reqHeaders.Authorization    =   \"Bearer \" + userData.token;\r\n    }\r\n    \r\n    let instance = axios.create({\r\n        headers: reqHeaders\r\n    });\r\n\r\n    let result          =   '';\r\n    switch(method) {\r\n        case'POST': \r\n            let bodydata = JSON.stringify(\r\n                {        \r\n                    jsonrpc:2,\r\n                    ver:1,\r\n                    platform:\"web\",\r\n                    brw:{\r\n                        os:\"Win32\",\r\n                        name:\"Chrome 67\"\r\n                    },\r\n                    params:postData\r\n                });\r\n            result      =   instance.post('/api2/'+url, bodydata);\r\n        break;\r\n        \r\n        case'GET':        \r\n            result      =   instance.get('/fleet/tasks/6ae0019f/public');\r\n        break;\r\n    }\r\n    return result;\r\n}","import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport * as loginConstant from '../constants';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport * as loginAction from '../actions';\r\nimport {callApi} from '../../../Helper/api';\r\nimport {setCookie,removeCookie, setLifetimeCookie, set as setDomainCookie} from '../../../util/cookies';\r\nimport Config from '../../../config';\r\n\r\n//Do Login\r\nexport function* do_login(action){\r\n    try {\r\n        let url             =  '';\r\n        url                 =  `auth/login`;\r\n        let rawdata         =  action.data ;\r\n        let  remember       =  rawdata.remember;  \r\n        delete   rawdata.remember;\r\n        const payload = yield call(callApi, 'POST', url, rawdata);\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(loginAction.listenLoginError(payload.data.error));\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n\r\n\r\n            notifysuccess({message: 'You have successfully logged In. Please wait...'});\r\n            //localStorage.setItem('user', JSON.stringify(result.user || {}));\r\n            //console.log('States : ', Config.states);\r\n            //localStorage.setItem('states', JSON.stringify(result.states || []));\r\n\r\n            if(remember) {\r\n                removeCookie(\"foodjets_merchant\");\r\n                setLifetimeCookie(result.user, 'foodjets_merchant');\r\n               \r\n            }  else {\r\n                removeCookie(\"foodjets_merchant\");\r\n                setCookie(result.user, 'foodjets_merchant');\r\n            }\r\n\r\n            \r\n\r\n\r\n\r\n\r\n            localStorage.setItem('states', JSON.stringify(Config.states || []));\r\n           \r\n            setDomainCookie(result.user);\r\n            yield put(loginAction.listenLoginSuccess(result));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* watchLoginStore() {\r\n    try{\r\n        yield takeEvery( loginConstant.DO_LOGIN, do_login );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport * as forgotPasswordConstant from '../constants';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport * as forgotPasswordAction from '../actions';\r\nimport {callApi} from '../../../Helper/api';\r\n\r\n//Do Login\r\nexport function* forgot_password(action){\r\n    try {\r\n        let url             =  '';\r\n        url                 =  `auth/forget-password`;\r\n        const payload = yield call(callApi, 'POST', url, action.data);\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(forgotPasswordAction.listenForgotPasswordError(payload.data.error));\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            //notifysuccess({message: 'Login Successful'});\r\n            yield put(forgotPasswordAction.listenForgotPasswordSuccess(result));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* watchForgotPasswordStore() {\r\n    try{\r\n        yield takeEvery( forgotPasswordConstant.FORGOT_PASSWORD, forgot_password );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery, put, call, takeLatest } from 'redux-saga/effects';\r\nimport * as resetpasswordConstant from '../constants';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport * as resetPasswordAction from '../actions';\r\nimport {callApi} from '../../../Helper/api';\r\n\r\n//Do Login\r\nexport function* reset_password(action){\r\n    try {\r\n        let url             =  '';\r\n        url                 =  `auth/reset-password`;\r\n        const payload = yield call(callApi, 'POST', url, action.data);\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(resetPasswordAction.listenresetPasswordError(payload.data.error));\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            //notifysuccess({message: 'Login Successful'});\r\n            yield put(resetPasswordAction.listenresetPasswordSuccess(result));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* watchRsetPasswordStore() {\r\n    try{\r\n        yield takeLatest( resetpasswordConstant.RESET_PASSWORD, reset_password );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport * as headerConstant from '../constants';\r\nimport {error as notifyerror} from '../../../util/notify';\r\nimport * as headerAction from '../actions';\r\nimport {callApi, callApiV2} from '../../../Helper/api';\r\nimport { setFilter } from '../../../Helper/common';\r\n\r\n//Get Settings\r\nexport function* get_settings(action){\r\n    try {\r\n        let url             =  '';\r\n        url                 =  `auth/get-user-settings`;\r\n        const payload = yield call(callApiV2, 'GET', url);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            //notifyerror(payload.data.error);\r\n            yield put(headerAction.listenSettingsError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            let filter  =   result.filter || {};\r\n            if(!!filter) {\r\n                Object.keys(filter || {}).forEach(k => {\r\n                    filter[k]       =   JSON.parse(filter[k] || '{}');\r\n                })\r\n            };\r\n\r\n            yield put(headerAction.listenSettingsSuccess({\r\n                settings: result.settings || {},\r\n                userType: result.user_type || '',\r\n                logo: {path: result.path, image: result.logo},\r\n                showReport: result.show_report,\r\n                filterData: filter\r\n            }));\r\n        }\r\n    } catch (e) {\r\n        //notifyerror(e);\r\n        yield put(headerAction.listenSettingsError());\r\n        console.log({message: e.message});\r\n    }\r\n}\r\n\r\n\r\n//Authenticate\r\nexport function* authenticate(action){\r\n    try {\r\n        let url             =  '';\r\n        url                 =  `auth/authenticate`;\r\n        const payload = yield call(callApi, 'GET', url);\r\n        \r\n        // check for error\r\n        if(payload.data.error){\r\n            //notifyerror(payload.data.error);\r\n            yield put(headerAction.listenAuthenticateError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            //console.log('Saga : ', result)\r\n            //notifysuccess({message:result.message});\r\n            yield put(headerAction.listenAuthenticateSuccess(result));\r\n        }\r\n    } catch (e) {\r\n        //notifyerror(e);\r\n        yield put(headerAction.listenAuthenticateError());\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* watchHeaderStore() {\r\n    try{\r\n        yield takeEvery( headerConstant.GET_SETTINGS, get_settings );\r\n        yield takeEvery( headerConstant.AUTHENTICATE, authenticate );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport * as dashboardConstant from '../constants';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport * as dashboardAction from '../actions';\r\nimport * as headerAction from '../../Header/actions';\r\nimport {callApi, callApiV2, callOnFleetApi} from '../../../Helper/api';\r\nimport moment from 'moment-timezone';\r\nimport * as _ from 'lodash';\r\nimport {isEmpty, compact} from 'lodash';\r\nimport { getDateTime, getSysDateTime, getFilter } from '../../../Helper/common';\r\n\r\n\r\n//Get Locations & Zones\r\nexport function* getLocations(action){\r\n    try {\r\n        let url                 =   '';\r\n        let statesLocalStorage  =   JSON.parse(localStorage.getItem('states') || '[]');\r\n        let states              =   statesLocalStorage.map(item => item.id);\r\n        url                     =   `location/all`;\r\n        const res   =   yield all([\r\n                                        call(callApi, 'GET', url),\r\n                                        call(callApiV2, 'POST', 'location/zones', {\"state\":states})\r\n                                    ]);\r\n\r\n        \r\n        if(res) {\r\n            let payload     =   res[0];\r\n            let zone        =   res[1];\r\n\r\n            // check for error    \r\n            if(payload.data.error){\r\n                yield put(dashboardAction.listenGetLocationsError());\r\n            }\r\n    \r\n            // handle success result\r\n            if(payload.data.result){\r\n                let zoneList    =   {};\r\n                let taskType    =   '';\r\n                let pharmacy    =   false;\r\n                let locations   =   [];\r\n                let stores      =   [];\r\n                let result      =   payload.data.result;\r\n                let user        =   payload.data.user;\r\n                if(user.user_type === 'pharmacy') {\r\n                    taskType    =   \"pharmacy\";\r\n                    pharmacy    =   true;\r\n                } else if(user.user_type === 'general'){\r\n                    taskType    =   \"general\";\r\n                    pharmacy    =   false;\r\n                } else { \r\n                    taskType    =   \"admin\";\r\n                    pharmacy    =   false;\r\n                }\r\n                result.map((v, k) => {\r\n                    locations[k] = {\r\n                        id      :   v.id,\r\n                        value   :   k,\r\n                        label   :   v.address,\r\n                        data    :   v\r\n                    };\t\r\n                    if(v.store !== '' && v.store !== null) {\r\n                        stores[k] = {\r\n                            id      :   v.id,\r\n                            zone_id :   v.zone_id,\r\n                            value   :   k,\r\n                            label   :   v.store,\r\n                            data    :   v\r\n                        };\r\n                    }\r\n                });\r\n                stores          =   compact(stores);\r\n                locations       =   compact(locations);\r\n\r\n                if(!!zone.data) {\r\n                    zoneList            =   zone.data || {};\r\n                }\r\n\r\n                yield put(dashboardAction.listenGetLocationsSuccess({\r\n                    taskType: taskType,\r\n                    pharmacy: pharmacy,\r\n                    locations: locations,\r\n                    stores: stores,\r\n                    zones: zoneList\r\n                }));\r\n            }\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n\r\n//Get Locations & Zones\r\nexport function* getTaskDetails(action){\r\n    try {\r\n        let url                 =   '';\r\n        url                     =   `tasks/${action.data.uuid}`;\r\n        const payload               =   yield call(callApiV2, 'GET', url);       \r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenGetTaskDetailsError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){ \r\n            yield put(dashboardAction.listenGetTaskDetailsSuccess(payload.data));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Get Track Details\r\nexport function* getTrackDetails(action){\r\n    try {\r\n        let url                 =   '';\r\n        url                     =   `tasks/${action.data.uuid}`;\r\n        const payload               =   yield call(callOnFleetApi, 'GET', url);       \r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            //yield put(dashboardAction.listenGetTaskDetailsError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){\r\n            //yield put(dashboardAction.listenGetTaskDetailsSuccess(payload.data));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Create Task\r\nexport function* createTask(action){\r\n    try {\r\n        let url             =   '';\r\n        url                 =   `tasks`;\r\n        const payload       =   yield call(callApi, 'POST', url, action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            console.log(payload.data.error);\r\n            yield put(dashboardAction.listenCreateTaskError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){           \r\n            notifysuccess({message: 'Task has been created successfully'});    \r\n            yield put(dashboardAction.listenCreateTaskSuccess({}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Delete Task\r\nexport function* deleteTask(action){\r\n    try {\r\n        let url             =   '';\r\n        url                 =   `tasks/${action.data.uuid}`;\r\n        let data            =   {\"timestamp\":moment().format('X')}\r\n        const payload       =   yield call(callApi, 'DELETE', url, data);  \r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenDeleteTaskError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){           \r\n            notifysuccess({message: 'Task deleted successfully'});\r\n            yield put(dashboardAction.listenDeleteTaskSuccess({}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Update Task Status\r\nexport function* updateTaskStatus(action){\r\n    try {\r\n        let url             =   '';\r\n        url                 =   `tasks/status/${action.data.uuid}`;\r\n        let data            =   {orderStatus:{status:action.data.status}};\r\n        const payload       =   yield call(callApi, 'PUT', url, data);  \r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenUpdateTaskStatusError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){\r\n            notifysuccess({message: 'Task status updated successfully'});           \r\n            yield put(dashboardAction.listenUpdateTaskStatusSuccess({}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Edit Task\r\nexport function* editTask(action){\r\n    try {\r\n        let url             =   '';\r\n        url                 =   `tasks/${action.data.uuid}`;\r\n        let data            =   {...action.data.params};\r\n        const payload       =   yield call(callApi, 'PUT', url, data);  \r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenEditTaskError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){\r\n            //console.log('Success : ', payload.data);\r\n            notifysuccess({message: 'Task updated successfully'});           \r\n            yield put(dashboardAction.listenEditTaskSuccess({}));\r\n        }\r\n    } catch (e) {\r\n        //console.log('Catch : ', e, e.response, e.response.data, e.message.cause);\r\n        if(e.response && !!e.response.data) {\r\n            notifyerror({message: e.response.data.message.cause});\r\n        } else {\r\n            notifyerror({message: e.message});\r\n        }\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Get Search\r\nexport function* search(action){\r\n    try {\r\n        let url                 =   '';\r\n        url                     =   `tasks/search`;\r\n        let data                =   {\r\n            userType    :   action.data.user_type,\r\n            valueOne    :   action.data.type,\r\n            valueTwo    :   action.data.value\r\n        }\r\n        if(!!action.data.dateType) {\r\n            data.dateType        =   action.data.dateType;\r\n        }\r\n        const payload            =   yield call(callApiV2, 'POST', url, data);\r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenSearchError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            let tasks = {};\r\n            if(result.tasks.length > 0) {\r\n                result.tasks.map((val, key) => {\r\n                    let recipient_sig   =   false;                    \r\n                    let track_driver    =   '';\r\n                    let current_url     =   '';\r\n                    let tskStatus       =   'Scheduled';\r\n                    if(val.tskStatus === 'tsk_proc_hld') {\r\n                        tskStatus       =   'Scheduled'\r\n                    } else if(val.tskStatus === 'tsk_proc_mrchnt') {\r\n                        tskStatus       =   'Scheduled'\r\n                    } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\r\n                        tskStatus       =   'Picked Up';\r\n                    } else if(val.tskStatus === 'tsk_proc_drv') {\r\n                        tskStatus       =   'Processing'\r\n                    } else if(val.tskStatus === 'tsk_cmp') {\r\n                        tskStatus       =   'Completed'\r\n                    } else if(val.tskStatus === 'tsk_cncling') {\r\n                        tskStatus       =   'Deleted'\r\n                    } else if(val.tskStatus === 'tsk_cncled') {\r\n                        tskStatus       =   'Deleted'\r\n                    }\r\n                    let dt              =   val.timeCreated.split('T');\r\n                    let d               =   dt[0].split('-');\r\n                    let created_at      =   d[1]+'/'+d[2]+'/'+d[0]; \r\n                    \r\n                    let completeafter   =   '';\r\n                    let completebefore  =   '';\r\n                    \r\n                    if(val.timezone !== '') {\r\n                        completeafter   =   getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\r\n                        completebefore  =   getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\r\n                    } else {\r\n                    completeafter       =   getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\r\n                    completebefore      =   getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\r\n                    }\r\n                    if(!isEmpty(val.completionDetails.events) && \r\n                        !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                        recipient_sig   =   true;\r\n                    }\r\n                    if(!isEmpty(val.completionDetails.events) && \r\n                        !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                        recipient_sig   =   true;\r\n                    }\r\n\r\n                    if(!!val.pickup_onfleet_url) {\r\n                        track_driver    =   'Driver to Merchant';\r\n                        current_url     =   val.pickup_onfleet_url;\r\n                    }\r\n                    \r\n                    if(!!val.drop_onfleet_url) {\r\n                        track_driver    =   'Driver to Recipient';\r\n                        current_url     =   val.drop_onfleet_url;\r\n                    }\r\n\r\n                    if(!!!tasks[val.state_code]) {\r\n                        tasks[val.state_code]   =   {};\r\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                            name        :   val.mkt_ofc_cty_del_zne_name,\r\n                            id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                            orders      :   []\r\n                        };\r\n                    } else {\r\n                        if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                name        :   val.mkt_ofc_cty_del_zne_name,\r\n                                id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                orders      :   []\r\n                            };\r\n                        }\r\n                    }\r\n                    \r\n                    tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\r\n                        created_at              :   created_at,\r\n                        complete_after          :   completeafter,\r\n                        complete_before         :   completebefore,\r\n                        recpnt_address          :   val.recipients.address,\r\n                        mrchnt_address          :   val.merchant.address,\r\n                        mrchnt_notes            :   val.merchant.notes,\r\n                        recpnt_notes            :   val.recipients.notes,\r\n                        tsk_status              :   tskStatus,\r\n                        uuid                    :   val.uuid,\r\n                        order_number            :   val.orderNumber,\r\n                        driver_name             :   val.driver_name,\r\n                        recipient_sig           :   recipient_sig,\r\n                        timezone                :   val.timezone,\r\n                        mrchnt_location         :   val.merchant.location,\r\n                        recpnt_location         :   val.recipients.location,\r\n                        drop_onfleet_url        :   val.drop_onfleet_url || '',\r\n                        pickup_onfleet_url      :   val.pickup_onfleet_url || '',\r\n                        track_driver            :   track_driver,\r\n                        current_url             :   current_url,\r\n                        tip                     :   val.tip,\r\n                        state_code              :   val.state_code,\r\n                        mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\r\n                    });\r\n                });\r\n            }\r\n            let temp                        =   {};\r\n            _.each(tasks, (val, key) => {\r\n                _.each(val, (vz, kz) => {\r\n                    tasks[key][kz].orders   =   _.sortBy(tasks[key][kz].orders, (o) => { return o.timestamp; })\r\n                });\r\n                temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n            });\r\n            tasks                           =   temp;\r\n            yield put(dashboardAction.listenSearchSuccess({count: result.tasks.length, tasks: tasks}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//Update filter\r\nexport function* updateFilter(action){\r\n    try {\r\n        let url                 =   '';\r\n        url                     =   `tasks/filter`;\r\n        let data                =   {\r\n            filter: {\r\n                key : 'dashboard',\r\n                value : JSON.stringify(action.data)\r\n            }\r\n        }\r\n        yield put(headerAction.syncFilter({\r\n            key : 'dashboard',\r\n            value : action.data\r\n        }));\r\n        const payload            =   yield call(callApiV2, 'POST', url, data);\r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            //yield put(dashboardAction.listenSearchError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data){\r\n            //console.log('Filtered Saved')\r\n            let filterData      =  action.data || {};\r\n            let filterKeys      =  filterData.filterKeys || {};\r\n            let data            =\t{\r\n                user_type\t\t:\tfilterData.type,\r\n                type            :   'default'\r\n            }\r\n            if(!isEmpty(filterKeys)) {   \r\n                if(filterKeys.Store.length === 0 && filterKeys.Area.length === 0 && filterKeys.State.length > 0) {\r\n                    let states           =  (filterKeys.State || []).map(item => {\r\n                    //return {state: item.value, zone_id: []};\r\n                    return item.value;\r\n                    });\r\n                    if(states.length > 0){\r\n                        data\t\t\t=\t{\r\n                            type\t\t:\t'state',\r\n                            state\t\t:\tstates\r\n                        }\r\n                    //value_one         =  'state';\r\n                    //value_two         =  states;\r\n                    }\r\n                }\r\n        \r\n                if(filterKeys.Store.length === 0 && filterKeys.Area.length > 0) {         \r\n                    let zones           =  [];\r\n                    (filterKeys.Area || []).map((item) => {\r\n                    let index\t\t=\tzones.findIndex((z) => z.state === item.state);\r\n                    //console.log(filterKeys.Area, index);\r\n                    if(index > -1){\r\n                        zones[index].zone_id.push(item.id)\r\n                    } else {\r\n                        zones.push({\r\n                            state: item.state,\r\n                            zone_id : [item.id]\r\n                        })\r\n                    }\r\n                    });\r\n\r\n                    if(zones.length > 0){\r\n                    data\t\t\t=\t{\r\n                        type\t\t:\t'place',\r\n                        place\t\t:\tzones\r\n                    }\r\n                    //type         \t\t=  'place';\r\n                    //place         \t=  zones; \r\n                    \r\n                    }\r\n                }\r\n        \r\n                if(filterKeys.Store.length > 0) {\r\n                    let store            =  [];\r\n                    (filterKeys.Store || []).forEach(item => {\r\n                    store.push(item.store_id.toString());\r\n                    })\r\n                    if(store.length > 0){\r\n                    data\t\t\t=\t{\r\n                        type\t\t:\t'store',\r\n                        store_id\t:\tstore\r\n                    }\r\n                    //type         \t\t=  'store';\r\n                    //store_id         \t=  store;\r\n                    }\r\n                }\r\n                data.user_type\t\t=\tfilterData.type;\r\n                if(!!!data.type) {\r\n                    data.type      =  'default';\r\n                }\r\n            }\r\n            yield put(dashboardAction.getShoppedLate(data));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n\r\n\r\n//Get Search\r\nexport function* getShoppedLate(action){\r\n    try {\r\n        let url                 =   '';\r\n        url                     =   `tasks/summary`;\r\n        const payload            =   yield call(callApiV2, 'POST', url, action.data);\r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            yield put(dashboardAction.listenShoppedLateError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result                  =   payload.data.result || [];\r\n            let shoppedLateSummary      =   {};\r\n            if(result.length > 0) {\r\n                if(action.data.type === 'default') {\r\n                    shoppedLateSummary      =   {...result[0]};\r\n                }\r\n                if(action.data.type === 'state') {\r\n                    let states          =   {};\r\n                    result.map(item => {\r\n                        states[item.state_code]     =   {\r\n                            shopped_late:   item.shopped_late,\r\n                            shopping_late_percent: item.shopping_late_percent,\r\n                            total_orders: item.total_orders\r\n                        }\r\n                    })\r\n                    shoppedLateSummary      =   {...states};\r\n                }\r\n                if(action.data.type === 'place') {\r\n                    let zones          =   {};\r\n                    result.map(item => {\r\n                        if(!!zones[item.state_code]) {                            \r\n                            zones[item.state_code][item.mkt_ofc_cty_del_zne_id]     =   {\r\n                                shopped_late:   item.shopped_late,\r\n                                shopping_late_percent: item.shopping_late_percent,\r\n                                total_orders: item.total_orders\r\n                            }\r\n                        } else {\r\n                            zones[item.state_code]   =   {};\r\n                            zones[item.state_code][item.mkt_ofc_cty_del_zne_id]     =   {\r\n                                shopped_late:   item.shopped_late,\r\n                                shopping_late_percent: item.shopping_late_percent,\r\n                                total_orders: item.total_orders\r\n                            }\r\n                        }\r\n                    })\r\n                    shoppedLateSummary      =   {...zones};\r\n                }\r\n                if(action.data.type === 'store') {\r\n                    let store          =   {};\r\n                    result.map(item => {\r\n                        store[item.store_id]     =   {\r\n                            shopped_late:   item.shopped_late,\r\n                            shopping_late_percent: item.shopping_late_percent,\r\n                            total_orders: item.total_orders\r\n                        }\r\n                    })\r\n                    shoppedLateSummary      =   {...store};\r\n                }\r\n            }\r\n            //console.log(shoppedLateSummary);\r\n            yield put(dashboardAction.listenShoppedLateSuccess({summary: {...shoppedLateSummary}, type: action.data.type}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e.message);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* watchDashboardStore() {\r\n    try{\r\n        yield takeEvery( dashboardConstant.GET_TRACK_DETAILS, getTrackDetails );\r\n        yield takeEvery( dashboardConstant.GET_TASK_DETAILS, getTaskDetails );\r\n        yield takeEvery( dashboardConstant.GET_LOCATIONS, getLocations );\r\n        yield takeEvery( dashboardConstant.DELETE_TASK, deleteTask );\r\n        yield takeEvery( dashboardConstant.UPDATE_TASK_STATUS, updateTaskStatus );\r\n        yield takeEvery( dashboardConstant.CREATE_TASK, createTask );\r\n        yield takeEvery( dashboardConstant.EDIT_TASK, editTask );\r\n        yield takeEvery( dashboardConstant.TASK_SEARCH, search );\r\n        yield takeEvery( dashboardConstant.UPDATE_FILTER, updateFilter );\r\n        yield takeEvery( dashboardConstant.GET_SHOPPEDLATE, getShoppedLate );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport * as taskHistoryConstant from '../constants';\r\nimport {error as notifyerror} from '../../../util/notify';\r\nimport * as taskHistoryAction from '../actions';\r\nimport {callApiV2} from '../../../Helper/api';\r\nimport * as _ from 'lodash';\r\nimport { getDateTime, getSysDateTime } from '../../../Helper/common';\r\nimport * as headerAction from '../../Header/actions';\r\n\r\n//Get History\r\nexport function* get_history(action){\r\n    try {        \r\n        let url             =   '';\r\n        url                 =   `tasks/history`;\r\n        let actionData      =   action.data;\r\n        //let filterData      =   getFilter('history');\r\n        //console.log('Filter Data : ', actionData);\r\n        yield put(headerAction.syncFilter({key: actionData.filter.key || 'history', value: JSON.parse(actionData.filter.value || '{}')}));\r\n        let data            =   {\r\n            user_type: actionData.type,\r\n            page: actionData.pageno,\r\n            start:  actionData.start,\r\n            end:actionData.end,\r\n            value_one:  actionData.value_one,\r\n            value_two:actionData.value_two,\r\n            filter: actionData.filter\r\n        }\r\n        //console.log(actionData.storeName);\r\n        let filtered        =   (['state', 'zone', 'store-id'].includes(data.value_one)) ? false : true;\r\n        const payload = yield call(callApiV2, 'POST', url, data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            //notifyerror(payload.data.error);\r\n            yield put(taskHistoryAction.listenHistoryError());\r\n        }\r\n\r\n        // handle success result\r\n        if(payload.data.result){\r\n            let result = payload.data.result;\r\n            \r\n            let tasks = {};\r\n            //console.log('Length : ', result.tasks.length);\r\n            if(actionData.value_one === 'store-id'){\r\n                if(result.tasks.length > 0) {\r\n                    let storeName    =   actionData.storeName;\r\n                    result.tasks.map((val, key) => {\r\n                        //console.log('Value : ', val);\r\n                        let recipient_sig   =   false;                    \r\n                        let track_driver    =   '';\r\n                        let current_url     =   '';\r\n                        //console.log(val, key)\r\n                        let tskStatus = 'Scheduled';\r\n                        if(val.tskStatus === 'tsk_proc_hld') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\r\n                            tskStatus = 'Picked Up';\r\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\r\n                            tskStatus = 'Processing'\r\n                        } else if(val.tskStatus === 'tsk_cmp') {\r\n                            tskStatus = 'Completed'\r\n                        } else if(val.tskStatus === 'tsk_cncling') {\r\n                            tskStatus = 'Deleted'\r\n                        } else if(val.tskStatus === 'tsk_cncled') {\r\n                            tskStatus = 'Deleted'\r\n                        }\r\n                        let dt = val.timeCreated.split('T');\r\n                        let d = dt[0].split('-');\r\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \r\n                        \r\n                        let completeafter = '';\r\n                        let completebefore = '';\r\n                        \r\n                        if(val.timezone !== '') {\r\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\r\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\r\n                        } else {\r\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\r\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n\r\n                        if(!!val.pickup_onfleet_url) {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n                        \r\n                        if(!!val.drop_onfleet_url) {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n\r\n                        if(!!!tasks[val.state_code]) {\r\n                            tasks[val.state_code]   =   {};\r\n                            tasks[val.state_code][val.store_id]   =   {\r\n                                        name        :   storeName[val.store_id],\r\n                                        id          :   val.state_code+val.store_id,\r\n                                        orders      :   []\r\n                            };\r\n                        } else {\r\n                            if(!!!tasks[val.state_code][val.store_id]) {\r\n                                tasks[val.state_code][val.store_id]   =   {\r\n                                    name        :   storeName[val.store_id],\r\n                                    id          :   val.state_code+val.store_id,\r\n                                    orders      :   []\r\n                                };\r\n                            }\r\n                        }\r\n                        \r\n                        tasks[val.state_code][val.store_id].orders.push({\r\n                            created_at              :   created_at,\r\n                            timestamp               :   val.completeAfter,\r\n                            complete_after          :   completeafter,\r\n                            complete_before         :   completebefore,\r\n                            recpnt_address          :   val.recipients.address,\r\n                            mrchnt_address          :   val.merchant.address,\r\n                            mrchnt_notes            :   val.merchant.notes,\r\n                            recpnt_notes            :   val.recipients.notes,\r\n                            tsk_status              :   tskStatus,\r\n                            uuid                    :   val.uuid,\r\n                            order_number            :   val.orderNumber,\r\n                            driver_name             :   val.driver_name,\r\n                            recipient_sig           :   recipient_sig,\r\n                            timezone                :   val.timezone,\r\n                            mrchnt_location         :   val.merchant.location,\r\n                            recpnt_location         :   val.recipients.location,\r\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\r\n                            track_driver            :   track_driver,\r\n                            current_url             :   current_url,\r\n                            tip                     :   val.tip,\r\n                            state_code              :   val.state_code,\r\n                            store_id                :   val.store_id,\r\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\r\n                        });\r\n                    });\r\n                }\r\n                let temp                        =   {};\r\n                _.each(tasks, (val, key) => {\r\n                    _.each(val, (vz, kz) => {\r\n                        tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\r\n                    });\r\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n                });\r\n                tasks                           =   temp;\r\n            } else if(actionData.value_one === 'state'){                \r\n                if(result.tasks.length > 0) {\r\n                    result.tasks.map((val, key) => {\r\n                        //console.log('Value : ', val);\r\n                        let recipient_sig   =   false;                    \r\n                        let track_driver    =   '';\r\n                        let current_url     =   '';\r\n                        //console.log(val, key)\r\n                        let tskStatus = 'Scheduled';\r\n                        if(val.tskStatus === 'tsk_proc_hld') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\r\n                            tskStatus = 'Picked Up';\r\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\r\n                            tskStatus = 'Processing'\r\n                        } else if(val.tskStatus === 'tsk_cmp') {\r\n                            tskStatus = 'Completed'\r\n                        } else if(val.tskStatus === 'tsk_cncling') {\r\n                            tskStatus = 'Deleted'\r\n                        } else if(val.tskStatus === 'tsk_cncled') {\r\n                            tskStatus = 'Deleted'\r\n                        }\r\n                        let dt = val.timeCreated.split('T');\r\n                        let d = dt[0].split('-');\r\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \r\n                        \r\n                        let completeafter = '';\r\n                        let completebefore = '';\r\n                        \r\n                        if(val.timezone !== '') {\r\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\r\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\r\n                        } else {\r\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\r\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n\r\n                        if(!!val.pickup_onfleet_url) {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n                        \r\n                        if(!!val.drop_onfleet_url) {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n\r\n                        /* if(!!!tasks[val.state_code]) {\r\n                            tasks[val.state_code]   =   {};\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                        name        :   val.mkt_ofc_cty_del_zne_name,\r\n                                        id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                        orders      :   []\r\n                            };\r\n                        } else {\r\n                            if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\r\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                    name        :   val.mkt_ofc_cty_del_zne_name,\r\n                                    id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                    orders      :   []\r\n                                };\r\n                            }\r\n                        } */\r\n\r\n                        if(!!!tasks[val.state_code]) {\r\n                            tasks[val.state_code]   =   {\r\n                                name        :   val.state_code,\r\n                                orders      :   []\r\n                            };\r\n                        }\r\n\r\n                        //console.log(tasks[val.state_code]);\r\n                        \r\n                        tasks[val.state_code].orders.push({\r\n                            created_at              :   created_at,\r\n                            timestamp               :   val.completeAfter,\r\n                            complete_after          :   completeafter,\r\n                            complete_before         :   completebefore,\r\n                            recpnt_address          :   val.recipients.address,\r\n                            mrchnt_address          :   val.merchant.address,\r\n                            mrchnt_notes            :   val.merchant.notes,\r\n                            recpnt_notes            :   val.recipients.notes,\r\n                            tsk_status              :   tskStatus,\r\n                            uuid                    :   val.uuid,\r\n                            order_number            :   val.orderNumber,\r\n                            driver_name             :   val.driver_name,\r\n                            recipient_sig           :   recipient_sig,\r\n                            timezone                :   val.timezone,\r\n                            mrchnt_location         :   val.merchant.location,\r\n                            recpnt_location         :   val.recipients.location,\r\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\r\n                            track_driver            :   track_driver,\r\n                            current_url             :   current_url,\r\n                            tip                     :   val.tip,\r\n                            state_code              :   val.state_code,\r\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\r\n                        });\r\n                    });\r\n                }\r\n                _.each(tasks, (val, key) => {\r\n                    tasks[key].orders               =  _.orderBy(tasks[key].orders, [o => o.timestamp], ['desc']);\r\n                });\r\n            } else if(actionData.value_one === 'zone') {\r\n                if(result.tasks.length > 0) {\r\n                    result.tasks.map((val, key) => {\r\n                        //console.log('Value : ', val);\r\n                        let recipient_sig   =   false;                    \r\n                        let track_driver    =   '';\r\n                        let current_url     =   '';\r\n                        //console.log(val, key)\r\n                        let tskStatus = 'Scheduled';\r\n                        if(val.tskStatus === 'tsk_proc_hld') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_mrchnt') {\r\n                            tskStatus = 'Scheduled'\r\n                        } else if(val.tskStatus === 'tsk_proc_drv' && val.driverStatus === 'drv_strt_recpnt_tsk') {\r\n                            tskStatus = 'Picked Up';\r\n                        } else if(val.tskStatus === 'tsk_proc_drv') {\r\n                            tskStatus = 'Processing'\r\n                        } else if(val.tskStatus === 'tsk_cmp') {\r\n                            tskStatus = 'Completed'\r\n                        } else if(val.tskStatus === 'tsk_cncling') {\r\n                            tskStatus = 'Deleted'\r\n                        } else if(val.tskStatus === 'tsk_cncled') {\r\n                            tskStatus = 'Deleted'\r\n                        }\r\n                        let dt = val.timeCreated.split('T');\r\n                        let d = dt[0].split('-');\r\n                        let created_at = d[1]+'/'+d[2]+'/'+d[0]; \r\n                        \r\n                        let completeafter = '';\r\n                        let completebefore = '';\r\n                        \r\n                        if(val.timezone !== '') {\r\n                        completeafter = getDateTime(parseInt(val.completeAfter) * 1000, val.timezone, 'MM/DD · hh:mma');\r\n                        completebefore = getDateTime(parseInt(val.completeBefore) * 1000, val.timezone, 'hh:mma');\r\n                        } else {\r\n                        completeafter = getSysDateTime(parseInt(val.completeAfter) * 1000, 'MM/DD · hh:mma');\r\n                        completebefore = getSysDateTime(parseInt(val.completeBefore) * 1000, 'hh:mma');\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n                        if(!_.isEmpty(val.completionDetails.events) && \r\n                            !!val.completionDetails.events.onflt_recpnt_sig) {\r\n                            recipient_sig = true;\r\n                        }\r\n\r\n                        if(!!val.pickup_onfleet_url) {\r\n                            track_driver        =   'Driver to Merchant';\r\n                            current_url         =   val.pickup_onfleet_url;\r\n                        }\r\n                        \r\n                        if(!!val.drop_onfleet_url) {\r\n                            track_driver        =   'Driver to Recipient';\r\n                            current_url         =   val.drop_onfleet_url;\r\n                        }\r\n\r\n                        if(!!!tasks[val.state_code]) {\r\n                            tasks[val.state_code]   =   {};\r\n                            tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                        name        :   val.mkt_ofc_cty_del_zne_name,\r\n                                        id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                        orders      :   []\r\n                            };\r\n                        } else {\r\n                            if(!!!tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]) {\r\n                                tasks[val.state_code][val.mkt_ofc_cty_del_zne_id]   =   {\r\n                                    name        :   val.mkt_ofc_cty_del_zne_name,\r\n                                    id          :   val.state_code+val.mkt_ofc_cty_del_zne_id,\r\n                                    orders      :   []\r\n                                };\r\n                            }\r\n                        }\r\n                        \r\n                        tasks[val.state_code][val.mkt_ofc_cty_del_zne_id].orders.push({\r\n                            created_at              :   created_at,\r\n                            timestamp               :   val.completeAfter,\r\n                            complete_after          :   completeafter,\r\n                            complete_before         :   completebefore,\r\n                            recpnt_address          :   val.recipients.address,\r\n                            mrchnt_address          :   val.merchant.address,\r\n                            mrchnt_notes            :   val.merchant.notes,\r\n                            recpnt_notes            :   val.recipients.notes,\r\n                            tsk_status              :   tskStatus,\r\n                            uuid                    :   val.uuid,\r\n                            order_number            :   val.orderNumber,\r\n                            driver_name             :   val.driver_name,\r\n                            recipient_sig           :   recipient_sig,\r\n                            timezone                :   val.timezone,\r\n                            mrchnt_location         :   val.merchant.location,\r\n                            recpnt_location         :   val.recipients.location,\r\n                            drop_onfleet_url        :   val.drop_onfleet_url || '',\r\n                            pickup_onfleet_url      :   val.pickup_onfleet_url || '',\r\n                            track_driver            :   track_driver,\r\n                            current_url             :   current_url,\r\n                            tip                     :   val.tip,\r\n                            state_code              :   val.state_code,\r\n                            mkt_ofc_cty_del_zne_id  :   val.mkt_ofc_cty_del_zne_id\r\n                        });\r\n                    });\r\n                }\r\n                let temp                        =   {};\r\n                _.each(tasks, (val, key) => {\r\n                    _.each(val, (vz, kz) => {\r\n                        tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\r\n                    });\r\n                    temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n                });\r\n                tasks                           =   temp;\r\n            } else {\r\n                tasks                           =   result.tasks || [];\r\n                //tasks                           =   _.orderBy(tasks, [o => o.completeAfter], ['desc'])\r\n            }\r\n            //console.log('Saga : ', tasks)\r\n            //notifysuccess({message:result.message});\r\n            yield put(taskHistoryAction.listenHistorySuccess({tasks: tasks, task_count: result.task_count, list_type: actionData.value_one}));\r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\nexport function* exportTaskCsv(action){\r\n    try {\r\n        let actionData      =   action.data;\r\n        let data            =   {\r\n            user_type: actionData.type,\r\n            page: actionData.pageno,\r\n            start:  actionData.start,\r\n            end:actionData.end,\r\n            value_one:  actionData.value_one,\r\n            value_two:actionData.value_two\r\n        }\r\n        const payload = yield call(callApiV2, 'POST', 'tasks/download', data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(taskHistoryAction.listenExportTaskCsvError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(taskHistoryAction.listenExportTaskCsvSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* watchTaskHistoryStore() {\r\n    try{\r\n        //yield takeEvery( taskHistoryConstant.GET_HISTORY_FILTER, get_history_filter );\r\n        yield takeEvery( taskHistoryConstant.GET_HISTORY, get_history );\r\n        yield takeEvery( taskHistoryConstant.EXPORT_CSV_TASK_HISTORY, exportTaskCsv );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n}","import * as feedbackAction from '../actions';\r\nimport * as headerAction from '../../Header/actions';\r\nimport {callApiV2} from '../../../Helper/api';\r\nimport * as feedbackConstant from '../constants';\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport {error as notifyerror, success as notifysuccess, inform as notifyinform} from '../../../util/notify';\r\n\r\n//Get Feedback\r\nexport function* getSummary(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'POST', 'feedback/summary', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(feedbackAction.listenGetSummeryError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(feedbackAction.listenGetSummerySuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* getFeedback(action){\r\n    try {\r\n        //console.log('Action Data : ', action.data);\r\n        let data    =   {\r\n            ...action.data,\r\n            filter: {\r\n                key: 'feedback',\r\n                value: JSON.stringify(action.data.filter)\r\n            }\r\n        }\r\n        yield put(headerAction.syncFilter({key: 'feedback', value: action.data.filter}));\r\n        const payload = yield call(callApiV2, 'POST', 'feedback/list', data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(feedbackAction.listenGetFeedbackError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(feedbackAction.listenGetFeedbackSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* feedbackSearch(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'POST', 'feedback/search', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(feedbackAction.listenFeedbackSearchError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(feedbackAction.listenFeedbackSearchSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* reply(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'POST', 'feedback/reply', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(feedbackAction.replyError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            let replyData = {...payload.data.result};\r\n            replyData.task_id = action.data.task_id;\r\n            replyData.order_number = action.data.order_number;\r\n            yield put(feedbackAction.replySuccess(replyData));\r\n            notifyinform({message: \"Email sent sucessfully.\"});  \r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* watchFeedbackStore() {\r\n    try{\r\n        yield takeEvery( feedbackConstant.REPLY, reply );\r\n        yield takeEvery( feedbackConstant.GET_SUMMERY, getSummary );\r\n        yield takeEvery( feedbackConstant.GET_FEEDBACK, getFeedback );\r\n        yield takeEvery( feedbackConstant.FEEDBACK_SEARCH, feedbackSearch );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n};","import * as settingAction from '../actions';\r\nimport {callApi, callApiV2} from '../../../Helper/api';\r\nimport * as settingConstant from '../constants';\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport {setCookie, set as setDomainCookie, getCookie, get as getDomainCookie} from '../../../util/cookies';\r\n\r\n//Get Setting\r\nexport function* getInfo(action){\r\n    try {\r\n        const payload = yield call(callApi, 'GET', '/auth/info');\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(settingAction.listenGetInfoError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(settingAction.listenGetInfoSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n\r\n//Get Stores\r\nexport function* getStores(action){\r\n    try {\r\n        const payload = yield call(callApi, 'GET', '/location/all');\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(settingAction.listenStoresError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(settingAction.listenStoresSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n//Update Profile\r\nexport function* updateProfile(action){\r\n    try {\r\n        const payload = yield call(callApi, 'PUT', 'auth/profile', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenUpdateProfileError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: payload.data.result.message})\r\n            let userData        =   getCookie('foodjets_merchant') || {};\r\n            let updatedData     =   action.data;\r\n            userData.first_name =   updatedData.first_name;\r\n            userData.last_name  =   updatedData.last_name;\r\n            userData.email      =   updatedData.email;\r\n            setCookie(userData, 'foodjets_merchant');\r\n            setDomainCookie(userData);\r\n            //console.log('User Data : ', userData);  \r\n            yield put(settingAction.listenUpdateProfileSuccess({}));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n//Change Password\r\nexport function* changePassword(action){\r\n    try {\r\n        //yield put(settingAction.listenAddLocation({}));\r\n\r\n        const payload = yield call(callApi, 'PUT', 'auth/password', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenChangePasswordError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: payload.data.result.message})\r\n            yield put(settingAction.listenChangePasswordSuccess({}));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n//Add Location\r\nexport function* addLocation(action){\r\n    try {\r\n        const payload = yield call(callApi, 'POST', 'location', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenAddLocationError());\r\n        };\r\n\r\n        if(payload.data){\r\n            notifysuccess({message: payload.data.message})\r\n            yield put(settingAction.listenAddLocationSuccess({}));\r\n            yield put(settingAction.getStores());\r\n        };\r\n    } catch (e) {\r\n        notifyerror({message: e.message});\r\n        yield put(settingAction.listenAddLocationError());\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* getUsers(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'GET', 'auth/user-list', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(settingAction.listenGetUsersError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(settingAction.listenGetUserSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* addUser(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'POST', 'auth/user', action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenAddUsersError(payload.data.error.message));\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"User added sucessfully.\"});\r\n            yield put(settingAction.listenAddUserSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* editUser(action){\r\n    try {\r\n        let actionId = action.data.id;\r\n        let actionData = action.data;\r\n\r\n        delete actionData.id;\r\n        const payload = yield call(callApiV2, 'PUT', 'auth/user/'+actionId, actionData);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenEditUsersError(payload.data.error.message));\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"User updated sucessfully.\"});\r\n            yield put(settingAction.listenEditUserSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* deleteUser(action){\r\n    try {\r\n        const payload = yield call(callApiV2, 'DELETE', 'auth/user/'+action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenDeleteUsersError(payload.data.error.message));\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"User deleted sucessfully.\"});\r\n            yield put(settingAction.listenDeleteUserSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* suspendUser(action){\r\n    try {\r\n        let actionId = action.data.id;\r\n        let actionData = action.data;\r\n\r\n        delete actionData.id;\r\n        const payload = yield call(callApiV2, 'PUT', 'auth/user/'+actionId, actionData);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenSuspendUsersError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"User suspended sucessfully.\"});\r\n            yield put(settingAction.listenSuspendUserSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* editStore(action){\r\n    try {\r\n        let actionId = action.data.id;\r\n        let actionData = action.data;\r\n\r\n        delete actionData.id;\r\n        //console.log('Data : ', action.data);\r\n        //return false;\r\n        const payload = yield call(callApi, 'PUT', 'location/'+actionId, actionData);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenEditStoreError(payload.data.error.message));\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"Store updated sucessfully.\"});\r\n            yield put(settingAction.listenEditStoreSuccess(payload.data.result));\r\n            yield put(settingAction.getStores());\r\n        };\r\n    } catch (e) {\r\n        yield put(settingAction.listenEditStoreSuccess());\r\n        notifyerror({message: e.message});\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* deleteStore(action){\r\n    try {\r\n        //console.log('Action Data : ', action);\r\n        //return false;\r\n        const payload = yield call(callApi, 'DELETE', 'location/'+action.data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            notifyerror({message: payload.data.error.message});\r\n            yield put(settingAction.listenDeleteStoreError(payload.data.error.message));\r\n        };\r\n\r\n        if(payload.data.result){\r\n            notifysuccess({message: \"Store deleted sucessfully.\"});\r\n            yield put(settingAction.listenDeleteStoreSuccess(payload.data.result));\r\n            yield put(settingAction.getStores());\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nexport function* watchSettingStore() {\r\n    try{\r\n        yield takeEvery( settingConstant.GET_INFO, getInfo );\r\n        yield takeEvery( settingConstant.GET_STORES, getStores );\r\n        yield takeEvery( settingConstant.GET_USER, getUsers );\r\n        yield takeEvery( settingConstant.ADD_USER, addUser );\r\n        yield takeEvery( settingConstant.EDIT_USER, editUser );\r\n        yield takeEvery( settingConstant.DELETE_USER, deleteUser );\r\n        yield takeEvery( settingConstant.SUSPEND_USER, suspendUser );\r\n        yield takeEvery( settingConstant.UPDATE_PROFILE, updateProfile );\r\n        yield takeEvery( settingConstant.CHANGE_PASS, changePassword );\r\n        yield takeEvery( settingConstant.ADD_LOCATION, addLocation );\r\n        yield takeEvery( settingConstant.EDIT_STORE, editStore );\r\n        yield takeEvery( settingConstant.DELETE_STORE, deleteStore );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n};","import * as reportAction from '../actions';\r\nimport * as headerAction from '../../Header/actions';\r\nimport * as reportConstant from '../constants';\r\nimport {callApiV2} from '../../../Helper/api';\r\nimport { takeEvery, put, call, all } from 'redux-saga/effects';\r\nimport {error as notifyerror, success as notifysuccess} from '../../../util/notify';\r\nimport {convertTwoDecimalRound, getDateTime, getSysDateTime, formatDate} from '../../../Helper/common';\r\nimport moment from 'moment-timezone';\r\nimport * as _ from 'lodash';\r\n\r\n//Get Reports\r\nexport function* getReport(action){\r\n    try {\r\n        let data        =   {...action.data};\r\n        delete data.show_by;\r\n        let statsData       =   {...data};\r\n        delete data.filter;\r\n        delete action.data.filter;\r\n        let reportData      =   {...action.data};\r\n        if(reportData.show_by === 'month') {\r\n            reportData.start       =   moment().subtract(12, 'months').format('YYYY-MM-DD');\r\n            reportData.end         =   moment().format('YYYY-MM-DD');\r\n        }\r\n        yield put(headerAction.syncFilter({key: statsData.filter.key, value: JSON.parse(statsData.filter.value)}));\r\n        const res = yield all([\r\n            call(callApiV2, 'POST', 'reports/rerun', data),\r\n            call(callApiV2, 'POST', 'reports/orders', reportData),\r\n            call(callApiV2, 'POST', 'reports/stats-total', statsData)\r\n        ]);\r\n\r\n        if(res) {\r\n            let rerun = res[0];\r\n            let orders = res[1];\r\n            let statsTotal = res[2];\r\n\r\n            // check for error    \r\n            if(rerun.data.error || rerun.data.error || rerun.data.error){\r\n                yield put(reportAction.listenGetReportError());\r\n            };\r\n\r\n            if(rerun.data.result){\r\n                let rerunData       =   rerun.data.result;\r\n                rerunData.chng_rerun_total_percent  =   convertTwoDecimalRound(rerunData.chng_rerun_total_percent);\r\n\r\n                let reportTotal     =   statsTotal.data.result;\r\n                reportTotal.chng_shopping_late_percent  =   convertTwoDecimalRound(reportTotal.chng_shopping_late_percent);\r\n                reportTotal.chng_tot_orders_percent  =   convertTwoDecimalRound(reportTotal.chng_tot_orders_percent);\r\n                reportTotal.late_percentage  =   convertTwoDecimalRound(reportTotal.late_percentage);\r\n                reportTotal.on_time_percentage  =   convertTwoDecimalRound(reportTotal.on_time_percentage);\r\n                reportTotal.shopping_late_percent  =   convertTwoDecimalRound(reportTotal.shopping_late_percent);\r\n\r\n                //console.log(rerunData, reportTotal);\r\n                yield put(reportAction.listenGetReportSuccess({\r\n                    rerunData: rerunData,\r\n                    ordersData: orders.data.result,\r\n                    reportTotal: reportTotal\r\n                }));\r\n            };\r\n        } else {\r\n            notifyerror({message: \"Some error occured.\"}); \r\n        }\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n\r\n//Get Daily/Store/Monthly Orders\r\nexport function* getOrder(action){\r\n    let data                    =   {...action.data};\r\n    if(data.show_by === 'month') {\r\n        data.start       =   moment().subtract(12, 'months').format('YYYY-MM-DD');\r\n        data.end         =   moment().format('YYYY-MM-DD');\r\n    }\r\n    try {\r\n        const payload = yield call(callApiV2, 'POST', 'reports/orders', data);\r\n\r\n        // check for error    \r\n        if(payload.data.error){\r\n            yield put(reportAction.listenGetOrderError());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            yield put(reportAction.listenGetOrderSuccess(payload.data.result));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\n//Get Late Orders\r\nexport function* getLateOrders(action){\r\n    try {\r\n        let data        =   {...action.data};\r\n        delete data.filter;\r\n        data.order_by   =   'complete_after';\r\n        //console.log(data);\r\n        //delete data.format;\r\n        const payload = yield call(callApiV2, 'POST', `reports/late-orders`, data);\r\n\r\n        // check for error\r\n        if(payload.data.error){\r\n            yield put(reportAction.listenLateOrders());\r\n        };\r\n\r\n        if(payload.data.result){\r\n            //console.log(payload.data.result);\r\n            //console.log('Length : ', result.tasks.length);\r\n            let response    =   payload.data.result || {};\r\n            //sortLateOrders(response, action, order_by, order, filterState, filterArea, filterStore, data);\r\n            let sortData    =   {\r\n                unsortedLateOrders    :   response.data,\r\n                count       :   response.count,\r\n                searchData  :   action.data,\r\n            }\r\n            yield put(reportAction.sortLateOrders(sortData));\r\n        };\r\n    } catch (e) {\r\n        notifyerror(e);\r\n        console.log(e.message);\r\n    }\r\n};\r\n\r\nfunction* sortLateOrders(action) {   \r\n    let data        =   action.data.searchData; \r\n    //console.log('Action Data : ', data);\r\n    let filter      =   data.filter || {};\r\n    let filterState =   filter.filterKeys.State || [];\r\n    let filterArea  =   filter.filterKeys.Area || [];\r\n    let filterStore =   filter.filterKeys.Store || [];\r\n    let order_by    =   data.order_by || 'complete_after';\r\n    let order       =   data.format || 'asc';\r\n    let result      =   action.data.unsortedLateOrders;\r\n    let tasks       =   {};\r\n    let count       =   action.data.count || 0;\r\n    let listType = '';\r\n    if(data.type === 'store'){\r\n        listType          =   'Zonewise';\r\n        if(result.length > 0) {\r\n            result.map((val, key) => {\r\n                //count++;\r\n                if(!!!tasks[val.state_code]) {\r\n                    tasks[val.state_code]   =   {};\r\n                    tasks[val.state_code][val.store_id]   =   {\r\n                                name        :   val.store,\r\n                                id          :   val.store_id,\r\n                                orders      :   [],\r\n                                a           :   0,\r\n                                b           :   0,\r\n                                c           :   0,\r\n                                d           :   0,\r\n                                total       :   0\r\n                    };\r\n                } else {\r\n                    if(!!!tasks[val.state_code][val.store_id]) {\r\n                        tasks[val.state_code][val.store_id]   =   {\r\n                            name        :   val.store,\r\n                            id          :   val.store_id,\r\n                            orders      :   [],\r\n                            a           :   0,\r\n                            b           :   0,\r\n                            c           :   0,\r\n                            d           :   0,\r\n                            total       :   0\r\n                        };\r\n                    }\r\n                }\r\n\r\n                tasks[val.state_code][val.store_id].total++;\r\n                let lateClass       =   '';\r\n                if(val.time_diff >= 0 && val.time_diff <= 20) {\r\n                    lateClass       =   'ready';\r\n                    tasks[val.state_code][val.store_id].b++;\r\n                } else if(val.time_diff > 20 && val.time_diff <= 30) {\r\n                    lateClass       =   'shopping';\r\n                    tasks[val.state_code][val.store_id].c++;\r\n                } else if(val.time_diff > 30) {\r\n                    lateClass       =   'not_ready';\r\n                    tasks[val.state_code][val.store_id].d++;\r\n                } else {\r\n                    tasks[val.state_code][val.store_id].a++;\r\n                }\r\n                \r\n                tasks[val.state_code][val.store_id].orders.push({\r\n                    timestamp               :   moment(val.created_at).format('X'),\r\n                    created_at              :   formatDate(val.created_at),\r\n                    cust_name               :   val.cust_name.toLowerCase(),\r\n                    customer_name           :   val.cust_name,\r\n                    order_number            :   val.order_number,\r\n                    store                   :   val.store,\r\n                    store_id                :   val.store_id,\r\n                    complete_before         :   formatDate(val.complete_before),\r\n                    complete_after          :   formatDate(val.complete_after),\r\n                    delivery_time           :   formatDate(val.delivery_time),\r\n                    driver_wait             :   val.driver_wait,\r\n                    recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\r\n                    lateClass               :   lateClass,\r\n                    time_diff               :   val.time_diff,\r\n                    uuid                    :   val.uuid\r\n                });\r\n            });\r\n        }\r\n        let temp                        =   {};\r\n        _.each(tasks, (val, key) => {\r\n            _.each(val, (vz, kz) => {\r\n                tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o[order_by]], [order]);\r\n            });\r\n            temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n        });\r\n        tasks                           =   temp;\r\n    } else if(data.type === 'place'){\r\n        if(filterState.length > 0 && filterArea.length === 0){ \r\n            listType         =   'Statewise'; \r\n            if(result.length > 0) {\r\n                result.map((val, key) => {\r\n                    //count++;\r\n                    if(!!!tasks[val.state_code]) {\r\n                        tasks[val.state_code]   =   {\r\n                            name        :   val.state_code,\r\n                            orders      :   [],\r\n                            a           :   0,\r\n                            b           :   0,\r\n                            c           :   0,\r\n                            d           :   0,\r\n                            total       :   0\r\n                        };\r\n                    }\r\n\r\n                    tasks[val.state_code].total++;\r\n                    let lateClass       =   '';\r\n                    if(val.time_diff >= 0 && val.time_diff <= 20) {\r\n                        lateClass       =   'ready';\r\n                        tasks[val.state_code].b++;\r\n                    } else if(val.time_diff > 20 && val.time_diff <= 30) {\r\n                        lateClass       =   'shopping';\r\n                        tasks[val.state_code].c++;\r\n                    } else if(val.time_diff > 30) {\r\n                        lateClass       =   'not_ready';\r\n                        tasks[val.state_code].d++;\r\n                    } else {\r\n                        tasks[val.state_code].a++;\r\n                    }\r\n\r\n                    //console.log(tasks[val.state_code]);\r\n                    \r\n                    tasks[val.state_code].orders.push({\r\n                        timestamp               :   moment(val.created_at).format('X'),\r\n                        created_at              :   formatDate(val.created_at),\r\n                        cust_name               :   val.cust_name.toLowerCase(),\r\n                        customer_name           :   val.cust_name,\r\n                        order_number            :   val.order_number,\r\n                        store                   :   val.store,\r\n                        store_id                :   val.store_id,\r\n                        complete_before         :   formatDate(val.complete_before),\r\n                        complete_after          :   formatDate(val.complete_after),\r\n                        delivery_time           :   formatDate(val.delivery_time),\r\n                        driver_wait             :   val.driver_wait,\r\n                        recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\r\n                        lateClass               :   lateClass,\r\n                        time_diff               :   val.time_diff,\r\n                        uuid                    :   val.uuid\r\n                    });\r\n                });\r\n            }\r\n            _.each(tasks, (val, key) => {\r\n                tasks[key].orders               =  _.orderBy(tasks[key].orders, [o => o[order_by]], [order]);\r\n            });\r\n        } else if(filterArea.length > 0) {                    \r\n            listType          =   'Zonewise';\r\n            if(result.length > 0) {\r\n                result.map((val, key) => {\r\n                    //count++;\r\n                    if(!!!tasks[val.state_code]) {\r\n                        tasks[val.state_code]   =   {};\r\n                        tasks[val.state_code][val.zone_id]   =   {\r\n                                    name        :   val.zone_name,\r\n                                    id          :   val.zone_id,\r\n                                    orders      :   [],\r\n                                    a           :   0,\r\n                                    b           :   0,\r\n                                    c           :   0,\r\n                                    d           :   0,\r\n                                    total       :   0\r\n                        };\r\n                    } else {\r\n                        if(!!!tasks[val.state_code][val.zone_id]) {\r\n                            tasks[val.state_code][val.zone_id]   =   {\r\n                                name        :   val.zone_name,\r\n                                id          :   val.zone_id,\r\n                                orders      :   [],\r\n                                a           :   0,\r\n                                b           :   0,\r\n                                c           :   0,\r\n                                d           :   0,\r\n                                total       :   0\r\n                            };\r\n                        }\r\n                    }\r\n\r\n                    let lateClass       =   '';\r\n                    tasks[val.state_code][val.zone_id].total++;\r\n                    if(val.time_diff >= 0 && val.time_diff <= 20) {\r\n                        tasks[val.state_code][val.zone_id].b++;\r\n                        lateClass       =   'ready';\r\n                    } else if(val.time_diff > 20 && val.time_diff <= 30) {\r\n                        tasks[val.state_code][val.zone_id].c++;\r\n                        lateClass       =   'shopping';\r\n                    } else if(val.time_diff > 30) {\r\n                        tasks[val.state_code][val.zone_id].d++;\r\n                        lateClass       =   'not_ready';\r\n                    } else {\r\n                        tasks[val.state_code][val.zone_id].a++;\r\n                    }\r\n                    \r\n                    tasks[val.state_code][val.zone_id].orders.push({\r\n                        timestamp               :   moment(val.created_at).format('X'),\r\n                        created_at              :   formatDate(val.created_at),\r\n                        cust_name               :   val.cust_name.toLowerCase(),\r\n                        customer_name           :   val.cust_name,\r\n                        order_number            :   val.order_number,\r\n                        store                   :   val.store,\r\n                        store_id                :   val.store_id,\r\n                        complete_before         :   formatDate(val.complete_before),\r\n                        complete_after          :   formatDate(val.complete_after),\r\n                        delivery_time           :   formatDate(val.delivery_time),\r\n                        driver_wait             :   val.driver_wait,\r\n                        recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\r\n                        lateClass               :   lateClass,\r\n                        time_diff               :   val.time_diff,\r\n                        uuid                    :   val.uuid\r\n                    });\r\n                });\r\n            }\r\n            let temp                        =   {};\r\n            _.each(tasks, (val, key) => {\r\n                _.each(val, (vz, kz) => {\r\n                    //tasks[key][kz].orders   =   _.orderBy(tasks[key][kz].orders, [o => o.timestamp], ['desc'])\r\n                    tasks[key][kz].orders       =   _.orderBy(tasks[key][kz].orders, [o => o[order_by]], [order])\r\n                });\r\n                temp[key]                   =   _.sortBy(tasks[key], (o) => { return o.name; })\r\n            });\r\n            tasks                           =   temp;\r\n        }\r\n    } else {                \r\n        tasks                   =   {\r\n            a:0,\r\n            b:0,\r\n            c:0,\r\n            d:0,\r\n            total       :   0,\r\n            orders: []\r\n        }\r\n        listType                =   'Uncategorized';\r\n        result.map((val, key) => {   \r\n            //count++;\r\n            tasks.total++;\r\n            let lateClass       =   '';\r\n            if(val.time_diff >= 0 && val.time_diff <= 20) {\r\n                tasks.b++;\r\n                lateClass       =   'ready';\r\n            } else if(val.time_diff > 20 && val.time_diff <= 30) {\r\n                lateClass       =   'shopping';\r\n                tasks.c++;\r\n            } else if(val.time_diff > 30) {\r\n                lateClass       =   'not_ready';\r\n                tasks.d++;\r\n            } else {\r\n                tasks.a++;\r\n            }\r\n            //console.log(val.time_diff, moment(val.time_diff).format(\"mm:ss\"))   \r\n            tasks.orders.push({\r\n                timestamp               :   moment(val.created_at).format('X'),\r\n                created_at              :   formatDate(val.created_at),\r\n                cust_name               :   val.cust_name.toLowerCase(),\r\n                customer_name           :   val.cust_name,\r\n                order_number            :   val.order_number,\r\n                store                   :   val.store,\r\n                store_id                :   val.store_id,\r\n                complete_before         :   formatDate(val.complete_before),\r\n                complete_after          :   formatDate(val.complete_after),\r\n                delivery_time           :   formatDate(val.delivery_time),\r\n                driver_wait             :   val.driver_wait,\r\n                recpnt_task_start_time  :   formatDate(val.recpnt_task_start_time),\r\n                lateClass               :   lateClass,\r\n                time_diff               :   val.time_diff,\r\n                uuid                    :   val.uuid\r\n            });\r\n        });\r\n        //tasks                           =   result.tasks || [];\r\n        tasks.orders                      =   _.orderBy(tasks.orders, [o => o[order_by]], [order])\r\n    }\r\n    //console.log('Saga : ', {count: count, tasks: tasks, listType: listType});\r\n    yield put(reportAction.listenLateOrdersSuccess({unsortedLateOrders: result, arrangedTasks: { count: count, tasks: tasks, listType: listType, pageno: data.page, sortBy: order_by, format: order}}));\r\n}\r\n\r\nexport function* watchReportStore() {\r\n    try{\r\n        yield takeEvery( reportConstant.GET_REPORT, getReport );\r\n        yield takeEvery( reportConstant.GET_ORDER, getOrder );\r\n        yield takeEvery( reportConstant.GET_LATE_ORDER, getLateOrders );\r\n        yield takeEvery( reportConstant.SORT_LATE_ORDERS, sortLateOrders );\r\n    } catch(e){\r\n        console.log(e)\r\n    }\r\n};","import {all, call} from 'redux-saga/effects' ;\r\nimport { watchLoginStore } from '../containers/Login/Saga';\r\nimport { watchForgotPasswordStore } from '../containers/ForgotPassword/Saga';\r\nimport { watchRsetPasswordStore } from '../containers/ResetPassword/Saga';\r\nimport { watchHeaderStore } from '../containers/Header/Saga';\r\nimport { watchDashboardStore } from '../containers/Dashboard/Saga';\r\nimport { watchTaskHistoryStore } from '../containers/TaskHistory/Saga';\r\nimport { watchFeedbackStore } from '../containers/Feedbacks/Saga';\r\nimport { watchSettingStore } from '../containers/Settings/Saga';\r\n\r\nimport { watchReportStore } from '../containers/Reports/Saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    call(watchLoginStore),\r\n    call(watchForgotPasswordStore),\r\n    call(watchRsetPasswordStore),\r\n    call(watchHeaderStore),\r\n    call(watchTaskHistoryStore),\r\n    call(watchDashboardStore),\r\n    call(watchFeedbackStore),\r\n    call(watchSettingStore),\r\n    call(watchReportStore)\r\n  ]);\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable'\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//For Reducer\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './reducers';\r\n\r\n//For Saga\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport { applyMiddleware } from 'redux';\r\n\r\n//For Routing\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst sagaMiddleware    =   createSagaMiddleware();\r\nconst store             =   createStore(\r\n                                reducer,\r\n                                applyMiddleware(sagaMiddleware)\r\n                            );\r\nsagaMiddleware.run(rootSaga);\r\n\r\n//const store     =   createStore(reducer);\r\n\r\nReactDOM.render(\r\n                <Provider store={store}>    \r\n                    <BrowserRouter>\r\n                        <App/>\r\n                    </BrowserRouter>\r\n                </Provider>,\r\n                document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}